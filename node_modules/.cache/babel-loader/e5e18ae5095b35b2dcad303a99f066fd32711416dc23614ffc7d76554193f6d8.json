{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matteo\\\\Working_Folder\\\\a. MCC Thesis Local Experimental\\\\PGHD_Visualization_Dashboard\\\\src\\\\components\\\\chart-utils\\\\SharedYAxis.js\";\nimport React from 'react';\n\n// Simple Y-Axis component for charts\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SharedYAxis = ({\n  config,\n  type = 'single',\n  title = '',\n  unit = '',\n  className = 'y-axis'\n}) => {\n  var _config$yAxisOffset, _config$yAxisOffset2;\n  const chartHeight = config.height - config.padding.top - config.padding.bottom;\n\n  // Get labels and range based on type\n  let yAxisLabels, yAxisRange;\n  if (type === 'bloodPressure') {\n    yAxisLabels = {\n      systolic: config.yAxisLabels.systolic,\n      diastolic: config.yAxisLabels.diastolic\n    };\n    yAxisRange = config.yAxisRange;\n  } else {\n    yAxisLabels = {\n      single: config.yAxisLabels\n    };\n    yAxisRange = {\n      single: config.yAxisRange\n    };\n  }\n  const renderYAxisLabels = (labels, range, offset = 0) => {\n    return labels.map(label => {\n      const y = config.height - config.padding.bottom - (label - offset) / range * chartHeight;\n      return /*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"y-axis-grid-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"line\", {\n          className: \"chart-grid-line-horizontal\",\n          x1: config.padding.left,\n          y1: y,\n          x2: config.width - config.padding.right,\n          y2: y\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: config.padding.left - 10,\n          y: y + 3,\n          fontSize: config.fontSize.yAxis,\n          textAnchor: \"end\",\n          fill: \"var(--chart-color-neutral)\",\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, label, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    className: className,\n    children: [title && /*#__PURE__*/_jsxDEV(\"text\", {\n      className: \"y-axis-title\",\n      x: config.padding.left / 3,\n      y: config.padding.top + chartHeight / 2,\n      fontSize: config.fontSize.yAxisTitle,\n      textAnchor: \"middle\",\n      fill: \"var(--chart-color-neutral)\",\n      transform: `rotate(-90, ${config.padding.left / 3}, ${config.padding.top + chartHeight / 2})`,\n      children: [title, \" \", unit && `(${unit})`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), type === 'bloodPressure' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [renderYAxisLabels(yAxisLabels.systolic, yAxisRange.systolic, (_config$yAxisOffset = config.yAxisOffset) === null || _config$yAxisOffset === void 0 ? void 0 : _config$yAxisOffset.systolic), renderYAxisLabels(yAxisLabels.diastolic, yAxisRange.diastolic, (_config$yAxisOffset2 = config.yAxisOffset) === null || _config$yAxisOffset2 === void 0 ? void 0 : _config$yAxisOffset2.diastolic)]\n    }, void 0, true) : renderYAxisLabels(yAxisLabels.single, yAxisRange.single)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_c = SharedYAxis;\nexport default SharedYAxis;\nvar _c;\n$RefreshReg$(_c, \"SharedYAxis\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","SharedYAxis","config","type","title","unit","className","_config$yAxisOffset","_config$yAxisOffset2","chartHeight","height","padding","top","bottom","yAxisLabels","yAxisRange","systolic","diastolic","single","renderYAxisLabels","labels","range","offset","map","label","y","children","x1","left","y1","x2","width","right","y2","fileName","_jsxFileName","lineNumber","columnNumber","x","fontSize","yAxis","textAnchor","fill","yAxisTitle","transform","yAxisOffset","_c","$RefreshReg$"],"sources":["C:/Users/Matteo/Working_Folder/a. MCC Thesis Local Experimental/PGHD_Visualization_Dashboard/src/components/chart-utils/SharedYAxis.js"],"sourcesContent":["import React from 'react';\n\n// Simple Y-Axis component for charts\nconst SharedYAxis = ({ \n  config, \n  type = 'single', \n  title = '', \n  unit = '',\n  className = 'y-axis'\n}) => {\n  const chartHeight = config.height - config.padding.top - config.padding.bottom;\n\n  // Get labels and range based on type\n  let yAxisLabels, yAxisRange;\n  \n  if (type === 'bloodPressure') {\n    yAxisLabels = {\n      systolic: config.yAxisLabels.systolic,\n      diastolic: config.yAxisLabels.diastolic\n    };\n    yAxisRange = config.yAxisRange;\n  } else {\n    yAxisLabels = { single: config.yAxisLabels };\n    yAxisRange = { single: config.yAxisRange };\n  }\n\n  const renderYAxisLabels = (labels, range, offset = 0) => {\n    return labels.map(label => {\n      const y = config.height - config.padding.bottom - ((label - offset) / range) * chartHeight;\n      return (\n        <g key={label} className=\"y-axis-grid-group\">\n          <line \n            className=\"chart-grid-line-horizontal\" \n            x1={config.padding.left} \n            y1={y} \n            x2={config.width - config.padding.right} \n            y2={y} \n          />\n          <text \n            x={config.padding.left - 10} \n            y={y + 3} \n            fontSize={config.fontSize.yAxis} \n            textAnchor=\"end\" \n            fill=\"var(--chart-color-neutral)\"\n          >\n            {label}\n          </text>\n        </g>\n      );\n    });\n  };\n\n  return (\n    <g className={className}>\n      {/* Y-Axis title */}\n      {title && (\n        <text\n          className=\"y-axis-title\"\n          x={config.padding.left / 3}\n          y={config.padding.top + chartHeight / 2}\n          fontSize={config.fontSize.yAxisTitle}\n          textAnchor=\"middle\"\n          fill=\"var(--chart-color-neutral)\"\n          transform={`rotate(-90, ${config.padding.left / 3}, ${config.padding.top + chartHeight / 2})`}\n        >\n          {title} {unit && `(${unit})`}\n        </text>\n      )}\n\n      {/* Render Y-axis labels based on type */}\n      {type === 'bloodPressure' ? (\n        <>\n          {renderYAxisLabels(yAxisLabels.systolic, yAxisRange.systolic, config.yAxisOffset?.systolic)}\n          {renderYAxisLabels(yAxisLabels.diastolic, yAxisRange.diastolic, config.yAxisOffset?.diastolic)}\n        </>\n      ) : (\n        renderYAxisLabels(yAxisLabels.single, yAxisRange.single)\n      )}\n    </g>\n  );\n};\n\nexport default SharedYAxis;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}