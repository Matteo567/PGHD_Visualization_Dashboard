{"ast":null,"code":"/*\r\n Dashboard.js - Unified Dashboard Router Component\r\n \r\n This component acts as a simple router that renders either the PatientDashboard or PhysicianDashboard based on the viewMode prop. It provides a clean separation between the two dashboard types while maintaining a unified interface.\r\n \r\n Purpose:\r\n - Central routing logic for dashboard views\r\n - Clean separation of concerns between patient and physician interfaces\r\n - Maintains consistent prop passing to child components\r\n \r\n Props:\r\n - patientId: The ID of the currently selected patient\r\n - viewMode: The current view mode ('patient' or 'physician')\r\n \r\n Component Flow:\r\n - Receives viewMode prop from parent App component\r\n - Conditionally renders appropriate dashboard based on viewMode\r\n - Passes patientId to the selected dashboard component\r\n */import React from'react';import PatientDashboard from'../PatientDashboard';import PhysicianDashboard from'../PhysicianDashboard';/*\r\nUnified Dashboard component that renders either Patient or Physician viewbased on the viewMode prop\r\n \r\n @param {string} patientId - The patient identifier\r\n @param {string} viewMode - The view mode ('patient' or 'physician')\r\n @returns {JSX.Element} The appropriate dashboard component\r\n */import{jsx as _jsx}from\"react/jsx-runtime\";const Dashboard=_ref=>{let{patientId,viewMode}=_ref;if(viewMode==='physician'){return/*#__PURE__*/_jsx(PhysicianDashboard,{patientId:patientId});}return/*#__PURE__*/_jsx(PatientDashboard,{patientId:patientId});};export default Dashboard;","map":{"version":3,"names":["React","PatientDashboard","PhysicianDashboard","jsx","_jsx","Dashboard","_ref","patientId","viewMode"],"sources":["C:/Users/Matteo/Working_Folder/a. MCC Thesis Local/Health_data_dashboard-MCC_project_checkpoint/src/components/Dashboard.js"],"sourcesContent":["/*\r\n Dashboard.js - Unified Dashboard Router Component\r\n \r\n This component acts as a simple router that renders either the PatientDashboard or PhysicianDashboard based on the viewMode prop. It provides a clean separation between the two dashboard types while maintaining a unified interface.\r\n \r\n Purpose:\r\n - Central routing logic for dashboard views\r\n - Clean separation of concerns between patient and physician interfaces\r\n - Maintains consistent prop passing to child components\r\n \r\n Props:\r\n - patientId: The ID of the currently selected patient\r\n - viewMode: The current view mode ('patient' or 'physician')\r\n \r\n Component Flow:\r\n - Receives viewMode prop from parent App component\r\n - Conditionally renders appropriate dashboard based on viewMode\r\n - Passes patientId to the selected dashboard component\r\n */\r\n\r\nimport React from 'react';\r\nimport PatientDashboard from '../PatientDashboard';\r\nimport PhysicianDashboard from '../PhysicianDashboard';\r\n\r\n/*\r\nUnified Dashboard component that renders either Patient or Physician viewbased on the viewMode prop\r\n \r\n @param {string} patientId - The patient identifier\r\n @param {string} viewMode - The view mode ('patient' or 'physician')\r\n @returns {JSX.Element} The appropriate dashboard component\r\n */\r\nconst Dashboard = ({ patientId, viewMode }) => {\r\n  if (viewMode === 'physician') {\r\n    return <PhysicianDashboard patientId={patientId} />;\r\n  }\r\n  \r\n  return <PatientDashboard patientId={patientId} />;\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAEA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,gBAAgB,KAAM,qBAAqB,CAClD,MAAO,CAAAC,kBAAkB,KAAM,uBAAuB,CAEtD;AACA;AACA;AACA;AACA;AACA;AACA,GANA,OAAAC,GAAA,IAAAC,IAAA,yBAOA,KAAM,CAAAC,SAAS,CAAGC,IAAA,EAA6B,IAA5B,CAAEC,SAAS,CAAEC,QAAS,CAAC,CAAAF,IAAA,CACxC,GAAIE,QAAQ,GAAK,WAAW,CAAE,CAC5B,mBAAOJ,IAAA,CAACF,kBAAkB,EAACK,SAAS,CAAEA,SAAU,CAAE,CAAC,CACrD,CAEA,mBAAOH,IAAA,CAACH,gBAAgB,EAACM,SAAS,CAAEA,SAAU,CAAE,CAAC,CACnD,CAAC,CAED,cAAe,CAAAF,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}