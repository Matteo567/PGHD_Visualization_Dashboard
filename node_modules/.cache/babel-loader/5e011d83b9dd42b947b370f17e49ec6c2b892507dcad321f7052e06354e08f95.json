{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matteo\\\\Working_Folder\\\\a. MCC Thesis Local\\\\MCC_digital_health_data_visualizations\\\\src\\\\components\\\\patient_charts\\\\PainChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo } from 'react';\nimport usePatientData from '../../hooks/usePatientData';\nimport ChartContainer from '../ChartContainer';\nimport Legend from '../Legend';\nimport '../ChartStyles.css';\nimport BodySVG from './BodySvg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PainChart = ({\n  patientId,\n  isExpanded = false,\n  onExpand,\n  viewMode = 'patient'\n}) => {\n  _s();\n  const {\n    painData,\n    isLoading: loading,\n    error\n  } = usePatientData(patientId, 'pain');\n  const [currentWeek, setCurrentWeek] = useState(new Date(2025, 4, 1)); // Default to May 2025\n\n  const handlePrevWeek = () => {\n    setCurrentWeek(new Date(currentWeek.setDate(currentWeek.getDate() - 7)));\n  };\n  const handleNextWeek = () => {\n    setCurrentWeek(new Date(currentWeek.setDate(currentWeek.getDate() + 7)));\n  };\n  const getPainColor = level => {\n    if (level === 0) return '#F8F8F8'; // Light grey for no pain\n    if (level <= 2) return '#FFE6E6'; // Very light red for mild pain\n    if (level <= 4) return '#FFB3B3'; // Light red for moderate pain\n    if (level <= 6) return '#FF8080'; // Medium red for moderate-severe pain\n    if (level <= 8) return '#FF4D4D'; // Bright red for severe pain\n    return '#FF0000'; // Pure red for extreme pain\n  };\n  const getPainIntensity = level => {\n    if (level === 0) return 'No Pain';\n    return `Rating ${level}`;\n  };\n  const painLegendItems = Array.from({\n    length: 11\n  }, (_, i) => i).map(level => ({\n    color: getPainColor(level),\n    label: `${level}`\n  }));\n\n  // Calculate week dates\n  const startOfWeek = new Date(currentWeek);\n  startOfWeek.setDate(startOfWeek.getDate() - startOfWeek.getDay());\n  startOfWeek.setHours(0, 0, 0, 0);\n  const endOfWeek = new Date(startOfWeek);\n  endOfWeek.setDate(endOfWeek.getDate() + 6);\n  endOfWeek.setHours(23, 59, 59, 999);\n  const weekPainData = painData.filter(d => d.date >= startOfWeek && d.date <= endOfWeek);\n\n  // Process data for chart\n  const {\n    chartData,\n    mostCommonLocation,\n    averagePainLevel\n  } = useMemo(() => {\n    if (!weekPainData.length) return {\n      chartData: [],\n      mostCommonLocation: null,\n      averagePainLevel: 0\n    };\n\n    // Create a map of dates to pain levels\n    const dateMap = new Map();\n    const locationCounts = new Map();\n    weekPainData.forEach(item => {\n      const dateKey = item.date.toDateString();\n      dateMap.set(dateKey, item.level);\n\n      // Count locations\n      const location = item.location.toLowerCase();\n      locationCounts.set(location, (locationCounts.get(location) || 0) + 1);\n    });\n\n    // Find most common location\n    let mostCommon = null;\n    let maxCount = 0;\n    for (const [location, count] of locationCounts) {\n      if (count > maxCount) {\n        maxCount = count;\n        mostCommon = location;\n      }\n    }\n\n    // Generate chart data for all 7 days of the week\n    const data = [];\n    for (let i = 0; i < 7; i++) {\n      const date = new Date(startOfWeek);\n      date.setDate(date.getDate() + i);\n      const dateKey = date.toDateString();\n      const painLevel = dateMap.get(dateKey) || 0;\n      data.push({\n        date,\n        day: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'][date.getDay()],\n        level: painLevel,\n        color: getPainColor(painLevel)\n      });\n    }\n    const totalPain = weekPainData.reduce((sum, item) => sum + item.level, 0);\n    const avgPain = weekPainData.length > 0 ? totalPain / weekPainData.length : 0;\n    return {\n      chartData: data,\n      mostCommonLocation: mostCommon,\n      averagePainLevel: avgPain\n    };\n  }, [weekPainData, startOfWeek]);\n  const formatDateRange = (start, end) => {\n    const startStr = start.toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric'\n    });\n    const endStr = end.toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric'\n    });\n    return `${startStr} to ${endStr}`;\n  };\n\n  // Line Chart Component for Pain Ratings\n  const PainLineChart = ({\n    data,\n    isExpanded\n  }) => {\n    const config = {\n      width: isExpanded ? 480 : 400,\n      height: isExpanded ? 200 : 150,\n      padding: {\n        top: 20,\n        right: 30,\n        bottom: 40,\n        left: 50\n      },\n      yAxisRange: 10,\n      fontSize: {\n        yAxis: isExpanded ? 10 : 8,\n        xAxis: isExpanded ? 10 : 8\n      }\n    };\n    const chartWidth = config.width - config.padding.left - config.padding.right;\n    const chartHeight = config.height - config.padding.top - config.padding.bottom;\n    const dayWidth = chartWidth / 6; // 7 days, 6 intervals\n\n    // Create line path\n    const linePath = data.map((point, index) => {\n      const x = config.padding.left + index * dayWidth;\n      const y = config.padding.top + chartHeight - point.level / config.yAxisRange * chartHeight;\n      return `${index === 0 ? 'M' : 'L'} ${x} ${y}`;\n    }).join(' ');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pain-line-chart\",\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        width: \"100%\",\n        height: \"100%\",\n        viewBox: `0 0 ${config.width} ${config.height}`,\n        children: [[0, 2, 4, 6, 8, 10].map(level => {\n          const y = config.padding.top + chartHeight - level / config.yAxisRange * chartHeight;\n          return /*#__PURE__*/_jsxDEV(\"g\", {\n            children: [/*#__PURE__*/_jsxDEV(\"line\", {\n              x1: config.padding.left,\n              y1: y,\n              x2: config.width - config.padding.right,\n              y2: y,\n              stroke: \"#e0e0e0\",\n              strokeWidth: \"1\",\n              strokeDasharray: \"2,2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n              x: config.padding.left - 10,\n              y: y + 3,\n              fontSize: config.fontSize.yAxis,\n              textAnchor: \"end\",\n              fill: \"var(--chart-color-text-secondary)\",\n              children: level\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this)]\n          }, level, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this);\n        }), data.map((point, index) => {\n          const x = config.padding.left + index * dayWidth;\n          return /*#__PURE__*/_jsxDEV(\"text\", {\n            x: x,\n            y: config.height - config.padding.bottom + 15,\n            fontSize: config.fontSize.xAxis,\n            textAnchor: \"middle\",\n            className: \"x-axis-day-label\",\n            children: point.day\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"path\", {\n          d: linePath,\n          stroke: \"var(--chart-color-primary)\",\n          strokeWidth: \"3\",\n          fill: \"none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), data.map((point, index) => {\n          const x = config.padding.left + index * dayWidth;\n          const y = config.padding.top + chartHeight - point.level / config.yAxisRange * chartHeight;\n          return /*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: x,\n            cy: y,\n            r: \"4\",\n            fill: point.color,\n            stroke: \"var(--chart-color-primary)\",\n            strokeWidth: \"2\"\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this);\n  };\n  const Body = ({\n    location,\n    level\n  }) => {\n    const color = getPainColor(level);\n    const locationLower = location.toLowerCase();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body-views\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"body-view\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"body-view-label\",\n            children: \"Front\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BodySVG, {\n            className: \"body-svg\",\n            painLocation: locationLower,\n            painColor: color,\n            view: \"front\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"body-view\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"body-view-label\",\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BodySVG, {\n            className: \"body-svg\",\n            painLocation: locationLower,\n            painColor: color,\n            view: \"back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this);\n  };\n  if (viewMode === 'patient') {\n    return /*#__PURE__*/_jsxDEV(ChartContainer, {\n      title: \"Pain Report\",\n      icon: \"\\uD83E\\uDD15\",\n      isLoading: loading,\n      error: error,\n      noData: !loading && !error && (!painData || painData.length === 0),\n      isExpanded: isExpanded,\n      onExpand: onExpand,\n      onPrev: handlePrevWeek,\n      onNext: handleNextWeek,\n      navigationLabel: formatDateRange(startOfWeek, endOfWeek),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pain-chart-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pain-legend-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(Legend, {\n            title: \"Pain Intensity Scale (0-10)\",\n            items: painLegendItems\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pain-chart-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pain-list\",\n            children: weekPainData.length > 0 ? weekPainData.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pain-list-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"pain-item-date\",\n                children: new Date(item.date).toLocaleDateString('en-US', {\n                  weekday: 'short',\n                  month: 'short',\n                  day: 'numeric'\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"pain-item-body\",\n                children: /*#__PURE__*/_jsxDEV(Body, {\n                  location: item.location,\n                  level: item.level\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"pain-item-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"pain-level\",\n                  children: [\"Level: \", item.level, \"/10\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"pain-location\",\n                  children: [\"Location: \", item.location]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"pain-intensity\",\n                  children: getPainIntensity(item.level)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 19\n            }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"no-pain-data\",\n              children: \"No pain data available for this week\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Physician view\n  return /*#__PURE__*/_jsxDEV(ChartContainer, {\n    title: \"Pain Report 2\",\n    icon: \"\\uD83E\\uDD15\",\n    isLoading: loading,\n    error: error,\n    noData: !loading && !error && (!painData || painData.length === 0),\n    isExpanded: isExpanded,\n    onExpand: onExpand,\n    onPrev: handlePrevWeek,\n    onNext: handleNextWeek,\n    navigationLabel: formatDateRange(startOfWeek, endOfWeek),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"physician-pain-chart-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pain-legend-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(Legend, {\n          title: \"Pain Intensity Scale (0-10)\",\n          items: painLegendItems\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pain-line-chart-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Pain Rating Trend\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PainLineChart, {\n          data: chartData,\n          isExpanded: isExpanded\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pain-location-info\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Pain Location: \", mostCommonLocation || 'N/A']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pain-summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"summary-label\",\n            children: \"Average Pain Level:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"summary-value\",\n            children: [averagePainLevel.toFixed(1), \"/10\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"summary-label\",\n            children: \"Most Common Location:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"summary-value\",\n            children: mostCommonLocation || 'N/A'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"summary-label\",\n            children: \"Days with Pain:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"summary-value\",\n            children: [weekPainData.length, \"/7\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 287,\n    columnNumber: 5\n  }, this);\n};\n_s(PainChart, \"wqFjhrSPuIXTKsODnLymNDlSLT4=\", false, function () {\n  return [usePatientData];\n});\n_c = PainChart;\nexport default PainChart;\nvar _c;\n$RefreshReg$(_c, \"PainChart\");","map":{"version":3,"names":["React","useState","useMemo","usePatientData","ChartContainer","Legend","BodySVG","jsxDEV","_jsxDEV","PainChart","patientId","isExpanded","onExpand","viewMode","_s","painData","isLoading","loading","error","currentWeek","setCurrentWeek","Date","handlePrevWeek","setDate","getDate","handleNextWeek","getPainColor","level","getPainIntensity","painLegendItems","Array","from","length","_","i","map","color","label","startOfWeek","getDay","setHours","endOfWeek","weekPainData","filter","d","date","chartData","mostCommonLocation","averagePainLevel","dateMap","Map","locationCounts","forEach","item","dateKey","toDateString","set","location","toLowerCase","get","mostCommon","maxCount","count","data","painLevel","push","day","totalPain","reduce","sum","avgPain","formatDateRange","start","end","startStr","toLocaleDateString","month","endStr","PainLineChart","config","width","height","padding","top","right","bottom","left","yAxisRange","fontSize","yAxis","xAxis","chartWidth","chartHeight","dayWidth","linePath","point","index","x","y","join","className","children","viewBox","x1","y1","x2","y2","stroke","strokeWidth","strokeDasharray","fileName","_jsxFileName","lineNumber","columnNumber","textAnchor","fill","cx","cy","r","Body","locationLower","painLocation","painColor","view","title","icon","noData","onPrev","onNext","navigationLabel","items","weekday","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/Matteo/Working_Folder/a. MCC Thesis Local/MCC_digital_health_data_visualizations/src/components/patient_charts/PainChart.js"],"sourcesContent":["import React, { useState, useMemo } from 'react';\r\nimport usePatientData from '../../hooks/usePatientData';\r\nimport ChartContainer from '../ChartContainer';\r\nimport Legend from '../Legend';\r\nimport '../ChartStyles.css';\r\nimport BodySVG from './BodySvg';\r\n\r\nconst PainChart = ({ patientId, isExpanded = false, onExpand, viewMode = 'patient' }) => {\r\n  const { painData, isLoading: loading, error } = usePatientData(patientId, 'pain');\r\n  const [currentWeek, setCurrentWeek] = useState(new Date(2025, 4, 1)); // Default to May 2025\r\n\r\n  const handlePrevWeek = () => {\r\n    setCurrentWeek(new Date(currentWeek.setDate(currentWeek.getDate() - 7)));\r\n  };\r\n\r\n  const handleNextWeek = () => {\r\n    setCurrentWeek(new Date(currentWeek.setDate(currentWeek.getDate() + 7)));\r\n  };\r\n\r\n  const getPainColor = (level) => {\r\n    if (level === 0) return '#F8F8F8'; // Light grey for no pain\r\n    if (level <= 2) return '#FFE6E6'; // Very light red for mild pain\r\n    if (level <= 4) return '#FFB3B3'; // Light red for moderate pain\r\n    if (level <= 6) return '#FF8080'; // Medium red for moderate-severe pain\r\n    if (level <= 8) return '#FF4D4D'; // Bright red for severe pain\r\n    return '#FF0000'; // Pure red for extreme pain\r\n  };\r\n\r\n  const getPainIntensity = (level) => {\r\n    if (level === 0) return 'No Pain';\r\n    return `Rating ${level}`;\r\n  };\r\n\r\n  const painLegendItems = Array.from({ length: 11 }, (_, i) => i).map(level => ({\r\n    color: getPainColor(level),\r\n    label: `${level}`,\r\n  }));\r\n\r\n  // Calculate week dates\r\n  const startOfWeek = new Date(currentWeek);\r\n  startOfWeek.setDate(startOfWeek.getDate() - startOfWeek.getDay());\r\n  startOfWeek.setHours(0, 0, 0, 0);\r\n\r\n  const endOfWeek = new Date(startOfWeek);\r\n  endOfWeek.setDate(endOfWeek.getDate() + 6);\r\n  endOfWeek.setHours(23, 59, 59, 999);\r\n\r\n  const weekPainData = painData.filter(d => d.date >= startOfWeek && d.date <= endOfWeek);\r\n\r\n  // Process data for chart\r\n  const { chartData, mostCommonLocation, averagePainLevel } = useMemo(() => {\r\n    if (!weekPainData.length) return { chartData: [], mostCommonLocation: null, averagePainLevel: 0 };\r\n\r\n    // Create a map of dates to pain levels\r\n    const dateMap = new Map();\r\n    const locationCounts = new Map();\r\n\r\n    weekPainData.forEach(item => {\r\n      const dateKey = item.date.toDateString();\r\n      dateMap.set(dateKey, item.level);\r\n      \r\n      // Count locations\r\n      const location = item.location.toLowerCase();\r\n      locationCounts.set(location, (locationCounts.get(location) || 0) + 1);\r\n    });\r\n\r\n    // Find most common location\r\n    let mostCommon = null;\r\n    let maxCount = 0;\r\n    for (const [location, count] of locationCounts) {\r\n      if (count > maxCount) {\r\n        maxCount = count;\r\n        mostCommon = location;\r\n      }\r\n    }\r\n\r\n    // Generate chart data for all 7 days of the week\r\n    const data = [];\r\n    for (let i = 0; i < 7; i++) {\r\n      const date = new Date(startOfWeek);\r\n      date.setDate(date.getDate() + i);\r\n      const dateKey = date.toDateString();\r\n      const painLevel = dateMap.get(dateKey) || 0;\r\n      \r\n      data.push({\r\n        date,\r\n        day: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'][date.getDay()],\r\n        level: painLevel,\r\n        color: getPainColor(painLevel)\r\n      });\r\n    }\r\n\r\n    const totalPain = weekPainData.reduce((sum, item) => sum + item.level, 0);\r\n    const avgPain = weekPainData.length > 0 ? (totalPain / weekPainData.length) : 0;\r\n\r\n    return {\r\n      chartData: data,\r\n      mostCommonLocation: mostCommon,\r\n      averagePainLevel: avgPain\r\n    };\r\n  }, [weekPainData, startOfWeek]);\r\n\r\n  const formatDateRange = (start, end) => {\r\n    const startStr = start.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\r\n    const endStr = end.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\r\n    return `${startStr} to ${endStr}`;\r\n  };\r\n\r\n  // Line Chart Component for Pain Ratings\r\n  const PainLineChart = ({ data, isExpanded }) => {\r\n    const config = {\r\n      width: isExpanded ? 480 : 400,\r\n      height: isExpanded ? 200 : 150,\r\n      padding: { top: 20, right: 30, bottom: 40, left: 50 },\r\n      yAxisRange: 10,\r\n      fontSize: {\r\n        yAxis: isExpanded ? 10 : 8,\r\n        xAxis: isExpanded ? 10 : 8,\r\n      }\r\n    };\r\n\r\n    const chartWidth = config.width - config.padding.left - config.padding.right;\r\n    const chartHeight = config.height - config.padding.top - config.padding.bottom;\r\n    const dayWidth = chartWidth / 6; // 7 days, 6 intervals\r\n\r\n    // Create line path\r\n    const linePath = data.map((point, index) => {\r\n      const x = config.padding.left + (index * dayWidth);\r\n      const y = config.padding.top + chartHeight - (point.level / config.yAxisRange) * chartHeight;\r\n      return `${index === 0 ? 'M' : 'L'} ${x} ${y}`;\r\n    }).join(' ');\r\n\r\n    return (\r\n      <div className=\"pain-line-chart\">\r\n        <svg width=\"100%\" height=\"100%\" viewBox={`0 0 ${config.width} ${config.height}`}>\r\n          {/* Grid lines */}\r\n          {[0, 2, 4, 6, 8, 10].map(level => {\r\n            const y = config.padding.top + chartHeight - (level / config.yAxisRange) * chartHeight;\r\n            return (\r\n              <g key={level}>\r\n                <line \r\n                  x1={config.padding.left} \r\n                  y1={y} \r\n                  x2={config.width - config.padding.right} \r\n                  y2={y} \r\n                  stroke=\"#e0e0e0\" \r\n                  strokeWidth=\"1\" \r\n                  strokeDasharray=\"2,2\"\r\n                />\r\n                <text \r\n                  x={config.padding.left - 10} \r\n                  y={y + 3} \r\n                  fontSize={config.fontSize.yAxis} \r\n                  textAnchor=\"end\" \r\n                  fill=\"var(--chart-color-text-secondary)\"\r\n                >\r\n                  {level}\r\n                </text>\r\n              </g>\r\n            );\r\n          })}\r\n\r\n          {/* X-axis labels */}\r\n          {data.map((point, index) => {\r\n            const x = config.padding.left + (index * dayWidth);\r\n            return (\r\n              <text \r\n                key={index}\r\n                x={x} \r\n                y={config.height - config.padding.bottom + 15} \r\n                fontSize={config.fontSize.xAxis} \r\n                textAnchor=\"middle\" \r\n                className=\"x-axis-day-label\"\r\n              >\r\n                {point.day}\r\n              </text>\r\n            );\r\n          })}\r\n\r\n          {/* Line */}\r\n          <path \r\n            d={linePath} \r\n            stroke=\"var(--chart-color-primary)\" \r\n            strokeWidth=\"3\" \r\n            fill=\"none\"\r\n          />\r\n\r\n          {/* Data points */}\r\n          {data.map((point, index) => {\r\n            const x = config.padding.left + (index * dayWidth);\r\n            const y = config.padding.top + chartHeight - (point.level / config.yAxisRange) * chartHeight;\r\n            return (\r\n              <circle \r\n                key={index}\r\n                cx={x} \r\n                cy={y} \r\n                r=\"4\" \r\n                fill={point.color} \r\n                stroke=\"var(--chart-color-primary)\" \r\n                strokeWidth=\"2\"\r\n              />\r\n            );\r\n          })}\r\n        </svg>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const Body = ({ location, level }) => {\r\n    const color = getPainColor(level);\r\n    const locationLower = location.toLowerCase();\r\n\r\n    return (\r\n      <div className=\"body-container\">\r\n        <div className=\"body-views\">\r\n          <div className=\"body-view\">\r\n            <div className=\"body-view-label\">Front</div>\r\n            <BodySVG \r\n              className=\"body-svg\" \r\n              painLocation={locationLower} \r\n              painColor={color} \r\n              view=\"front\" \r\n            />\r\n          </div>\r\n          <div className=\"body-view\">\r\n            <div className=\"body-view-label\">Back</div>\r\n            <BodySVG \r\n              className=\"body-svg\" \r\n              painLocation={locationLower} \r\n              painColor={color} \r\n              view=\"back\" \r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (viewMode === 'patient') {\r\n    return (\r\n      <ChartContainer\r\n        title=\"Pain Report\"\r\n        icon=\"🤕\"\r\n        isLoading={loading}\r\n        error={error}\r\n        noData={!loading && !error && (!painData || painData.length === 0)}\r\n        isExpanded={isExpanded}\r\n        onExpand={onExpand}\r\n        onPrev={handlePrevWeek}\r\n        onNext={handleNextWeek}\r\n        navigationLabel={formatDateRange(startOfWeek, endOfWeek)}\r\n      >\r\n        <div className=\"pain-chart-container\">\r\n          <div className=\"pain-legend-wrapper\">\r\n            <Legend title=\"Pain Intensity Scale (0-10)\" items={painLegendItems} />\r\n          </div>\r\n          <div className=\"pain-chart-wrapper\">\r\n            <div className=\"pain-list\">\r\n              {weekPainData.length > 0 ? (\r\n                weekPainData.map((item, index) => (\r\n                  <div key={index} className=\"pain-list-item\">\r\n                    <div className=\"pain-item-date\">\r\n                      {new Date(item.date).toLocaleDateString('en-US', { weekday: 'short', month: 'short', day: 'numeric' })}\r\n                    </div>\r\n                    <div className=\"pain-item-body\">\r\n                      <Body location={item.location} level={item.level} />\r\n                    </div>\r\n                    <div className=\"pain-item-details\">\r\n                      <div className=\"pain-level\">Level: {item.level}/10</div>\r\n                      <div className=\"pain-location\">Location: {item.location}</div>\r\n                      <div className=\"pain-intensity\">{getPainIntensity(item.level)}</div>\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              ) : (\r\n                <div className=\"no-pain-data\">No pain data available for this week</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </ChartContainer>\r\n    );\r\n  }\r\n\r\n  // Physician view\r\n  return (\r\n    <ChartContainer\r\n      title=\"Pain Report 2\"\r\n      icon=\"🤕\"\r\n      isLoading={loading}\r\n      error={error}\r\n      noData={!loading && !error && (!painData || painData.length === 0)}\r\n      isExpanded={isExpanded}\r\n      onExpand={onExpand}\r\n      onPrev={handlePrevWeek}\r\n      onNext={handleNextWeek}\r\n      navigationLabel={formatDateRange(startOfWeek, endOfWeek)}\r\n    >\r\n      <div className=\"physician-pain-chart-container\">\r\n        <div className=\"pain-legend-wrapper\">\r\n          <Legend title=\"Pain Intensity Scale (0-10)\" items={painLegendItems} />\r\n        </div>\r\n\r\n        <div className=\"pain-line-chart-container\">\r\n          <h4>Pain Rating Trend</h4>\r\n          <PainLineChart data={chartData} isExpanded={isExpanded} />\r\n        </div>\r\n\r\n        <div className=\"pain-location-info\">\r\n          <h4>Pain Location: {mostCommonLocation || 'N/A'}</h4>\r\n        </div>\r\n\r\n        <div className=\"pain-summary\">\r\n          <div className=\"summary-item\">\r\n            <span className=\"summary-label\">Average Pain Level:</span>\r\n            <span className=\"summary-value\">{averagePainLevel.toFixed(1)}/10</span>\r\n          </div>\r\n          <div className=\"summary-item\">\r\n            <span className=\"summary-label\">Most Common Location:</span>\r\n            <span className=\"summary-value\">{mostCommonLocation || 'N/A'}</span>\r\n          </div>\r\n          <div className=\"summary-item\">\r\n            <span className=\"summary-label\">Days with Pain:</span>\r\n            <span className=\"summary-value\">{weekPainData.length}/7</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ChartContainer>\r\n  );\r\n};\r\n\r\nexport default PainChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}