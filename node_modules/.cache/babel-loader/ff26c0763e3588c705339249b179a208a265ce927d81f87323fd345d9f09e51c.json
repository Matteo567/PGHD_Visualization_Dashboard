{"ast":null,"code":"/*\n - VisualizationWrapper.js - Universal Chart Container Component\n \n - This component provides a standardized wrapper for all chart visualizations by handling loading,\n  error, and no-data states, providing chart navigation controls (previous/next), managing \n  expand/collapse functionality, displaying chart titles and controls, and ensuring consistent \n  chart presentation across the application.\n \n - Serves as the foundation for all health metric chart displays.\n */import React from'react';import Placeholder from'./ui/Placeholder';/*\n - Shared component for visualization containers used in both Patient and Physician dashboards\n - Includes functionality previously in ChartContainer: navigation, loading states, error handling\n \n - @param {Object} props - Component props\n - @param {string} props.id - Unique identifier for the visualization\n - @param {string} props.className - CSS class names\n - @param {string} props.selectedViz - Selected visualization type\n - @param {Object} props.availableVisualizations - Available visualizations\n - @param {Object} props.allVisualizations - All visualization configurations\n - @param {Function} props.onVisualizationChange - Handler for visualization changes\n - @param {Function} props.onExpand - Handler for expand/collapse\n - @param {boolean} props.isExpanded - Whether the visualization is expanded\n - @param {Function} props.renderVisualization - Function to render the visualization\n - @param {boolean} props.disabled - Whether the visualization is disabled\n - @param {string} props.placeholderText - Text to show when no data is available\n - @param {string} props.title - Chart title\n - @param {boolean} props.isLoading - Whether the chart is loading\n - @param {string|null} props.error - Error message if any\n - @param {boolean} props.noData - Whether there's no data to display\n - @param {boolean} props.showNavigation - Whether to show navigation controls\n - @param {Function} props.onPrev - Previous navigation handler\n - @param {Function} props.onNext - Next navigation handler\n - @param {string} props.navigationLabel - Label for navigation controls\n - @returns {JSX.Element} The visualization wrapper component\n */import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const VisualizationWrapper=_ref=>{let{id,className,selectedViz,availableVisualizations,allVisualizations,onVisualizationChange,onExpand,isExpanded,renderVisualization,disabled=false,placeholderText=\"No data available for this patient.\",// ChartContainer props\ntitle,isLoading=false,error=null,noData=false,showNavigation=true,onPrev,onNext,navigationLabel='Week',// Screenshot mode\nscreenshotMode=false}=_ref;const viz=allVisualizations[selectedViz];// Handle loading state\nif(isLoading){return/*#__PURE__*/_jsx(\"div\",{className:\"visualization-wrapper \".concat(isExpanded?'expanded':'',\" \").concat(className),children:/*#__PURE__*/_jsx(Placeholder,{message:\"Loading data...\",type:\"loading\"})});}// Handle error state\nif(error){return/*#__PURE__*/_jsx(\"div\",{className:\"visualization-wrapper \".concat(isExpanded?'expanded':'',\" \").concat(className),children:/*#__PURE__*/_jsx(Placeholder,{message:\"Error: \".concat(error),type:\"error\"})});}// Handle no data state\nif(noData){return/*#__PURE__*/_jsx(\"div\",{className:\"visualization-wrapper \".concat(isExpanded?'expanded':'',\" \").concat(className),children:/*#__PURE__*/_jsx(Placeholder,{message:\"No data available\",type:\"no-data\"})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"visualization-wrapper \".concat(isExpanded?'expanded':'',\" \").concat(className,\" \").concat(screenshotMode?'screenshot-mode':''),children:[!screenshotMode&&/*#__PURE__*/_jsxs(\"div\",{className:\"visualization-header\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"visualization-title-group\",children:/*#__PURE__*/_jsx(\"h3\",{className:\"visualization-title\",children:title||(viz===null||viz===void 0?void 0:viz.name)||'Unknown Visualization'})}),/*#__PURE__*/_jsxs(\"div\",{className:\"visualization-controls\",children:[showNavigation&&onPrev&&onNext&&/*#__PURE__*/_jsxs(\"div\",{className:\"chart-navigation\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"nav-button prev\",onClick:onPrev,\"aria-label\":\"Previous \".concat(navigationLabel),children:\"\\u2039\"}),/*#__PURE__*/_jsx(\"button\",{className:\"nav-button next\",onClick:onNext,\"aria-label\":\"Next \".concat(navigationLabel),children:\"\\u203A\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>onExpand(id),className:\"expand-button\",children:isExpanded?'Collapse':'Expand'})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"visualization-content\",children:Object.keys(availableVisualizations).length===0?/*#__PURE__*/_jsx(Placeholder,{message:placeholderText,type:\"no-data\"}):renderVisualization(selectedViz,id)})]});};export default VisualizationWrapper;","map":{"version":3,"names":["React","Placeholder","jsx","_jsx","jsxs","_jsxs","VisualizationWrapper","_ref","id","className","selectedViz","availableVisualizations","allVisualizations","onVisualizationChange","onExpand","isExpanded","renderVisualization","disabled","placeholderText","title","isLoading","error","noData","showNavigation","onPrev","onNext","navigationLabel","screenshotMode","viz","concat","children","message","type","name","onClick","Object","keys","length"],"sources":["C:/Users/Matteo/Working_Folder/a. MCC Thesis Local Experimental/PGHD_Visualization_Dashboard/src/components/VisualizationWrapper.js"],"sourcesContent":["/*\n - VisualizationWrapper.js - Universal Chart Container Component\n \n - This component provides a standardized wrapper for all chart visualizations by handling loading,\n  error, and no-data states, providing chart navigation controls (previous/next), managing \n  expand/collapse functionality, displaying chart titles and controls, and ensuring consistent \n  chart presentation across the application.\n \n - Serves as the foundation for all health metric chart displays.\n */\n\nimport React from 'react';\nimport Placeholder from './ui/Placeholder';\n\n/*\n - Shared component for visualization containers used in both Patient and Physician dashboards\n - Includes functionality previously in ChartContainer: navigation, loading states, error handling\n \n - @param {Object} props - Component props\n - @param {string} props.id - Unique identifier for the visualization\n - @param {string} props.className - CSS class names\n - @param {string} props.selectedViz - Selected visualization type\n - @param {Object} props.availableVisualizations - Available visualizations\n - @param {Object} props.allVisualizations - All visualization configurations\n - @param {Function} props.onVisualizationChange - Handler for visualization changes\n - @param {Function} props.onExpand - Handler for expand/collapse\n - @param {boolean} props.isExpanded - Whether the visualization is expanded\n - @param {Function} props.renderVisualization - Function to render the visualization\n - @param {boolean} props.disabled - Whether the visualization is disabled\n - @param {string} props.placeholderText - Text to show when no data is available\n - @param {string} props.title - Chart title\n - @param {boolean} props.isLoading - Whether the chart is loading\n - @param {string|null} props.error - Error message if any\n - @param {boolean} props.noData - Whether there's no data to display\n - @param {boolean} props.showNavigation - Whether to show navigation controls\n - @param {Function} props.onPrev - Previous navigation handler\n - @param {Function} props.onNext - Next navigation handler\n - @param {string} props.navigationLabel - Label for navigation controls\n - @returns {JSX.Element} The visualization wrapper component\n */\nconst VisualizationWrapper = ({ \n  id, \n  className, \n  selectedViz, \n  availableVisualizations, \n  allVisualizations,\n  onVisualizationChange, \n  onExpand, \n  isExpanded, \n  renderVisualization,\n  disabled = false,\n  placeholderText = \"No data available for this patient.\",\n  // ChartContainer props\n  title,\n  isLoading = false,\n  error = null,\n  noData = false,\n  showNavigation = true,\n  onPrev,\n  onNext,\n  navigationLabel = 'Week',\n  // Screenshot mode\n  screenshotMode = false\n}) => {\n  const viz = allVisualizations[selectedViz];\n  \n  // Handle loading state\n  if (isLoading) {\n    return (\n      <div className={`visualization-wrapper ${isExpanded ? 'expanded' : ''} ${className}`}>\n        <Placeholder message=\"Loading data...\" type=\"loading\" />\n      </div>\n    );\n  }\n\n  // Handle error state\n  if (error) {\n    return (\n      <div className={`visualization-wrapper ${isExpanded ? 'expanded' : ''} ${className}`}>\n        <Placeholder message={`Error: ${error}`} type=\"error\" />\n      </div>\n    );\n  }\n\n  // Handle no data state\n  if (noData) {\n    return (\n      <div className={`visualization-wrapper ${isExpanded ? 'expanded' : ''} ${className}`}>\n        <Placeholder message=\"No data available\" type=\"no-data\" />\n      </div>\n    );\n  }\n  \n  return (\n    <div className={`visualization-wrapper ${isExpanded ? 'expanded' : ''} ${className} ${screenshotMode ? 'screenshot-mode' : ''}`}>\n      {!screenshotMode && (\n        <div className=\"visualization-header\">\n          <div className=\"visualization-title-group\">\n            <h3 className=\"visualization-title\">\n              {title || viz?.name || 'Unknown Visualization'}\n            </h3>\n          </div>\n          <div className=\"visualization-controls\">\n            {showNavigation && onPrev && onNext && (\n              <div className=\"chart-navigation\">\n                <button \n                  className=\"nav-button prev\" \n                  onClick={onPrev}\n                  aria-label={`Previous ${navigationLabel}`}\n                >\n                  â€¹\n                </button>\n                <button \n                  className=\"nav-button next\" \n                  onClick={onNext}\n                  aria-label={`Next ${navigationLabel}`}\n                >\n                  â€º\n                </button>\n              </div>\n            )}\n            <button onClick={() => onExpand(id)} className=\"expand-button\">\n              {isExpanded ? 'Collapse' : 'Expand'}\n            </button>\n          </div>\n        </div>\n      )}\n      <div className=\"visualization-content\">\n        {Object.keys(availableVisualizations).length === 0 ? (\n          <Placeholder message={placeholderText} type=\"no-data\" />\n        ) : (\n          renderVisualization(selectedViz, id)\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default VisualizationWrapper;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}