{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matteo\\\\Working_Folder\\\\a. MCC Thesis Local\\\\MCC_digital_health_data_visualizations\\\\src\\\\components\\\\patient_charts\\\\BodySvg.js\";\n/**\r\n * BodySvg.js - Human Body Anatomical Visualization Component\r\n * \r\n * This component provides an interactive human body diagram:\r\n * - SVG-based anatomical body representation\r\n * - Interactive body regions for pain location selection\r\n * - Design that scales with container\r\n * - Color-coded regions for different body parts\r\n * - Integration with pain assessment functionality\r\n * \r\n * Essential for pain location mapping and anatomical reference in health assessments.\r\n */\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BodySvg = ({\n  painLocation,\n  painColor,\n  className,\n  view = 'front'\n}) => {\n  const defaultFill = '#F5F5F5';\n  const strokeColor = '#CCCCCC';\n  const strokeWidth = 1;\n\n  // More detailed body part mapping\n  const bodyPartFills = {\n    // Head and neck\n    head: defaultFill,\n    neck: defaultFill,\n    // Torso - front\n    chest: defaultFill,\n    stomach: defaultFill,\n    leftShoulder: defaultFill,\n    rightShoulder: defaultFill,\n    // Torso - back\n    upperBack: defaultFill,\n    lowerBack: defaultFill,\n    leftShoulderBlade: defaultFill,\n    rightShoulderBlade: defaultFill,\n    // Hips\n    leftHip: defaultFill,\n    rightHip: defaultFill,\n    // Arms\n    leftArm: defaultFill,\n    rightArm: defaultFill,\n    leftElbow: defaultFill,\n    rightElbow: defaultFill,\n    leftForearm: defaultFill,\n    rightForearm: defaultFill,\n    leftHand: defaultFill,\n    rightHand: defaultFill,\n    // Legs\n    leftThigh: defaultFill,\n    rightThigh: defaultFill,\n    leftKnee: defaultFill,\n    rightKnee: defaultFill,\n    leftCalf: defaultFill,\n    rightCalf: defaultFill,\n    leftFoot: defaultFill,\n    rightFoot: defaultFill\n  };\n\n  // Enhanced location mapping\n  const locationMapping = {\n    // Head and neck (visible from both sides)\n    head: 'head',\n    neck: 'neck',\n    // Torso - front view only\n    chest: view === 'front' ? 'chest' : null,\n    stomach: view === 'front' ? 'stomach' : null,\n    abdomen: view === 'front' ? 'stomach' : null,\n    belly: view === 'front' ? 'stomach' : null,\n    leftShoulder: view === 'front' ? 'leftShoulder' : null,\n    rightShoulder: view === 'front' ? 'rightShoulder' : null,\n    shoulder: view === 'front' ? 'leftShoulder' : null,\n    shoulders: view === 'front' ? 'leftShoulder' : null,\n    // Torso - back view only\n    back: view === 'back' ? 'upperBack' : null,\n    upperBack: view === 'back' ? 'upperBack' : null,\n    lowerBack: view === 'back' ? 'lowerBack' : null,\n    spine: view === 'back' ? 'upperBack' : null,\n    leftShoulderBlade: view === 'back' ? 'leftShoulderBlade' : null,\n    rightShoulderBlade: view === 'back' ? 'rightShoulderBlade' : null,\n    shoulderBlade: view === 'back' ? 'leftShoulderBlade' : null,\n    shoulderBlades: view === 'back' ? 'leftShoulderBlade' : null,\n    // Hips (visible from both sides)\n    hip: 'leftHip',\n    hips: 'leftHip',\n    leftHip: 'leftHip',\n    rightHip: 'rightHip',\n    // Arms (visible from both sides)\n    arm: 'leftArm',\n    arms: 'leftArm',\n    leftArm: 'leftArm',\n    rightArm: 'rightArm',\n    elbow: 'leftElbow',\n    elbows: 'leftElbow',\n    leftElbow: 'leftElbow',\n    rightElbow: 'rightElbow',\n    forearm: 'leftForearm',\n    forearms: 'leftForearm',\n    leftForearm: 'leftForearm',\n    rightForearm: 'rightForearm',\n    hand: 'leftHand',\n    hands: 'leftHand',\n    leftHand: 'leftHand',\n    rightHand: 'rightHand',\n    // Legs (visible from both sides)\n    leg: 'leftThigh',\n    legs: 'leftThigh',\n    leftThigh: 'leftThigh',\n    rightThigh: 'rightThigh',\n    thigh: 'leftThigh',\n    thighs: 'leftThigh',\n    knee: 'leftKnee',\n    knees: 'leftKnee',\n    leftKnee: 'leftKnee',\n    rightKnee: 'rightKnee',\n    calf: 'leftCalf',\n    calves: 'leftCalf',\n    leftCalf: 'leftCalf',\n    rightCalf: 'rightCalf',\n    foot: 'leftFoot',\n    feet: 'leftFoot',\n    leftFoot: 'leftFoot',\n    rightFoot: 'rightFoot',\n    ankle: 'leftFoot',\n    ankles: 'leftFoot'\n  };\n  const targetPart = locationMapping[painLocation];\n  if (targetPart && targetPart !== null) {\n    bodyPartFills[targetPart] = painColor;\n\n    // Handle symmetrical body parts - shade both sides for general terms\n    if (painLocation === 'elbow' || painLocation === 'elbows') {\n      bodyPartFills.leftElbow = painColor;\n      bodyPartFills.rightElbow = painColor;\n    } else if (painLocation === 'shoulder' || painLocation === 'shoulders') {\n      if (view === 'front') {\n        bodyPartFills.leftShoulder = painColor;\n        bodyPartFills.rightShoulder = painColor;\n      } else {\n        bodyPartFills.leftShoulderBlade = painColor;\n        bodyPartFills.rightShoulderBlade = painColor;\n      }\n    } else if (painLocation === 'arm' || painLocation === 'arms') {\n      bodyPartFills.leftArm = painColor;\n      bodyPartFills.rightArm = painColor;\n    } else if (painLocation === 'forearm' || painLocation === 'forearms') {\n      bodyPartFills.leftForearm = painColor;\n      bodyPartFills.rightForearm = painColor;\n    } else if (painLocation === 'hand' || painLocation === 'hands') {\n      bodyPartFills.leftHand = painColor;\n      bodyPartFills.rightHand = painColor;\n    } else if (painLocation === 'leg' || painLocation === 'legs') {\n      bodyPartFills.leftThigh = painColor;\n      bodyPartFills.rightThigh = painColor;\n    } else if (painLocation === 'thigh' || painLocation === 'thighs') {\n      bodyPartFills.leftThigh = painColor;\n      bodyPartFills.rightThigh = painColor;\n    } else if (painLocation === 'knee' || painLocation === 'knees') {\n      bodyPartFills.leftKnee = painColor;\n      bodyPartFills.rightKnee = painColor;\n    } else if (painLocation === 'calf' || painLocation === 'calves') {\n      bodyPartFills.leftCalf = painColor;\n      bodyPartFills.rightCalf = painColor;\n    } else if (painLocation === 'foot' || painLocation === 'feet') {\n      bodyPartFills.leftFoot = painColor;\n      bodyPartFills.rightFoot = painColor;\n    } else if (painLocation === 'ankle' || painLocation === 'ankles') {\n      bodyPartFills.leftFoot = painColor;\n      bodyPartFills.rightFoot = painColor;\n    } else if (painLocation === 'hip' || painLocation === 'hips') {\n      bodyPartFills.leftHip = painColor;\n      bodyPartFills.rightHip = painColor;\n    }\n  }\n  const renderFrontView = () => /*#__PURE__*/_jsxDEV(\"g\", {\n    id: \"body-front\",\n    children: [/*#__PURE__*/_jsxDEV(\"ellipse\", {\n      cx: \"75\",\n      cy: \"15\",\n      rx: \"12\",\n      ry: \"15\",\n      fill: bodyPartFills.head,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n      x: \"68\",\n      y: \"30\",\n      width: \"14\",\n      height: \"8\",\n      fill: bodyPartFills.neck,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M60,38 Q75,35 90,38 L85,85 Q75,90 65,85 Z\",\n      fill: bodyPartFills.chest,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M65,85 Q75,88 85,85 L80,110 Q75,115 70,110 Z\",\n      fill: bodyPartFills.stomach,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ellipse\", {\n      cx: \"55\",\n      cy: \"40\",\n      rx: \"8\",\n      ry: \"6\",\n      fill: bodyPartFills.leftShoulder,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ellipse\", {\n      cx: \"95\",\n      cy: \"40\",\n      rx: \"8\",\n      ry: \"6\",\n      fill: bodyPartFills.rightShoulder,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M47,40 Q45,50 43,65 L50,67 Q52,52 55,42 Z\",\n      fill: bodyPartFills.leftArm,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M103,40 Q105,50 107,65 L100,67 Q98,52 95,42 Z\",\n      fill: bodyPartFills.rightArm,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ellipse\", {\n      cx: \"46\",\n      cy: \"70\",\n      rx: \"4\",\n      ry: \"6\",\n      fill: bodyPartFills.leftElbow,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ellipse\", {\n      cx: \"104\",\n      cy: \"70\",\n      rx: \"4\",\n      ry: \"6\",\n      fill: bodyPartFills.rightElbow,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M42,70 Q44,80 46,90 L50,88 Q48,78 50,72 Z\",\n      fill: bodyPartFills.leftForearm,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M108,70 Q106,80 104,90 L100,88 Q102,78 100,72 Z\",\n      fill: bodyPartFills.rightForearm,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ellipse\", {\n      cx: \"48\",\n      cy: \"95\",\n      rx: \"5\",\n      ry: \"8\",\n      fill: bodyPartFills.leftHand,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ellipse\", {\n      cx: \"102\",\n      cy: \"95\",\n      rx: \"5\",\n      ry: \"8\",\n      fill: bodyPartFills.rightHand,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ellipse\", {\n      cx: \"65\",\n      cy: \"105\",\n      rx: \"8\",\n      ry: \"6\",\n      fill: bodyPartFills.leftHip,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ellipse\", {\n      cx: \"85\",\n      cy: \"105\",\n      rx: \"8\",\n      ry: \"6\",\n      fill: bodyPartFills.rightHip,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M65,110 Q70,115 75,120 L73,140 Q70,135 67,130 Z\",\n      fill: bodyPartFills.leftThigh,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M85,110 Q80,115 75,120 L77,140 Q80,135 83,130 Z\",\n      fill: bodyPartFills.rightThigh,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ellipse\", {\n      cx: \"70\",\n      cy: \"145\",\n      rx: \"6\",\n      ry: \"4\",\n      fill: bodyPartFills.leftKnee,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ellipse\", {\n      cx: \"80\",\n      cy: \"145\",\n      rx: \"6\",\n      ry: \"4\",\n      fill: bodyPartFills.rightKnee,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M67,149 Q70,155 73,165 L70,167 Q67,161 70,155 Z\",\n      fill: bodyPartFills.leftCalf,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M83,149 Q80,155 77,165 L80,167 Q83,161 80,155 Z\",\n      fill: bodyPartFills.rightCalf,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ellipse\", {\n      cx: \"70\",\n      cy: \"170\",\n      rx: \"8\",\n      ry: \"4\",\n      fill: bodyPartFills.leftFoot,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ellipse\", {\n      cx: \"80\",\n      cy: \"170\",\n      rx: \"8\",\n      ry: \"4\",\n      fill: bodyPartFills.rightFoot,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 5\n  }, this);\n  const renderBackView = () => /*#__PURE__*/_jsxDEV(\"g\", {\n    id: \"body-back\",\n    children: [/*#__PURE__*/_jsxDEV(\"ellipse\", {\n      cx: \"75\",\n      cy: \"15\",\n      rx: \"12\",\n      ry: \"15\",\n      fill: bodyPartFills.head,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n      x: \"68\",\n      y: \"30\",\n      width: \"14\",\n      height: \"8\",\n      fill: bodyPartFills.neck,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M60,38 Q75,35 90,38 L85,70 Q75,75 65,70 Z\",\n      fill: bodyPartFills.upperBack,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M65,70 Q75,75 85,70 L80,110 Q75,115 70,110 Z\",\n      fill: bodyPartFills.lowerBack,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ellipse\", {\n      cx: \"55\",\n      cy: \"45\",\n      rx: \"6\",\n      ry: \"8\",\n      fill: bodyPartFills.leftShoulderBlade,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ellipse\", {\n      cx: \"95\",\n      cy: \"45\",\n      rx: \"6\",\n      ry: \"8\",\n      fill: bodyPartFills.rightShoulderBlade,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M47,40 Q45,50 43,65 L50,67 Q52,52 55,42 Z\",\n      fill: bodyPartFills.leftArm,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M103,40 Q105,50 107,65 L100,67 Q98,52 95,42 Z\",\n      fill: bodyPartFills.rightArm,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ellipse\", {\n      cx: \"46\",\n      cy: \"70\",\n      rx: \"4\",\n      ry: \"6\",\n      fill: bodyPartFills.leftElbow,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ellipse\", {\n      cx: \"104\",\n      cy: \"70\",\n      rx: \"4\",\n      ry: \"6\",\n      fill: bodyPartFills.rightElbow,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M42,70 Q44,80 46,90 L50,88 Q48,78 50,72 Z\",\n      fill: bodyPartFills.leftForearm,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M108,70 Q106,80 104,90 L100,88 Q102,78 100,72 Z\",\n      fill: bodyPartFills.rightForearm,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ellipse\", {\n      cx: \"48\",\n      cy: \"95\",\n      rx: \"5\",\n      ry: \"8\",\n      fill: bodyPartFills.leftHand,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ellipse\", {\n      cx: \"102\",\n      cy: \"95\",\n      rx: \"5\",\n      ry: \"8\",\n      fill: bodyPartFills.rightHand,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ellipse\", {\n      cx: \"65\",\n      cy: \"105\",\n      rx: \"8\",\n      ry: \"6\",\n      fill: bodyPartFills.leftHip,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ellipse\", {\n      cx: \"85\",\n      cy: \"105\",\n      rx: \"8\",\n      ry: \"6\",\n      fill: bodyPartFills.rightHip,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M65,110 Q70,115 75,120 L73,140 Q70,135 67,130 Z\",\n      fill: bodyPartFills.leftThigh,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M85,110 Q80,115 75,120 L77,140 Q80,135 83,130 Z\",\n      fill: bodyPartFills.rightThigh,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ellipse\", {\n      cx: \"70\",\n      cy: \"145\",\n      rx: \"6\",\n      ry: \"4\",\n      fill: bodyPartFills.leftKnee,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ellipse\", {\n      cx: \"80\",\n      cy: \"145\",\n      rx: \"6\",\n      ry: \"4\",\n      fill: bodyPartFills.rightKnee,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M67,149 Q70,155 73,165 L70,167 Q67,161 70,155 Z\",\n      fill: bodyPartFills.leftCalf,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M83,149 Q80,155 77,165 L80,167 Q83,161 80,155 Z\",\n      fill: bodyPartFills.rightCalf,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 553,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ellipse\", {\n      cx: \"70\",\n      cy: \"170\",\n      rx: \"8\",\n      ry: \"4\",\n      fill: bodyPartFills.leftFoot,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ellipse\", {\n      cx: \"80\",\n      cy: \"170\",\n      rx: \"8\",\n      ry: \"4\",\n      fill: bodyPartFills.rightFoot,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 383,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 150 180\",\n    className: className,\n    preserveAspectRatio: \"xMidYMid meet\",\n    style: {\n      filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.1))',\n      // Add subtle shadow for better visual depth\n      transition: 'all 0.2s ease' // Smooth transitions for scaling\n    },\n    children: view === 'front' ? renderFrontView() : renderBackView()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 579,\n    columnNumber: 5\n  }, this);\n};\n_c = BodySvg;\nexport default BodySvg;\nvar _c;\n$RefreshReg$(_c, \"BodySvg\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","BodySvg","painLocation","painColor","className","view","defaultFill","strokeColor","strokeWidth","bodyPartFills","head","neck","chest","stomach","leftShoulder","rightShoulder","upperBack","lowerBack","leftShoulderBlade","rightShoulderBlade","leftHip","rightHip","leftArm","rightArm","leftElbow","rightElbow","leftForearm","rightForearm","leftHand","rightHand","leftThigh","rightThigh","leftKnee","rightKnee","leftCalf","rightCalf","leftFoot","rightFoot","locationMapping","abdomen","belly","shoulder","shoulders","back","spine","shoulderBlade","shoulderBlades","hip","hips","arm","arms","elbow","elbows","forearm","forearms","hand","hands","leg","legs","thigh","thighs","knee","knees","calf","calves","foot","feet","ankle","ankles","targetPart","renderFrontView","id","children","cx","cy","rx","ry","fill","stroke","fileName","_jsxFileName","lineNumber","columnNumber","x","y","width","height","d","renderBackView","xmlns","viewBox","preserveAspectRatio","style","filter","transition","_c","$RefreshReg$"],"sources":["C:/Users/Matteo/Working_Folder/a. MCC Thesis Local/MCC_digital_health_data_visualizations/src/components/patient_charts/BodySvg.js"],"sourcesContent":["/**\r\n * BodySvg.js - Human Body Anatomical Visualization Component\r\n * \r\n * This component provides an interactive human body diagram:\r\n * - SVG-based anatomical body representation\r\n * - Interactive body regions for pain location selection\r\n * - Design that scales with container\r\n * - Color-coded regions for different body parts\r\n * - Integration with pain assessment functionality\r\n * \r\n * Essential for pain location mapping and anatomical reference in health assessments.\r\n */\r\n\r\nimport React, { useState, useRef, useEffect } from 'react';\r\n\r\nconst BodySvg = ({ painLocation, painColor, className, view = 'front' }) => {\r\n  const defaultFill = '#F5F5F5';\r\n  const strokeColor = '#CCCCCC';\r\n  const strokeWidth = 1;\r\n\r\n  // More detailed body part mapping\r\n  const bodyPartFills = {\r\n    // Head and neck\r\n    head: defaultFill,\r\n    neck: defaultFill,\r\n    \r\n    // Torso - front\r\n    chest: defaultFill,\r\n    stomach: defaultFill,\r\n    leftShoulder: defaultFill,\r\n    rightShoulder: defaultFill,\r\n    \r\n    // Torso - back\r\n    upperBack: defaultFill,\r\n    lowerBack: defaultFill,\r\n    leftShoulderBlade: defaultFill,\r\n    rightShoulderBlade: defaultFill,\r\n    \r\n    // Hips\r\n    leftHip: defaultFill,\r\n    rightHip: defaultFill,\r\n    \r\n    // Arms\r\n    leftArm: defaultFill,\r\n    rightArm: defaultFill,\r\n    leftElbow: defaultFill,\r\n    rightElbow: defaultFill,\r\n    leftForearm: defaultFill,\r\n    rightForearm: defaultFill,\r\n    leftHand: defaultFill,\r\n    rightHand: defaultFill,\r\n    \r\n    // Legs\r\n    leftThigh: defaultFill,\r\n    rightThigh: defaultFill,\r\n    leftKnee: defaultFill,\r\n    rightKnee: defaultFill,\r\n    leftCalf: defaultFill,\r\n    rightCalf: defaultFill,\r\n    leftFoot: defaultFill,\r\n    rightFoot: defaultFill,\r\n  };\r\n\r\n  // Enhanced location mapping\r\n  const locationMapping = {\r\n    // Head and neck (visible from both sides)\r\n    head: 'head',\r\n    neck: 'neck',\r\n    \r\n    // Torso - front view only\r\n    chest: view === 'front' ? 'chest' : null,\r\n    stomach: view === 'front' ? 'stomach' : null,\r\n    abdomen: view === 'front' ? 'stomach' : null,\r\n    belly: view === 'front' ? 'stomach' : null,\r\n    leftShoulder: view === 'front' ? 'leftShoulder' : null,\r\n    rightShoulder: view === 'front' ? 'rightShoulder' : null,\r\n    shoulder: view === 'front' ? 'leftShoulder' : null,\r\n    shoulders: view === 'front' ? 'leftShoulder' : null,\r\n    \r\n    // Torso - back view only\r\n    back: view === 'back' ? 'upperBack' : null,\r\n    upperBack: view === 'back' ? 'upperBack' : null,\r\n    lowerBack: view === 'back' ? 'lowerBack' : null,\r\n    spine: view === 'back' ? 'upperBack' : null,\r\n    leftShoulderBlade: view === 'back' ? 'leftShoulderBlade' : null,\r\n    rightShoulderBlade: view === 'back' ? 'rightShoulderBlade' : null,\r\n    shoulderBlade: view === 'back' ? 'leftShoulderBlade' : null,\r\n    shoulderBlades: view === 'back' ? 'leftShoulderBlade' : null,\r\n    \r\n    // Hips (visible from both sides)\r\n    hip: 'leftHip',\r\n    hips: 'leftHip',\r\n    leftHip: 'leftHip',\r\n    rightHip: 'rightHip',\r\n    \r\n    // Arms (visible from both sides)\r\n    arm: 'leftArm',\r\n    arms: 'leftArm',\r\n    leftArm: 'leftArm',\r\n    rightArm: 'rightArm',\r\n    elbow: 'leftElbow',\r\n    elbows: 'leftElbow',\r\n    leftElbow: 'leftElbow',\r\n    rightElbow: 'rightElbow',\r\n    forearm: 'leftForearm',\r\n    forearms: 'leftForearm',\r\n    leftForearm: 'leftForearm',\r\n    rightForearm: 'rightForearm',\r\n    hand: 'leftHand',\r\n    hands: 'leftHand',\r\n    leftHand: 'leftHand',\r\n    rightHand: 'rightHand',\r\n    \r\n    // Legs (visible from both sides)\r\n    leg: 'leftThigh',\r\n    legs: 'leftThigh',\r\n    leftThigh: 'leftThigh',\r\n    rightThigh: 'rightThigh',\r\n    thigh: 'leftThigh',\r\n    thighs: 'leftThigh',\r\n    knee: 'leftKnee',\r\n    knees: 'leftKnee',\r\n    leftKnee: 'leftKnee',\r\n    rightKnee: 'rightKnee',\r\n    calf: 'leftCalf',\r\n    calves: 'leftCalf',\r\n    leftCalf: 'leftCalf',\r\n    rightCalf: 'rightCalf',\r\n    foot: 'leftFoot',\r\n    feet: 'leftFoot',\r\n    leftFoot: 'leftFoot',\r\n    rightFoot: 'rightFoot',\r\n    ankle: 'leftFoot',\r\n    ankles: 'leftFoot',\r\n  };\r\n\r\n  const targetPart = locationMapping[painLocation];\r\n  if (targetPart && targetPart !== null) {\r\n    bodyPartFills[targetPart] = painColor;\r\n    \r\n    // Handle symmetrical body parts - shade both sides for general terms\r\n    if (painLocation === 'elbow' || painLocation === 'elbows') {\r\n      bodyPartFills.leftElbow = painColor;\r\n      bodyPartFills.rightElbow = painColor;\r\n    } else if (painLocation === 'shoulder' || painLocation === 'shoulders') {\r\n      if (view === 'front') {\r\n        bodyPartFills.leftShoulder = painColor;\r\n        bodyPartFills.rightShoulder = painColor;\r\n      } else {\r\n        bodyPartFills.leftShoulderBlade = painColor;\r\n        bodyPartFills.rightShoulderBlade = painColor;\r\n      }\r\n    } else if (painLocation === 'arm' || painLocation === 'arms') {\r\n      bodyPartFills.leftArm = painColor;\r\n      bodyPartFills.rightArm = painColor;\r\n    } else if (painLocation === 'forearm' || painLocation === 'forearms') {\r\n      bodyPartFills.leftForearm = painColor;\r\n      bodyPartFills.rightForearm = painColor;\r\n    } else if (painLocation === 'hand' || painLocation === 'hands') {\r\n      bodyPartFills.leftHand = painColor;\r\n      bodyPartFills.rightHand = painColor;\r\n    } else if (painLocation === 'leg' || painLocation === 'legs') {\r\n      bodyPartFills.leftThigh = painColor;\r\n      bodyPartFills.rightThigh = painColor;\r\n    } else if (painLocation === 'thigh' || painLocation === 'thighs') {\r\n      bodyPartFills.leftThigh = painColor;\r\n      bodyPartFills.rightThigh = painColor;\r\n    } else if (painLocation === 'knee' || painLocation === 'knees') {\r\n      bodyPartFills.leftKnee = painColor;\r\n      bodyPartFills.rightKnee = painColor;\r\n    } else if (painLocation === 'calf' || painLocation === 'calves') {\r\n      bodyPartFills.leftCalf = painColor;\r\n      bodyPartFills.rightCalf = painColor;\r\n    } else if (painLocation === 'foot' || painLocation === 'feet') {\r\n      bodyPartFills.leftFoot = painColor;\r\n      bodyPartFills.rightFoot = painColor;\r\n    } else if (painLocation === 'ankle' || painLocation === 'ankles') {\r\n      bodyPartFills.leftFoot = painColor;\r\n      bodyPartFills.rightFoot = painColor;\r\n    } else if (painLocation === 'hip' || painLocation === 'hips') {\r\n      bodyPartFills.leftHip = painColor;\r\n      bodyPartFills.rightHip = painColor;\r\n    }\r\n  }\r\n\r\n  const renderFrontView = () => (\r\n    <g id=\"body-front\">\r\n      {/* Head */}\r\n      <ellipse \r\n        cx=\"75\" cy=\"15\" rx=\"12\" ry=\"15\" \r\n        fill={bodyPartFills.head} \r\n        stroke={strokeColor} \r\n        strokeWidth={strokeWidth} \r\n      />\r\n      \r\n      {/* Neck */}\r\n      <rect \r\n        x=\"68\" y=\"30\" width=\"14\" height=\"8\" \r\n        fill={bodyPartFills.neck} \r\n        stroke={strokeColor} \r\n        strokeWidth={strokeWidth} \r\n      />\r\n      \r\n      {/* Torso */}\r\n      <path \r\n        d=\"M60,38 Q75,35 90,38 L85,85 Q75,90 65,85 Z\" \r\n        fill={bodyPartFills.chest} \r\n        stroke={strokeColor} \r\n        strokeWidth={strokeWidth} \r\n      />\r\n      \r\n      {/* Stomach */}\r\n      <path \r\n        d=\"M65,85 Q75,88 85,85 L80,110 Q75,115 70,110 Z\" \r\n        fill={bodyPartFills.stomach} \r\n        stroke={strokeColor} \r\n        strokeWidth={strokeWidth} \r\n      />\r\n      \r\n      {/* Left Shoulder */}\r\n      <ellipse \r\n        cx=\"55\" cy=\"40\" rx=\"8\" ry=\"6\" \r\n        fill={bodyPartFills.leftShoulder} \r\n        stroke={strokeColor} \r\n        strokeWidth={strokeWidth} \r\n      />\r\n      \r\n      {/* Right Shoulder */}\r\n      <ellipse \r\n        cx=\"95\" cy=\"40\" rx=\"8\" ry=\"6\" \r\n        fill={bodyPartFills.rightShoulder} \r\n        stroke={strokeColor} \r\n        strokeWidth={strokeWidth} \r\n      />\r\n      \r\n      {/* Left Arm */}\r\n      <path \r\n        d=\"M47,40 Q45,50 43,65 L50,67 Q52,52 55,42 Z\" \r\n        fill={bodyPartFills.leftArm} \r\n        stroke={strokeColor} \r\n        strokeWidth={strokeWidth} \r\n      />\r\n      \r\n      {/* Right Arm */}\r\n      <path \r\n        d=\"M103,40 Q105,50 107,65 L100,67 Q98,52 95,42 Z\" \r\n        fill={bodyPartFills.rightArm} \r\n        stroke={strokeColor} \r\n        strokeWidth={strokeWidth} \r\n      />\r\n      \r\n      {/* Left Elbow */}\r\n      <ellipse \r\n        cx=\"46\" cy=\"70\" rx=\"4\" ry=\"6\" \r\n        fill={bodyPartFills.leftElbow} \r\n        stroke={strokeColor} \r\n        strokeWidth={strokeWidth} \r\n      />\r\n      \r\n      {/* Right Elbow */}\r\n      <ellipse \r\n        cx=\"104\" cy=\"70\" rx=\"4\" ry=\"6\" \r\n        fill={bodyPartFills.rightElbow} \r\n        stroke={strokeColor} \r\n        strokeWidth={strokeWidth} \r\n      />\r\n      \r\n      {/* Left Forearm */}\r\n      <path \r\n        d=\"M42,70 Q44,80 46,90 L50,88 Q48,78 50,72 Z\" \r\n        fill={bodyPartFills.leftForearm} \r\n        stroke={strokeColor} \r\n        strokeWidth={strokeWidth} \r\n      />\r\n      \r\n      {/* Right Forearm */}\r\n      <path \r\n        d=\"M108,70 Q106,80 104,90 L100,88 Q102,78 100,72 Z\" \r\n        fill={bodyPartFills.rightForearm} \r\n        stroke={strokeColor} \r\n        strokeWidth={strokeWidth} \r\n      />\r\n      \r\n      {/* Left Hand */}\r\n      <ellipse \r\n        cx=\"48\" cy=\"95\" rx=\"5\" ry=\"8\" \r\n        fill={bodyPartFills.leftHand} \r\n        stroke={strokeColor} \r\n        strokeWidth={strokeWidth} \r\n      />\r\n      \r\n      {/* Right Hand */}\r\n      <ellipse \r\n        cx=\"102\" cy=\"95\" rx=\"5\" ry=\"8\" \r\n        fill={bodyPartFills.rightHand} \r\n        stroke={strokeColor} \r\n        strokeWidth={strokeWidth} \r\n      />\r\n      \r\n      {/* Left Hip */}\r\n      <ellipse \r\n        cx=\"65\" cy=\"105\" rx=\"8\" ry=\"6\" \r\n        fill={bodyPartFills.leftHip} \r\n        stroke={strokeColor} \r\n        strokeWidth={strokeWidth} \r\n      />\r\n      \r\n      {/* Right Hip */}\r\n      <ellipse \r\n        cx=\"85\" cy=\"105\" rx=\"8\" ry=\"6\" \r\n        fill={bodyPartFills.rightHip} \r\n        stroke={strokeColor} \r\n        strokeWidth={strokeWidth} \r\n      />\r\n      \r\n      {/* Left Thigh */}\r\n      <path \r\n        d=\"M65,110 Q70,115 75,120 L73,140 Q70,135 67,130 Z\" \r\n        fill={bodyPartFills.leftThigh} \r\n        stroke={strokeColor} \r\n        strokeWidth={strokeWidth} \r\n      />\r\n      \r\n      {/* Right Thigh */}\r\n      <path \r\n        d=\"M85,110 Q80,115 75,120 L77,140 Q80,135 83,130 Z\" \r\n        fill={bodyPartFills.rightThigh} \r\n        stroke={strokeColor} \r\n        strokeWidth={strokeWidth} \r\n      />\r\n      \r\n      {/* Left Knee */}\r\n      <ellipse \r\n        cx=\"70\" cy=\"145\" rx=\"6\" ry=\"4\" \r\n        fill={bodyPartFills.leftKnee} \r\n        stroke={strokeColor} \r\n        strokeWidth={strokeWidth} \r\n      />\r\n      \r\n      {/* Right Knee */}\r\n      <ellipse \r\n        cx=\"80\" cy=\"145\" rx=\"6\" ry=\"4\" \r\n        fill={bodyPartFills.rightKnee} \r\n        stroke={strokeColor} \r\n        strokeWidth={strokeWidth} \r\n      />\r\n      \r\n      {/* Left Calf */}\r\n      <path \r\n        d=\"M67,149 Q70,155 73,165 L70,167 Q67,161 70,155 Z\" \r\n        fill={bodyPartFills.leftCalf} \r\n        stroke={strokeColor} \r\n        strokeWidth={strokeWidth} \r\n      />\r\n      \r\n      {/* Right Calf */}\r\n      <path \r\n        d=\"M83,149 Q80,155 77,165 L80,167 Q83,161 80,155 Z\" \r\n        fill={bodyPartFills.rightCalf} \r\n        stroke={strokeColor} \r\n        strokeWidth={strokeWidth} \r\n      />\r\n      \r\n      {/* Left Foot */}\r\n      <ellipse \r\n        cx=\"70\" cy=\"170\" rx=\"8\" ry=\"4\" \r\n        fill={bodyPartFills.leftFoot} \r\n        stroke={strokeColor} \r\n        strokeWidth={strokeWidth} \r\n      />\r\n      \r\n      {/* Right Foot */}\r\n      <ellipse \r\n        cx=\"80\" cy=\"170\" rx=\"8\" ry=\"4\" \r\n        fill={bodyPartFills.rightFoot} \r\n        stroke={strokeColor} \r\n        strokeWidth={strokeWidth} \r\n      />\r\n    </g>\r\n  );\r\n\r\n  const renderBackView = () => (\r\n    <g id=\"body-back\">\r\n      {/* Head */}\r\n      <ellipse \r\n        cx=\"75\" cy=\"15\" rx=\"12\" ry=\"15\" \r\n        fill={bodyPartFills.head} \r\n        stroke={strokeColor} \r\n        strokeWidth={strokeWidth} \r\n      />\r\n      \r\n      {/* Neck */}\r\n      <rect \r\n        x=\"68\" y=\"30\" width=\"14\" height=\"8\" \r\n        fill={bodyPartFills.neck} \r\n        stroke={strokeColor} \r\n        strokeWidth={strokeWidth} \r\n      />\r\n      \r\n      {/* Upper Back */}\r\n      <path \r\n        d=\"M60,38 Q75,35 90,38 L85,70 Q75,75 65,70 Z\" \r\n        fill={bodyPartFills.upperBack} \r\n        stroke={strokeColor} \r\n        strokeWidth={strokeWidth} \r\n      />\r\n      \r\n      {/* Lower Back */}\r\n      <path \r\n        d=\"M65,70 Q75,75 85,70 L80,110 Q75,115 70,110 Z\" \r\n        fill={bodyPartFills.lowerBack} \r\n        stroke={strokeColor} \r\n        strokeWidth={strokeWidth} \r\n      />\r\n      \r\n      {/* Left Shoulder Blade */}\r\n      <ellipse \r\n        cx=\"55\" cy=\"45\" rx=\"6\" ry=\"8\" \r\n        fill={bodyPartFills.leftShoulderBlade} \r\n        stroke={strokeColor} \r\n        strokeWidth={strokeWidth} \r\n      />\r\n      \r\n      {/* Right Shoulder Blade */}\r\n      <ellipse \r\n        cx=\"95\" cy=\"45\" rx=\"6\" ry=\"8\" \r\n        fill={bodyPartFills.rightShoulderBlade} \r\n        stroke={strokeColor} \r\n        strokeWidth={strokeWidth} \r\n      />\r\n      \r\n      {/* Left Arm */}\r\n      <path \r\n        d=\"M47,40 Q45,50 43,65 L50,67 Q52,52 55,42 Z\" \r\n        fill={bodyPartFills.leftArm} \r\n        stroke={strokeColor} \r\n        strokeWidth={strokeWidth} \r\n      />\r\n      \r\n      {/* Right Arm */}\r\n      <path \r\n        d=\"M103,40 Q105,50 107,65 L100,67 Q98,52 95,42 Z\" \r\n        fill={bodyPartFills.rightArm} \r\n        stroke={strokeColor} \r\n        strokeWidth={strokeWidth} \r\n      />\r\n      \r\n      {/* Left Elbow */}\r\n      <ellipse \r\n        cx=\"46\" cy=\"70\" rx=\"4\" ry=\"6\" \r\n        fill={bodyPartFills.leftElbow} \r\n        stroke={strokeColor} \r\n        strokeWidth={strokeWidth} \r\n      />\r\n      \r\n      {/* Right Elbow */}\r\n      <ellipse \r\n        cx=\"104\" cy=\"70\" rx=\"4\" ry=\"6\" \r\n        fill={bodyPartFills.rightElbow} \r\n        stroke={strokeColor} \r\n        strokeWidth={strokeWidth} \r\n      />\r\n      \r\n      {/* Left Forearm */}\r\n      <path \r\n        d=\"M42,70 Q44,80 46,90 L50,88 Q48,78 50,72 Z\" \r\n        fill={bodyPartFills.leftForearm} \r\n        stroke={strokeColor} \r\n        strokeWidth={strokeWidth} \r\n      />\r\n      \r\n      {/* Right Forearm */}\r\n      <path \r\n        d=\"M108,70 Q106,80 104,90 L100,88 Q102,78 100,72 Z\" \r\n        fill={bodyPartFills.rightForearm} \r\n        stroke={strokeColor} \r\n        strokeWidth={strokeWidth} \r\n      />\r\n      \r\n      {/* Left Hand */}\r\n      <ellipse \r\n        cx=\"48\" cy=\"95\" rx=\"5\" ry=\"8\" \r\n        fill={bodyPartFills.leftHand} \r\n        stroke={strokeColor} \r\n        strokeWidth={strokeWidth} \r\n      />\r\n      \r\n      {/* Right Hand */}\r\n      <ellipse \r\n        cx=\"102\" cy=\"95\" rx=\"5\" ry=\"8\" \r\n        fill={bodyPartFills.rightHand} \r\n        stroke={strokeColor} \r\n        strokeWidth={strokeWidth} \r\n      />\r\n      \r\n      {/* Left Hip */}\r\n      <ellipse \r\n        cx=\"65\" cy=\"105\" rx=\"8\" ry=\"6\" \r\n        fill={bodyPartFills.leftHip} \r\n        stroke={strokeColor} \r\n        strokeWidth={strokeWidth} \r\n      />\r\n      \r\n      {/* Right Hip */}\r\n      <ellipse \r\n        cx=\"85\" cy=\"105\" rx=\"8\" ry=\"6\" \r\n        fill={bodyPartFills.rightHip} \r\n        stroke={strokeColor} \r\n        strokeWidth={strokeWidth} \r\n      />\r\n      \r\n      {/* Left Thigh */}\r\n      <path \r\n        d=\"M65,110 Q70,115 75,120 L73,140 Q70,135 67,130 Z\" \r\n        fill={bodyPartFills.leftThigh} \r\n        stroke={strokeColor} \r\n        strokeWidth={strokeWidth} \r\n      />\r\n      \r\n      {/* Right Thigh */}\r\n      <path \r\n        d=\"M85,110 Q80,115 75,120 L77,140 Q80,135 83,130 Z\" \r\n        fill={bodyPartFills.rightThigh} \r\n        stroke={strokeColor} \r\n        strokeWidth={strokeWidth} \r\n      />\r\n      \r\n      {/* Left Knee */}\r\n      <ellipse \r\n        cx=\"70\" cy=\"145\" rx=\"6\" ry=\"4\" \r\n        fill={bodyPartFills.leftKnee} \r\n        stroke={strokeColor} \r\n        strokeWidth={strokeWidth} \r\n      />\r\n      \r\n      {/* Right Knee */}\r\n      <ellipse \r\n        cx=\"80\" cy=\"145\" rx=\"6\" ry=\"4\" \r\n        fill={bodyPartFills.rightKnee} \r\n        stroke={strokeColor} \r\n        strokeWidth={strokeWidth} \r\n      />\r\n      \r\n      {/* Left Calf */}\r\n      <path \r\n        d=\"M67,149 Q70,155 73,165 L70,167 Q67,161 70,155 Z\" \r\n        fill={bodyPartFills.leftCalf} \r\n        stroke={strokeColor} \r\n        strokeWidth={strokeWidth} \r\n      />\r\n      \r\n      {/* Right Calf */}\r\n      <path \r\n        d=\"M83,149 Q80,155 77,165 L80,167 Q83,161 80,155 Z\" \r\n        fill={bodyPartFills.rightCalf} \r\n        stroke={strokeColor} \r\n        strokeWidth={strokeWidth} \r\n      />\r\n      \r\n      {/* Left Foot */}\r\n      <ellipse \r\n        cx=\"70\" cy=\"170\" rx=\"8\" ry=\"4\" \r\n        fill={bodyPartFills.leftFoot} \r\n        stroke={strokeColor} \r\n        strokeWidth={strokeWidth} \r\n      />\r\n      \r\n      {/* Right Foot */}\r\n      <ellipse \r\n        cx=\"80\" cy=\"170\" rx=\"8\" ry=\"4\" \r\n        fill={bodyPartFills.rightFoot} \r\n        stroke={strokeColor} \r\n        strokeWidth={strokeWidth} \r\n      />\r\n    </g>\r\n  );\r\n\r\n  return (\r\n    <svg \r\n      xmlns=\"http://www.w3.org/2000/svg\" \r\n      viewBox=\"0 0 150 180\" \r\n      className={className}\r\n      preserveAspectRatio=\"xMidYMid meet\"\r\n      style={{\r\n        filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.1))', // Add subtle shadow for better visual depth\r\n        transition: 'all 0.2s ease' // Smooth transitions for scaling\r\n      }}\r\n    >\r\n      {view === 'front' ? renderFrontView() : renderBackView()}\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default BodySvg;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}