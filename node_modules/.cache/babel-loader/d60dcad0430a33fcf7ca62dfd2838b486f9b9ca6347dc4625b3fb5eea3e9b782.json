{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matteo\\\\Working_Folder\\\\a. MCC Thesis Local\\\\MCC_digital_health_data_visualizations\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n/*\n * App.js - Main Health Dashboard Application Component\n * \n * This is the root component that provides the main application structure.\n * It manages the role toggle between Patient and Physician views, patient selection,\n * and provides the main routing structure for the dashboard.\n * \n * Features:\n * - Role toggle between Patient and Physician views\n * - Patient selection from 100 synthetic patients\n * - Unified dashboard routing with lazy loading\n * - Error boundary and loading state management\n * - Header with application title and controls\n * \n * Component Structure:\n * - Header: Contains title, role toggle, and patient selector\n * - Main: Contains the dashboard with error boundary and loading states\n * - Dashboard: Renders either PatientDashboard or PhysicianDashboard based on role\n * \n * State Management:\n * - selectedPatient: Currently selected patient ID\n * - currentRole: Current view mode ('patient' or 'physician')\n */\n\nimport React, { useState, Suspense } from 'react';\nimport PatientSelector from './PatientSelector';\nimport LoadingSpinner from './components/ui/LoadingSpinner';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport Switch from './components/ui/Switch';\nimport { PATIENTS } from './constants/index';\nimport './App.css';\n\n// Lazy load the unified dashboard component for better performance\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = /*#__PURE__*/React.lazy(_c = () => import('./components/Dashboard'));\n\n/*\n * Main Health Dashboard Application\n * Features both Patient and Physician views with role toggle\n */\n_c2 = Dashboard;\nfunction App() {\n  _s();\n  const [selectedPatient, setSelectedPatient] = useState('Patient_001');\n  const [currentRole, setCurrentRole] = useState('patient'); // 'patient' or 'physician'\n\n  const toggleRole = () => {\n    setCurrentRole(prev => prev === 'patient' ? 'physician' : 'patient');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Health Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), \"// Role Toggle\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"role-toggle\",\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            checked: currentRole === 'physician',\n            onChange: toggleRole,\n            leftLabel: \"Patient View\",\n            rightLabel: \"Physician View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), \"// Patient Selector\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"patient-selector\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"patient-select\",\n            children: \"Select Patient:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PatientSelector, {\n            id: \"patient-select\",\n            patients: PATIENTS,\n            value: selectedPatient,\n            onChange: setSelectedPatient\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"app-main\",\n      children: /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n        children: /*#__PURE__*/_jsxDEV(Suspense, {\n          fallback: /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n            message: \"Loading dashboard...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 31\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(Dashboard, {\n            patientId: selectedPatient,\n            viewMode: currentRole\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Y9PE2siRTPg+x1hzVhPzlXHS5r0=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Dashboard$React.lazy\");\n$RefreshReg$(_c2, \"Dashboard\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","Suspense","PatientSelector","LoadingSpinner","ErrorBoundary","Switch","PATIENTS","jsxDEV","_jsxDEV","Dashboard","lazy","_c","_c2","App","_s","selectedPatient","setSelectedPatient","currentRole","setCurrentRole","toggleRole","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","checked","onChange","leftLabel","rightLabel","htmlFor","id","patients","value","fallback","message","patientId","viewMode","_c3","$RefreshReg$"],"sources":["C:/Users/Matteo/Working_Folder/a. MCC Thesis Local/MCC_digital_health_data_visualizations/src/App.js"],"sourcesContent":["/*\n * App.js - Main Health Dashboard Application Component\n * \n * This is the root component that provides the main application structure.\n * It manages the role toggle between Patient and Physician views, patient selection,\n * and provides the main routing structure for the dashboard.\n * \n * Features:\n * - Role toggle between Patient and Physician views\n * - Patient selection from 100 synthetic patients\n * - Unified dashboard routing with lazy loading\n * - Error boundary and loading state management\n * - Header with application title and controls\n * \n * Component Structure:\n * - Header: Contains title, role toggle, and patient selector\n * - Main: Contains the dashboard with error boundary and loading states\n * - Dashboard: Renders either PatientDashboard or PhysicianDashboard based on role\n * \n * State Management:\n * - selectedPatient: Currently selected patient ID\n * - currentRole: Current view mode ('patient' or 'physician')\n */\n\nimport React, { useState, Suspense } from 'react';\nimport PatientSelector from './PatientSelector';\nimport LoadingSpinner from './components/ui/LoadingSpinner';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport Switch from './components/ui/Switch';\nimport { PATIENTS } from './constants/index';\nimport './App.css';\n\n  // Lazy load the unified dashboard component for better performance\n  const Dashboard = React.lazy(() => import('./components/Dashboard'));\n\n  /*\n   * Main Health Dashboard Application\n   * Features both Patient and Physician views with role toggle\n   */\nfunction App() {\n  const [selectedPatient, setSelectedPatient] = useState('Patient_001');\n  const [currentRole, setCurrentRole] = useState('patient'); // 'patient' or 'physician'\n\n  const toggleRole = () => {\n    setCurrentRole(prev => prev === 'patient' ? 'physician' : 'patient');\n  };\n\n  return (\n    <div className=\"app\">\n      <header className=\"app-header\">\n        <div className=\"header-content\">\n          <h1>Health Dashboard</h1>\n          \n          // Role Toggle\n          <div className=\"role-toggle\">\n            <Switch\n              checked={currentRole === 'physician'}\n              onChange={toggleRole}\n              leftLabel=\"Patient View\"\n              rightLabel=\"Physician View\"\n            />\n          </div>\n\n          // Patient Selector\n          <div className=\"patient-selector\">\n            <label htmlFor=\"patient-select\">Select Patient:</label>\n            <PatientSelector\n              id=\"patient-select\"\n              patients={PATIENTS}\n              value={selectedPatient}\n              onChange={setSelectedPatient}\n            />\n          </div>\n        </div>\n      </header>\n\n      <main className=\"app-main\">\n        <ErrorBoundary>\n          <Suspense fallback={<LoadingSpinner message=\"Loading dashboard...\" />}>\n            <Dashboard \n              patientId={selectedPatient} \n              viewMode={currentRole}\n            />\n          </Suspense>\n        </ErrorBoundary>\n      </main>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}