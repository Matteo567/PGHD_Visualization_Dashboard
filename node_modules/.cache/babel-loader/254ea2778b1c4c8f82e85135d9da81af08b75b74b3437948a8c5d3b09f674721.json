{"ast":null,"code":"/*\r\n - VisualizationWrapper.js - Universal Chart Container Component\r\n \r\n - This component provides a standardized wrapper for all chart visualizations by handling loading,\r\n  error, and no-data states, providing chart navigation controls (previous/next), managing \r\n  expand/collapse functionality, displaying chart titles and controls, and ensuring consistent \r\n  chart presentation across the application.\r\n \r\n - Serves as the foundation for all health metric chart displays.\r\n */import React from'react';import Placeholder from'./ui/Placeholder';/*\r\n - Shared component for visualization containers used in both Patient and Physician dashboards\r\n - Includes functionality previously in ChartContainer: navigation, loading states, error handling\r\n \r\n - @param {Object} props - Component props\r\n - @param {string} props.id - Unique identifier for the visualization\r\n - @param {string} props.className - CSS class names\r\n - @param {string} props.selectedViz - Selected visualization type\r\n - @param {Object} props.availableVisualizations - Available visualizations\r\n - @param {Object} props.allVisualizations - All visualization configurations\r\n - @param {Function} props.onVisualizationChange - Handler for visualization changes\r\n - @param {Function} props.onExpand - Handler for expand/collapse\r\n - @param {boolean} props.isExpanded - Whether the visualization is expanded\r\n - @param {Function} props.renderVisualization - Function to render the visualization\r\n - @param {boolean} props.disabled - Whether the visualization is disabled\r\n - @param {string} props.placeholderText - Text to show when no data is available\r\n - @param {string} props.title - Chart title\r\n - @param {boolean} props.isLoading - Whether the chart is loading\r\n - @param {string|null} props.error - Error message if any\r\n - @param {boolean} props.noData - Whether there's no data to display\r\n - @param {boolean} props.showNavigation - Whether to show navigation controls\r\n - @param {Function} props.onPrev - Previous navigation handler\r\n - @param {Function} props.onNext - Next navigation handler\r\n - @param {string} props.navigationLabel - Label for navigation controls\r\n - @returns {JSX.Element} The visualization wrapper component\r\n */import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const VisualizationWrapper=_ref=>{let{id,className,selectedViz,availableVisualizations,allVisualizations,onVisualizationChange,onExpand,isExpanded,renderVisualization,disabled=false,placeholderText=\"No data available for this patient.\",// ChartContainer props\ntitle,isLoading=false,error=null,noData=false,showNavigation=true,onPrev,onNext,navigationLabel='Week'}=_ref;const viz=allVisualizations[selectedViz];// Handle loading state\nif(isLoading){return/*#__PURE__*/_jsx(\"div\",{className:\"visualization-wrapper \".concat(isExpanded?'expanded':'',\" \").concat(className),children:/*#__PURE__*/_jsx(Placeholder,{message:\"Loading data...\",type:\"loading\"})});}// Handle error state\nif(error){return/*#__PURE__*/_jsx(\"div\",{className:\"visualization-wrapper \".concat(isExpanded?'expanded':'',\" \").concat(className),children:/*#__PURE__*/_jsx(Placeholder,{message:\"Error: \".concat(error),type:\"error\"})});}// Handle no data state\nif(noData){return/*#__PURE__*/_jsx(\"div\",{className:\"visualization-wrapper \".concat(isExpanded?'expanded':'',\" \").concat(className),children:/*#__PURE__*/_jsx(Placeholder,{message:\"No data available\",type:\"no-data\"})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"visualization-wrapper \".concat(isExpanded?'expanded':'',\" \").concat(className),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"visualization-header\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"visualization-title-group\",children:/*#__PURE__*/_jsx(\"h3\",{className:\"visualization-title\",children:title||(viz===null||viz===void 0?void 0:viz.name)||'Unknown Visualization'})}),/*#__PURE__*/_jsxs(\"div\",{className:\"visualization-controls\",children:[showNavigation&&onPrev&&onNext&&/*#__PURE__*/_jsxs(\"div\",{className:\"chart-navigation\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"nav-button prev\",onClick:onPrev,\"aria-label\":\"Previous \".concat(navigationLabel),children:\"\\u2039\"}),/*#__PURE__*/_jsx(\"button\",{className:\"nav-button next\",onClick:onNext,\"aria-label\":\"Next \".concat(navigationLabel),children:\"\\u203A\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>onExpand(id),className:\"expand-button\",children:isExpanded?'Collapse':'Expand'})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"visualization-content\",children:Object.keys(availableVisualizations).length===0?/*#__PURE__*/_jsx(Placeholder,{message:placeholderText,type:\"no-data\"}):renderVisualization(selectedViz,id)})]});};export default VisualizationWrapper;","map":{"version":3,"names":["React","Placeholder","jsx","_jsx","jsxs","_jsxs","VisualizationWrapper","_ref","id","className","selectedViz","availableVisualizations","allVisualizations","onVisualizationChange","onExpand","isExpanded","renderVisualization","disabled","placeholderText","title","isLoading","error","noData","showNavigation","onPrev","onNext","navigationLabel","viz","concat","children","message","type","name","onClick","Object","keys","length"],"sources":["C:/Users/Matteo/Working_Folder/a. MCC Thesis Local/Health_data_dashboard-MCC_project_checkpoint/src/components/VisualizationWrapper.js"],"sourcesContent":["/*\r\n - VisualizationWrapper.js - Universal Chart Container Component\r\n \r\n - This component provides a standardized wrapper for all chart visualizations by handling loading,\r\n  error, and no-data states, providing chart navigation controls (previous/next), managing \r\n  expand/collapse functionality, displaying chart titles and controls, and ensuring consistent \r\n  chart presentation across the application.\r\n \r\n - Serves as the foundation for all health metric chart displays.\r\n */\r\n\r\nimport React from 'react';\r\nimport Placeholder from './ui/Placeholder';\r\n\r\n/*\r\n - Shared component for visualization containers used in both Patient and Physician dashboards\r\n - Includes functionality previously in ChartContainer: navigation, loading states, error handling\r\n \r\n - @param {Object} props - Component props\r\n - @param {string} props.id - Unique identifier for the visualization\r\n - @param {string} props.className - CSS class names\r\n - @param {string} props.selectedViz - Selected visualization type\r\n - @param {Object} props.availableVisualizations - Available visualizations\r\n - @param {Object} props.allVisualizations - All visualization configurations\r\n - @param {Function} props.onVisualizationChange - Handler for visualization changes\r\n - @param {Function} props.onExpand - Handler for expand/collapse\r\n - @param {boolean} props.isExpanded - Whether the visualization is expanded\r\n - @param {Function} props.renderVisualization - Function to render the visualization\r\n - @param {boolean} props.disabled - Whether the visualization is disabled\r\n - @param {string} props.placeholderText - Text to show when no data is available\r\n - @param {string} props.title - Chart title\r\n - @param {boolean} props.isLoading - Whether the chart is loading\r\n - @param {string|null} props.error - Error message if any\r\n - @param {boolean} props.noData - Whether there's no data to display\r\n - @param {boolean} props.showNavigation - Whether to show navigation controls\r\n - @param {Function} props.onPrev - Previous navigation handler\r\n - @param {Function} props.onNext - Next navigation handler\r\n - @param {string} props.navigationLabel - Label for navigation controls\r\n - @returns {JSX.Element} The visualization wrapper component\r\n */\r\nconst VisualizationWrapper = ({ \r\n  id, \r\n  className, \r\n  selectedViz, \r\n  availableVisualizations, \r\n  allVisualizations,\r\n  onVisualizationChange, \r\n  onExpand, \r\n  isExpanded, \r\n  renderVisualization,\r\n  disabled = false,\r\n  placeholderText = \"No data available for this patient.\",\r\n  // ChartContainer props\r\n  title,\r\n  isLoading = false,\r\n  error = null,\r\n  noData = false,\r\n  showNavigation = true,\r\n  onPrev,\r\n  onNext,\r\n  navigationLabel = 'Week'\r\n}) => {\r\n  const viz = allVisualizations[selectedViz];\r\n  \r\n  // Handle loading state\r\n  if (isLoading) {\r\n    return (\r\n      <div className={`visualization-wrapper ${isExpanded ? 'expanded' : ''} ${className}`}>\r\n        <Placeholder message=\"Loading data...\" type=\"loading\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Handle error state\r\n  if (error) {\r\n    return (\r\n      <div className={`visualization-wrapper ${isExpanded ? 'expanded' : ''} ${className}`}>\r\n        <Placeholder message={`Error: ${error}`} type=\"error\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Handle no data state\r\n  if (noData) {\r\n    return (\r\n      <div className={`visualization-wrapper ${isExpanded ? 'expanded' : ''} ${className}`}>\r\n        <Placeholder message=\"No data available\" type=\"no-data\" />\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <div className={`visualization-wrapper ${isExpanded ? 'expanded' : ''} ${className}`}>\r\n      <div className=\"visualization-header\">\r\n        <div className=\"visualization-title-group\">\r\n          <h3 className=\"visualization-title\">\r\n            {title || viz?.name || 'Unknown Visualization'}\r\n          </h3>\r\n        </div>\r\n        <div className=\"visualization-controls\">\r\n          {showNavigation && onPrev && onNext && (\r\n            <div className=\"chart-navigation\">\r\n              <button \r\n                className=\"nav-button prev\" \r\n                onClick={onPrev}\r\n                aria-label={`Previous ${navigationLabel}`}\r\n              >\r\n                â€¹\r\n              </button>\r\n              <button \r\n                className=\"nav-button next\" \r\n                onClick={onNext}\r\n                aria-label={`Next ${navigationLabel}`}\r\n              >\r\n                â€º\r\n              </button>\r\n            </div>\r\n          )}\r\n          <button onClick={() => onExpand(id)} className=\"expand-button\">\r\n            {isExpanded ? 'Collapse' : 'Expand'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"visualization-content\">\r\n        {Object.keys(availableVisualizations).length === 0 ? (\r\n          <Placeholder message={placeholderText} type=\"no-data\" />\r\n        ) : (\r\n          renderVisualization(selectedViz, id)\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VisualizationWrapper;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}