{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matteo\\\\Working_Folder\\\\a. MCC Thesis Local Experimental\\\\PGHD_Visualization_Dashboard\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n/*\n App.js - Main Health Dashboard Application Component\n \n This is the root component that provides the main application structure.\n It manages patient selection and provides the main routing structure for the dashboard.\n \n Features:\n - Patient selection from 100 synthetic patients\n - Unified dashboard routing with screenshot mode\n - Error boundary and loading state management\n - Header with application title and controls\n \n Component Structure:\n - Header: Contains title and patient selector\n - Main: Contains the dashboard with error boundary and loading states\n - Dashboard: Renders HealthDashboard with screenshot mode support\n \n State Management:\n - selectedPatient: Currently selected patient ID\n - screenshotMode: Controls visibility of UI elements for screenshots\n */\n\nimport React, { useState } from 'react';\nimport PatientSelector from './PatientSelector';\nimport AccessTypeSelector from './AccessTypeSelector';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport HealthDashboard from './HealthDashboard';\nimport { PATIENTS } from './constants/index';\nimport './App.css';\n\n/*\n Main Health Dashboard Application\n Features unified health dashboard for patients and healthcare providers\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedPatient, setSelectedPatient] = useState('Patient_001');\n  const [accessType, setAccessType] = useState('Admin');\n  const [screenshotMode] = useState(false); // Screenshot mode (disabled)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      style: {\n        display: screenshotMode ? 'none' : 'block'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Health Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"access-type-selector\",\n          children: /*#__PURE__*/_jsxDEV(AccessTypeSelector, {\n            value: accessType,\n            onChange: setAccessType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"patient-selector\",\n          children: /*#__PURE__*/_jsxDEV(PatientSelector, {\n            patients: PATIENTS,\n            value: selectedPatient,\n            onChange: setSelectedPatient\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"app-main\",\n      children: /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n        children: /*#__PURE__*/_jsxDEV(HealthDashboard, {\n          patientId: selectedPatient,\n          accessType: accessType,\n          screenshotMode: screenshotMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"eXDfnhHm5whWyRJ1dvAqcnBj3x8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","PatientSelector","AccessTypeSelector","ErrorBoundary","HealthDashboard","PATIENTS","jsxDEV","_jsxDEV","App","_s","selectedPatient","setSelectedPatient","accessType","setAccessType","screenshotMode","className","children","style","display","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","patients","patientId","_c","$RefreshReg$"],"sources":["C:/Users/Matteo/Working_Folder/a. MCC Thesis Local Experimental/PGHD_Visualization_Dashboard/src/App.js"],"sourcesContent":["/*\n App.js - Main Health Dashboard Application Component\n \n This is the root component that provides the main application structure.\n It manages patient selection and provides the main routing structure for the dashboard.\n \n Features:\n - Patient selection from 100 synthetic patients\n - Unified dashboard routing with screenshot mode\n - Error boundary and loading state management\n - Header with application title and controls\n \n Component Structure:\n - Header: Contains title and patient selector\n - Main: Contains the dashboard with error boundary and loading states\n - Dashboard: Renders HealthDashboard with screenshot mode support\n \n State Management:\n - selectedPatient: Currently selected patient ID\n - screenshotMode: Controls visibility of UI elements for screenshots\n */\n\nimport React, { useState } from 'react';\nimport PatientSelector from './PatientSelector';\nimport AccessTypeSelector from './AccessTypeSelector';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport HealthDashboard from './HealthDashboard';\nimport { PATIENTS } from './constants/index';\nimport './App.css';\n\n  /*\n   Main Health Dashboard Application\n   Features unified health dashboard for patients and healthcare providers\n   */\nfunction App() {\n  const [selectedPatient, setSelectedPatient] = useState('Patient_001');\n  const [accessType, setAccessType] = useState('Admin');\n  const [screenshotMode] = useState(false); // Screenshot mode (disabled)\n\n  return (\n    <div className=\"app\">\n      <header className=\"app-header\" style={{ display: screenshotMode ? 'none' : 'block' }}>\n        <div className=\"header-content\">\n          <h1>Health Dashboard</h1>\n          \n          {/* Access Type Selector */}\n          <div className=\"access-type-selector\">\n            <AccessTypeSelector\n              value={accessType}\n              onChange={setAccessType}\n            />\n          </div>\n\n          {/* Patient Selector */}\n          <div className=\"patient-selector\">\n            <PatientSelector\n              patients={PATIENTS}\n              value={selectedPatient}\n              onChange={setSelectedPatient}\n            />\n          </div>\n\n        </div>\n      </header>\n\n      <main className=\"app-main\">\n        <ErrorBoundary>\n          <HealthDashboard \n            patientId={selectedPatient}\n            accessType={accessType}\n            screenshotMode={screenshotMode}\n          />\n        </ErrorBoundary>\n      </main>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,kBAAkB,MAAM,sBAAsB;AACrD,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,SAASC,QAAQ,QAAQ,mBAAmB;AAC5C,OAAO,WAAW;;AAEhB;AACF;AACA;AACA;AAHE,SAAAC,MAAA,IAAAC,OAAA;AAIF,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,aAAa,CAAC;EACrE,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,OAAO,CAAC;EACrD,MAAM,CAACc,cAAc,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAE1C,oBACEO,OAAA;IAAKQ,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBT,OAAA;MAAQQ,SAAS,EAAC,YAAY;MAACE,KAAK,EAAE;QAAEC,OAAO,EAAEJ,cAAc,GAAG,MAAM,GAAG;MAAQ,CAAE;MAAAE,QAAA,eACnFT,OAAA;QAAKQ,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7BT,OAAA;UAAAS,QAAA,EAAI;QAAgB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAGzBf,OAAA;UAAKQ,SAAS,EAAC,sBAAsB;UAAAC,QAAA,eACnCT,OAAA,CAACL,kBAAkB;YACjBqB,KAAK,EAAEX,UAAW;YAClBY,QAAQ,EAAEX;UAAc;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAGNf,OAAA;UAAKQ,SAAS,EAAC,kBAAkB;UAAAC,QAAA,eAC/BT,OAAA,CAACN,eAAe;YACdwB,QAAQ,EAAEpB,QAAS;YACnBkB,KAAK,EAAEb,eAAgB;YACvBc,QAAQ,EAAEb;UAAmB;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eAETf,OAAA;MAAMQ,SAAS,EAAC,UAAU;MAAAC,QAAA,eACxBT,OAAA,CAACJ,aAAa;QAAAa,QAAA,eACZT,OAAA,CAACH,eAAe;UACdsB,SAAS,EAAEhB,eAAgB;UAC3BE,UAAU,EAAEA,UAAW;UACvBE,cAAc,EAAEA;QAAe;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACW;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACb,EAAA,CA1CQD,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AA4CZ,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}