{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matteo\\\\Working_Folder\\\\a. MCC Thesis Local\\\\MCC_digital_health_data_visualizations\\\\src\\\\components\\\\patient_charts\\\\SleepChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo } from 'react';\nimport ChartContainer from '../ChartContainer';\nimport usePatientData from '../../hooks/usePatientData';\nimport Legend from '../Legend';\nimport './SleepChart.css';\nimport '../ChartStyles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SleepChart = ({\n  patientId,\n  isExpanded,\n  onExpand,\n  isPhysicianView = false\n}) => {\n  _s();\n  const {\n    sleepData,\n    loading,\n    error\n  } = usePatientData(patientId, 'sleep');\n  const [weekOffset, setWeekOffset] = useState(0);\n  const handlePrevWeek = () => setWeekOffset(prev => prev + 1);\n  const handleNextWeek = () => setWeekOffset(prev => Math.max(0, prev - 1));\n  const getWeekData = () => {\n    if (!sleepData || sleepData.length === 0) return [];\n    const end = sleepData.length - weekOffset * 7;\n    const start = Math.max(0, end - 7);\n    return sleepData.slice(start, end);\n  };\n  const weekData = getWeekData();\n  const formatDateRange = data => {\n    if (!data || data.length === 0) return '';\n    const startDate = new Date(data[0].date).toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric'\n    });\n    const endDate = new Date(data[data.length - 1].date).toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric'\n    });\n    return `${startDate} to ${endDate}`;\n  };\n  const qualityLevels = {\n    'Very good': '#ADD8E6',\n    'Fairly good': '#90EE90',\n    'Fairly bad': '#FFD700',\n    'Very bad': '#FFA07A'\n  };\n  const getQualityColor = quality => qualityLevels[quality] || '#D3D3D3';\n  const legendItems = Object.entries(qualityLevels).map(([label, color]) => ({\n    label,\n    color\n  }));\n\n  // Calculate summary statistics for physician view\n  const weekSummary = useMemo(() => {\n    if (!weekData || weekData.length === 0) return null;\n    const totalHours = weekData.reduce((sum, day) => sum + day.hours, 0);\n    const avgHours = (totalHours / weekData.length).toFixed(1);\n\n    // Count quality levels\n    const qualityCounts = {};\n    Object.keys(qualityLevels).forEach(quality => {\n      qualityCounts[quality] = 0;\n    });\n    weekData.forEach(day => {\n      if (qualityCounts[day.quality] !== undefined) {\n        qualityCounts[day.quality]++;\n      }\n    });\n\n    // Find most common quality\n    const mostCommonQuality = Object.entries(qualityCounts).sort(([, a], [, b]) => b - a)[0];\n\n    // Calculate sleep consistency (how much variation in sleep hours)\n    const hourVariations = weekData.map(day => Math.abs(day.hours - parseFloat(avgHours)));\n    const avgVariation = (hourVariations.reduce((sum, v) => sum + v, 0) / hourVariations.length).toFixed(1);\n\n    // Sleep quality score (Very good=4, Fairly good=3, Fairly bad=2, Very bad=1)\n    const qualityScores = {\n      'Very good': 4,\n      'Fairly good': 3,\n      'Fairly bad': 2,\n      'Very bad': 1\n    };\n    const avgQualityScore = weekData.reduce((sum, day) => sum + (qualityScores[day.quality] || 0), 0) / weekData.length;\n    const qualityAssessment = avgQualityScore >= 3.5 ? 'Good' : avgQualityScore >= 2.5 ? 'Fair' : 'Poor';\n\n    // Count nights with adequate sleep (7+ hours)\n    const adequateSleepNights = weekData.filter(day => day.hours >= 7).length;\n    return {\n      totalHours: totalHours.toFixed(1),\n      avgHours,\n      mostCommonQuality: mostCommonQuality[0],\n      mostCommonQualityCount: mostCommonQuality[1],\n      avgVariation,\n      qualityAssessment,\n      adequateSleepNights,\n      daysTracked: weekData.length\n    };\n  }, [weekData]);\n  return /*#__PURE__*/_jsxDEV(ChartContainer, {\n    title: \"Weekly Sleep Pattern\",\n    icon: \"\\uD83D\\uDE34\",\n    isLoading: loading,\n    error: error,\n    noData: !weekData || weekData.length === 0,\n    onPrev: handlePrevWeek,\n    onNext: handleNextWeek,\n    navigationLabel: formatDateRange(weekData),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sleep-chart-content\",\n      children: [/*#__PURE__*/_jsxDEV(Legend, {\n        title: \"Sleep Quality\",\n        items: legendItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sleep-chart\",\n        children: weekData.map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sleep-day\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sleep-quality-indicator-wrapper\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sleep-quality-indicator\",\n              style: {\n                backgroundColor: getQualityColor(day.quality)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bed-icon-wrapper\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              viewBox: \"0 0 486.5 225.1\",\n              className: \"bed-icon\",\n              children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M471.9,68.9c-8,0-14.5,6.5-14.5,14.5v68.6H26.1l-.6-139.3c0-7-5.8-12.7-12.8-12.7h0C5.7,0,0,5.7,0,12.8v199.6c0,7,5.7,12.8,12.7,12.8s12.8-5.7,12.8-12.8v-37h431.9v35.2c0,8,6.5,14.5,14.5,14.5s14.5-6.5,14.5-14.5v-127.1c0-8-6.5-14.5-14.5-14.5ZM483.7,210.6c0,6.5-5.3,11.8-11.8,11.8s-11.8-5.3-11.8-11.8v-38H22.7v39.7c0,5.5-4.5,10-10,10s-10-4.5-10-10V12.8C2.8,7.3,7.3,2.8,12.7,2.8h0c5.5,0,9.9,4.5,10,9.9l.6,142.1h436.8v-71.4c0-6.5,5.3-11.7,11.8-11.7s11.8,5.3,11.8,11.7v127.1Z\",\n                fill: \"#D2B48C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M29.9,94.2v54.5h425.4v-54.5H29.9ZM452.5,145.9H32.7v-48.9h419.8v48.9Z\",\n                fill: \"#e0e0e0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n                x: \"32.7\",\n                y: \"97\",\n                width: `${day.hours / 10 * 419.8}`,\n                height: \"48.9\",\n                fill: \"#8a9db7\",\n                className: \"sleep-fill-rect\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M112.8,46.3h-55.4c-12.1,0-22,9.9-22,22s9.9,22,22,22h55.4c12.1,0,22-9.9,22-22s-9.9-22-22-22ZM112.8,87.5h-55.4c-10.6,0-19.2-8.6-19.2-19.2s8.6-19.2,19.2-19.2h55.4c10.6,0,19.2,8.6,19.2,19.2s-8.6,19.2-19.2,19.2Z\",\n                fill: \"#FFFFFF\",\n                stroke: \"#AAAAAA\",\n                strokeWidth: \"1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sleep-hours\",\n            children: [day.hours.toFixed(1), \"h\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"day-label\",\n            children: new Date(day.date).toLocaleDateString('en-US', {\n              weekday: 'short'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(SleepChart, \"9Myfig1CW+OYgcvC5KGmt0hFuHA=\", false, function () {\n  return [usePatientData];\n});\n_c = SleepChart;\nexport default SleepChart;\nvar _c;\n$RefreshReg$(_c, \"SleepChart\");","map":{"version":3,"names":["React","useState","useMemo","ChartContainer","usePatientData","Legend","jsxDEV","_jsxDEV","SleepChart","patientId","isExpanded","onExpand","isPhysicianView","_s","sleepData","loading","error","weekOffset","setWeekOffset","handlePrevWeek","prev","handleNextWeek","Math","max","getWeekData","length","end","start","slice","weekData","formatDateRange","data","startDate","Date","date","toLocaleDateString","month","day","endDate","qualityLevels","getQualityColor","quality","legendItems","Object","entries","map","label","color","weekSummary","totalHours","reduce","sum","hours","avgHours","toFixed","qualityCounts","keys","forEach","undefined","mostCommonQuality","sort","a","b","hourVariations","abs","parseFloat","avgVariation","v","qualityScores","avgQualityScore","qualityAssessment","adequateSleepNights","filter","mostCommonQualityCount","daysTracked","title","icon","isLoading","noData","onPrev","onNext","navigationLabel","children","className","items","fileName","_jsxFileName","lineNumber","columnNumber","index","style","backgroundColor","viewBox","d","fill","x","y","width","height","stroke","strokeWidth","weekday","_c","$RefreshReg$"],"sources":["C:/Users/Matteo/Working_Folder/a. MCC Thesis Local/MCC_digital_health_data_visualizations/src/components/patient_charts/SleepChart.js"],"sourcesContent":["import React, { useState, useMemo } from 'react';\nimport ChartContainer from '../ChartContainer';\nimport usePatientData from '../../hooks/usePatientData';\nimport Legend from '../Legend';\nimport './SleepChart.css';\nimport '../ChartStyles.css';\n\nconst SleepChart = ({ patientId, isExpanded, onExpand, isPhysicianView = false }) => {\n  const { sleepData, loading, error } = usePatientData(patientId, 'sleep');\n  const [weekOffset, setWeekOffset] = useState(0);\n\n  const handlePrevWeek = () => setWeekOffset(prev => prev + 1);\n  const handleNextWeek = () => setWeekOffset(prev => Math.max(0, prev - 1));\n\n  const getWeekData = () => {\n    if (!sleepData || sleepData.length === 0) return [];\n    const end = sleepData.length - (weekOffset * 7);\n    const start = Math.max(0, end - 7);\n    return sleepData.slice(start, end);\n  };\n\n  const weekData = getWeekData();\n\n  const formatDateRange = (data) => {\n    if (!data || data.length === 0) return '';\n    const startDate = new Date(data[0].date).toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\n    const endDate = new Date(data[data.length - 1].date).toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\n    return `${startDate} to ${endDate}`;\n  };\n\n  const qualityLevels = {\n    'Very good': '#ADD8E6',\n    'Fairly good': '#90EE90',\n    'Fairly bad': '#FFD700',\n    'Very bad': '#FFA07A',\n  };\n\n  const getQualityColor = (quality) => qualityLevels[quality] || '#D3D3D3';\n\n  const legendItems = Object.entries(qualityLevels).map(([label, color]) => ({\n    label,\n    color,\n  }));\n\n  // Calculate summary statistics for physician view\n  const weekSummary = useMemo(() => {\n    if (!weekData || weekData.length === 0) return null;\n\n    const totalHours = weekData.reduce((sum, day) => sum + day.hours, 0);\n    const avgHours = (totalHours / weekData.length).toFixed(1);\n\n    // Count quality levels\n    const qualityCounts = {};\n    Object.keys(qualityLevels).forEach(quality => {\n      qualityCounts[quality] = 0;\n    });\n\n    weekData.forEach(day => {\n      if (qualityCounts[day.quality] !== undefined) {\n        qualityCounts[day.quality]++;\n      }\n    });\n\n    // Find most common quality\n    const mostCommonQuality = Object.entries(qualityCounts)\n      .sort(([,a], [,b]) => b - a)[0];\n\n    // Calculate sleep consistency (how much variation in sleep hours)\n    const hourVariations = weekData.map(day => Math.abs(day.hours - parseFloat(avgHours)));\n    const avgVariation = (hourVariations.reduce((sum, v) => sum + v, 0) / hourVariations.length).toFixed(1);\n\n    // Sleep quality score (Very good=4, Fairly good=3, Fairly bad=2, Very bad=1)\n    const qualityScores = {\n      'Very good': 4,\n      'Fairly good': 3,\n      'Fairly bad': 2,\n      'Very bad': 1\n    };\n    const avgQualityScore = weekData.reduce((sum, day) => sum + (qualityScores[day.quality] || 0), 0) / weekData.length;\n    const qualityAssessment = avgQualityScore >= 3.5 ? 'Good' : avgQualityScore >= 2.5 ? 'Fair' : 'Poor';\n\n    // Count nights with adequate sleep (7+ hours)\n    const adequateSleepNights = weekData.filter(day => day.hours >= 7).length;\n\n    return {\n      totalHours: totalHours.toFixed(1),\n      avgHours,\n      mostCommonQuality: mostCommonQuality[0],\n      mostCommonQualityCount: mostCommonQuality[1],\n      avgVariation,\n      qualityAssessment,\n      adequateSleepNights,\n      daysTracked: weekData.length\n    };\n  }, [weekData]);\n\n  return (\n    <ChartContainer\n      title=\"Weekly Sleep Pattern\"\n      icon=\"😴\"\n      isLoading={loading}\n      error={error}\n      noData={!weekData || weekData.length === 0}\n      onPrev={handlePrevWeek}\n      onNext={handleNextWeek}\n      navigationLabel={formatDateRange(weekData)}\n    >\n      <div className=\"sleep-chart-content\">\n        <Legend title=\"Sleep Quality\" items={legendItems} />\n        <div className=\"sleep-chart\">\n          {weekData.map((day, index) => (\n          <div key={index} className=\"sleep-day\">\n            <div className=\"sleep-quality-indicator-wrapper\">\n                <div \n                    className=\"sleep-quality-indicator\"\n                    style={{ backgroundColor: getQualityColor(day.quality) }}\n                ></div>\n            </div>\n            <div className=\"bed-icon-wrapper\">\n              <svg viewBox=\"0 0 486.5 225.1\" className=\"bed-icon\">\n                <path d=\"M471.9,68.9c-8,0-14.5,6.5-14.5,14.5v68.6H26.1l-.6-139.3c0-7-5.8-12.7-12.8-12.7h0C5.7,0,0,5.7,0,12.8v199.6c0,7,5.7,12.8,12.7,12.8s12.8-5.7,12.8-12.8v-37h431.9v35.2c0,8,6.5,14.5,14.5,14.5s14.5-6.5,14.5-14.5v-127.1c0-8-6.5-14.5-14.5-14.5ZM483.7,210.6c0,6.5-5.3,11.8-11.8,11.8s-11.8-5.3-11.8-11.8v-38H22.7v39.7c0,5.5-4.5,10-10,10s-10-4.5-10-10V12.8C2.8,7.3,7.3,2.8,12.7,2.8h0c5.5,0,9.9,4.5,10,9.9l.6,142.1h436.8v-71.4c0-6.5,5.3-11.7,11.8-11.7s11.8,5.3,11.8,11.7v127.1Z\" fill=\"#D2B48C\"/>\n                <path d=\"M29.9,94.2v54.5h425.4v-54.5H29.9ZM452.5,145.9H32.7v-48.9h419.8v48.9Z\" fill=\"#e0e0e0\"/>\n                <rect x=\"32.7\" y=\"97\" width={`${(day.hours / 10) * 419.8}`} height=\"48.9\" fill=\"#8a9db7\" className=\"sleep-fill-rect\" />\n                <path d=\"M112.8,46.3h-55.4c-12.1,0-22,9.9-22,22s9.9,22,22,22h55.4c12.1,0,22-9.9,22-22s-9.9-22-22-22ZM112.8,87.5h-55.4c-10.6,0-19.2-8.6-19.2-19.2s8.6-19.2,19.2-19.2h55.4c10.6,0,19.2,8.6,19.2,19.2s-8.6,19.2-19.2,19.2Z\" fill=\"#FFFFFF\" stroke=\"#AAAAAA\" strokeWidth=\"1\"/>\n              </svg>\n            </div>\n            <div className=\"sleep-hours\">{day.hours.toFixed(1)}h</div>\n            <div className=\"day-label\">{new Date(day.date).toLocaleDateString('en-US', { weekday: 'short' })}</div>\n          </div>\n        ))}\n        </div>\n      </div>\n    </ChartContainer>\n  );\n};\n\nexport default SleepChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}