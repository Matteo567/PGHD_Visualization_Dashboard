{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matteo\\\\Working_Folder\\\\a. MCC Thesis Local\\\\Health_data_dashboard-MCC_project_checkpoint\\\\src\\\\components\\\\VisualizationWrapper.js\";\n/*\r\n - VisualizationWrapper.js - Universal Chart Container Component\r\n \r\n - This component provides a standardized wrapper for all chart visualizations by handling loading,\r\n  error, and no-data states, providing chart navigation controls (previous/next), managing \r\n  expand/collapse functionality, displaying chart titles and controls, and ensuring consistent \r\n  chart presentation across the application.\r\n \r\n - Serves as the foundation for all health metric chart displays.\r\n */\n\nimport React from 'react';\nimport Placeholder from './ui/Placeholder';\n\n/*\r\n - Shared component for visualization containers used in both Patient and Physician dashboards\r\n - Includes functionality previously in ChartContainer: navigation, loading states, error handling\r\n \r\n - @param {Object} props - Component props\r\n - @param {string} props.id - Unique identifier for the visualization\r\n - @param {string} props.className - CSS class names\r\n - @param {string} props.selectedViz - Selected visualization type\r\n - @param {Object} props.availableVisualizations - Available visualizations\r\n - @param {Object} props.allVisualizations - All visualization configurations\r\n - @param {Function} props.onVisualizationChange - Handler for visualization changes\r\n - @param {Function} props.onExpand - Handler for expand/collapse\r\n - @param {boolean} props.isExpanded - Whether the visualization is expanded\r\n - @param {Function} props.renderVisualization - Function to render the visualization\r\n - @param {boolean} props.disabled - Whether the visualization is disabled\r\n - @param {string} props.placeholderText - Text to show when no data is available\r\n - @param {string} props.title - Chart title\r\n - @param {boolean} props.isLoading - Whether the chart is loading\r\n - @param {string|null} props.error - Error message if any\r\n - @param {boolean} props.noData - Whether there's no data to display\r\n - @param {boolean} props.showNavigation - Whether to show navigation controls\r\n - @param {Function} props.onPrev - Previous navigation handler\r\n - @param {Function} props.onNext - Next navigation handler\r\n - @param {string} props.navigationLabel - Label for navigation controls\r\n - @returns {JSX.Element} The visualization wrapper component\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VisualizationWrapper = ({\n  id,\n  className,\n  selectedViz,\n  availableVisualizations,\n  allVisualizations,\n  onVisualizationChange,\n  onExpand,\n  isExpanded,\n  renderVisualization,\n  disabled = false,\n  placeholderText = \"No data available for this patient.\",\n  // ChartContainer props\n  title,\n  isLoading = false,\n  error = null,\n  noData = false,\n  showNavigation = true,\n  onPrev,\n  onNext,\n  navigationLabel = 'Week'\n}) => {\n  const viz = allVisualizations[selectedViz];\n\n  // Handle loading state\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `visualization-wrapper ${isExpanded ? 'expanded' : ''} ${className}`,\n      children: /*#__PURE__*/_jsxDEV(Placeholder, {\n        message: \"Loading data...\",\n        type: \"loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Handle error state\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `visualization-wrapper ${isExpanded ? 'expanded' : ''} ${className}`,\n      children: /*#__PURE__*/_jsxDEV(Placeholder, {\n        message: `Error: ${error}`,\n        type: \"error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Handle no data state\n  if (noData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `visualization-wrapper ${isExpanded ? 'expanded' : ''} ${className}`,\n      children: /*#__PURE__*/_jsxDEV(Placeholder, {\n        message: \"No data available\",\n        type: \"no-data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `visualization-wrapper ${isExpanded ? 'expanded' : ''} ${className}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"visualization-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"visualization-title-group\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"visualization-title\",\n          children: title || (viz === null || viz === void 0 ? void 0 : viz.name) || 'Unknown Visualization'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"visualization-controls\",\n        children: [showNavigation && onPrev && onNext && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-navigation\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"nav-button prev\",\n            onClick: onPrev,\n            \"aria-label\": `Previous ${navigationLabel}`,\n            children: \"\\u2039\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"nav-button next\",\n            onClick: onNext,\n            \"aria-label\": `Next ${navigationLabel}`,\n            children: \"\\u203A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onExpand(id),\n          className: \"expand-button\",\n          children: isExpanded ? 'Collapse' : 'Expand'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"visualization-content\",\n      children: Object.keys(availableVisualizations).length === 0 ? /*#__PURE__*/_jsxDEV(Placeholder, {\n        message: placeholderText,\n        type: \"no-data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this) : renderVisualization(selectedViz, id)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_c = VisualizationWrapper;\nexport default VisualizationWrapper;\nvar _c;\n$RefreshReg$(_c, \"VisualizationWrapper\");","map":{"version":3,"names":["React","Placeholder","jsxDEV","_jsxDEV","VisualizationWrapper","id","className","selectedViz","availableVisualizations","allVisualizations","onVisualizationChange","onExpand","isExpanded","renderVisualization","disabled","placeholderText","title","isLoading","error","noData","showNavigation","onPrev","onNext","navigationLabel","viz","children","message","type","fileName","_jsxFileName","lineNumber","columnNumber","name","onClick","Object","keys","length","_c","$RefreshReg$"],"sources":["C:/Users/Matteo/Working_Folder/a. MCC Thesis Local/Health_data_dashboard-MCC_project_checkpoint/src/components/VisualizationWrapper.js"],"sourcesContent":["/*\r\n - VisualizationWrapper.js - Universal Chart Container Component\r\n \r\n - This component provides a standardized wrapper for all chart visualizations by handling loading,\r\n  error, and no-data states, providing chart navigation controls (previous/next), managing \r\n  expand/collapse functionality, displaying chart titles and controls, and ensuring consistent \r\n  chart presentation across the application.\r\n \r\n - Serves as the foundation for all health metric chart displays.\r\n */\r\n\r\nimport React from 'react';\r\nimport Placeholder from './ui/Placeholder';\r\n\r\n/*\r\n - Shared component for visualization containers used in both Patient and Physician dashboards\r\n - Includes functionality previously in ChartContainer: navigation, loading states, error handling\r\n \r\n - @param {Object} props - Component props\r\n - @param {string} props.id - Unique identifier for the visualization\r\n - @param {string} props.className - CSS class names\r\n - @param {string} props.selectedViz - Selected visualization type\r\n - @param {Object} props.availableVisualizations - Available visualizations\r\n - @param {Object} props.allVisualizations - All visualization configurations\r\n - @param {Function} props.onVisualizationChange - Handler for visualization changes\r\n - @param {Function} props.onExpand - Handler for expand/collapse\r\n - @param {boolean} props.isExpanded - Whether the visualization is expanded\r\n - @param {Function} props.renderVisualization - Function to render the visualization\r\n - @param {boolean} props.disabled - Whether the visualization is disabled\r\n - @param {string} props.placeholderText - Text to show when no data is available\r\n - @param {string} props.title - Chart title\r\n - @param {boolean} props.isLoading - Whether the chart is loading\r\n - @param {string|null} props.error - Error message if any\r\n - @param {boolean} props.noData - Whether there's no data to display\r\n - @param {boolean} props.showNavigation - Whether to show navigation controls\r\n - @param {Function} props.onPrev - Previous navigation handler\r\n - @param {Function} props.onNext - Next navigation handler\r\n - @param {string} props.navigationLabel - Label for navigation controls\r\n - @returns {JSX.Element} The visualization wrapper component\r\n */\r\nconst VisualizationWrapper = ({ \r\n  id, \r\n  className, \r\n  selectedViz, \r\n  availableVisualizations, \r\n  allVisualizations,\r\n  onVisualizationChange, \r\n  onExpand, \r\n  isExpanded, \r\n  renderVisualization,\r\n  disabled = false,\r\n  placeholderText = \"No data available for this patient.\",\r\n  // ChartContainer props\r\n  title,\r\n  isLoading = false,\r\n  error = null,\r\n  noData = false,\r\n  showNavigation = true,\r\n  onPrev,\r\n  onNext,\r\n  navigationLabel = 'Week'\r\n}) => {\r\n  const viz = allVisualizations[selectedViz];\r\n  \r\n  // Handle loading state\r\n  if (isLoading) {\r\n    return (\r\n      <div className={`visualization-wrapper ${isExpanded ? 'expanded' : ''} ${className}`}>\r\n        <Placeholder message=\"Loading data...\" type=\"loading\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Handle error state\r\n  if (error) {\r\n    return (\r\n      <div className={`visualization-wrapper ${isExpanded ? 'expanded' : ''} ${className}`}>\r\n        <Placeholder message={`Error: ${error}`} type=\"error\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Handle no data state\r\n  if (noData) {\r\n    return (\r\n      <div className={`visualization-wrapper ${isExpanded ? 'expanded' : ''} ${className}`}>\r\n        <Placeholder message=\"No data available\" type=\"no-data\" />\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <div className={`visualization-wrapper ${isExpanded ? 'expanded' : ''} ${className}`}>\r\n      <div className=\"visualization-header\">\r\n        <div className=\"visualization-title-group\">\r\n          <h3 className=\"visualization-title\">\r\n            {title || viz?.name || 'Unknown Visualization'}\r\n          </h3>\r\n        </div>\r\n        <div className=\"visualization-controls\">\r\n          {showNavigation && onPrev && onNext && (\r\n            <div className=\"chart-navigation\">\r\n              <button \r\n                className=\"nav-button prev\" \r\n                onClick={onPrev}\r\n                aria-label={`Previous ${navigationLabel}`}\r\n              >\r\n                ‹\r\n              </button>\r\n              <button \r\n                className=\"nav-button next\" \r\n                onClick={onNext}\r\n                aria-label={`Next ${navigationLabel}`}\r\n              >\r\n                ›\r\n              </button>\r\n            </div>\r\n          )}\r\n          <button onClick={() => onExpand(id)} className=\"expand-button\">\r\n            {isExpanded ? 'Collapse' : 'Expand'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"visualization-content\">\r\n        {Object.keys(availableVisualizations).length === 0 ? (\r\n          <Placeholder message={placeholderText} type=\"no-data\" />\r\n        ) : (\r\n          renderVisualization(selectedViz, id)\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VisualizationWrapper;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}