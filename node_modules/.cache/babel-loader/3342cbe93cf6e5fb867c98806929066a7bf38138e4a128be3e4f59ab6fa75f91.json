{"ast":null,"code":"// Application constants\nexport const PATIENT_COUNT = 100;\n\n// Generate patient IDs array\nexport const PATIENTS = Array.from({\n  length: PATIENT_COUNT\n}, (_, i) => `Patient_${(i + 1).toString().padStart(3, '0')}`);\n\n// Chart color scheme\nexport const CHART_COLORS = {\n  glucose: '#3498db',\n  bloodPressure: '#e74c3c',\n  exercise: '#f39c12',\n  mood: '#9b59b6',\n  pain: '#e67e22',\n  mealContents: '#27ae60',\n  sleep: '#34495e'\n};\n\n// Visualization configurations - Updated with consistent naming and no emojis\nexport const VISUALIZATION_CONFIG = {\n  glucose: {\n    name: 'Blood Glucose',\n    color: CHART_COLORS.glucose\n  },\n  bloodPressure: {\n    name: 'Blood Pressure',\n    color: CHART_COLORS.bloodPressure\n  },\n  exercise: {\n    name: 'Exercise',\n    color: CHART_COLORS.exercise\n  },\n  mood: {\n    name: 'Mood',\n    color: CHART_COLORS.mood\n  },\n  pain: {\n    name: 'Pain',\n    color: CHART_COLORS.pain\n  },\n  mealContents: {\n    name: 'Meal Contents',\n    color: CHART_COLORS.mealContents\n  },\n  sleep: {\n    name: 'Sleep',\n    color: CHART_COLORS.sleep\n  }\n};\n\n// Shared dashboard configuration - now supports unlimited charts\nexport const DASHBOARD_CONFIG = {\n  patient: {\n    // No longer using fixed defaultVisualizations since we show all available\n    defaultVisualizations: {},\n    maxCharts: null // null means unlimited\n  },\n  physician: {\n    // No longer using fixed defaultVisualizations since we show all available\n    defaultVisualizations: {},\n    maxCharts: null // null means unlimited\n  }\n};\n\n// Sizing Constants for consistent chart and component dimensions\nexport const SIZING_CONSTANTS = {\n  // Dashboard grid settings\n  DASHBOARD: {\n    PATIENT: {\n      MIN_CARD_WIDTH: 350,\n      GAP: 20,\n      MIN_HEIGHT: 320\n    },\n    PHYSICIAN: {\n      MIN_CARD_WIDTH: 300,\n      GAP: 16,\n      MIN_HEIGHT: 320\n    }\n  },\n  // Expanded view settings\n  EXPANDED: {\n    MIN_HEIGHT: 600,\n    PADDING: 20,\n    GAP: 16\n  },\n  // Chart sizing ratios (multipliers for expanded view) - DRAMATICALLY REDUCED\n  EXPANSION_RATIOS: {\n    WIDTH: 1.1,\n    // Only 10% larger in expanded view (was 1.25)\n    HEIGHT: 1.1,\n    // Only 10% larger in expanded view (was 1.2)\n    FONT: 1.5,\n    // 50% larger font in expanded view (was 1.3)\n    PADDING: 1.1 // Only 10% more padding in expanded view (was 1.2)\n  },\n  // Responsive breakpoints\n  BREAKPOINTS: {\n    MOBILE: 768,\n    TABLET: 1024,\n    DESKTOP: 1200\n  },\n  // Minimum viable dimensions - Adjusted for better dashboard fit\n  MINIMUMS: {\n    CHART_WIDTH: 260,\n    // Reduced from 280 for better dashboard fit\n    CHART_HEIGHT: 180,\n    // Reduced from 200 for better dashboard fit\n    CONTAINER_PADDING: 20 // Increased from 16 for better spacing\n  }\n};\n\n// Helper function to calculate responsive dimensions\nexport const calculateResponsiveDimensions = (containerWidth, isExpanded = false) => {\n  const {\n    EXPANSION_RATIOS,\n    MINIMUMS\n  } = SIZING_CONSTANTS;\n\n  // Base dimensions (for dashboard view)\n  const baseWidth = Math.max(MINIMUMS.CHART_WIDTH, containerWidth - MINIMUMS.CONTAINER_PADDING * 2);\n  const baseHeight = Math.max(MINIMUMS.CHART_HEIGHT, baseWidth * 0.6); // 60% aspect ratio\n\n  // Apply expansion ratios if expanded\n  const width = isExpanded ? baseWidth * EXPANSION_RATIOS.WIDTH : baseWidth;\n  const height = isExpanded ? baseHeight * EXPANSION_RATIOS.HEIGHT : baseHeight;\n  return {\n    width,\n    height\n  };\n};\n\n// Helper function to get consistent padding\nexport const getConsistentPadding = (isExpanded = false) => {\n  const {\n    EXPANSION_RATIOS\n  } = SIZING_CONSTANTS;\n  const basePadding = 16;\n  return {\n    top: isExpanded ? basePadding * EXPANSION_RATIOS.PADDING : basePadding,\n    right: isExpanded ? basePadding * EXPANSION_RATIOS.PADDING : basePadding,\n    bottom: isExpanded ? basePadding * EXPANSION_RATIOS.PADDING : basePadding,\n    left: isExpanded ? basePadding * EXPANSION_RATIOS.PADDING : basePadding\n  };\n};\n\n// Helper function to get consistent font sizes - Better expanded view sizing\nexport const getConsistentFontSizes = (isExpanded = false) => {\n  const {\n    EXPANSION_RATIOS\n  } = SIZING_CONSTANTS;\n  const baseFontSizes = {\n    small: 12,\n    // Dashboard view - smaller for compact display\n    medium: 14,\n    // Dashboard view - smaller for compact display\n    large: 16,\n    // Dashboard view - smaller for compact display\n    xlarge: 18 // Dashboard view - smaller for compact display\n  };\n  if (!isExpanded) return baseFontSizes;\n\n  // More generous font scaling for expanded view\n  return {\n    small: Math.round(baseFontSizes.small * 1.4),\n    // 40% larger (was 1.3)\n    medium: Math.round(baseFontSizes.medium * 1.4),\n    // 40% larger (was 1.3)\n    large: Math.round(baseFontSizes.large * 1.4),\n    // 40% larger (was 1.3)\n    xlarge: Math.round(baseFontSizes.xlarge * 1.4) // 40% larger (was 1.3)\n  };\n};","map":{"version":3,"names":["PATIENT_COUNT","PATIENTS","Array","from","length","_","i","toString","padStart","CHART_COLORS","glucose","bloodPressure","exercise","mood","pain","mealContents","sleep","VISUALIZATION_CONFIG","name","color","DASHBOARD_CONFIG","patient","defaultVisualizations","maxCharts","physician","SIZING_CONSTANTS","DASHBOARD","PATIENT","MIN_CARD_WIDTH","GAP","MIN_HEIGHT","PHYSICIAN","EXPANDED","PADDING","EXPANSION_RATIOS","WIDTH","HEIGHT","FONT","BREAKPOINTS","MOBILE","TABLET","DESKTOP","MINIMUMS","CHART_WIDTH","CHART_HEIGHT","CONTAINER_PADDING","calculateResponsiveDimensions","containerWidth","isExpanded","baseWidth","Math","max","baseHeight","width","height","getConsistentPadding","basePadding","top","right","bottom","left","getConsistentFontSizes","baseFontSizes","small","medium","large","xlarge","round"],"sources":["C:/Users/Matteo/Working_Folder/a. MCC Thesis Local/MCC_digital_health_data_visualizations/src/constants/index.js"],"sourcesContent":["// Application constants\r\nexport const PATIENT_COUNT = 100;\r\n\r\n// Generate patient IDs array\r\nexport const PATIENTS = Array.from({ length: PATIENT_COUNT }, (_, i) => \r\n  `Patient_${(i + 1).toString().padStart(3, '0')}`\r\n);\r\n\r\n// Chart color scheme\r\nexport const CHART_COLORS = {\r\n  glucose: '#3498db',\r\n  bloodPressure: '#e74c3c',\r\n  exercise: '#f39c12',\r\n  mood: '#9b59b6',\r\n  pain: '#e67e22',\r\n  mealContents: '#27ae60',\r\n  sleep: '#34495e'\r\n};\r\n\r\n// Visualization configurations - Updated with consistent naming and no emojis\r\nexport const VISUALIZATION_CONFIG = {\r\n  glucose: { name: 'Blood Glucose', color: CHART_COLORS.glucose },\r\n  bloodPressure: { name: 'Blood Pressure', color: CHART_COLORS.bloodPressure },\r\n  exercise: { name: 'Exercise', color: CHART_COLORS.exercise },\r\n  mood: { name: 'Mood', color: CHART_COLORS.mood },\r\n  pain: { name: 'Pain', color: CHART_COLORS.pain },\r\n  mealContents: { name: 'Meal Contents', color: CHART_COLORS.mealContents },\r\n  sleep: { name: 'Sleep', color: CHART_COLORS.sleep }\r\n};\r\n\r\n// Shared dashboard configuration - now supports unlimited charts\r\nexport const DASHBOARD_CONFIG = {\r\n  patient: {\r\n    // No longer using fixed defaultVisualizations since we show all available\r\n    defaultVisualizations: {},\r\n    maxCharts: null // null means unlimited\r\n  },\r\n  physician: {\r\n    // No longer using fixed defaultVisualizations since we show all available\r\n    defaultVisualizations: {},\r\n    maxCharts: null // null means unlimited\r\n  }\r\n};\r\n\r\n// Sizing Constants for consistent chart and component dimensions\r\nexport const SIZING_CONSTANTS = {\r\n  // Dashboard grid settings\r\n  DASHBOARD: {\r\n    PATIENT: {\r\n      MIN_CARD_WIDTH: 350,\r\n      GAP: 20,\r\n      MIN_HEIGHT: 320\r\n    },\r\n    PHYSICIAN: {\r\n      MIN_CARD_WIDTH: 300,\r\n      GAP: 16,\r\n      MIN_HEIGHT: 320\r\n    }\r\n  },\r\n  \r\n  // Expanded view settings\r\n  EXPANDED: {\r\n    MIN_HEIGHT: 600,\r\n    PADDING: 20,\r\n    GAP: 16\r\n  },\r\n  \r\n  // Chart sizing ratios (multipliers for expanded view) - DRAMATICALLY REDUCED\r\n  EXPANSION_RATIOS: {\r\n    WIDTH: 1.1,    // Only 10% larger in expanded view (was 1.25)\r\n    HEIGHT: 1.1,   // Only 10% larger in expanded view (was 1.2)\r\n    FONT: 1.5,     // 50% larger font in expanded view (was 1.3)\r\n    PADDING: 1.1   // Only 10% more padding in expanded view (was 1.2)\r\n  },\r\n  \r\n  // Responsive breakpoints\r\n  BREAKPOINTS: {\r\n    MOBILE: 768,\r\n    TABLET: 1024,\r\n    DESKTOP: 1200\r\n  },\r\n  \r\n  // Minimum viable dimensions - Adjusted for better dashboard fit\r\n  MINIMUMS: {\r\n    CHART_WIDTH: 260,        // Reduced from 280 for better dashboard fit\r\n    CHART_HEIGHT: 180,       // Reduced from 200 for better dashboard fit\r\n    CONTAINER_PADDING: 20    // Increased from 16 for better spacing\r\n  }\r\n};\r\n\r\n// Helper function to calculate responsive dimensions\r\nexport const calculateResponsiveDimensions = (containerWidth, isExpanded = false) => {\r\n  const { EXPANSION_RATIOS, MINIMUMS } = SIZING_CONSTANTS;\r\n  \r\n  // Base dimensions (for dashboard view)\r\n  const baseWidth = Math.max(MINIMUMS.CHART_WIDTH, containerWidth - (MINIMUMS.CONTAINER_PADDING * 2));\r\n  const baseHeight = Math.max(MINIMUMS.CHART_HEIGHT, baseWidth * 0.6); // 60% aspect ratio\r\n  \r\n  // Apply expansion ratios if expanded\r\n  const width = isExpanded ? baseWidth * EXPANSION_RATIOS.WIDTH : baseWidth;\r\n  const height = isExpanded ? baseHeight * EXPANSION_RATIOS.HEIGHT : baseHeight;\r\n  \r\n  return { width, height };\r\n};\r\n\r\n// Helper function to get consistent padding\r\nexport const getConsistentPadding = (isExpanded = false) => {\r\n  const { EXPANSION_RATIOS } = SIZING_CONSTANTS;\r\n  const basePadding = 16;\r\n  \r\n  return {\r\n    top: isExpanded ? basePadding * EXPANSION_RATIOS.PADDING : basePadding,\r\n    right: isExpanded ? basePadding * EXPANSION_RATIOS.PADDING : basePadding,\r\n    bottom: isExpanded ? basePadding * EXPANSION_RATIOS.PADDING : basePadding,\r\n    left: isExpanded ? basePadding * EXPANSION_RATIOS.PADDING : basePadding\r\n  };\r\n};\r\n\r\n// Helper function to get consistent font sizes - Better expanded view sizing\r\nexport const getConsistentFontSizes = (isExpanded = false) => {\r\n  const { EXPANSION_RATIOS } = SIZING_CONSTANTS;\r\n  const baseFontSizes = {\r\n    small: 12,    // Dashboard view - smaller for compact display\r\n    medium: 14,   // Dashboard view - smaller for compact display\r\n    large: 16,    // Dashboard view - smaller for compact display\r\n    xlarge: 18    // Dashboard view - smaller for compact display\r\n  };\r\n  \r\n  if (!isExpanded) return baseFontSizes;\r\n  \r\n  // More generous font scaling for expanded view\r\n  return {\r\n    small: Math.round(baseFontSizes.small * 1.4),    // 40% larger (was 1.3)\r\n    medium: Math.round(baseFontSizes.medium * 1.4),  // 40% larger (was 1.3)\r\n    large: Math.round(baseFontSizes.large * 1.4),    // 40% larger (was 1.3)\r\n    xlarge: Math.round(baseFontSizes.xlarge * 1.4)   // 40% larger (was 1.3)\r\n  };\r\n};\r\n\r\n\r\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,aAAa,GAAG,GAAG;;AAEhC;AACA,OAAO,MAAMC,QAAQ,GAAGC,KAAK,CAACC,IAAI,CAAC;EAAEC,MAAM,EAAEJ;AAAc,CAAC,EAAE,CAACK,CAAC,EAAEC,CAAC,KACjE,WAAW,CAACA,CAAC,GAAG,CAAC,EAAEC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAChD,CAAC;;AAED;AACA,OAAO,MAAMC,YAAY,GAAG;EAC1BC,OAAO,EAAE,SAAS;EAClBC,aAAa,EAAE,SAAS;EACxBC,QAAQ,EAAE,SAAS;EACnBC,IAAI,EAAE,SAAS;EACfC,IAAI,EAAE,SAAS;EACfC,YAAY,EAAE,SAAS;EACvBC,KAAK,EAAE;AACT,CAAC;;AAED;AACA,OAAO,MAAMC,oBAAoB,GAAG;EAClCP,OAAO,EAAE;IAAEQ,IAAI,EAAE,eAAe;IAAEC,KAAK,EAAEV,YAAY,CAACC;EAAQ,CAAC;EAC/DC,aAAa,EAAE;IAAEO,IAAI,EAAE,gBAAgB;IAAEC,KAAK,EAAEV,YAAY,CAACE;EAAc,CAAC;EAC5EC,QAAQ,EAAE;IAAEM,IAAI,EAAE,UAAU;IAAEC,KAAK,EAAEV,YAAY,CAACG;EAAS,CAAC;EAC5DC,IAAI,EAAE;IAAEK,IAAI,EAAE,MAAM;IAAEC,KAAK,EAAEV,YAAY,CAACI;EAAK,CAAC;EAChDC,IAAI,EAAE;IAAEI,IAAI,EAAE,MAAM;IAAEC,KAAK,EAAEV,YAAY,CAACK;EAAK,CAAC;EAChDC,YAAY,EAAE;IAAEG,IAAI,EAAE,eAAe;IAAEC,KAAK,EAAEV,YAAY,CAACM;EAAa,CAAC;EACzEC,KAAK,EAAE;IAAEE,IAAI,EAAE,OAAO;IAAEC,KAAK,EAAEV,YAAY,CAACO;EAAM;AACpD,CAAC;;AAED;AACA,OAAO,MAAMI,gBAAgB,GAAG;EAC9BC,OAAO,EAAE;IACP;IACAC,qBAAqB,EAAE,CAAC,CAAC;IACzBC,SAAS,EAAE,IAAI,CAAC;EAClB,CAAC;EACDC,SAAS,EAAE;IACT;IACAF,qBAAqB,EAAE,CAAC,CAAC;IACzBC,SAAS,EAAE,IAAI,CAAC;EAClB;AACF,CAAC;;AAED;AACA,OAAO,MAAME,gBAAgB,GAAG;EAC9B;EACAC,SAAS,EAAE;IACTC,OAAO,EAAE;MACPC,cAAc,EAAE,GAAG;MACnBC,GAAG,EAAE,EAAE;MACPC,UAAU,EAAE;IACd,CAAC;IACDC,SAAS,EAAE;MACTH,cAAc,EAAE,GAAG;MACnBC,GAAG,EAAE,EAAE;MACPC,UAAU,EAAE;IACd;EACF,CAAC;EAED;EACAE,QAAQ,EAAE;IACRF,UAAU,EAAE,GAAG;IACfG,OAAO,EAAE,EAAE;IACXJ,GAAG,EAAE;EACP,CAAC;EAED;EACAK,gBAAgB,EAAE;IAChBC,KAAK,EAAE,GAAG;IAAK;IACfC,MAAM,EAAE,GAAG;IAAI;IACfC,IAAI,EAAE,GAAG;IAAM;IACfJ,OAAO,EAAE,GAAG,CAAG;EACjB,CAAC;EAED;EACAK,WAAW,EAAE;IACXC,MAAM,EAAE,GAAG;IACXC,MAAM,EAAE,IAAI;IACZC,OAAO,EAAE;EACX,CAAC;EAED;EACAC,QAAQ,EAAE;IACRC,WAAW,EAAE,GAAG;IAAS;IACzBC,YAAY,EAAE,GAAG;IAAQ;IACzBC,iBAAiB,EAAE,EAAE,CAAI;EAC3B;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,6BAA6B,GAAGA,CAACC,cAAc,EAAEC,UAAU,GAAG,KAAK,KAAK;EACnF,MAAM;IAAEd,gBAAgB;IAAEQ;EAAS,CAAC,GAAGjB,gBAAgB;;EAEvD;EACA,MAAMwB,SAAS,GAAGC,IAAI,CAACC,GAAG,CAACT,QAAQ,CAACC,WAAW,EAAEI,cAAc,GAAIL,QAAQ,CAACG,iBAAiB,GAAG,CAAE,CAAC;EACnG,MAAMO,UAAU,GAAGF,IAAI,CAACC,GAAG,CAACT,QAAQ,CAACE,YAAY,EAAEK,SAAS,GAAG,GAAG,CAAC,CAAC,CAAC;;EAErE;EACA,MAAMI,KAAK,GAAGL,UAAU,GAAGC,SAAS,GAAGf,gBAAgB,CAACC,KAAK,GAAGc,SAAS;EACzE,MAAMK,MAAM,GAAGN,UAAU,GAAGI,UAAU,GAAGlB,gBAAgB,CAACE,MAAM,GAAGgB,UAAU;EAE7E,OAAO;IAAEC,KAAK;IAAEC;EAAO,CAAC;AAC1B,CAAC;;AAED;AACA,OAAO,MAAMC,oBAAoB,GAAGA,CAACP,UAAU,GAAG,KAAK,KAAK;EAC1D,MAAM;IAAEd;EAAiB,CAAC,GAAGT,gBAAgB;EAC7C,MAAM+B,WAAW,GAAG,EAAE;EAEtB,OAAO;IACLC,GAAG,EAAET,UAAU,GAAGQ,WAAW,GAAGtB,gBAAgB,CAACD,OAAO,GAAGuB,WAAW;IACtEE,KAAK,EAAEV,UAAU,GAAGQ,WAAW,GAAGtB,gBAAgB,CAACD,OAAO,GAAGuB,WAAW;IACxEG,MAAM,EAAEX,UAAU,GAAGQ,WAAW,GAAGtB,gBAAgB,CAACD,OAAO,GAAGuB,WAAW;IACzEI,IAAI,EAAEZ,UAAU,GAAGQ,WAAW,GAAGtB,gBAAgB,CAACD,OAAO,GAAGuB;EAC9D,CAAC;AACH,CAAC;;AAED;AACA,OAAO,MAAMK,sBAAsB,GAAGA,CAACb,UAAU,GAAG,KAAK,KAAK;EAC5D,MAAM;IAAEd;EAAiB,CAAC,GAAGT,gBAAgB;EAC7C,MAAMqC,aAAa,GAAG;IACpBC,KAAK,EAAE,EAAE;IAAK;IACdC,MAAM,EAAE,EAAE;IAAI;IACdC,KAAK,EAAE,EAAE;IAAK;IACdC,MAAM,EAAE,EAAE,CAAI;EAChB,CAAC;EAED,IAAI,CAAClB,UAAU,EAAE,OAAOc,aAAa;;EAErC;EACA,OAAO;IACLC,KAAK,EAAEb,IAAI,CAACiB,KAAK,CAACL,aAAa,CAACC,KAAK,GAAG,GAAG,CAAC;IAAK;IACjDC,MAAM,EAAEd,IAAI,CAACiB,KAAK,CAACL,aAAa,CAACE,MAAM,GAAG,GAAG,CAAC;IAAG;IACjDC,KAAK,EAAEf,IAAI,CAACiB,KAAK,CAACL,aAAa,CAACG,KAAK,GAAG,GAAG,CAAC;IAAK;IACjDC,MAAM,EAAEhB,IAAI,CAACiB,KAAK,CAACL,aAAa,CAACI,MAAM,GAAG,GAAG,CAAC,CAAG;EACnD,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}