{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matteo\\\\Working_Folder\\\\a. MCC Thesis Local\\\\MCC_digital_health_data_visualizations\\\\src\\\\components\\\\patient_charts\\\\MealContentsChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport ChartContainer from '../ChartContainer';\nimport Legend from '../Legend';\nimport usePatientData from '../../hooks/usePatientData';\nimport { createChartConfig } from '../chart-utils/ChartConfigFactory';\nimport './MealContentsChart.css';\nimport '../ChartStyles.css';\n\n// --- Constants ---\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DAYS_OF_WEEK = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\nconst MEAL_TYPES = ['Breakfast', 'Lunch', 'Dinner'];\nconst FOOD_CATEGORIES = ['Protein', 'Carbohydrates', 'Vegetables', 'Fruit', 'Alcohol'];\nconst SUGAR_CATEGORIES = ['', '1-20g', '20-40g', '40-60g', '60g+'];\nconst DEFAULT_WEEK = new Date(2025, 4, 1);\n\n// Emoji mappings for food categories\nconst CATEGORY_EMOJIS = {\n  'Protein': '🥩',\n  'Carbohydrates': '🍞',\n  'Vegetables': '🥦',\n  'Fruit': '🍎',\n  'Alcohol': '🍷'\n};\nconst SUGAR_EMOJIS = {\n  '': '',\n  // No sugar\n  '1-20g': '🍭',\n  // Lollipop\n  '20-40g': '🍫',\n  // Chocolate bar\n  '40-60g': '🍩',\n  // Donut\n  '60g+': '🎂' // Cake\n};\nconst getChartConfig = (isExpanded, containerWidth = 500) => {\n  // Calculate responsive dimensions based on container width\n  const maxWidth = Math.min(containerWidth - 40, isExpanded ? 700 : 500); // Account for padding\n  const maxHeight = isExpanded ? 400 : 300;\n\n  // Calculate day width based on available space\n  const availableWidth = maxWidth - 160; // Account for left padding (130) + right padding (30)\n\n  // Ensure minimum viable width for the chart\n  if (availableWidth < 420) {\n    // 7 days * 60px minimum\n    // For very small containers, reduce padding to fit content\n    const adjustedPadding = Math.max(100, availableWidth * 0.2); // At least 100px padding for \"Breakfast\"\n    const adjustedAvailableWidth = availableWidth - (160 - adjustedPadding);\n    const dayWidth = Math.max(50, adjustedAvailableWidth / 7);\n    const totalWidth = adjustedPadding + dayWidth * 7;\n    return {\n      width: totalWidth,\n      height: maxHeight,\n      padding: {\n        top: 40,\n        right: 20,\n        bottom: 80,\n        left: adjustedPadding\n      },\n      dayWidth: dayWidth,\n      mealHeight: isExpanded ? 80 : 60,\n      fontSize: {\n        dayLabel: isExpanded ? 10 : 8,\n        dateLabel: isExpanded ? 8 : 6,\n        mealLabel: isExpanded ? 8 : 6,\n        timeLabel: isExpanded ? 6 : 5\n      }\n    };\n  }\n  const dayWidth = Math.max(60, Math.min(85, availableWidth / 7)); // Min 60px to accommodate emojis and circles\n\n  // Recalculate total width based on actual day width\n  const totalWidth = 140 + dayWidth * 7;\n  return {\n    width: totalWidth,\n    height: maxHeight,\n    padding: {\n      top: 40,\n      right: 30,\n      bottom: 80,\n      left: 110\n    },\n    dayWidth: dayWidth,\n    mealHeight: isExpanded ? 80 : 60,\n    fontSize: {\n      dayLabel: isExpanded ? 10 : 8,\n      dateLabel: isExpanded ? 8 : 6,\n      mealLabel: isExpanded ? 8 : 6,\n      timeLabel: isExpanded ? 6 : 5\n    }\n  };\n};\n\n// --- Helper Functions ---\nconst getWeekStart = date => {\n  const d = new Date(date);\n  const day = d.getDay();\n  const diff = d.getDate() - day;\n  return new Date(d.setDate(diff));\n};\nconst formatDayLabel = date => {\n  const dayNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n  return dayNames[date.getDay()];\n};\nconst formatDateLabel = date => date.toLocaleDateString('en-US', {\n  month: 'short',\n  day: 'numeric'\n});\nconst getMealTime = (data, mealType) => {\n  const timeKey = `${mealType}_Time`;\n  return data[timeKey] || '';\n};\nconst getMealData = (data, mealType) => {\n  const mealData = {};\n  FOOD_CATEGORIES.forEach(category => {\n    const key = `${mealType}_${category}`;\n    mealData[category] = data[key] === 1 || data[key] === '1';\n  });\n  const sugarKey = `${mealType}_Added_Sugar`;\n  mealData['Added Sugar'] = data[sugarKey] || '';\n  return mealData;\n};\n\n// --- Chart Sub-components ---\n\nconst XAxis = ({\n  config,\n  weekDays\n}) => /*#__PURE__*/_jsxDEV(\"g\", {\n  className: \"x-axis\",\n  children: [weekDays.map((day, dayIndex) => {\n    const x = config.padding.left + dayIndex * config.dayWidth + config.dayWidth / 2;\n    return /*#__PURE__*/_jsxDEV(\"g\", {\n      children: [/*#__PURE__*/_jsxDEV(\"text\", {\n        x: x,\n        y: config.height - config.padding.bottom + 30,\n        fontSize: config.fontSize.dayLabel,\n        textAnchor: \"middle\",\n        className: \"x-axis-day-label\",\n        children: formatDayLabel(day)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: x,\n        y: config.height - config.padding.bottom + 45,\n        fontSize: config.fontSize.dateLabel,\n        textAnchor: \"middle\",\n        className: \"x-axis-date-label\",\n        children: day.getDate()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n        className: \"chart-grid-line-vertical\",\n        x1: config.padding.left + dayIndex * config.dayWidth,\n        y1: config.padding.top,\n        x2: config.padding.left + dayIndex * config.dayWidth,\n        y2: config.height - config.padding.bottom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this)]\n    }, dayIndex, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this);\n  }), /*#__PURE__*/_jsxDEV(\"line\", {\n    className: \"chart-grid-line-vertical\",\n    x1: config.padding.left + 7 * config.dayWidth,\n    y1: config.padding.top,\n    x2: config.padding.left + 7 * config.dayWidth,\n    y2: config.height - config.padding.bottom\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 119,\n  columnNumber: 3\n}, this);\n_c = XAxis;\nconst YAxis = ({\n  config\n}) => {\n  const mealTimes = {\n    'Breakfast': '6-10am',\n    'Lunch': '11-2pm',\n    'Dinner': '5-9pm'\n  };\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    className: \"y-axis\",\n    children: [MEAL_TYPES.map((meal, mealIndex) => {\n      const y = config.padding.top + mealIndex * config.mealHeight + config.mealHeight / 2;\n      return /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"text\", {\n          x: config.padding.left - 25,\n          y: y - 5,\n          fontSize: config.fontSize.mealLabel,\n          textAnchor: \"end\",\n          className: \"y-axis-title\",\n          children: meal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: config.padding.left - 25,\n          y: y + 10,\n          fontSize: config.fontSize.timeLabel,\n          textAnchor: \"end\",\n          className: \"chart-tick-label\",\n          children: mealTimes[meal]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n          className: \"chart-grid-line-horizontal\",\n          x1: config.padding.left,\n          y1: config.padding.top + mealIndex * config.mealHeight,\n          x2: config.padding.left + 7 * config.dayWidth,\n          y2: config.padding.top + mealIndex * config.mealHeight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this)]\n      }, meal, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"line\", {\n      className: \"chart-grid-line-horizontal\",\n      x1: config.padding.left,\n      y1: config.padding.top + 3 * config.mealHeight,\n      x2: config.padding.left + 7 * config.dayWidth,\n      y2: config.padding.top + 3 * config.mealHeight\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n};\n_c2 = YAxis;\nconst MealCell = ({\n  config,\n  dayIndex,\n  mealIndex,\n  mealData,\n  mealTime\n}) => {\n  const x = config.padding.left + dayIndex * config.dayWidth + 5;\n  const y = config.padding.top + mealIndex * config.mealHeight + 5;\n  const cellWidth = config.dayWidth - 10;\n  const cellHeight = config.mealHeight - 10;\n\n  // Calculate grid layout for 6 circles (2x3 grid)\n  const circlesPerRow = 3;\n  const circleWidth = cellWidth / circlesPerRow;\n  const circleHeight = (cellHeight - 20) / 2; // Reserve space for time\n\n  // Calculate responsive circle radius and emoji size based on cell dimensions\n  const minDimension = Math.min(circleWidth, circleHeight);\n  const circleRadius = Math.max(6, Math.min(12, minDimension * 0.3)); // Min 6px, max 12px, 30% of min dimension\n  const emojiFontSize = Math.max(6, Math.min(10, minDimension * 0.25)); // Min 6px, max 10px, 25% of min dimension\n\n  // Define the 6 food categories in order (5 main + 1 sugar)\n  const allCategories = [...FOOD_CATEGORIES, 'Added Sugar'];\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    className: \"meal-cell\",\n    children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n      x: x,\n      y: y,\n      width: cellWidth,\n      height: cellHeight,\n      fill: \"#f9f9f9\",\n      stroke: \"#ddd\",\n      strokeWidth: \"1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      x: x + cellWidth / 2,\n      y: y + 12,\n      fontSize: config.fontSize.timeLabel,\n      textAnchor: \"middle\",\n      className: \"time-label\",\n      children: mealTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), allCategories.map((category, index) => {\n      const row = Math.floor(index / circlesPerRow);\n      const col = index % circlesPerRow;\n      const circleX = x + col * circleWidth + circleWidth / 2;\n      const circleY = y + 20 + row * circleHeight + circleHeight / 2;\n\n      // Check if category is present\n      let hasCategory = false;\n      let emoji = '';\n      if (category === 'Added Sugar') {\n        hasCategory = mealData[category] && SUGAR_EMOJIS[mealData[category]];\n        emoji = SUGAR_EMOJIS[mealData[category]] || '';\n      } else {\n        hasCategory = mealData[category];\n        emoji = CATEGORY_EMOJIS[category] || '';\n      }\n      return /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: circleX,\n          cy: circleY,\n          r: circleRadius,\n          fill: \"#f5f5f5\",\n          stroke: \"#ddd\",\n          strokeWidth: \"1\",\n          opacity: 0.3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this), hasCategory && emoji && /*#__PURE__*/_jsxDEV(\"text\", {\n          x: circleX,\n          y: circleY,\n          fontSize: emojiFontSize,\n          textAnchor: \"middle\",\n          dominantBaseline: \"central\",\n          style: {\n            fontFamily: 'Apple Color Emoji, Segoe UI Emoji, Noto Color Emoji, sans-serif'\n          },\n          children: emoji\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 15\n        }, this)]\n      }, category, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 234,\n    columnNumber: 5\n  }, this);\n};\n_c3 = MealCell;\nconst MealGrid = ({\n  config,\n  weekDays,\n  patientData\n}) => {\n  if (!patientData || patientData.length === 0) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    className: \"meal-grid\",\n    children: weekDays.map((day, dayIndex) => {\n      const dayData = patientData.find(d => {\n        const dataDate = new Date(d.Date);\n        return dataDate.toDateString() === day.toDateString();\n      });\n      if (!dayData) return null;\n      return MEAL_TYPES.map((meal, mealIndex) => {\n        const mealData = getMealData(dayData, meal);\n        const mealTime = getMealTime(dayData, meal);\n        return /*#__PURE__*/_jsxDEV(MealCell, {\n          config: config,\n          dayIndex: dayIndex,\n          mealIndex: mealIndex,\n          mealData: mealData,\n          mealTime: mealTime\n        }, `${dayIndex}-${mealIndex}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 13\n        }, this);\n      });\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 314,\n    columnNumber: 5\n  }, this);\n};\n\n// --- Main Component ---\n_c4 = MealGrid;\nconst MealContentsChart = ({\n  patientId,\n  isExpanded = false,\n  onExpand,\n  viewMode = 'patient'\n}) => {\n  _s();\n  const {\n    mealData: patientData,\n    loading,\n    error\n  } = usePatientData(patientId);\n  const [currentWeek, setCurrentWeek] = useState(new Date(2025, 4, 1));\n  const containerRef = useRef(null);\n  const [containerWidth, setContainerWidth] = useState(500);\n  const config = getChartConfig(isExpanded, containerWidth);\n\n  // Measure container width for responsive sizing\n  useEffect(() => {\n    const updateContainerWidth = () => {\n      if (containerRef.current) {\n        const width = containerRef.current.offsetWidth;\n        setContainerWidth(width);\n      }\n    };\n    updateContainerWidth();\n    window.addEventListener('resize', updateContainerWidth);\n    return () => window.removeEventListener('resize', updateContainerWidth);\n  }, [isExpanded]);\n  const weekStart = getWeekStart(currentWeek);\n  const weekDays = Array.from({\n    length: 7\n  }, (_, i) => {\n    const day = new Date(weekStart);\n    day.setDate(weekStart.getDate() + i);\n    return day;\n  });\n  const handlePrevWeek = () => setCurrentWeek(prev => new Date(new Date(prev).setDate(prev.getDate() - 7)));\n  const handleNextWeek = () => setCurrentWeek(prev => new Date(new Date(prev).setDate(prev.getDate() + 7)));\n  const startOfWeek = new Date(weekStart);\n  const endOfWeek = new Date(startOfWeek);\n  endOfWeek.setDate(endOfWeek.getDate() + 6);\n  const formatDateRange = (start, end) => {\n    const startStr = start.toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric'\n    });\n    const endStr = end.toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric'\n    });\n    return `${startStr} to ${endStr}`;\n  };\n\n  // Calculate summary statistics for physician view\n  const weekSummary = useState(() => {\n    if (!patientData || patientData.length === 0) return null;\n    const weekData = patientData.filter(d => {\n      const dataDate = new Date(d.Date);\n      return dataDate >= startOfWeek && dataDate <= endOfWeek;\n    });\n    if (weekData.length === 0) return null;\n\n    // Count food categories across all meals\n    const categoryStats = {};\n    FOOD_CATEGORIES.forEach(category => {\n      categoryStats[category] = 0;\n    });\n\n    // Count sugar levels\n    const sugarStats = {};\n    SUGAR_CATEGORIES.filter(s => s !== '').forEach(sugar => {\n      sugarStats[sugar] = 0;\n    });\n    let totalMealsLogged = 0;\n    let daysWithMeals = new Set();\n    weekData.forEach(dayData => {\n      daysWithMeals.add(dayData.Date);\n      MEAL_TYPES.forEach(meal => {\n        const mealData = getMealData(dayData, meal);\n        const hasAnyFood = FOOD_CATEGORIES.some(category => mealData[category]);\n        if (hasAnyFood) {\n          totalMealsLogged++;\n\n          // Count each food category\n          FOOD_CATEGORIES.forEach(category => {\n            if (mealData[category]) {\n              categoryStats[category]++;\n            }\n          });\n\n          // Count sugar levels\n          if (mealData['Added Sugar'] && mealData['Added Sugar'] !== '') {\n            sugarStats[mealData['Added Sugar']]++;\n          }\n        }\n      });\n    });\n\n    // Find most common food category\n    const mostCommonFood = Object.entries(categoryStats).sort(([, a], [, b]) => b - a)[0];\n\n    // Calculate sugar frequency\n    const totalSugarMeals = Object.values(sugarStats).reduce((sum, count) => sum + count, 0);\n    const sugarPercentage = totalMealsLogged > 0 ? (totalSugarMeals / totalMealsLogged * 100).toFixed(0) : 0;\n    return {\n      totalMealsLogged,\n      daysWithMeals: daysWithMeals.size,\n      mostCommonFood: mostCommonFood[0],\n      mostCommonFoodCount: mostCommonFood[1],\n      categoryStats,\n      sugarPercentage,\n      totalSugarMeals\n    };\n  }, [patientData, startOfWeek, endOfWeek]);\n  return /*#__PURE__*/_jsxDEV(ChartContainer, {\n    title: \"Meal Contents\",\n    icon: \"\\uD83C\\uDF7D\\uFE0F\",\n    isLoading: loading,\n    error: error,\n    noData: !loading && !error && (!patientData || patientData.length === 0),\n    isExpanded: isExpanded,\n    onExpand: onExpand,\n    onPrev: handlePrevWeek,\n    onNext: handleNextWeek,\n    navigationLabel: formatDateRange(startOfWeek, endOfWeek),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meal-contents-chart-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meal-contents-legends-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(Legend, {\n          title: \"Food Categories\",\n          items: FOOD_CATEGORIES.map(category => ({\n            label: `${CATEGORY_EMOJIS[category]} ${category}`,\n            color: null\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {\n          title: \"Sugar Levels\",\n          items: SUGAR_CATEGORIES.filter(sugar => sugar !== '').map(sugar => ({\n            label: `${SUGAR_EMOJIS[sugar]} ${sugar}`,\n            color: null\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `meal-chart-wrapper ${isExpanded ? 'expanded' : ''}`,\n        ref: containerRef,\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          width: config.width,\n          height: config.height,\n          viewBox: `0 0 ${config.width} ${config.height}`,\n          className: \"meal-chart\",\n          style: {\n            maxWidth: '100%',\n            height: 'auto'\n          },\n          children: [/*#__PURE__*/_jsxDEV(XAxis, {\n            config: config,\n            weekDays: weekDays\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            config: config\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MealGrid, {\n            config: config,\n            weekDays: weekDays,\n            patientData: patientData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 9\n      }, this), viewMode === 'physician' && weekSummary && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meal-summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Week Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Meals Logged:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [weekSummary.totalMealsLogged, \"/21 possible\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Days with Meals:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [weekSummary.daysWithMeals, \"/7 days\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Most Common Food:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [CATEGORY_EMOJIS[weekSummary.mostCommonFood], \" \", weekSummary.mostCommonFood, \" (\", weekSummary.mostCommonFoodCount, \"x)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Added Sugar:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [weekSummary.sugarPercentage, \"% of meals (\", weekSummary.totalSugarMeals, \"/\", weekSummary.totalMealsLogged, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Food Balance:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 538,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: Object.entries(weekSummary.categoryStats).sort(([, a], [, b]) => b - a).slice(0, 3).map(([cat, count]) => `${CATEGORY_EMOJIS[cat]}${count}`).join(' ')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 539,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 461,\n    columnNumber: 5\n  }, this);\n};\n_s(MealContentsChart, \"7kVvkIdEyIN6+zk3/BCaHRz/0xY=\", false, function () {\n  return [usePatientData];\n});\n_c5 = MealContentsChart;\nexport default MealContentsChart;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"XAxis\");\n$RefreshReg$(_c2, \"YAxis\");\n$RefreshReg$(_c3, \"MealCell\");\n$RefreshReg$(_c4, \"MealGrid\");\n$RefreshReg$(_c5, \"MealContentsChart\");","map":{"version":3,"names":["React","useState","useEffect","useRef","ChartContainer","Legend","usePatientData","createChartConfig","jsxDEV","_jsxDEV","DAYS_OF_WEEK","MEAL_TYPES","FOOD_CATEGORIES","SUGAR_CATEGORIES","DEFAULT_WEEK","Date","CATEGORY_EMOJIS","SUGAR_EMOJIS","getChartConfig","isExpanded","containerWidth","maxWidth","Math","min","maxHeight","availableWidth","adjustedPadding","max","adjustedAvailableWidth","dayWidth","totalWidth","width","height","padding","top","right","bottom","left","mealHeight","fontSize","dayLabel","dateLabel","mealLabel","timeLabel","getWeekStart","date","d","day","getDay","diff","getDate","setDate","formatDayLabel","dayNames","formatDateLabel","toLocaleDateString","month","getMealTime","data","mealType","timeKey","getMealData","mealData","forEach","category","key","sugarKey","XAxis","config","weekDays","className","children","map","dayIndex","x","y","textAnchor","fileName","_jsxFileName","lineNumber","columnNumber","x1","y1","x2","y2","_c","YAxis","mealTimes","meal","mealIndex","_c2","MealCell","mealTime","cellWidth","cellHeight","circlesPerRow","circleWidth","circleHeight","minDimension","circleRadius","emojiFontSize","allCategories","fill","stroke","strokeWidth","index","row","floor","col","circleX","circleY","hasCategory","emoji","cx","cy","r","opacity","dominantBaseline","style","fontFamily","_c3","MealGrid","patientData","length","dayData","find","dataDate","toDateString","_c4","MealContentsChart","patientId","onExpand","viewMode","_s","loading","error","currentWeek","setCurrentWeek","containerRef","setContainerWidth","updateContainerWidth","current","offsetWidth","window","addEventListener","removeEventListener","weekStart","Array","from","_","i","handlePrevWeek","prev","handleNextWeek","startOfWeek","endOfWeek","formatDateRange","start","end","startStr","endStr","weekSummary","weekData","filter","categoryStats","sugarStats","s","sugar","totalMealsLogged","daysWithMeals","Set","add","hasAnyFood","some","mostCommonFood","Object","entries","sort","a","b","totalSugarMeals","values","reduce","sum","count","sugarPercentage","toFixed","size","mostCommonFoodCount","title","icon","isLoading","noData","onPrev","onNext","navigationLabel","items","label","color","ref","viewBox","slice","cat","join","_c5","$RefreshReg$"],"sources":["C:/Users/Matteo/Working_Folder/a. MCC Thesis Local/MCC_digital_health_data_visualizations/src/components/patient_charts/MealContentsChart.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport ChartContainer from '../ChartContainer';\nimport Legend from '../Legend';\nimport usePatientData from '../../hooks/usePatientData';\nimport { createChartConfig } from '../chart-utils/ChartConfigFactory';\nimport './MealContentsChart.css';\nimport '../ChartStyles.css';\n\n// --- Constants ---\nconst DAYS_OF_WEEK = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\nconst MEAL_TYPES = ['Breakfast', 'Lunch', 'Dinner'];\nconst FOOD_CATEGORIES = ['Protein', 'Carbohydrates', 'Vegetables', 'Fruit', 'Alcohol'];\nconst SUGAR_CATEGORIES = ['', '1-20g', '20-40g', '40-60g', '60g+'];\nconst DEFAULT_WEEK = new Date(2025, 4, 1);\n\n// Emoji mappings for food categories\nconst CATEGORY_EMOJIS = {\n  'Protein': '🥩',\n  'Carbohydrates': '🍞',\n  'Vegetables': '🥦',\n  'Fruit': '🍎',\n  'Alcohol': '🍷'\n};\n\nconst SUGAR_EMOJIS = {\n  '': '',              // No sugar\n  '1-20g': '🍭',       // Lollipop\n  '20-40g': '🍫',      // Chocolate bar\n  '40-60g': '🍩',      // Donut\n  '60g+': '🎂'         // Cake\n};\n\nconst getChartConfig = (isExpanded, containerWidth = 500) => {\n  // Calculate responsive dimensions based on container width\n  const maxWidth = Math.min(containerWidth - 40, isExpanded ? 700 : 500); // Account for padding\n  const maxHeight = isExpanded ? 400 : 300;\n  \n  // Calculate day width based on available space\n  const availableWidth = maxWidth - 160; // Account for left padding (130) + right padding (30)\n  \n  // Ensure minimum viable width for the chart\n  if (availableWidth < 420) { // 7 days * 60px minimum\n    // For very small containers, reduce padding to fit content\n    const adjustedPadding = Math.max(100, availableWidth * 0.2); // At least 100px padding for \"Breakfast\"\n    const adjustedAvailableWidth = availableWidth - (160 - adjustedPadding);\n    const dayWidth = Math.max(50, adjustedAvailableWidth / 7);\n    const totalWidth = adjustedPadding + (dayWidth * 7);\n    \n    return {\n      width: totalWidth,\n      height: maxHeight,\n      padding: { top: 40, right: 20, bottom: 80, left: adjustedPadding },\n      dayWidth: dayWidth,\n      mealHeight: isExpanded ? 80 : 60,\n      fontSize: {\n        dayLabel: isExpanded ? 10 : 8,\n        dateLabel: isExpanded ? 8 : 6,\n        mealLabel: isExpanded ? 8 : 6,\n        timeLabel: isExpanded ? 6 : 5,\n      },\n    };\n  }\n  \n  const dayWidth = Math.max(60, Math.min(85, availableWidth / 7)); // Min 60px to accommodate emojis and circles\n  \n  // Recalculate total width based on actual day width\n  const totalWidth = 140 + (dayWidth * 7);\n  \n  return {\n    width: totalWidth,\n    height: maxHeight,\n    padding: { top: 40, right: 30, bottom: 80, left: 110 },\n    dayWidth: dayWidth,\n    mealHeight: isExpanded ? 80 : 60,\n    fontSize: {\n      dayLabel: isExpanded ? 10 : 8,\n      dateLabel: isExpanded ? 8 : 6,\n      mealLabel: isExpanded ? 8 : 6,\n      timeLabel: isExpanded ? 6 : 5,\n    },\n  };\n};\n\n// --- Helper Functions ---\nconst getWeekStart = (date) => {\n  const d = new Date(date);\n  const day = d.getDay();\n  const diff = d.getDate() - day;\n  return new Date(d.setDate(diff));\n};\n\nconst formatDayLabel = (date) => {\n  const dayNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n  return dayNames[date.getDay()];\n};\nconst formatDateLabel = (date) => date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\n\nconst getMealTime = (data, mealType) => {\n  const timeKey = `${mealType}_Time`;\n  return data[timeKey] || '';\n};\n\nconst getMealData = (data, mealType) => {\n  const mealData = {};\n  FOOD_CATEGORIES.forEach(category => {\n    const key = `${mealType}_${category}`;\n    mealData[category] = data[key] === 1 || data[key] === '1';\n  });\n  \n  const sugarKey = `${mealType}_Added_Sugar`;\n  mealData['Added Sugar'] = data[sugarKey] || '';\n  \n  return mealData;\n};\n\n// --- Chart Sub-components ---\n\nconst XAxis = ({ config, weekDays }) => (\n  <g className=\"x-axis\">\n    {weekDays.map((day, dayIndex) => {\n      const x = config.padding.left + dayIndex * config.dayWidth + config.dayWidth / 2;\n      return (\n        <g key={dayIndex}>\n          <text\n            x={x}\n            y={config.height - config.padding.bottom + 30}\n            fontSize={config.fontSize.dayLabel}\n            textAnchor=\"middle\"\n            className=\"x-axis-day-label\"\n          >\n            {formatDayLabel(day)}\n          </text>\n          <text\n            x={x}\n            y={config.height - config.padding.bottom + 45}\n            fontSize={config.fontSize.dateLabel}\n            textAnchor=\"middle\"\n            className=\"x-axis-date-label\"\n          >\n            {day.getDate()}\n          </text>\n          <line\n            className=\"chart-grid-line-vertical\"\n            x1={config.padding.left + dayIndex * config.dayWidth}\n            y1={config.padding.top}\n            x2={config.padding.left + dayIndex * config.dayWidth}\n            y2={config.height - config.padding.bottom}\n          />\n        </g>\n      );\n    })}\n    <line\n      className=\"chart-grid-line-vertical\"\n      x1={config.padding.left + 7 * config.dayWidth}\n      y1={config.padding.top}\n      x2={config.padding.left + 7 * config.dayWidth}\n      y2={config.height - config.padding.bottom}\n    />\n  </g>\n);\n\nconst YAxis = ({ config }) => {\n  const mealTimes = {\n    'Breakfast': '6-10am',\n    'Lunch': '11-2pm', \n    'Dinner': '5-9pm'\n  };\n\n  return (\n    <g className=\"y-axis\">\n      {MEAL_TYPES.map((meal, mealIndex) => {\n        const y = config.padding.top + mealIndex * config.mealHeight + config.mealHeight / 2;\n        return (\n          <g key={meal}>\n            <text\n              x={config.padding.left - 25}\n              y={y - 5}\n              fontSize={config.fontSize.mealLabel}\n              textAnchor=\"end\"\n              className=\"y-axis-title\"\n            >\n              {meal}\n            </text>\n            <text\n              x={config.padding.left - 25}\n              y={y + 10}\n              fontSize={config.fontSize.timeLabel}\n              textAnchor=\"end\"\n              className=\"chart-tick-label\"\n            >\n              {mealTimes[meal]}\n            </text>\n            <line\n              className=\"chart-grid-line-horizontal\"\n              x1={config.padding.left}\n              y1={config.padding.top + mealIndex * config.mealHeight}\n              x2={config.padding.left + 7 * config.dayWidth}\n              y2={config.padding.top + mealIndex * config.mealHeight}\n            />\n          </g>\n        );\n      })}\n      <line\n        className=\"chart-grid-line-horizontal\"\n        x1={config.padding.left}\n        y1={config.padding.top + 3 * config.mealHeight}\n        x2={config.padding.left + 7 * config.dayWidth}\n        y2={config.padding.top + 3 * config.mealHeight}\n      />\n    </g>\n  );\n};\n\nconst MealCell = ({ config, dayIndex, mealIndex, mealData, mealTime }) => {\n  const x = config.padding.left + dayIndex * config.dayWidth + 5;\n  const y = config.padding.top + mealIndex * config.mealHeight + 5;\n  const cellWidth = config.dayWidth - 10;\n  const cellHeight = config.mealHeight - 10;\n  \n  // Calculate grid layout for 6 circles (2x3 grid)\n  const circlesPerRow = 3;\n  const circleWidth = cellWidth / circlesPerRow;\n  const circleHeight = (cellHeight - 20) / 2; // Reserve space for time\n  \n  // Calculate responsive circle radius and emoji size based on cell dimensions\n  const minDimension = Math.min(circleWidth, circleHeight);\n  const circleRadius = Math.max(6, Math.min(12, minDimension * 0.3)); // Min 6px, max 12px, 30% of min dimension\n  const emojiFontSize = Math.max(6, Math.min(10, minDimension * 0.25)); // Min 6px, max 10px, 25% of min dimension\n  \n  // Define the 6 food categories in order (5 main + 1 sugar)\n  const allCategories = [...FOOD_CATEGORIES, 'Added Sugar'];\n  \n  return (\n    <g className=\"meal-cell\">\n      {/* Background */}\n      <rect\n        x={x}\n        y={y}\n        width={cellWidth}\n        height={cellHeight}\n        fill=\"#f9f9f9\"\n        stroke=\"#ddd\"\n        strokeWidth=\"1\"\n      />\n      \n      {/* Meal time at the top */}\n      <text\n        x={x + cellWidth / 2}\n        y={y + 12}\n        fontSize={config.fontSize.timeLabel}\n        textAnchor=\"middle\"\n        className=\"time-label\"\n      >\n        {mealTime}\n      </text>\n      \n      {/* 6 placeholder circles with food category emojis */}\n      {allCategories.map((category, index) => {\n        const row = Math.floor(index / circlesPerRow);\n        const col = index % circlesPerRow;\n        const circleX = x + col * circleWidth + circleWidth / 2;\n        const circleY = y + 20 + row * circleHeight + circleHeight / 2;\n        \n        // Check if category is present\n        let hasCategory = false;\n        let emoji = '';\n        \n        if (category === 'Added Sugar') {\n          hasCategory = mealData[category] && SUGAR_EMOJIS[mealData[category]];\n          emoji = SUGAR_EMOJIS[mealData[category]] || '';\n        } else {\n          hasCategory = mealData[category];\n          emoji = CATEGORY_EMOJIS[category] || '';\n        }\n        \n        return (\n          <g key={category}>\n            {/* Placeholder circle - always grey */}\n            <circle\n              cx={circleX}\n              cy={circleY}\n              r={circleRadius}\n              fill=\"#f5f5f5\"\n              stroke=\"#ddd\"\n              strokeWidth=\"1\"\n              opacity={0.3}\n            />\n            {/* Emoji if category is present */}\n            {hasCategory && emoji && (\n              <text\n                x={circleX}\n                y={circleY}\n                fontSize={emojiFontSize}\n                textAnchor=\"middle\"\n                dominantBaseline=\"central\"\n                style={{ fontFamily: 'Apple Color Emoji, Segoe UI Emoji, Noto Color Emoji, sans-serif' }}\n              >\n                {emoji}\n              </text>\n            )}\n          </g>\n        );\n      })}\n    </g>\n  );\n};\n\nconst MealGrid = ({ config, weekDays, patientData }) => {\n  if (!patientData || patientData.length === 0) {\n    return null;\n  }\n\n  return (\n    <g className=\"meal-grid\">\n      {weekDays.map((day, dayIndex) => {\n        const dayData = patientData.find(d => {\n          const dataDate = new Date(d.Date);\n          return dataDate.toDateString() === day.toDateString();\n        });\n\n        if (!dayData) return null;\n\n        return MEAL_TYPES.map((meal, mealIndex) => {\n          const mealData = getMealData(dayData, meal);\n          const mealTime = getMealTime(dayData, meal);\n          \n          return (\n            <MealCell\n              key={`${dayIndex}-${mealIndex}`}\n              config={config}\n              dayIndex={dayIndex}\n              mealIndex={mealIndex}\n              mealData={mealData}\n              mealTime={mealTime}\n            />\n          );\n        });\n      })}\n    </g>\n  );\n};\n\n\n// --- Main Component ---\nconst MealContentsChart = ({ patientId, isExpanded = false, onExpand, viewMode = 'patient' }) => {\n  const { mealData: patientData, loading, error } = usePatientData(patientId);\n  const [currentWeek, setCurrentWeek] = useState(new Date(2025, 4, 1));\n  const containerRef = useRef(null);\n  const [containerWidth, setContainerWidth] = useState(500);\n\n  const config = getChartConfig(isExpanded, containerWidth);\n  \n  // Measure container width for responsive sizing\n  useEffect(() => {\n    const updateContainerWidth = () => {\n      if (containerRef.current) {\n        const width = containerRef.current.offsetWidth;\n        setContainerWidth(width);\n      }\n    };\n\n    updateContainerWidth();\n    window.addEventListener('resize', updateContainerWidth);\n    return () => window.removeEventListener('resize', updateContainerWidth);\n  }, [isExpanded]);\n\n  const weekStart = getWeekStart(currentWeek);\n  const weekDays = Array.from({ length: 7 }, (_, i) => {\n    const day = new Date(weekStart);\n    day.setDate(weekStart.getDate() + i);\n    return day;\n  });\n\n  const handlePrevWeek = () => setCurrentWeek(prev => new Date(new Date(prev).setDate(prev.getDate() - 7)));\n  const handleNextWeek = () => setCurrentWeek(prev => new Date(new Date(prev).setDate(prev.getDate() + 7)));\n\n  const startOfWeek = new Date(weekStart);\n  const endOfWeek = new Date(startOfWeek);\n  endOfWeek.setDate(endOfWeek.getDate() + 6);\n\n  const formatDateRange = (start, end) => {\n    const startStr = start.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\n    const endStr = end.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\n    return `${startStr} to ${endStr}`;\n  };\n\n  // Calculate summary statistics for physician view\n  const weekSummary = useState(() => {\n    if (!patientData || patientData.length === 0) return null;\n\n    const weekData = patientData.filter(d => {\n      const dataDate = new Date(d.Date);\n      return dataDate >= startOfWeek && dataDate <= endOfWeek;\n    });\n\n    if (weekData.length === 0) return null;\n\n    // Count food categories across all meals\n    const categoryStats = {};\n    FOOD_CATEGORIES.forEach(category => {\n      categoryStats[category] = 0;\n    });\n\n    // Count sugar levels\n    const sugarStats = {};\n    SUGAR_CATEGORIES.filter(s => s !== '').forEach(sugar => {\n      sugarStats[sugar] = 0;\n    });\n\n    let totalMealsLogged = 0;\n    let daysWithMeals = new Set();\n\n    weekData.forEach(dayData => {\n      daysWithMeals.add(dayData.Date);\n      \n      MEAL_TYPES.forEach(meal => {\n        const mealData = getMealData(dayData, meal);\n        const hasAnyFood = FOOD_CATEGORIES.some(category => mealData[category]);\n        \n        if (hasAnyFood) {\n          totalMealsLogged++;\n          \n          // Count each food category\n          FOOD_CATEGORIES.forEach(category => {\n            if (mealData[category]) {\n              categoryStats[category]++;\n            }\n          });\n\n          // Count sugar levels\n          if (mealData['Added Sugar'] && mealData['Added Sugar'] !== '') {\n            sugarStats[mealData['Added Sugar']]++;\n          }\n        }\n      });\n    });\n\n    // Find most common food category\n    const mostCommonFood = Object.entries(categoryStats)\n      .sort(([,a], [,b]) => b - a)[0];\n\n    // Calculate sugar frequency\n    const totalSugarMeals = Object.values(sugarStats).reduce((sum, count) => sum + count, 0);\n    const sugarPercentage = totalMealsLogged > 0 ? \n      ((totalSugarMeals / totalMealsLogged) * 100).toFixed(0) : 0;\n\n    return {\n      totalMealsLogged,\n      daysWithMeals: daysWithMeals.size,\n      mostCommonFood: mostCommonFood[0],\n      mostCommonFoodCount: mostCommonFood[1],\n      categoryStats,\n      sugarPercentage,\n      totalSugarMeals\n    };\n  }, [patientData, startOfWeek, endOfWeek]);\n\n\n  \n  return (\n    <ChartContainer\n      title=\"Meal Contents\"\n      icon=\"🍽️\"\n      isLoading={loading}\n      error={error}\n      noData={!loading && !error && (!patientData || patientData.length === 0)}\n      isExpanded={isExpanded}\n      onExpand={onExpand}\n      onPrev={handlePrevWeek}\n      onNext={handleNextWeek}\n      navigationLabel={formatDateRange(startOfWeek, endOfWeek)}\n    >\n      <div className=\"meal-contents-chart-container\">\n        <div className=\"meal-contents-legends-wrapper\">\n            <Legend \n              title=\"Food Categories\" \n              items={FOOD_CATEGORIES.map(category => ({\n                label: `${CATEGORY_EMOJIS[category]} ${category}`,\n                color: null\n              }))}\n            />\n            <Legend \n              title=\"Sugar Levels\" \n              items={SUGAR_CATEGORIES.filter(sugar => sugar !== '').map(sugar => ({\n                label: `${SUGAR_EMOJIS[sugar]} ${sugar}`,\n                color: null\n              }))}\n            />\n        </div>\n        <div className={`meal-chart-wrapper ${isExpanded ? 'expanded' : ''}`} ref={containerRef}>\n          <svg \n            width={config.width} \n            height={config.height} \n            viewBox={`0 0 ${config.width} ${config.height}`} \n            className=\"meal-chart\"\n            style={{ maxWidth: '100%', height: 'auto' }}\n          >\n            <XAxis config={config} weekDays={weekDays} />\n            <YAxis config={config} />\n            <MealGrid \n              config={config} \n              weekDays={weekDays} \n              patientData={patientData} \n            />\n          </svg>\n        </div>\n\n        {/* Show summary for physician view only */}\n        {viewMode === 'physician' && weekSummary && (\n          <div className=\"meal-summary\">\n            <h4>Week Summary</h4>\n            <div className=\"summary-stats\">\n              <div className=\"stat-item\">\n                <span className=\"stat-label\">Meals Logged:</span>\n                <span className=\"stat-value\">\n                  {weekSummary.totalMealsLogged}/21 possible\n                </span>\n              </div>\n              <div className=\"stat-item\">\n                <span className=\"stat-label\">Days with Meals:</span>\n                <span className=\"stat-value\">\n                  {weekSummary.daysWithMeals}/7 days\n                </span>\n              </div>\n              <div className=\"stat-item\">\n                <span className=\"stat-label\">Most Common Food:</span>\n                <span className=\"stat-value\">\n                  {CATEGORY_EMOJIS[weekSummary.mostCommonFood]} {weekSummary.mostCommonFood} ({weekSummary.mostCommonFoodCount}x)\n                </span>\n              </div>\n              <div className=\"stat-item\">\n                <span className=\"stat-label\">Added Sugar:</span>\n                <span className=\"stat-value\">\n                  {weekSummary.sugarPercentage}% of meals ({weekSummary.totalSugarMeals}/{weekSummary.totalMealsLogged})\n                </span>\n              </div>\n              <div className=\"stat-item\">\n                <span className=\"stat-label\">Food Balance:</span>\n                <span className=\"stat-value\">\n                  {Object.entries(weekSummary.categoryStats)\n                    .sort(([,a], [,b]) => b - a)\n                    .slice(0, 3)\n                    .map(([cat, count]) => `${CATEGORY_EMOJIS[cat]}${count}`)\n                    .join(' ')}\n                </span>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </ChartContainer>\n  );\n};\n\nexport default MealContentsChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}