{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matteo\\\\Working_Folder\\\\a. MCC Thesis Local\\\\MCC_digital_health_data_visualizations\\\\src\\\\components\\\\PhysicianVisualizationWrapper.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport VisualizationWrapper from './VisualizationWrapper';\nimport './PhysicianVisualizationWrapper.css';\n\n/**\r\n * Extended VisualizationWrapper for physician view with data summary text boxes\r\n * This component will be used when you add text boxes to summarize data in the physician view\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PhysicianVisualizationWrapper = ({\n  id,\n  className,\n  selectedViz,\n  availableVisualizations,\n  allVisualizations,\n  onVisualizationChange,\n  onExpand,\n  isExpanded,\n  renderVisualization,\n  disabled = false,\n  placeholderText = \"No data available for this patient.\",\n  // New props for summary functionality\n  showSummary = false,\n  summaryText = \"\",\n  onSummaryChange = null,\n  summaryPlaceholder = \"Enter data summary...\"\n}) => {\n  _s();\n  const [localSummaryText, setLocalSummaryText] = useState(summaryText);\n  const handleSummaryChange = e => {\n    const newText = e.target.value;\n    setLocalSummaryText(newText);\n    if (onSummaryChange) {\n      onSummaryChange(id, newText);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `physician-visualization-wrapper ${className}`,\n    children: [/*#__PURE__*/_jsxDEV(VisualizationWrapper, {\n      id: id,\n      className: className,\n      selectedViz: selectedViz,\n      availableVisualizations: availableVisualizations,\n      allVisualizations: allVisualizations,\n      onVisualizationChange: onVisualizationChange,\n      onExpand: onExpand,\n      isExpanded: isExpanded,\n      renderVisualization: renderVisualization,\n      disabled: disabled,\n      placeholderText: placeholderText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), showSummary && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"summary-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: `summary-${id}`,\n        className: \"summary-label\",\n        children: \"Data Summary:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: `summary-${id}`,\n        className: \"summary-textarea\",\n        value: localSummaryText,\n        onChange: handleSummaryChange,\n        placeholder: summaryPlaceholder,\n        rows: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(PhysicianVisualizationWrapper, \"mClWEtKj+R/PYdgNEx3sZam9wbI=\");\n_c = PhysicianVisualizationWrapper;\nexport default PhysicianVisualizationWrapper;\nvar _c;\n$RefreshReg$(_c, \"PhysicianVisualizationWrapper\");","map":{"version":3,"names":["React","useState","VisualizationWrapper","jsxDEV","_jsxDEV","PhysicianVisualizationWrapper","id","className","selectedViz","availableVisualizations","allVisualizations","onVisualizationChange","onExpand","isExpanded","renderVisualization","disabled","placeholderText","showSummary","summaryText","onSummaryChange","summaryPlaceholder","_s","localSummaryText","setLocalSummaryText","handleSummaryChange","e","newText","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","onChange","placeholder","rows","_c","$RefreshReg$"],"sources":["C:/Users/Matteo/Working_Folder/a. MCC Thesis Local/MCC_digital_health_data_visualizations/src/components/PhysicianVisualizationWrapper.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport VisualizationWrapper from './VisualizationWrapper';\r\nimport './PhysicianVisualizationWrapper.css';\r\n\r\n/**\r\n * Extended VisualizationWrapper for physician view with data summary text boxes\r\n * This component will be used when you add text boxes to summarize data in the physician view\r\n */\r\nconst PhysicianVisualizationWrapper = ({ \r\n  id, \r\n  className, \r\n  selectedViz, \r\n  availableVisualizations, \r\n  allVisualizations,\r\n  onVisualizationChange, \r\n  onExpand, \r\n  isExpanded, \r\n  renderVisualization,\r\n  disabled = false,\r\n  placeholderText = \"No data available for this patient.\",\r\n  // New props for summary functionality\r\n  showSummary = false,\r\n  summaryText = \"\",\r\n  onSummaryChange = null,\r\n  summaryPlaceholder = \"Enter data summary...\"\r\n}) => {\r\n  const [localSummaryText, setLocalSummaryText] = useState(summaryText);\r\n\r\n  const handleSummaryChange = (e) => {\r\n    const newText = e.target.value;\r\n    setLocalSummaryText(newText);\r\n    if (onSummaryChange) {\r\n      onSummaryChange(id, newText);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`physician-visualization-wrapper ${className}`}>\r\n      <VisualizationWrapper\r\n        id={id}\r\n        className={className}\r\n        selectedViz={selectedViz}\r\n        availableVisualizations={availableVisualizations}\r\n        allVisualizations={allVisualizations}\r\n        onVisualizationChange={onVisualizationChange}\r\n        onExpand={onExpand}\r\n        isExpanded={isExpanded}\r\n        renderVisualization={renderVisualization}\r\n        disabled={disabled}\r\n        placeholderText={placeholderText}\r\n      />\r\n      \r\n      {/* Summary text box - will be shown when showSummary is true */}\r\n      {showSummary && (\r\n        <div className=\"summary-section\">\r\n          <label htmlFor={`summary-${id}`} className=\"summary-label\">\r\n            Data Summary:\r\n          </label>\r\n          <textarea\r\n            id={`summary-${id}`}\r\n            className=\"summary-textarea\"\r\n            value={localSummaryText}\r\n            onChange={handleSummaryChange}\r\n            placeholder={summaryPlaceholder}\r\n            rows={3}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PhysicianVisualizationWrapper;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,oBAAoB,MAAM,wBAAwB;AACzD,OAAO,qCAAqC;;AAE5C;AACA;AACA;AACA;AAHA,SAAAC,MAAA,IAAAC,OAAA;AAIA,MAAMC,6BAA6B,GAAGA,CAAC;EACrCC,EAAE;EACFC,SAAS;EACTC,WAAW;EACXC,uBAAuB;EACvBC,iBAAiB;EACjBC,qBAAqB;EACrBC,QAAQ;EACRC,UAAU;EACVC,mBAAmB;EACnBC,QAAQ,GAAG,KAAK;EAChBC,eAAe,GAAG,qCAAqC;EACvD;EACAC,WAAW,GAAG,KAAK;EACnBC,WAAW,GAAG,EAAE;EAChBC,eAAe,GAAG,IAAI;EACtBC,kBAAkB,GAAG;AACvB,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGtB,QAAQ,CAACiB,WAAW,CAAC;EAErE,MAAMM,mBAAmB,GAAIC,CAAC,IAAK;IACjC,MAAMC,OAAO,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IAC9BL,mBAAmB,CAACG,OAAO,CAAC;IAC5B,IAAIP,eAAe,EAAE;MACnBA,eAAe,CAACb,EAAE,EAAEoB,OAAO,CAAC;IAC9B;EACF,CAAC;EAED,oBACEtB,OAAA;IAAKG,SAAS,EAAE,mCAAmCA,SAAS,EAAG;IAAAsB,QAAA,gBAC7DzB,OAAA,CAACF,oBAAoB;MACnBI,EAAE,EAAEA,EAAG;MACPC,SAAS,EAAEA,SAAU;MACrBC,WAAW,EAAEA,WAAY;MACzBC,uBAAuB,EAAEA,uBAAwB;MACjDC,iBAAiB,EAAEA,iBAAkB;MACrCC,qBAAqB,EAAEA,qBAAsB;MAC7CC,QAAQ,EAAEA,QAAS;MACnBC,UAAU,EAAEA,UAAW;MACvBC,mBAAmB,EAAEA,mBAAoB;MACzCC,QAAQ,EAAEA,QAAS;MACnBC,eAAe,EAAEA;IAAgB;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,EAGDhB,WAAW,iBACVb,OAAA;MAAKG,SAAS,EAAC,iBAAiB;MAAAsB,QAAA,gBAC9BzB,OAAA;QAAO8B,OAAO,EAAE,WAAW5B,EAAE,EAAG;QAACC,SAAS,EAAC,eAAe;QAAAsB,QAAA,EAAC;MAE3D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACR7B,OAAA;QACEE,EAAE,EAAE,WAAWA,EAAE,EAAG;QACpBC,SAAS,EAAC,kBAAkB;QAC5BqB,KAAK,EAAEN,gBAAiB;QACxBa,QAAQ,EAAEX,mBAAoB;QAC9BY,WAAW,EAAEhB,kBAAmB;QAChCiB,IAAI,EAAE;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACZ,EAAA,CA9DIhB,6BAA6B;AAAAiC,EAAA,GAA7BjC,6BAA6B;AAgEnC,eAAeA,6BAA6B;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}