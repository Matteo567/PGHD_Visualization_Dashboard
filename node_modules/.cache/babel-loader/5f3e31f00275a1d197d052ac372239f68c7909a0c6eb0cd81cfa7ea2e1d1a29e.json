{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matteo\\\\Working_Folder\\\\a. MCC Thesis Local\\\\MCC_digital_health_data_visualizations\\\\src\\\\components\\\\Legend.js\";\nimport React from 'react';\nimport { getConsistentFontSizes } from '../constants';\nimport './ChartStyles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Legend = ({\n  title,\n  items,\n  orientation = 'horizontal',\n  // horizontal | vertical\n  size = 'medium',\n  // small | medium | large\n  isExpanded = false // New prop for consistent scaling\n}) => {\n  if (!items || items.length === 0) {\n    return null;\n  }\n\n  // Get consistent font sizes based on expanded state\n  const fontSizes = getConsistentFontSizes(isExpanded);\n\n  // Calculate consistent sizing based on expanded state\n  const getLegendStyles = () => {\n    const baseStyles = {\n      padding: isExpanded ? '20px' : '16px',\n      gap: isExpanded ? '12px' : '8px',\n      fontSize: fontSizes.medium,\n      minHeight: isExpanded ? '100px' : '80px',\n      maxWidth: isExpanded ? 'none' : '700px'\n    };\n    return baseStyles;\n  };\n  const getItemStyles = () => {\n    return {\n      padding: isExpanded ? '10px 16px' : '8px 12px',\n      fontSize: fontSizes.small,\n      gap: isExpanded ? '10px' : '8px'\n    };\n  };\n  const legendStyles = getLegendStyles();\n  const itemStyles = getItemStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `legend-container legend-${orientation} legend-${size}`,\n    style: legendStyles,\n    children: [title && /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"legend-title\",\n      style: {\n        fontSize: fontSizes.large,\n        marginBottom: isExpanded ? '16px' : '12px'\n      },\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"legend-items\",\n      style: {\n        gap: legendStyles.gap\n      },\n      children: items.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"legend-item\",\n        style: {\n          ...item.style,\n          ...itemStyles\n        },\n        title: item.description || item.label,\n        children: [item.color && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"legend-color-indicator\",\n          style: {\n            backgroundColor: item.color,\n            width: isExpanded ? '16px' : '12px',\n            height: isExpanded ? '16px' : '12px'\n          },\n          \"aria-label\": `Color indicator for ${item.label}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this), item.icon && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"legend-icon\",\n          style: {\n            fontSize: isExpanded ? '18px' : '14px'\n          },\n          \"aria-label\": `Icon for ${item.label}`,\n          children: item.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this), item.shape && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `legend-shape legend-shape-${item.shape}`,\n          style: {\n            ...item.shapeStyle,\n            width: isExpanded ? '16px' : '12px',\n            height: isExpanded ? '16px' : '12px'\n          },\n          \"aria-label\": `${item.shape} indicator for ${item.label}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"legend-label\",\n          children: item.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_c = Legend;\nexport default Legend;\nvar _c;\n$RefreshReg$(_c, \"Legend\");","map":{"version":3,"names":["React","getConsistentFontSizes","jsxDEV","_jsxDEV","Legend","title","items","orientation","size","isExpanded","length","fontSizes","getLegendStyles","baseStyles","padding","gap","fontSize","medium","minHeight","maxWidth","getItemStyles","small","legendStyles","itemStyles","className","style","children","large","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","description","label","color","backgroundColor","width","height","icon","shape","shapeStyle","_c","$RefreshReg$"],"sources":["C:/Users/Matteo/Working_Folder/a. MCC Thesis Local/MCC_digital_health_data_visualizations/src/components/Legend.js"],"sourcesContent":["import React from 'react';\r\nimport { getConsistentFontSizes } from '../constants';\r\nimport './ChartStyles.css';\r\n\r\nconst Legend = ({ \r\n  title, \r\n  items, \r\n  orientation = 'horizontal', // horizontal | vertical\r\n  size = 'medium', // small | medium | large\r\n  isExpanded = false // New prop for consistent scaling\r\n}) => {\r\n  if (!items || items.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  // Get consistent font sizes based on expanded state\r\n  const fontSizes = getConsistentFontSizes(isExpanded);\r\n  \r\n  // Calculate consistent sizing based on expanded state\r\n  const getLegendStyles = () => {\r\n    const baseStyles = {\r\n      padding: isExpanded ? '20px' : '16px',\r\n      gap: isExpanded ? '12px' : '8px',\r\n      fontSize: fontSizes.medium,\r\n      minHeight: isExpanded ? '100px' : '80px',\r\n      maxWidth: isExpanded ? 'none' : '700px'\r\n    };\r\n\r\n    return baseStyles;\r\n  };\r\n\r\n  const getItemStyles = () => {\r\n    return {\r\n      padding: isExpanded ? '10px 16px' : '8px 12px',\r\n      fontSize: fontSizes.small,\r\n      gap: isExpanded ? '10px' : '8px'\r\n    };\r\n  };\r\n\r\n  const legendStyles = getLegendStyles();\r\n  const itemStyles = getItemStyles();\r\n\r\n  return (\r\n    <div \r\n      className={`legend-container legend-${orientation} legend-${size}`}\r\n      style={legendStyles}\r\n    >\r\n      {title && (\r\n        <h4 \r\n          className=\"legend-title\"\r\n          style={{ fontSize: fontSizes.large, marginBottom: isExpanded ? '16px' : '12px' }}\r\n        >\r\n          {title}\r\n        </h4>\r\n      )}\r\n      <div \r\n        className=\"legend-items\"\r\n        style={{ gap: legendStyles.gap }}\r\n      >\r\n        {items.map((item, index) => (\r\n          <div \r\n            key={index} \r\n            className=\"legend-item\" \r\n            style={{ ...item.style, ...itemStyles }}\r\n            title={item.description || item.label}\r\n          >\r\n            {/* Color indicator */}\r\n            {item.color && (\r\n              <span \r\n                className=\"legend-color-indicator\" \r\n                style={{ \r\n                  backgroundColor: item.color,\r\n                  width: isExpanded ? '16px' : '12px',\r\n                  height: isExpanded ? '16px' : '12px'\r\n                }}\r\n                aria-label={`Color indicator for ${item.label}`}\r\n              />\r\n            )}\r\n            \r\n            {/* Icon/emoji indicator */}\r\n            {item.icon && (\r\n              <span \r\n                className=\"legend-icon\"\r\n                style={{ fontSize: isExpanded ? '18px' : '14px' }}\r\n                aria-label={`Icon for ${item.label}`}\r\n              >\r\n                {item.icon}\r\n              </span>\r\n            )}\r\n            \r\n            {/* Shape indicator for special cases */}\r\n            {item.shape && (\r\n              <span \r\n                className={`legend-shape legend-shape-${item.shape}`}\r\n                style={{ \r\n                  ...item.shapeStyle,\r\n                  width: isExpanded ? '16px' : '12px',\r\n                  height: isExpanded ? '16px' : '12px'\r\n                }}\r\n                aria-label={`${item.shape} indicator for ${item.label}`}\r\n              />\r\n            )}\r\n            \r\n            {/* Label */}\r\n            <span className=\"legend-label\">{item.label}</span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Legend;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}