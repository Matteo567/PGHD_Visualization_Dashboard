{"ast":null,"code":"/*\r\n App.js - Main Health Dashboard Application Component\r\n \r\n This is the root component that provides the main application structure.\r\n It manages the role toggle between Patient and Physician views, patient selection,\r\n and provides the main routing structure for the dashboard.\r\n \r\n Features:\r\n - Role toggle between Patient and Physician views\r\n - Patient selection from 100 synthetic patients\r\n - Unified dashboard routing with lazy loading\r\n - Error boundary and loading state management\r\n - Header with application title and controls\r\n \r\n Component Structure:\r\n - Header: Contains title, role toggle, and patient selector\r\n - Main: Contains the dashboard with error boundary and loading states\r\n - Dashboard: Renders either PatientDashboard or PhysicianDashboard based on role\r\n \r\n State Management:\r\n - selectedPatient: Currently selected patient ID\r\n - currentRole: Current view mode ('patient' or 'physician')\r\n */import React,{useState,Suspense}from'react';import PatientSelector from'./PatientSelector';import LoadingSpinner from'./components/ui/LoadingSpinner';import ErrorBoundary from'./components/ErrorBoundary';import Switch from'./components/ui/Switch';import{PATIENTS}from'./constants/index';import'./App.css';// Lazy load the unified dashboard component for better performance\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Dashboard=/*#__PURE__*/React.lazy(()=>import('./components/Dashboard'));/*\r\n   Main Health Dashboard Application\r\n   Features both Patient and Physician views with role toggle\r\n   */function App(){const[selectedPatient,setSelectedPatient]=useState('Patient_001');const[currentRole,setCurrentRole]=useState('patient');// 'patient' or 'physician'\nconst toggleRole=()=>{setCurrentRole(prev=>prev==='patient'?'physician':'patient');};return/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsx(\"header\",{className:\"app-header\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"header-content\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Health Dashboard\"}),/*#__PURE__*/_jsx(\"div\",{className:\"role-toggle\",children:/*#__PURE__*/_jsx(Switch,{checked:currentRole==='physician',onChange:toggleRole,leftLabel:\"Patient View\",rightLabel:\"Physician View\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"patient-selector\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"patient-select\",children:\"Select Patient:\"}),/*#__PURE__*/_jsx(PatientSelector,{id:\"patient-select\",patients:PATIENTS,value:selectedPatient,onChange:setSelectedPatient})]})]})}),/*#__PURE__*/_jsx(\"main\",{className:\"app-main\",children:/*#__PURE__*/_jsx(ErrorBoundary,{children:/*#__PURE__*/_jsx(Suspense,{fallback:/*#__PURE__*/_jsx(LoadingSpinner,{message:\"Loading dashboard...\"}),children:/*#__PURE__*/_jsx(Dashboard,{patientId:selectedPatient,viewMode:currentRole})})})})]});}export default App;","map":{"version":3,"names":["React","useState","Suspense","PatientSelector","LoadingSpinner","ErrorBoundary","Switch","PATIENTS","jsx","_jsx","jsxs","_jsxs","Dashboard","lazy","App","selectedPatient","setSelectedPatient","currentRole","setCurrentRole","toggleRole","prev","className","children","checked","onChange","leftLabel","rightLabel","htmlFor","id","patients","value","fallback","message","patientId","viewMode"],"sources":["C:/Users/Matteo/Working_Folder/a. MCC Thesis Local/Health_data_dashboard-MCC_project_checkpoint/src/App.js"],"sourcesContent":["/*\r\n App.js - Main Health Dashboard Application Component\r\n \r\n This is the root component that provides the main application structure.\r\n It manages the role toggle between Patient and Physician views, patient selection,\r\n and provides the main routing structure for the dashboard.\r\n \r\n Features:\r\n - Role toggle between Patient and Physician views\r\n - Patient selection from 100 synthetic patients\r\n - Unified dashboard routing with lazy loading\r\n - Error boundary and loading state management\r\n - Header with application title and controls\r\n \r\n Component Structure:\r\n - Header: Contains title, role toggle, and patient selector\r\n - Main: Contains the dashboard with error boundary and loading states\r\n - Dashboard: Renders either PatientDashboard or PhysicianDashboard based on role\r\n \r\n State Management:\r\n - selectedPatient: Currently selected patient ID\r\n - currentRole: Current view mode ('patient' or 'physician')\r\n */\r\n\r\nimport React, { useState, Suspense } from 'react';\r\nimport PatientSelector from './PatientSelector';\r\nimport LoadingSpinner from './components/ui/LoadingSpinner';\r\nimport ErrorBoundary from './components/ErrorBoundary';\r\nimport Switch from './components/ui/Switch';\r\nimport { PATIENTS } from './constants/index';\r\nimport './App.css';\r\n\r\n  // Lazy load the unified dashboard component for better performance\r\n  const Dashboard = React.lazy(() => import('./components/Dashboard'));\r\n\r\n  /*\r\n   Main Health Dashboard Application\r\n   Features both Patient and Physician views with role toggle\r\n   */\r\nfunction App() {\r\n  const [selectedPatient, setSelectedPatient] = useState('Patient_001');\r\n  const [currentRole, setCurrentRole] = useState('patient'); // 'patient' or 'physician'\r\n\r\n  const toggleRole = () => {\r\n    setCurrentRole(prev => prev === 'patient' ? 'physician' : 'patient');\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <header className=\"app-header\">\r\n        <div className=\"header-content\">\r\n          <h1>Health Dashboard</h1>\r\n          \r\n          {/* Role Toggle */}\r\n          <div className=\"role-toggle\">\r\n            <Switch\r\n              checked={currentRole === 'physician'}\r\n              onChange={toggleRole}\r\n              leftLabel=\"Patient View\"\r\n              rightLabel=\"Physician View\"\r\n            />\r\n          </div>\r\n\r\n          {/* Patient Selector */}\r\n          <div className=\"patient-selector\">\r\n            <label htmlFor=\"patient-select\">Select Patient:</label>\r\n            <PatientSelector\r\n              id=\"patient-select\"\r\n              patients={PATIENTS}\r\n              value={selectedPatient}\r\n              onChange={setSelectedPatient}\r\n            />\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      <main className=\"app-main\">\r\n        <ErrorBoundary>\r\n          <Suspense fallback={<LoadingSpinner message=\"Loading dashboard...\" />}>\r\n            <Dashboard \r\n              patientId={selectedPatient} \r\n              viewMode={currentRole}\r\n            />\r\n          </Suspense>\r\n        </ErrorBoundary>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAEA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,QAAQ,KAAQ,OAAO,CACjD,MAAO,CAAAC,eAAe,KAAM,mBAAmB,CAC/C,MAAO,CAAAC,cAAc,KAAM,gCAAgC,CAC3D,MAAO,CAAAC,aAAa,KAAM,4BAA4B,CACtD,MAAO,CAAAC,MAAM,KAAM,wBAAwB,CAC3C,OAASC,QAAQ,KAAQ,mBAAmB,CAC5C,MAAO,WAAW,CAEhB;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBACA,KAAM,CAAAC,SAAS,cAAGZ,KAAK,CAACa,IAAI,CAAC,IAAM,MAAM,CAAC,wBAAwB,CAAC,CAAC,CAEpE;AACF;AACA;AACA,KACA,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,eAAe,CAAEC,kBAAkB,CAAC,CAAGf,QAAQ,CAAC,aAAa,CAAC,CACrE,KAAM,CAACgB,WAAW,CAAEC,cAAc,CAAC,CAAGjB,QAAQ,CAAC,SAAS,CAAC,CAAE;AAE3D,KAAM,CAAAkB,UAAU,CAAGA,CAAA,GAAM,CACvBD,cAAc,CAACE,IAAI,EAAIA,IAAI,GAAK,SAAS,CAAG,WAAW,CAAG,SAAS,CAAC,CACtE,CAAC,CAED,mBACET,KAAA,QAAKU,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClBb,IAAA,WAAQY,SAAS,CAAC,YAAY,CAAAC,QAAA,cAC5BX,KAAA,QAAKU,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7Bb,IAAA,OAAAa,QAAA,CAAI,kBAAgB,CAAI,CAAC,cAGzBb,IAAA,QAAKY,SAAS,CAAC,aAAa,CAAAC,QAAA,cAC1Bb,IAAA,CAACH,MAAM,EACLiB,OAAO,CAAEN,WAAW,GAAK,WAAY,CACrCO,QAAQ,CAAEL,UAAW,CACrBM,SAAS,CAAC,cAAc,CACxBC,UAAU,CAAC,gBAAgB,CAC5B,CAAC,CACC,CAAC,cAGNf,KAAA,QAAKU,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/Bb,IAAA,UAAOkB,OAAO,CAAC,gBAAgB,CAAAL,QAAA,CAAC,iBAAe,CAAO,CAAC,cACvDb,IAAA,CAACN,eAAe,EACdyB,EAAE,CAAC,gBAAgB,CACnBC,QAAQ,CAAEtB,QAAS,CACnBuB,KAAK,CAAEf,eAAgB,CACvBS,QAAQ,CAAER,kBAAmB,CAC9B,CAAC,EACC,CAAC,EACH,CAAC,CACA,CAAC,cAETP,IAAA,SAAMY,SAAS,CAAC,UAAU,CAAAC,QAAA,cACxBb,IAAA,CAACJ,aAAa,EAAAiB,QAAA,cACZb,IAAA,CAACP,QAAQ,EAAC6B,QAAQ,cAAEtB,IAAA,CAACL,cAAc,EAAC4B,OAAO,CAAC,sBAAsB,CAAE,CAAE,CAAAV,QAAA,cACpEb,IAAA,CAACG,SAAS,EACRqB,SAAS,CAAElB,eAAgB,CAC3BmB,QAAQ,CAAEjB,WAAY,CACvB,CAAC,CACM,CAAC,CACE,CAAC,CACZ,CAAC,EACJ,CAAC,CAEV,CAEA,cAAe,CAAAH,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}