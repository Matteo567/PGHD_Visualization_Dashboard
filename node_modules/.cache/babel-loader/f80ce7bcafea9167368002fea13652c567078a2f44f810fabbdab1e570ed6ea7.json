{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matteo\\\\Working_Folder\\\\a. MCC Thesis Local\\\\MCC_digital_health_data_visualizations\\\\src\\\\hooks\\\\useVisualizationHelpers.js\",\n  _s = $RefreshSig$();\n/*\r\n useVisualizationHelpers.js - Visualization Helper Functions Hook\r\n \r\n This hook provides common visualization management functions including managing\r\n chart expansion and collapse states, handling visualization rendering logic,\r\n providing shared functionality between dashboard types, and managing expanded\r\n item state across components.\r\n \r\n Reduces code duplication between PatientDashboard and PhysicianDashboard components.\r\n */\n\nimport React from 'react';\nimport Placeholder from '../components/ui/Placeholder';\n\n/*\r\n Shared hook for common visualization helper functions\r\n Extracts duplicate logic from PatientDashboard and PhysicianDashboard\r\n \r\n - @param {string} patientId - The patient identifier\r\n - @param {Object} allVisualizations - All available visualizations\r\n - @param {Object} selectedVisualizations - Currently selected visualizations\r\n - @returns {Object} Helper functions and state\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useVisualizationHelpers = (patientId, allVisualizations, selectedVisualizations) => {\n  _s();\n  const [expandedItem, setExpandedItem] = React.useState(null);\n  const handleExpand = React.useCallback(itemId => {\n    setExpandedItem(prev => prev === itemId ? null : itemId);\n  }, []);\n  const renderVisualization = React.useCallback((visualizationType, itemId) => {\n    if (!patientId) {\n      return /*#__PURE__*/_jsxDEV(Placeholder, {\n        message: \"Please select a patient to view data.\",\n        type: \"select-patient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 14\n      }, this);\n    }\n    const viz = allVisualizations[visualizationType];\n    if (!viz) return /*#__PURE__*/_jsxDEV(Placeholder, {\n      message: \"Invalid visualization\",\n      type: \"error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 22\n    }, this);\n    const Component = viz.component;\n    const isExpanded = expandedItem === itemId;\n    return /*#__PURE__*/_jsxDEV(Component, {\n      patientId: patientId,\n      isExpanded: isExpanded,\n      onExpand: () => handleExpand(itemId),\n      viewMode: \"patient\" // This will be overridden by the calling component\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }, this);\n  }, [patientId, allVisualizations, expandedItem, handleExpand]);\n  return {\n    expandedItem,\n    handleExpand,\n    renderVisualization\n  };\n};\n_s(useVisualizationHelpers, \"/Y/GgSI3LP67nQhCG8psRefPR1g=\");\nexport default useVisualizationHelpers;","map":{"version":3,"names":["React","Placeholder","jsxDEV","_jsxDEV","useVisualizationHelpers","patientId","allVisualizations","selectedVisualizations","_s","expandedItem","setExpandedItem","useState","handleExpand","useCallback","itemId","prev","renderVisualization","visualizationType","message","type","fileName","_jsxFileName","lineNumber","columnNumber","viz","Component","component","isExpanded","onExpand","viewMode"],"sources":["C:/Users/Matteo/Working_Folder/a. MCC Thesis Local/MCC_digital_health_data_visualizations/src/hooks/useVisualizationHelpers.js"],"sourcesContent":["/*\r\n useVisualizationHelpers.js - Visualization Helper Functions Hook\r\n \r\n This hook provides common visualization management functions including managing\r\n chart expansion and collapse states, handling visualization rendering logic,\r\n providing shared functionality between dashboard types, and managing expanded\r\n item state across components.\r\n \r\n Reduces code duplication between PatientDashboard and PhysicianDashboard components.\r\n */\r\n\r\nimport React from 'react';\r\nimport Placeholder from '../components/ui/Placeholder';\r\n\r\n/*\r\n Shared hook for common visualization helper functions\r\n Extracts duplicate logic from PatientDashboard and PhysicianDashboard\r\n \r\n - @param {string} patientId - The patient identifier\r\n - @param {Object} allVisualizations - All available visualizations\r\n - @param {Object} selectedVisualizations - Currently selected visualizations\r\n - @returns {Object} Helper functions and state\r\n */\r\nconst useVisualizationHelpers = (patientId, allVisualizations, selectedVisualizations) => {\r\n  const [expandedItem, setExpandedItem] = React.useState(null);\r\n\r\n  const handleExpand = React.useCallback((itemId) => {\r\n    setExpandedItem(prev => (prev === itemId ? null : itemId));\r\n  }, []);\r\n\r\n  const renderVisualization = React.useCallback((visualizationType, itemId) => {\r\n    if (!patientId) {\r\n      return <Placeholder message=\"Please select a patient to view data.\" type=\"select-patient\" />;\r\n    }\r\n    \r\n    const viz = allVisualizations[visualizationType];\r\n    if (!viz) return <Placeholder message=\"Invalid visualization\" type=\"error\" />;\r\n\r\n    const Component = viz.component;\r\n    const isExpanded = expandedItem === itemId;\r\n    return <Component \r\n      patientId={patientId} \r\n      isExpanded={isExpanded} \r\n      onExpand={() => handleExpand(itemId)}\r\n      viewMode=\"patient\" // This will be overridden by the calling component\r\n    />;\r\n  }, [patientId, allVisualizations, expandedItem, handleExpand]);\r\n\r\n  return {\r\n    expandedItem,\r\n    handleExpand,\r\n    renderVisualization\r\n  };\r\n};\r\n\r\nexport default useVisualizationHelpers;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,8BAA8B;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA,SAAAC,MAAA,IAAAC,OAAA;AASA,MAAMC,uBAAuB,GAAGA,CAACC,SAAS,EAAEC,iBAAiB,EAAEC,sBAAsB,KAAK;EAAAC,EAAA;EACxF,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,KAAK,CAACW,QAAQ,CAAC,IAAI,CAAC;EAE5D,MAAMC,YAAY,GAAGZ,KAAK,CAACa,WAAW,CAAEC,MAAM,IAAK;IACjDJ,eAAe,CAACK,IAAI,IAAKA,IAAI,KAAKD,MAAM,GAAG,IAAI,GAAGA,MAAO,CAAC;EAC5D,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,mBAAmB,GAAGhB,KAAK,CAACa,WAAW,CAAC,CAACI,iBAAiB,EAAEH,MAAM,KAAK;IAC3E,IAAI,CAACT,SAAS,EAAE;MACd,oBAAOF,OAAA,CAACF,WAAW;QAACiB,OAAO,EAAC,uCAAuC;QAACC,IAAI,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAC9F;IAEA,MAAMC,GAAG,GAAGlB,iBAAiB,CAACW,iBAAiB,CAAC;IAChD,IAAI,CAACO,GAAG,EAAE,oBAAOrB,OAAA,CAACF,WAAW;MAACiB,OAAO,EAAC,uBAAuB;MAACC,IAAI,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IAE7E,MAAME,SAAS,GAAGD,GAAG,CAACE,SAAS;IAC/B,MAAMC,UAAU,GAAGlB,YAAY,KAAKK,MAAM;IAC1C,oBAAOX,OAAA,CAACsB,SAAS;MACfpB,SAAS,EAAEA,SAAU;MACrBsB,UAAU,EAAEA,UAAW;MACvBC,QAAQ,EAAEA,CAAA,KAAMhB,YAAY,CAACE,MAAM,CAAE;MACrCe,QAAQ,EAAC,SAAS,CAAC;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC;EACJ,CAAC,EAAE,CAAClB,SAAS,EAAEC,iBAAiB,EAAEG,YAAY,EAAEG,YAAY,CAAC,CAAC;EAE9D,OAAO;IACLH,YAAY;IACZG,YAAY;IACZI;EACF,CAAC;AACH,CAAC;AAACR,EAAA,CA9BIJ,uBAAuB;AAgC7B,eAAeA,uBAAuB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}