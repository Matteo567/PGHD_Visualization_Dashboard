{"ast":null,"code":"/*\r\n MealContentsChart.js - Nutritional Tracking Visualization\r\n \r\n This component provides comprehensive meal and nutrition monitoring:\r\n - Meal timing and content breakdown\r\n - Nutritional component tracking\r\n - Daily and weekly dietary pattern analysis\r\n - Interactive tooltips with meal details\r\n - Navigation controls for time periods\r\n - Integration with patient data and chart navigation\r\n \r\n Essential for dietary monitoring and nutritional assessment.\r\n */import React,{useState,useEffect,useRef,useMemo}from'react';import Legend from'../Legend';import usePatientData from'../../hooks/usePatientData';import useChartNavigation from'../../hooks/useChartNavigation';import{createChartConfig}from'../chart-utils/ChartConfigFactory';import'./MealContentsChart.css';// --- Constants ---\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DAYS_OF_WEEK=['Sun','Mon','Tue','Wed','Thu','Fri','Sat'];const MEAL_TYPES=['Breakfast','Lunch','Dinner','Late Night Snack'];const FOOD_CATEGORIES=['Protein','Carbohydrates','Vegetables','Fruit','Alcohol'];const SUGAR_CATEGORIES=['','1-20g','20-40g','40-60g','60g+'];const DEFAULT_WEEK=new Date(2025,4,1);// Emoji mappings for food categories\nconst CATEGORY_EMOJIS={'Protein':'🥩','Carbohydrates':'🍞','Vegetables':'🥦','Fruit':'🍎','Alcohol':'🍷'};const SUGAR_EMOJIS={'':'',// No sugar\n'1-20g':'🍭',// Lollipop\n'20-40g':'🍫',// Chocolate bar\n'40-60g':'🍩',// Donut\n'60g+':'🎂'// Cake\n};// --- Helper Functions ---\nconst getWeekStart=date=>{const d=new Date(date);const day=d.getDay();const diff=d.getDate()-day;return new Date(d.setDate(diff));};const formatDayLabel=date=>{const dayNames=['Sun','Mon','Tue','Wed','Thu','Fri','Sat'];return dayNames[date.getDay()];};const formatDateLabel=date=>date.toLocaleDateString('en-US',{month:'short',day:'numeric'});const getMealTime=(data,mealType)=>{// Convert meal type to the correct column name format (with underscores)\nconst columnPrefix=mealType.replace(/\\s+/g,'_');const timeKey=\"\".concat(columnPrefix,\"_Time\");return data[timeKey]||'';};const getMealData=(data,mealType)=>{const mealData={};// Convert meal type to the correct column name format (with underscores)\nconst columnPrefix=mealType.replace(/\\s+/g,'_');FOOD_CATEGORIES.forEach(category=>{const key=\"\".concat(columnPrefix,\"_\").concat(category);// Handle both numeric (1, 0) and string ('1', '0') values\nmealData[category]=data[key]===1||data[key]==='1';});const sugarKey=\"\".concat(columnPrefix,\"_Added_Sugar\");mealData['Added Sugar']=data[sugarKey]||'';return mealData;};// --- Chart Sub-components ---\nconst XAxis=_ref=>{let{config,weekDays}=_ref;return/*#__PURE__*/_jsxs(\"g\",{className:\"x-axis\",children:[weekDays.map((day,dayIndex)=>{const x=config.padding.left+dayIndex*config.dayWidth+config.dayWidth/2;return/*#__PURE__*/_jsxs(\"g\",{children:[/*#__PURE__*/_jsx(\"text\",{x:x,y:config.height-config.padding.bottom+30,fontSize:config.fontSize.dayLabel,textAnchor:\"middle\",className:\"x-axis-day-label\",children:formatDayLabel(day)}),/*#__PURE__*/_jsx(\"text\",{x:x,y:config.height-config.padding.bottom+45,fontSize:config.fontSize.dateLabel,textAnchor:\"middle\",className:\"x-axis-date-label\",children:day.getDate()}),/*#__PURE__*/_jsx(\"line\",{className:\"chart-grid-line-vertical\",x1:config.padding.left+dayIndex*config.dayWidth,y1:config.padding.top,x2:config.padding.left+dayIndex*config.dayWidth,y2:config.height-config.padding.bottom})]},dayIndex);}),/*#__PURE__*/_jsx(\"line\",{className:\"chart-grid-line-vertical\",x1:config.padding.left+7*config.dayWidth,y1:config.padding.top,x2:config.padding.left+7*config.dayWidth,y2:config.height-config.padding.bottom})]});};const YAxis=_ref2=>{let{config}=_ref2;// Calculate dynamic text positioning based on available space\nconst getTextX=textLength=>{// Base offset from the chart area\nconst baseOffset=10;// Calculate position to ensure text doesn't get cut off\n// For longer text like \"Late Night Snack\", position it closer to the chart\nconst dynamicOffset=textLength>10?5:25;return Math.max(baseOffset,config.padding.left-dynamicOffset);};return/*#__PURE__*/_jsxs(\"g\",{className:\"y-axis\",children:[MEAL_TYPES.map((meal,mealIndex)=>{const y=config.padding.top+mealIndex*config.mealHeight+config.mealHeight/2;const textX=getTextX(meal.length);return/*#__PURE__*/_jsxs(\"g\",{children:[/*#__PURE__*/_jsx(\"text\",{x:textX,y:y,fontSize:config.fontSize.mealLabel,textAnchor:\"end\",className:\"y-axis-title\",children:meal}),/*#__PURE__*/_jsx(\"line\",{className:\"chart-grid-line-horizontal\",x1:config.padding.left,y1:config.padding.top+mealIndex*config.mealHeight,x2:config.padding.left+7*config.dayWidth,y2:config.padding.top+mealIndex*config.mealHeight})]},meal);}),/*#__PURE__*/_jsx(\"line\",{className:\"chart-grid-line-horizontal\",x1:config.padding.left,y1:config.padding.top+4*config.mealHeight,x2:config.padding.left+7*config.dayWidth,y2:config.padding.top+4*config.mealHeight})]});};const MealCell=_ref3=>{let{config,dayIndex,mealIndex,mealData,mealTime,isExpanded}=_ref3;const x=config.padding.left+dayIndex*config.dayWidth+5;const y=config.padding.top+mealIndex*config.mealHeight+5;const cellWidth=config.dayWidth-10;const cellHeight=config.mealHeight-10;// Calculate grid layout for 6 circles (2x3 grid)\nconst circlesPerRow=3;const circleWidth=cellWidth/circlesPerRow;const circleHeight=(cellHeight-20)/2;// Reserve space for time\n// Calculate circle radius and emoji size based on cell dimensions\nconst minDimension=Math.min(circleWidth,circleHeight);const circleRadius=Math.max(8,Math.min(16,minDimension*0.35));// Min 8px, max 16px, 35% of min dimension\nconst emojiFontSize=Math.max(8,Math.min(16,minDimension*0.4));// Min 8px, max 16px, 40% of min dimension for better visibility\n// Apply expanded view scaling\nconst expandedCircleRadius=isExpanded?circleRadius*1.3:circleRadius;const expandedEmojiFontSize=isExpanded?emojiFontSize*1.4:emojiFontSize;// Define the 6 food categories in order (5 main + 1 sugar)\nconst allCategories=[...FOOD_CATEGORIES,'Added Sugar'];return/*#__PURE__*/_jsxs(\"g\",{className:\"meal-cell\",children:[/*#__PURE__*/_jsx(\"rect\",{x:x,y:y,width:cellWidth,height:cellHeight,fill:\"#f9f9f9\",stroke:\"#ddd\",strokeWidth:\"1\"}),/*#__PURE__*/_jsx(\"text\",{x:x+cellWidth/2,y:y+12,fontSize:config.fontSize.timeLabel,textAnchor:\"middle\",className:\"time-label\",children:mealTime}),allCategories.map((category,index)=>{const row=Math.floor(index/circlesPerRow);const col=index%circlesPerRow;const circleX=x+col*circleWidth+circleWidth/2;const circleY=y+20+row*circleHeight+circleHeight/2;// Check if category is present\nlet hasCategory=false;let emoji='';if(category==='Added Sugar'){hasCategory=mealData[category]&&SUGAR_EMOJIS[mealData[category]];emoji=SUGAR_EMOJIS[mealData[category]]||'';}else{hasCategory=mealData[category];emoji=CATEGORY_EMOJIS[category]||'';}return/*#__PURE__*/_jsxs(\"g\",{children:[/*#__PURE__*/_jsx(\"circle\",{cx:circleX,cy:circleY,r:expandedCircleRadius,fill:\"#f5f5f5\",stroke:\"#ddd\",strokeWidth:\"1\",opacity:0.3}),hasCategory&&emoji&&/*#__PURE__*/_jsx(\"text\",{x:circleX,y:circleY,fontSize:expandedEmojiFontSize,textAnchor:\"middle\",dominantBaseline:\"central\",style:{fontFamily:'Apple Color Emoji, Segoe UI Emoji, Noto Color Emoji, sans-serif'},children:emoji})]},category);})]});};const MealGrid=_ref4=>{let{config,weekDays,patientData,isExpanded}=_ref4;if(!patientData||patientData.length===0){return null;}return/*#__PURE__*/_jsx(\"g\",{className:\"meal-grid\",children:weekDays.map((day,dayIndex)=>{const dayData=patientData.find(d=>{const dataDate=new Date(d.Date);return dataDate.toDateString()===day.toDateString();});if(!dayData){return null;}return MEAL_TYPES.map((meal,mealIndex)=>{const mealData=getMealData(dayData,meal);const mealTime=getMealTime(dayData,meal);// Debug logging removed for production\nreturn/*#__PURE__*/_jsx(MealCell,{config:config,dayIndex:dayIndex,mealIndex:mealIndex,mealData:mealData,mealTime:mealTime,isExpanded:isExpanded},\"\".concat(dayIndex,\"-\").concat(mealIndex));});})});};// --- Main Component ---\nconst MealContentsChart=_ref5=>{let{patientId,isExpanded=false,onExpand,viewMode='patient',navigation}=_ref5;const{mealData:patientData,loading,error}=usePatientData(patientId);// Use navigation from parent or fallback to internal navigation\nconst useInternalNavigation=!navigation;const internalNavigation=useChartNavigation('mealContents');const nav=navigation||internalNavigation;const containerRef=useRef(null);const[containerWidth,setContainerWidth]=useState(500);const config=createChartConfig('mealContents',isExpanded,containerWidth);// Measure container width for sizing\nuseEffect(()=>{const updateContainerWidth=()=>{if(containerRef.current){const width=containerRef.current.offsetWidth;setContainerWidth(width);}};updateContainerWidth();window.addEventListener('resize',updateContainerWidth);return()=>window.removeEventListener('resize',updateContainerWidth);},[isExpanded]);const{start:startOfWeek,end:endOfWeek}=nav.getDateRange();const weekDays=Array.from({length:7},(_,i)=>{const day=new Date(startOfWeek);day.setDate(startOfWeek.getDate()+i);return day;});// Get 3-month data\nconst{start:startOfThreeMonths,end:endOfThreeMonths}=nav.getThreeMonthRange();const threeMonthData=patientData.filter(d=>{const dataDate=new Date(d.Date);return dataDate>=startOfThreeMonths&&dataDate<=endOfThreeMonths;});const formatDateRange=(start,end)=>{const startStr=start.toLocaleDateString('en-US',{month:'short',day:'numeric'});const endStr=end.toLocaleDateString('en-US',{month:'short',day:'numeric'});return\"\".concat(startStr,\" to \").concat(endStr);};// Calculate summary statistics for physician view\nconst weekSummary=React.useMemo(()=>{if(!patientData||patientData.length===0)return null;const weekData=patientData.filter(d=>{const dataDate=new Date(d.Date);return dataDate>=startOfWeek&&dataDate<=endOfWeek;});if(weekData.length===0)return null;// Count food categories across all meals\nconst categoryStats={};FOOD_CATEGORIES.forEach(category=>{categoryStats[category]=0;});// Count sugar levels\nconst sugarStats={};SUGAR_CATEGORIES.filter(s=>s!=='').forEach(sugar=>{sugarStats[sugar]=0;});let totalMealsLogged=0;let daysWithMeals=new Set();weekData.forEach(dayData=>{daysWithMeals.add(dayData.Date);MEAL_TYPES.forEach(meal=>{const mealData=getMealData(dayData,meal);const hasAnyFood=FOOD_CATEGORIES.some(category=>mealData[category]);if(hasAnyFood){totalMealsLogged++;// Count each food category\nFOOD_CATEGORIES.forEach(category=>{if(mealData[category]){categoryStats[category]++;}});// Count sugar levels\nif(mealData['Added Sugar']&&mealData['Added Sugar']!==''){sugarStats[mealData['Added Sugar']]++;}}});});// Find most common food category\nconst mostCommonFood=Object.entries(categoryStats).sort((_ref6,_ref7)=>{let[,a]=_ref6;let[,b]=_ref7;return b-a;})[0];// Calculate sugar frequency\nconst totalSugarMeals=Object.values(sugarStats).reduce((sum,count)=>sum+count,0);const sugarPercentage=totalMealsLogged>0?(totalSugarMeals/totalMealsLogged*100).toFixed(0):0;return{totalMealsLogged,daysWithMeals:daysWithMeals.size,mostCommonFood:mostCommonFood[0],mostCommonFoodCount:mostCommonFood[1],categoryStats,sugarPercentage,totalSugarMeals};},[patientData,startOfWeek,endOfWeek]);// Calculate 3-month summary statistics for physician view\nconst threeMonthSummary=React.useMemo(()=>{if(!threeMonthData||threeMonthData.length===0)return null;// Count food categories across all meals\nconst categoryStats={};FOOD_CATEGORIES.forEach(category=>{categoryStats[category]=0;});// Count sugar levels\nconst sugarStats={};SUGAR_CATEGORIES.filter(s=>s!=='').forEach(sugar=>{sugarStats[sugar]=0;});let totalMealsLogged=0;let daysWithMeals=new Set();threeMonthData.forEach(dayData=>{daysWithMeals.add(dayData.Date);MEAL_TYPES.forEach(meal=>{const mealData=getMealData(dayData,meal);const hasAnyFood=FOOD_CATEGORIES.some(category=>mealData[category]);if(hasAnyFood){totalMealsLogged++;// Count each food category\nFOOD_CATEGORIES.forEach(category=>{if(mealData[category]){categoryStats[category]++;}});// Count sugar levels\nif(mealData['Added Sugar']&&mealData['Added Sugar']!==''){sugarStats[mealData['Added Sugar']]++;}}});});// Find most common food category\nconst mostCommonFood=Object.entries(categoryStats).sort((_ref8,_ref9)=>{let[,a]=_ref8;let[,b]=_ref9;return b-a;})[0];// Calculate sugar frequency\nconst totalSugarMeals=Object.values(sugarStats).reduce((sum,count)=>sum+count,0);const sugarPercentage=totalMealsLogged>0?(totalSugarMeals/totalMealsLogged*100).toFixed(0):0;return{totalMealsLogged,daysWithMeals:daysWithMeals.size,mostCommonFood:mostCommonFood[0],mostCommonFoodCount:mostCommonFood[1],categoryStats,sugarPercentage,totalSugarMeals};},[threeMonthData]);return/*#__PURE__*/_jsxs(\"div\",{className:\"meal-contents-chart-container\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"chart-title\",children:\"Meal Contents\"}),/*#__PURE__*/_jsx(\"h4\",{className:\"chart-subtitle\",children:nav.getCurrentMonthYear()}),/*#__PURE__*/_jsx(\"div\",{className:\"meal-chart-wrapper \".concat(isExpanded?'expanded':''),ref:containerRef,children:/*#__PURE__*/_jsxs(\"svg\",{width:config.width,height:config.height,viewBox:\"0 0 \".concat(config.width,\" \").concat(config.height),className:\"meal-chart\",style:{maxWidth:'100%',height:'auto'},children:[/*#__PURE__*/_jsx(XAxis,{config:config,weekDays:weekDays}),/*#__PURE__*/_jsx(YAxis,{config:config}),/*#__PURE__*/_jsx(MealGrid,{config:config,weekDays:weekDays,patientData:patientData,isExpanded:isExpanded})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"meal-contents-legends-wrapper\",children:[/*#__PURE__*/_jsx(Legend,{title:\"Food Categories\",items:FOOD_CATEGORIES.map(category=>({label:\"\".concat(CATEGORY_EMOJIS[category],\" \").concat(category),color:null}))}),/*#__PURE__*/_jsx(Legend,{title:\"Sugar Levels\",items:SUGAR_CATEGORIES.filter(sugar=>sugar!=='').map(sugar=>({label:\"\".concat(SUGAR_EMOJIS[sugar],\" \").concat(sugar),color:null}))})]}),viewMode==='physician'&&weekSummary&&/*#__PURE__*/_jsxs(\"div\",{className:\"summary-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chart-summary\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Week Summary\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-stats\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Meals Logged:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"stat-value\",children:[weekSummary.totalMealsLogged,\"/28 possible\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Added Sugar:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"stat-value\",children:[weekSummary.sugarPercentage,\"% of meals (\",weekSummary.totalSugarMeals,\"/\",weekSummary.totalMealsLogged,\")\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Food Balance:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-value\",children:weekSummary.categoryStats&&Object.entries(weekSummary.categoryStats).sort((_ref0,_ref1)=>{let[,a]=_ref0;let[,b]=_ref1;return b-a;}).slice(0,3).map(_ref10=>{let[cat,count]=_ref10;return\"\".concat(CATEGORY_EMOJIS[cat]).concat(count);}).join(' ')})]})]})]}),threeMonthSummary&&/*#__PURE__*/_jsxs(\"div\",{className:\"chart-summary\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"3-Month Summary\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-stats\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Meals Logged:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"stat-value\",children:[threeMonthSummary.totalMealsLogged,\" meals\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Added Sugar:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"stat-value\",children:[threeMonthSummary.sugarPercentage,\"% of meals (\",threeMonthSummary.totalSugarMeals,\"/\",threeMonthSummary.totalMealsLogged,\")\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Food Balance:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-value\",children:threeMonthSummary.categoryStats&&Object.entries(threeMonthSummary.categoryStats).sort((_ref11,_ref12)=>{let[,a]=_ref11;let[,b]=_ref12;return b-a;}).slice(0,3).map(_ref13=>{let[cat,count]=_ref13;return\"\".concat(CATEGORY_EMOJIS[cat]).concat(count);}).join(' ')})]})]})]})]})]});};export default MealContentsChart;","map":{"version":3,"names":["React","useState","useEffect","useRef","useMemo","Legend","usePatientData","useChartNavigation","createChartConfig","jsx","_jsx","jsxs","_jsxs","DAYS_OF_WEEK","MEAL_TYPES","FOOD_CATEGORIES","SUGAR_CATEGORIES","DEFAULT_WEEK","Date","CATEGORY_EMOJIS","SUGAR_EMOJIS","getWeekStart","date","d","day","getDay","diff","getDate","setDate","formatDayLabel","dayNames","formatDateLabel","toLocaleDateString","month","getMealTime","data","mealType","columnPrefix","replace","timeKey","concat","getMealData","mealData","forEach","category","key","sugarKey","XAxis","_ref","config","weekDays","className","children","map","dayIndex","x","padding","left","dayWidth","y","height","bottom","fontSize","dayLabel","textAnchor","dateLabel","x1","y1","top","x2","y2","YAxis","_ref2","getTextX","textLength","baseOffset","dynamicOffset","Math","max","meal","mealIndex","mealHeight","textX","length","mealLabel","MealCell","_ref3","mealTime","isExpanded","cellWidth","cellHeight","circlesPerRow","circleWidth","circleHeight","minDimension","min","circleRadius","emojiFontSize","expandedCircleRadius","expandedEmojiFontSize","allCategories","width","fill","stroke","strokeWidth","timeLabel","index","row","floor","col","circleX","circleY","hasCategory","emoji","cx","cy","r","opacity","dominantBaseline","style","fontFamily","MealGrid","_ref4","patientData","dayData","find","dataDate","toDateString","MealContentsChart","_ref5","patientId","onExpand","viewMode","navigation","loading","error","useInternalNavigation","internalNavigation","nav","containerRef","containerWidth","setContainerWidth","updateContainerWidth","current","offsetWidth","window","addEventListener","removeEventListener","start","startOfWeek","end","endOfWeek","getDateRange","Array","from","_","i","startOfThreeMonths","endOfThreeMonths","getThreeMonthRange","threeMonthData","filter","formatDateRange","startStr","endStr","weekSummary","weekData","categoryStats","sugarStats","s","sugar","totalMealsLogged","daysWithMeals","Set","add","hasAnyFood","some","mostCommonFood","Object","entries","sort","_ref6","_ref7","a","b","totalSugarMeals","values","reduce","sum","count","sugarPercentage","toFixed","size","mostCommonFoodCount","threeMonthSummary","_ref8","_ref9","getCurrentMonthYear","ref","viewBox","maxWidth","title","items","label","color","_ref0","_ref1","slice","_ref10","cat","join","_ref11","_ref12","_ref13"],"sources":["C:/Users/Matteo/Working_Folder/a. MCC Thesis Local/Health_data_dashboard-MCC_project_checkpoint/src/components/patient_charts/MealContentsChart.js"],"sourcesContent":["/*\r\n MealContentsChart.js - Nutritional Tracking Visualization\r\n \r\n This component provides comprehensive meal and nutrition monitoring:\r\n - Meal timing and content breakdown\r\n - Nutritional component tracking\r\n - Daily and weekly dietary pattern analysis\r\n - Interactive tooltips with meal details\r\n - Navigation controls for time periods\r\n - Integration with patient data and chart navigation\r\n \r\n Essential for dietary monitoring and nutritional assessment.\r\n */\r\n\r\nimport React, { useState, useEffect, useRef, useMemo } from 'react';\r\nimport Legend from '../Legend';\r\nimport usePatientData from '../../hooks/usePatientData';\r\nimport useChartNavigation from '../../hooks/useChartNavigation';\r\nimport { createChartConfig } from '../chart-utils/ChartConfigFactory';\r\n\r\nimport './MealContentsChart.css';\r\n\r\n\r\n// --- Constants ---\r\nconst DAYS_OF_WEEK = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\nconst MEAL_TYPES = ['Breakfast', 'Lunch', 'Dinner', 'Late Night Snack'];\r\nconst FOOD_CATEGORIES = ['Protein', 'Carbohydrates', 'Vegetables', 'Fruit', 'Alcohol'];\r\nconst SUGAR_CATEGORIES = ['', '1-20g', '20-40g', '40-60g', '60g+'];\r\nconst DEFAULT_WEEK = new Date(2025, 4, 1);\r\n\r\n// Emoji mappings for food categories\r\nconst CATEGORY_EMOJIS = {\r\n  'Protein': '🥩',\r\n  'Carbohydrates': '🍞',\r\n  'Vegetables': '🥦',\r\n  'Fruit': '🍎',\r\n  'Alcohol': '🍷'\r\n};\r\n\r\nconst SUGAR_EMOJIS = {\r\n  '': '',              // No sugar\r\n  '1-20g': '🍭',       // Lollipop\r\n  '20-40g': '🍫',      // Chocolate bar\r\n  '40-60g': '🍩',      // Donut\r\n  '60g+': '🎂'         // Cake\r\n};\r\n\r\n\r\n\r\n// --- Helper Functions ---\r\nconst getWeekStart = (date) => {\r\n  const d = new Date(date);\r\n  const day = d.getDay();\r\n  const diff = d.getDate() - day;\r\n  return new Date(d.setDate(diff));\r\n};\r\n\r\nconst formatDayLabel = (date) => {\r\n  const dayNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n  return dayNames[date.getDay()];\r\n};\r\nconst formatDateLabel = (date) => date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\r\n\r\nconst getMealTime = (data, mealType) => {\r\n  // Convert meal type to the correct column name format (with underscores)\r\n  const columnPrefix = mealType.replace(/\\s+/g, '_');\r\n  const timeKey = `${columnPrefix}_Time`;\r\n  return data[timeKey] || '';\r\n};\r\n\r\nconst getMealData = (data, mealType) => {\r\n  const mealData = {};\r\n  \r\n  // Convert meal type to the correct column name format (with underscores)\r\n  const columnPrefix = mealType.replace(/\\s+/g, '_');\r\n  \r\n  FOOD_CATEGORIES.forEach(category => {\r\n    const key = `${columnPrefix}_${category}`;\r\n    // Handle both numeric (1, 0) and string ('1', '0') values\r\n    mealData[category] = data[key] === 1 || data[key] === '1';\r\n  });\r\n  \r\n  const sugarKey = `${columnPrefix}_Added_Sugar`;\r\n  mealData['Added Sugar'] = data[sugarKey] || '';\r\n  \r\n  return mealData;\r\n};\r\n\r\n// --- Chart Sub-components ---\r\n\r\nconst XAxis = ({ config, weekDays }) => (\r\n  <g className=\"x-axis\">\r\n    {weekDays.map((day, dayIndex) => {\r\n      const x = config.padding.left + dayIndex * config.dayWidth + config.dayWidth / 2;\r\n      return (\r\n        <g key={dayIndex}>\r\n          <text\r\n            x={x}\r\n            y={config.height - config.padding.bottom + 30}\r\n            fontSize={config.fontSize.dayLabel}\r\n            textAnchor=\"middle\"\r\n            className=\"x-axis-day-label\"\r\n          >\r\n            {formatDayLabel(day)}\r\n          </text>\r\n          <text\r\n            x={x}\r\n            y={config.height - config.padding.bottom + 45}\r\n            fontSize={config.fontSize.dateLabel}\r\n            textAnchor=\"middle\"\r\n            className=\"x-axis-date-label\"\r\n          >\r\n            {day.getDate()}\r\n          </text>\r\n          <line\r\n            className=\"chart-grid-line-vertical\"\r\n            x1={config.padding.left + dayIndex * config.dayWidth}\r\n            y1={config.padding.top}\r\n            x2={config.padding.left + dayIndex * config.dayWidth}\r\n            y2={config.height - config.padding.bottom}\r\n          />\r\n        </g>\r\n      );\r\n    })}\r\n    <line\r\n      className=\"chart-grid-line-vertical\"\r\n      x1={config.padding.left + 7 * config.dayWidth}\r\n      y1={config.padding.top}\r\n      x2={config.padding.left + 7 * config.dayWidth}\r\n      y2={config.height - config.padding.bottom}\r\n    />\r\n  </g>\r\n);\r\n\r\nconst YAxis = ({ config }) => {\r\n  // Calculate dynamic text positioning based on available space\r\n  const getTextX = (textLength) => {\r\n    // Base offset from the chart area\r\n    const baseOffset = 10;\r\n    // Calculate position to ensure text doesn't get cut off\r\n    // For longer text like \"Late Night Snack\", position it closer to the chart\r\n    const dynamicOffset = textLength > 10 ? 5 : 25;\r\n    return Math.max(baseOffset, config.padding.left - dynamicOffset);\r\n  };\r\n\r\n  return (\r\n    <g className=\"y-axis\">\r\n      {MEAL_TYPES.map((meal, mealIndex) => {\r\n        const y = config.padding.top + mealIndex * config.mealHeight + config.mealHeight / 2;\r\n        const textX = getTextX(meal.length);\r\n        \r\n        return (\r\n          <g key={meal}>\r\n            <text\r\n              x={textX}\r\n              y={y}\r\n              fontSize={config.fontSize.mealLabel}\r\n              textAnchor=\"end\"\r\n              className=\"y-axis-title\"\r\n            >\r\n              {meal}\r\n            </text>\r\n            <line\r\n              className=\"chart-grid-line-horizontal\"\r\n              x1={config.padding.left}\r\n              y1={config.padding.top + mealIndex * config.mealHeight}\r\n              x2={config.padding.left + 7 * config.dayWidth}\r\n              y2={config.padding.top + mealIndex * config.mealHeight}\r\n            />\r\n          </g>\r\n        );\r\n      })}\r\n      <line\r\n        className=\"chart-grid-line-horizontal\"\r\n        x1={config.padding.left}\r\n        y1={config.padding.top + 4 * config.mealHeight}\r\n        x2={config.padding.left + 7 * config.dayWidth}\r\n        y2={config.padding.top + 4 * config.mealHeight}\r\n      />\r\n    </g>\r\n  );\r\n};\r\n\r\nconst MealCell = ({ config, dayIndex, mealIndex, mealData, mealTime, isExpanded }) => {\r\n  const x = config.padding.left + dayIndex * config.dayWidth + 5;\r\n  const y = config.padding.top + mealIndex * config.mealHeight + 5;\r\n  const cellWidth = config.dayWidth - 10;\r\n  const cellHeight = config.mealHeight - 10;\r\n  \r\n  // Calculate grid layout for 6 circles (2x3 grid)\r\n  const circlesPerRow = 3;\r\n  const circleWidth = cellWidth / circlesPerRow;\r\n  const circleHeight = (cellHeight - 20) / 2; // Reserve space for time\r\n  \r\n  // Calculate circle radius and emoji size based on cell dimensions\r\n  const minDimension = Math.min(circleWidth, circleHeight);\r\n  const circleRadius = Math.max(8, Math.min(16, minDimension * 0.35)); // Min 8px, max 16px, 35% of min dimension\r\n  const emojiFontSize = Math.max(8, Math.min(16, minDimension * 0.4)); // Min 8px, max 16px, 40% of min dimension for better visibility\r\n  \r\n  // Apply expanded view scaling\r\n  const expandedCircleRadius = isExpanded ? circleRadius * 1.3 : circleRadius;\r\n  const expandedEmojiFontSize = isExpanded ? emojiFontSize * 1.4 : emojiFontSize;\r\n  \r\n  // Define the 6 food categories in order (5 main + 1 sugar)\r\n  const allCategories = [...FOOD_CATEGORIES, 'Added Sugar'];\r\n  \r\n  return (\r\n    <g className=\"meal-cell\">\r\n      {/* Background */}\r\n      <rect\r\n        x={x}\r\n        y={y}\r\n        width={cellWidth}\r\n        height={cellHeight}\r\n        fill=\"#f9f9f9\"\r\n        stroke=\"#ddd\"\r\n        strokeWidth=\"1\"\r\n      />\r\n      \r\n      {/* Meal time at the top */}\r\n      <text\r\n        x={x + cellWidth / 2}\r\n        y={y + 12}\r\n        fontSize={config.fontSize.timeLabel}\r\n        textAnchor=\"middle\"\r\n        className=\"time-label\"\r\n      >\r\n        {mealTime}\r\n      </text>\r\n      \r\n      {/* 6 placeholder circles with food category emojis */}\r\n      {allCategories.map((category, index) => {\r\n        const row = Math.floor(index / circlesPerRow);\r\n        const col = index % circlesPerRow;\r\n        const circleX = x + col * circleWidth + circleWidth / 2;\r\n        const circleY = y + 20 + row * circleHeight + circleHeight / 2;\r\n        \r\n        // Check if category is present\r\n        let hasCategory = false;\r\n        let emoji = '';\r\n        \r\n        if (category === 'Added Sugar') {\r\n          hasCategory = mealData[category] && SUGAR_EMOJIS[mealData[category]];\r\n          emoji = SUGAR_EMOJIS[mealData[category]] || '';\r\n        } else {\r\n          hasCategory = mealData[category];\r\n          emoji = CATEGORY_EMOJIS[category] || '';\r\n        }\r\n        \r\n        return (\r\n          <g key={category}>\r\n            {/* Placeholder circle - always grey */}\r\n            <circle\r\n              cx={circleX}\r\n              cy={circleY}\r\n              r={expandedCircleRadius}\r\n              fill=\"#f5f5f5\"\r\n              stroke=\"#ddd\"\r\n              strokeWidth=\"1\"\r\n              opacity={0.3}\r\n            />\r\n            {/* Emoji if category is present */}\r\n            {hasCategory && emoji && (\r\n              <text\r\n                x={circleX}\r\n                y={circleY}\r\n                fontSize={expandedEmojiFontSize}\r\n                textAnchor=\"middle\"\r\n                dominantBaseline=\"central\"\r\n                style={{ fontFamily: 'Apple Color Emoji, Segoe UI Emoji, Noto Color Emoji, sans-serif' }}\r\n              >\r\n                {emoji}\r\n              </text>\r\n            )}\r\n          </g>\r\n        );\r\n      })}\r\n    </g>\r\n  );\r\n};\r\n\r\nconst MealGrid = ({ config, weekDays, patientData, isExpanded }) => {\r\n  if (!patientData || patientData.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <g className=\"meal-grid\">\r\n      {weekDays.map((day, dayIndex) => {\r\n        const dayData = patientData.find(d => {\r\n          const dataDate = new Date(d.Date);\r\n          return dataDate.toDateString() === day.toDateString();\r\n        });\r\n\r\n        if (!dayData) {\r\n          return null;\r\n        }\r\n\r\n        return MEAL_TYPES.map((meal, mealIndex) => {\r\n          const mealData = getMealData(dayData, meal);\r\n          const mealTime = getMealTime(dayData, meal);\r\n          \r\n          // Debug logging removed for production\r\n          \r\n          return (\r\n            <MealCell\r\n              key={`${dayIndex}-${mealIndex}`}\r\n              config={config}\r\n              dayIndex={dayIndex}\r\n              mealIndex={mealIndex}\r\n              mealData={mealData}\r\n              mealTime={mealTime}\r\n              isExpanded={isExpanded}\r\n            />\r\n          );\r\n        });\r\n      })}\r\n    </g>\r\n  );\r\n};\r\n\r\n\r\n// --- Main Component ---\r\nconst MealContentsChart = ({ patientId, isExpanded = false, onExpand, viewMode = 'patient', navigation }) => {\r\n  const { mealData: patientData, loading, error } = usePatientData(patientId);\r\n  \r\n  // Use navigation from parent or fallback to internal navigation\r\n  const useInternalNavigation = !navigation;\r\n  const internalNavigation = useChartNavigation('mealContents');\r\n  const nav = navigation || internalNavigation;\r\n  const containerRef = useRef(null);\r\n  const [containerWidth, setContainerWidth] = useState(500);\r\n\r\n  const config = createChartConfig('mealContents', isExpanded, containerWidth);\r\n  \r\n  // Measure container width for sizing\r\n  useEffect(() => {\r\n    const updateContainerWidth = () => {\r\n      if (containerRef.current) {\r\n        const width = containerRef.current.offsetWidth;\r\n        setContainerWidth(width);\r\n      }\r\n    };\r\n\r\n    updateContainerWidth();\r\n    window.addEventListener('resize', updateContainerWidth);\r\n    return () => window.removeEventListener('resize', updateContainerWidth);\r\n  }, [isExpanded]);\r\n\r\n  const { start: startOfWeek, end: endOfWeek } = nav.getDateRange();\r\n  const weekDays = Array.from({ length: 7 }, (_, i) => {\r\n    const day = new Date(startOfWeek);\r\n    day.setDate(startOfWeek.getDate() + i);\r\n    return day;\r\n  });\r\n\r\n  // Get 3-month data\r\n  const { start: startOfThreeMonths, end: endOfThreeMonths } = nav.getThreeMonthRange();\r\n  const threeMonthData = patientData.filter(d => {\r\n    const dataDate = new Date(d.Date);\r\n    return dataDate >= startOfThreeMonths && dataDate <= endOfThreeMonths;\r\n  });\r\n\r\n  const formatDateRange = (start, end) => {\r\n    const startStr = start.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\r\n    const endStr = end.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\r\n    return `${startStr} to ${endStr}`;\r\n  };\r\n\r\n  // Calculate summary statistics for physician view\r\n  const weekSummary = React.useMemo(() => {\r\n    if (!patientData || patientData.length === 0) return null;\r\n\r\n    const weekData = patientData.filter(d => {\r\n      const dataDate = new Date(d.Date);\r\n      return dataDate >= startOfWeek && dataDate <= endOfWeek;\r\n    });\r\n\r\n    if (weekData.length === 0) return null;\r\n\r\n    // Count food categories across all meals\r\n    const categoryStats = {};\r\n    FOOD_CATEGORIES.forEach(category => {\r\n      categoryStats[category] = 0;\r\n    });\r\n\r\n    // Count sugar levels\r\n    const sugarStats = {};\r\n    SUGAR_CATEGORIES.filter(s => s !== '').forEach(sugar => {\r\n      sugarStats[sugar] = 0;\r\n    });\r\n\r\n    let totalMealsLogged = 0;\r\n    let daysWithMeals = new Set();\r\n\r\n    weekData.forEach(dayData => {\r\n      daysWithMeals.add(dayData.Date);\r\n      \r\n      MEAL_TYPES.forEach(meal => {\r\n        const mealData = getMealData(dayData, meal);\r\n        const hasAnyFood = FOOD_CATEGORIES.some(category => mealData[category]);\r\n        \r\n        if (hasAnyFood) {\r\n          totalMealsLogged++;\r\n          \r\n          // Count each food category\r\n          FOOD_CATEGORIES.forEach(category => {\r\n            if (mealData[category]) {\r\n              categoryStats[category]++;\r\n            }\r\n          });\r\n\r\n          // Count sugar levels\r\n          if (mealData['Added Sugar'] && mealData['Added Sugar'] !== '') {\r\n            sugarStats[mealData['Added Sugar']]++;\r\n          }\r\n        }\r\n      });\r\n    });\r\n\r\n    // Find most common food category\r\n    const mostCommonFood = Object.entries(categoryStats)\r\n      .sort(([,a], [,b]) => b - a)[0];\r\n\r\n    // Calculate sugar frequency\r\n    const totalSugarMeals = Object.values(sugarStats).reduce((sum, count) => sum + count, 0);\r\n    const sugarPercentage = totalMealsLogged > 0 ? \r\n      ((totalSugarMeals / totalMealsLogged) * 100).toFixed(0) : 0;\r\n\r\n    return {\r\n      totalMealsLogged,\r\n      daysWithMeals: daysWithMeals.size,\r\n      mostCommonFood: mostCommonFood[0],\r\n      mostCommonFoodCount: mostCommonFood[1],\r\n      categoryStats,\r\n      sugarPercentage,\r\n      totalSugarMeals\r\n    };\r\n  }, [patientData, startOfWeek, endOfWeek]);\r\n\r\n  // Calculate 3-month summary statistics for physician view\r\n  const threeMonthSummary = React.useMemo(() => {\r\n    if (!threeMonthData || threeMonthData.length === 0) return null;\r\n\r\n    // Count food categories across all meals\r\n    const categoryStats = {};\r\n    FOOD_CATEGORIES.forEach(category => {\r\n      categoryStats[category] = 0;\r\n    });\r\n\r\n    // Count sugar levels\r\n    const sugarStats = {};\r\n    SUGAR_CATEGORIES.filter(s => s !== '').forEach(sugar => {\r\n      sugarStats[sugar] = 0;\r\n    });\r\n\r\n    let totalMealsLogged = 0;\r\n    let daysWithMeals = new Set();\r\n\r\n    threeMonthData.forEach(dayData => {\r\n      daysWithMeals.add(dayData.Date);\r\n      \r\n      MEAL_TYPES.forEach(meal => {\r\n        const mealData = getMealData(dayData, meal);\r\n        const hasAnyFood = FOOD_CATEGORIES.some(category => mealData[category]);\r\n        \r\n        if (hasAnyFood) {\r\n          totalMealsLogged++;\r\n          \r\n          // Count each food category\r\n          FOOD_CATEGORIES.forEach(category => {\r\n            if (mealData[category]) {\r\n              categoryStats[category]++;\r\n            }\r\n          });\r\n\r\n          // Count sugar levels\r\n          if (mealData['Added Sugar'] && mealData['Added Sugar'] !== '') {\r\n            sugarStats[mealData['Added Sugar']]++;\r\n          }\r\n        }\r\n      });\r\n    });\r\n\r\n    // Find most common food category\r\n    const mostCommonFood = Object.entries(categoryStats)\r\n      .sort(([,a], [,b]) => b - a)[0];\r\n\r\n    // Calculate sugar frequency\r\n    const totalSugarMeals = Object.values(sugarStats).reduce((sum, count) => sum + count, 0);\r\n    const sugarPercentage = totalMealsLogged > 0 ? \r\n      ((totalSugarMeals / totalMealsLogged) * 100).toFixed(0) : 0;\r\n\r\n    return {\r\n      totalMealsLogged,\r\n      daysWithMeals: daysWithMeals.size,\r\n      mostCommonFood: mostCommonFood[0],\r\n      mostCommonFoodCount: mostCommonFood[1],\r\n      categoryStats,\r\n      sugarPercentage,\r\n      totalSugarMeals\r\n    };\r\n  }, [threeMonthData]);\r\n\r\n\r\n  \r\n  return (\r\n      <div className=\"meal-contents-chart-container\">\r\n        <h3 className=\"chart-title\">Meal Contents</h3>\r\n        <h4 className=\"chart-subtitle\">{nav.getCurrentMonthYear()}</h4>\r\n        <div className={`meal-chart-wrapper ${isExpanded ? 'expanded' : ''}`} ref={containerRef}>\r\n          <svg \r\n            width={config.width} \r\n            height={config.height} \r\n            viewBox={`0 0 ${config.width} ${config.height}`} \r\n            className=\"meal-chart\"\r\n            style={{ maxWidth: '100%', height: 'auto' }}\r\n          >\r\n            <XAxis config={config} weekDays={weekDays} />\r\n            <YAxis config={config} />\r\n            <MealGrid \r\n              config={config} \r\n              weekDays={weekDays} \r\n              patientData={patientData} \r\n              isExpanded={isExpanded}\r\n            />\r\n          </svg>\r\n        </div>\r\n        \r\n        <div className=\"meal-contents-legends-wrapper\">\r\n            <Legend \r\n              title=\"Food Categories\" \r\n              items={FOOD_CATEGORIES.map(category => ({\r\n                label: `${CATEGORY_EMOJIS[category]} ${category}`,\r\n                color: null\r\n              }))}\r\n            />\r\n            <Legend \r\n              title=\"Sugar Levels\" \r\n              items={SUGAR_CATEGORIES.filter(sugar => sugar !== '').map(sugar => ({\r\n                label: `${SUGAR_EMOJIS[sugar]} ${sugar}`,\r\n                color: null\r\n              }))}\r\n            />\r\n        </div>\r\n\r\n        {/* Show summary for physician view only */}\r\n        {viewMode === 'physician' && weekSummary && (\r\n          <div className=\"summary-container\">\r\n            <div className=\"chart-summary\">\r\n              <h4>Week Summary</h4>\r\n              <div className=\"summary-stats\">\r\n                <div className=\"stat-item\">\r\n                  <span className=\"stat-label\">Meals Logged:</span>\r\n                  <span className=\"stat-value\">\r\n                    {weekSummary.totalMealsLogged}/28 possible\r\n                  </span>\r\n                </div>\r\n\r\n\r\n                <div className=\"stat-item\">\r\n                  <span className=\"stat-label\">Added Sugar:</span>\r\n                  <span className=\"stat-value\">\r\n                    {weekSummary.sugarPercentage}% of meals ({weekSummary.totalSugarMeals}/{weekSummary.totalMealsLogged})\r\n                  </span>\r\n                </div>\r\n                <div className=\"stat-item\">\r\n                  <span className=\"stat-label\">Food Balance:</span>\r\n                  <span className=\"stat-value\">\r\n                    {weekSummary.categoryStats && Object.entries(weekSummary.categoryStats)\r\n                      .sort(([,a], [,b]) => b - a)\r\n                      .slice(0, 3)\r\n                      .map(([cat, count]) => `${CATEGORY_EMOJIS[cat]}${count}`)\r\n                      .join(' ')}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            {threeMonthSummary && (\r\n              <div className=\"chart-summary\">\r\n                <h4>3-Month Summary</h4>\r\n                <div className=\"summary-stats\">\r\n                  <div className=\"stat-item\">\r\n                    <span className=\"stat-label\">Meals Logged:</span>\r\n                    <span className=\"stat-value\">\r\n                      {threeMonthSummary.totalMealsLogged} meals\r\n                    </span>\r\n                  </div>\r\n\r\n                  <div className=\"stat-item\">\r\n                    <span className=\"stat-label\">Added Sugar:</span>\r\n                    <span className=\"stat-value\">\r\n                      {threeMonthSummary.sugarPercentage}% of meals ({threeMonthSummary.totalSugarMeals}/{threeMonthSummary.totalMealsLogged})\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"stat-item\">\r\n                    <span className=\"stat-label\">Food Balance:</span>\r\n                    <span className=\"stat-value\">\r\n                      {threeMonthSummary.categoryStats && Object.entries(threeMonthSummary.categoryStats)\r\n                        .sort(([,a], [,b]) => b - a)\r\n                        .slice(0, 3)\r\n                        .map(([cat, count]) => `${CATEGORY_EMOJIS[cat]}${count}`)\r\n                        .join(' ')}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default MealContentsChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}