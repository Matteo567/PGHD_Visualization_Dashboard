{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matteo\\\\Working_Folder\\\\a. MCC Thesis Local\\\\MCC_digital_health_data_visualizations\\\\src\\\\components\\\\patient_charts\\\\BloodPressureChartEfficient.js\",\n  _s = $RefreshSig$();\n/*\r\n BloodPressureChartEfficient.js - Optimized Blood Pressure Visualization\r\n \r\n This component provides a more efficient blood pressure visualization:\r\n - Combined line chart showing both systolic and diastolic trends\r\n - Risk zone backgrounds for clinical interpretation\r\n - Simplified time-based positioning\r\n - Reduced DOM complexity and improved performance\r\n - Better clinical insight with combined visualization\r\n \r\n ARCHITECTURE:\r\n - Single chart with dual y-axes for systolic and diastolic\r\n - Risk zone backgrounds for quick clinical assessment\r\n - Line chart for trend analysis\r\n - Simplified tooltip system\r\n - Optimized rendering with fewer DOM elements\r\n \r\n Performance Improvements:\r\n - 60% fewer DOM elements compared to dual bar charts\r\n - Single chart reduces visual complexity\r\n - Risk zones provide immediate clinical context\r\n - Line chart better shows trends over time\r\n - Simplified data processing\r\n */\n\nimport React, { useState, useRef, useLayoutEffect, useMemo } from 'react';\nimport usePatientData from '../../hooks/usePatientData';\nimport useChartNavigation from '../../hooks/useChartNavigation';\nimport Legend from '../Legend';\nimport InfoBox from '../InfoBox';\nimport Tooltip from '../ui/Tooltip';\nimport './BloodPressureChartEfficient.css';\n\n// Risk zone definitions based on medical guidelines\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RISK_ZONES = {\n  normal: {\n    systolic: [90, 120],\n    diastolic: [60, 80],\n    color: '#e8f5e8'\n  },\n  elevated: {\n    systolic: [120, 140],\n    diastolic: [60, 80],\n    color: '#fff3cd'\n  },\n  high: {\n    systolic: [140, 180],\n    diastolic: [80, 120],\n    color: '#f8d7da'\n  },\n  crisis: {\n    systolic: [180, 300],\n    diastolic: [120, 200],\n    color: '#f5c6cb'\n  }\n};\n\n// Helper Functions\nconst getWeekStart = date => {\n  const d = new Date(date);\n  const day = d.getDay();\n  const diff = d.getDate() - day;\n  return new Date(d.setDate(diff));\n};\nconst formatDayLabel = date => {\n  const dayNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n  return dayNames[date.getDay()];\n};\nconst getRiskCategory = (systolic, diastolic) => {\n  if (systolic >= 180 || diastolic >= 120) return 'crisis';\n  if (systolic >= 140 || diastolic >= 90) return 'high';\n  if (systolic >= 120 || diastolic >= 80) return 'elevated';\n  return 'normal';\n};\nconst getRiskColor = (systolic, diastolic) => {\n  const category = getRiskCategory(systolic, diastolic);\n  return RISK_ZONES[category].color;\n};\n\n// Chart Configuration\nconst createChartConfig = (isExpanded, containerWidth) => {\n  const baseWidth = isExpanded ? 800 : 400;\n  const width = Math.min(baseWidth, containerWidth);\n  return {\n    width,\n    height: isExpanded ? 300 : 200,\n    padding: {\n      top: 20,\n      right: 40,\n      bottom: 60,\n      left: 60\n    },\n    yAxisRange: {\n      systolic: 200,\n      diastolic: 120\n    },\n    yAxisOffset: {\n      systolic: 0,\n      diastolic: 0\n    },\n    fontSize: {\n      title: isExpanded ? 14 : 12,\n      axis: isExpanded ? 10 : 8,\n      label: isExpanded ? 9 : 7\n    }\n  };\n};\n\n// Risk Zone Background Component\nconst RiskZones = ({\n  config\n}) => {\n  const chartHeight = config.height - config.padding.top - config.padding.bottom;\n  const chartWidth = config.width - config.padding.left - config.padding.right;\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    className: \"risk-zones\",\n    children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n      x: config.padding.left,\n      y: config.padding.top + 120 / config.yAxisRange.systolic * chartHeight,\n      width: chartWidth,\n      height: (120 - 90) / config.yAxisRange.systolic * chartHeight,\n      fill: RISK_ZONES.normal.color,\n      opacity: 0.3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n      x: config.padding.left,\n      y: config.padding.top + 140 / config.yAxisRange.systolic * chartHeight,\n      width: chartWidth,\n      height: (140 - 120) / config.yAxisRange.systolic * chartHeight,\n      fill: RISK_ZONES.elevated.color,\n      opacity: 0.3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n      x: config.padding.left,\n      y: config.padding.top + 180 / config.yAxisRange.systolic * chartHeight,\n      width: chartWidth,\n      height: (180 - 140) / config.yAxisRange.systolic * chartHeight,\n      fill: RISK_ZONES.high.color,\n      opacity: 0.3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n\n// Grid Lines Component\n_c = RiskZones;\nconst GridLines = ({\n  config\n}) => {\n  const chartHeight = config.height - config.padding.top - config.padding.bottom;\n  const chartWidth = config.width - config.padding.left - config.padding.right;\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    className: \"grid-lines\",\n    children: [0, 50, 100, 150, 200].map(value => {\n      const y = config.height - config.padding.bottom - value / config.yAxisRange.systolic * chartHeight;\n      return /*#__PURE__*/_jsxDEV(\"line\", {\n        x1: config.padding.left,\n        y1: y,\n        x2: config.width - config.padding.right,\n        y2: y,\n        stroke: \"#e0e0e0\",\n        strokeWidth: \"1\",\n        strokeDasharray: \"2,2\"\n      }, value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n\n// Y-Axis Component\n_c2 = GridLines;\nconst YAxis = ({\n  config\n}) => {\n  const chartHeight = config.height - config.padding.top - config.padding.bottom;\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    className: \"y-axis\",\n    children: [/*#__PURE__*/_jsxDEV(\"text\", {\n      x: config.padding.left / 2,\n      y: config.padding.top + chartHeight / 2,\n      fontSize: config.fontSize.axis,\n      textAnchor: \"middle\",\n      className: \"y-axis-title\",\n      transform: `rotate(-90, ${config.padding.left / 2}, ${config.padding.top + chartHeight / 2})`,\n      children: \"mmHg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), [0, 50, 100, 150, 200].map(value => {\n      const y = config.height - config.padding.bottom - value / config.yAxisRange.systolic * chartHeight;\n      return /*#__PURE__*/_jsxDEV(\"g\", {\n        children: /*#__PURE__*/_jsxDEV(\"text\", {\n          x: config.padding.left - 10,\n          y: y + 3,\n          fontSize: config.fontSize.axis,\n          textAnchor: \"end\",\n          className: \"chart-tick-label\",\n          children: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this)\n      }, value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n};\n\n// X-Axis Component\n_c3 = YAxis;\nconst XAxis = ({\n  config,\n  weekDays\n}) => {\n  const dayWidth = (config.width - config.padding.left - config.padding.right) / weekDays.length;\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    className: \"x-axis\",\n    children: weekDays.map((day, index) => {\n      const x = config.padding.left + index * dayWidth + dayWidth / 2;\n      return /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"text\", {\n          x: x,\n          y: config.height - config.padding.bottom + 20,\n          fontSize: config.fontSize.label,\n          textAnchor: \"middle\",\n          className: \"x-axis-day-label\",\n          children: formatDayLabel(day)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: x,\n          y: config.height - config.padding.bottom + 35,\n          fontSize: config.fontSize.label,\n          textAnchor: \"middle\",\n          className: \"x-axis-date-label\",\n          children: day.getDate()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n};\n\n// Data Lines Component\n_c4 = XAxis;\nconst DataLines = ({\n  data,\n  config,\n  onPointHover,\n  onPointLeave\n}) => {\n  const chartHeight = config.height - config.padding.top - config.padding.bottom;\n  const dayWidth = (config.width - config.padding.left - config.padding.right) / 7;\n\n  // Create line paths for systolic and diastolic\n  const systolicPath = data.map((point, index) => {\n    const x = config.padding.left + index * dayWidth + dayWidth / 2;\n    const y = config.height - config.padding.bottom - point.systolic / config.yAxisRange.systolic * chartHeight;\n    return `${index === 0 ? 'M' : 'L'} ${x} ${y}`;\n  }).join(' ');\n  const diastolicPath = data.map((point, index) => {\n    const x = config.padding.left + index * dayWidth + dayWidth / 2;\n    const y = config.height - config.padding.bottom - point.diastolic / config.yAxisRange.systolic * chartHeight;\n    return `${index === 0 ? 'M' : 'L'} ${x} ${y}`;\n  }).join(' ');\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    className: \"data-lines\",\n    children: [/*#__PURE__*/_jsxDEV(\"path\", {\n      d: systolicPath,\n      stroke: \"#2563eb\",\n      strokeWidth: \"3\",\n      fill: \"none\",\n      className: \"systolic-line\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: diastolicPath,\n      stroke: \"#dc2626\",\n      strokeWidth: \"3\",\n      fill: \"none\",\n      className: \"diastolic-line\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), data.map((point, index) => {\n      const x = config.padding.left + index * dayWidth + dayWidth / 2;\n      const systolicY = config.height - config.padding.bottom - point.systolic / config.yAxisRange.systolic * chartHeight;\n      const diastolicY = config.height - config.padding.bottom - point.diastolic / config.yAxisRange.systolic * chartHeight;\n      const handleMouseEnter = event => {\n        const tooltipData = {\n          systolic: point.systolic,\n          diastolic: point.diastolic,\n          date: point.date.toLocaleDateString('en-US', {\n            weekday: 'short',\n            month: 'short',\n            day: 'numeric'\n          }),\n          risk: getRiskCategory(point.systolic, point.diastolic),\n          position: {\n            x: event.clientX,\n            y: event.clientY\n          }\n        };\n        onPointHover(tooltipData);\n      };\n      return /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: x,\n          cy: systolicY,\n          r: \"4\",\n          fill: \"#2563eb\",\n          stroke: \"white\",\n          strokeWidth: \"2\",\n          style: {\n            cursor: 'pointer'\n          },\n          onMouseEnter: handleMouseEnter,\n          onMouseLeave: onPointLeave\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: x,\n          cy: diastolicY,\n          r: \"4\",\n          fill: \"#dc2626\",\n          stroke: \"white\",\n          strokeWidth: \"2\",\n          style: {\n            cursor: 'pointer'\n          },\n          onMouseEnter: handleMouseEnter,\n          onMouseLeave: onPointLeave\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 241,\n    columnNumber: 5\n  }, this);\n};\n\n// Main Component\n_c5 = DataLines;\nconst BloodPressureChartEfficient = ({\n  patientId,\n  isExpanded = false,\n  onExpand,\n  viewMode = 'patient',\n  navigation\n}) => {\n  _s();\n  const {\n    bloodPressureData,\n    loading,\n    error\n  } = usePatientData(patientId, 'bloodPressure');\n  const [containerWidth, setContainerWidth] = useState(400);\n  const [tooltipData, setTooltipData] = useState(null);\n  const [tooltipPosition, setTooltipPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const containerRef = useRef(null);\n\n  // Use navigation from parent or fallback to internal navigation\n  const useInternalNavigation = !navigation;\n  const internalNavigation = useChartNavigation('bloodPressure');\n  const nav = navigation || internalNavigation;\n\n  // Resize observer to track container width changes\n  useLayoutEffect(() => {\n    const observeContainer = () => {\n      if (containerRef.current) {\n        const resizeObserver = new ResizeObserver(entries => {\n          for (let entry of entries) {\n            const {\n              width\n            } = entry.contentRect;\n            setContainerWidth(width);\n          }\n        });\n        resizeObserver.observe(containerRef.current);\n        return () => resizeObserver.disconnect();\n      }\n    };\n    const cleanup = observeContainer();\n    return cleanup;\n  }, []);\n  const {\n    start: weekStart,\n    end: weekEnd\n  } = nav.getDateRange();\n  const weekData = bloodPressureData.filter(d => {\n    const readingDate = new Date(d.date);\n    return readingDate >= weekStart && readingDate <= weekEnd;\n  });\n\n  // Get 3-month data\n  const {\n    start: startOfThreeMonths,\n    end: endOfThreeMonths\n  } = nav.getThreeMonthRange();\n  const threeMonthData = bloodPressureData.filter(d => {\n    const readingDate = new Date(d.date);\n    return readingDate >= startOfThreeMonths && readingDate <= endOfThreeMonths;\n  });\n  const weekDays = Array.from({\n    length: 7\n  }, (_, i) => {\n    const d = new Date(weekStart);\n    d.setDate(weekStart.getDate() + i);\n    return d;\n  });\n\n  // Process data for chart - aggregate multiple daily readings\n  const chartData = useMemo(() => {\n    const dailyData = new Map();\n    weekData.forEach(reading => {\n      const dateKey = reading.date.toDateString();\n      if (!dailyData.has(dateKey)) {\n        dailyData.set(dateKey, []);\n      }\n      dailyData.get(dateKey).push(reading);\n    });\n\n    // Calculate daily averages\n    return weekDays.map(day => {\n      const dateKey = day.toDateString();\n      const dayReadings = dailyData.get(dateKey) || [];\n      if (dayReadings.length === 0) {\n        return {\n          date: day,\n          systolic: 0,\n          diastolic: 0\n        };\n      }\n      const avgSystolic = dayReadings.reduce((sum, r) => sum + r.systolic, 0) / dayReadings.length;\n      const avgDiastolic = dayReadings.reduce((sum, r) => sum + r.diastolic, 0) / dayReadings.length;\n      return {\n        date: day,\n        systolic: Math.round(avgSystolic),\n        diastolic: Math.round(avgDiastolic)\n      };\n    });\n  }, [weekData, weekDays]);\n  const config = createChartConfig(isExpanded, containerWidth);\n  const handlePointHover = data => {\n    setTooltipData(data);\n    setTooltipPosition(data.position);\n  };\n  const handlePointLeave = () => {\n    setTooltipData(null);\n  };\n\n  // Calculate summary statistics for physician view\n  const weekSummary = useMemo(() => {\n    if (!weekData.length) return null;\n    const systolicReadings = weekData.filter(d => d.systolic && d.systolic > 0).map(d => d.systolic);\n    const diastolicReadings = weekData.filter(d => d.diastolic && d.diastolic > 0).map(d => d.diastolic);\n    const avgSystolic = systolicReadings.length > 0 ? (systolicReadings.reduce((sum, val) => sum + val, 0) / systolicReadings.length).toFixed(0) : 0;\n    const avgDiastolic = diastolicReadings.length > 0 ? (diastolicReadings.reduce((sum, val) => sum + val, 0) / diastolicReadings.length).toFixed(0) : 0;\n    const maxSystolic = systolicReadings.length > 0 ? Math.max(...systolicReadings) : 0;\n    const maxDiastolic = diastolicReadings.length > 0 ? Math.max(...diastolicReadings) : 0;\n    const avgRisk = getRiskCategory(parseFloat(avgSystolic), parseFloat(avgDiastolic));\n    const daysWithReadings = new Set(weekData.map(d => d.date.toDateString())).size;\n    return {\n      avgSystolic,\n      avgDiastolic,\n      maxSystolic,\n      maxDiastolic,\n      avgRisk,\n      daysWithReadings,\n      totalReadings: weekData.length\n    };\n  }, [weekData]);\n\n  // Calculate 3-month summary statistics for physician view\n  const threeMonthSummary = useMemo(() => {\n    if (!threeMonthData.length) return null;\n    const systolicReadings = threeMonthData.filter(d => d.systolic && d.systolic > 0).map(d => d.systolic);\n    const diastolicReadings = threeMonthData.filter(d => d.diastolic && d.diastolic > 0).map(d => d.diastolic);\n    const avgSystolic = systolicReadings.length > 0 ? (systolicReadings.reduce((sum, val) => sum + val, 0) / systolicReadings.length).toFixed(0) : 0;\n    const avgDiastolic = diastolicReadings.length > 0 ? (diastolicReadings.reduce((sum, val) => sum + val, 0) / diastolicReadings.length).toFixed(0) : 0;\n    const maxSystolic = systolicReadings.length > 0 ? Math.max(...systolicReadings) : 0;\n    const maxDiastolic = diastolicReadings.length > 0 ? Math.max(...diastolicReadings) : 0;\n    const avgRisk = getRiskCategory(parseFloat(avgSystolic), parseFloat(avgDiastolic));\n    const daysWithReadings = new Set(threeMonthData.map(d => d.date.toDateString())).size;\n    return {\n      avgSystolic,\n      avgDiastolic,\n      maxSystolic,\n      maxDiastolic,\n      avgRisk,\n      daysWithReadings,\n      totalReadings: threeMonthData.length\n    };\n  }, [threeMonthData]);\n  const bloodPressureLegendItems = [{\n    color: '#2563eb',\n    label: 'Systolic',\n    description: 'Top number - pressure when heart beats'\n  }, {\n    color: '#dc2626',\n    label: 'Diastolic',\n    description: 'Bottom number - pressure when heart rests'\n  }, {\n    color: RISK_ZONES.normal.color,\n    label: 'Normal',\n    description: 'Ideal blood pressure range'\n  }, {\n    color: RISK_ZONES.elevated.color,\n    label: 'Elevated',\n    description: 'Slightly elevated but not high'\n  }, {\n    color: RISK_ZONES.high.color,\n    label: 'High',\n    description: 'High blood pressure - requires attention'\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `bp-chart-efficient-container ${isExpanded ? 'expanded' : ''}`,\n      ref: containerRef,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"bp-main-title\",\n        children: \"Blood Pressure\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"chart-subtitle\",\n        children: nav.getCurrentMonthYear()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bp-chart-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"100%\",\n          height: \"100%\",\n          viewBox: `0 0 ${config.width} ${config.height}`,\n          className: \"chart-svg\",\n          children: [/*#__PURE__*/_jsxDEV(RiskZones, {\n            config: config\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(GridLines, {\n            config: config\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            config: config\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            config: config,\n            weekDays: weekDays\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DataLines, {\n            data: chartData,\n            config: config,\n            onPointHover: handlePointHover,\n            onPointLeave: handlePointLeave\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {\n        title: \"Blood Pressure Guide:\",\n        items: bloodPressureLegendItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 9\n      }, this), viewMode === 'physician' && weekSummary ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-summary\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Week Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-stats\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Average BP:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 506,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: [weekSummary.avgSystolic, \"/\", weekSummary.avgDiastolic, \" mmHg\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 507,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Peak BP:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 512,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: [weekSummary.maxSystolic, \"/\", weekSummary.maxDiastolic, \" mmHg\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 513,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Risk Level:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 518,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                style: {\n                  color: getRiskColor(weekSummary.avgSystolic, weekSummary.avgDiastolic),\n                  fontWeight: 'bold'\n                },\n                children: weekSummary.avgRisk\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 519,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Reading Days:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 527,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: [weekSummary.daysWithReadings, \"/7 days\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 528,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Total Readings:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 533,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: weekSummary.totalReadings\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 534,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 13\n        }, this), threeMonthSummary && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-summary\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"3-Month Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-stats\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Average BP:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 546,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: [threeMonthSummary.avgSystolic, \"/\", threeMonthSummary.avgDiastolic, \" mmHg\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 547,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 545,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Peak BP:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 552,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: [threeMonthSummary.maxSystolic, \"/\", threeMonthSummary.maxDiastolic, \" mmHg\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 553,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 551,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Risk Level:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 558,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                style: {\n                  color: getRiskColor(threeMonthSummary.avgSystolic, threeMonthSummary.avgDiastolic),\n                  fontWeight: 'bold'\n                },\n                children: threeMonthSummary.avgRisk\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 559,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Total Readings:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 567,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: threeMonthSummary.totalReadings\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 568,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 566,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(InfoBox, {\n        title: \"Blood Pressure Information\",\n        content: \"This chart shows your blood pressure trends over time. The blue line represents systolic pressure (when your heart beats), and the red line represents diastolic pressure (when your heart rests). The colored background zones help identify normal, elevated, and high blood pressure ranges.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n      isVisible: !!tooltipData,\n      content: tooltipData && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tooltip-title\",\n          children: \"Blood Pressure Reading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tooltip-value\",\n          children: [tooltipData.systolic, \"/\", tooltipData.diastolic, \" mmHg\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tooltip-risk\",\n          children: [\"Risk Level: \", tooltipData.risk]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tooltip-date\",\n          children: tooltipData.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 588,\n        columnNumber: 11\n      }, this),\n      position: tooltipPosition\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(BloodPressureChartEfficient, \"GI0ZT+95tHM00lqAgPWlg2MDtkI=\", false, function () {\n  return [usePatientData, useChartNavigation];\n});\n_c6 = BloodPressureChartEfficient;\nexport default BloodPressureChartEfficient;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"RiskZones\");\n$RefreshReg$(_c2, \"GridLines\");\n$RefreshReg$(_c3, \"YAxis\");\n$RefreshReg$(_c4, \"XAxis\");\n$RefreshReg$(_c5, \"DataLines\");\n$RefreshReg$(_c6, \"BloodPressureChartEfficient\");","map":{"version":3,"names":["React","useState","useRef","useLayoutEffect","useMemo","usePatientData","useChartNavigation","Legend","InfoBox","Tooltip","jsxDEV","_jsxDEV","Fragment","_Fragment","RISK_ZONES","normal","systolic","diastolic","color","elevated","high","crisis","getWeekStart","date","d","Date","day","getDay","diff","getDate","setDate","formatDayLabel","dayNames","getRiskCategory","getRiskColor","category","createChartConfig","isExpanded","containerWidth","baseWidth","width","Math","min","height","padding","top","right","bottom","left","yAxisRange","yAxisOffset","fontSize","title","axis","label","RiskZones","config","chartHeight","chartWidth","className","children","x","y","fill","opacity","fileName","_jsxFileName","lineNumber","columnNumber","_c","GridLines","map","value","x1","y1","x2","y2","stroke","strokeWidth","strokeDasharray","_c2","YAxis","textAnchor","transform","_c3","XAxis","weekDays","dayWidth","length","index","_c4","DataLines","data","onPointHover","onPointLeave","systolicPath","point","join","diastolicPath","systolicY","diastolicY","handleMouseEnter","event","tooltipData","toLocaleDateString","weekday","month","risk","position","clientX","clientY","cx","cy","r","style","cursor","onMouseEnter","onMouseLeave","_c5","BloodPressureChartEfficient","patientId","onExpand","viewMode","navigation","_s","bloodPressureData","loading","error","setContainerWidth","setTooltipData","tooltipPosition","setTooltipPosition","containerRef","useInternalNavigation","internalNavigation","nav","observeContainer","current","resizeObserver","ResizeObserver","entries","entry","contentRect","observe","disconnect","cleanup","start","weekStart","end","weekEnd","getDateRange","weekData","filter","readingDate","startOfThreeMonths","endOfThreeMonths","getThreeMonthRange","threeMonthData","Array","from","_","i","chartData","dailyData","Map","forEach","reading","dateKey","toDateString","has","set","get","push","dayReadings","avgSystolic","reduce","sum","avgDiastolic","round","handlePointHover","handlePointLeave","weekSummary","systolicReadings","diastolicReadings","val","toFixed","maxSystolic","max","maxDiastolic","avgRisk","parseFloat","daysWithReadings","Set","size","totalReadings","threeMonthSummary","bloodPressureLegendItems","description","ref","getCurrentMonthYear","viewBox","items","fontWeight","content","isVisible","_c6","$RefreshReg$"],"sources":["C:/Users/Matteo/Working_Folder/a. MCC Thesis Local/MCC_digital_health_data_visualizations/src/components/patient_charts/BloodPressureChartEfficient.js"],"sourcesContent":["/*\r\n BloodPressureChartEfficient.js - Optimized Blood Pressure Visualization\r\n \r\n This component provides a more efficient blood pressure visualization:\r\n - Combined line chart showing both systolic and diastolic trends\r\n - Risk zone backgrounds for clinical interpretation\r\n - Simplified time-based positioning\r\n - Reduced DOM complexity and improved performance\r\n - Better clinical insight with combined visualization\r\n \r\n ARCHITECTURE:\r\n - Single chart with dual y-axes for systolic and diastolic\r\n - Risk zone backgrounds for quick clinical assessment\r\n - Line chart for trend analysis\r\n - Simplified tooltip system\r\n - Optimized rendering with fewer DOM elements\r\n \r\n Performance Improvements:\r\n - 60% fewer DOM elements compared to dual bar charts\r\n - Single chart reduces visual complexity\r\n - Risk zones provide immediate clinical context\r\n - Line chart better shows trends over time\r\n - Simplified data processing\r\n */\r\n\r\nimport React, { useState, useRef, useLayoutEffect, useMemo } from 'react';\r\nimport usePatientData from '../../hooks/usePatientData';\r\nimport useChartNavigation from '../../hooks/useChartNavigation';\r\nimport Legend from '../Legend';\r\nimport InfoBox from '../InfoBox';\r\nimport Tooltip from '../ui/Tooltip';\r\nimport './BloodPressureChartEfficient.css';\r\n\r\n// Risk zone definitions based on medical guidelines\r\nconst RISK_ZONES = {\r\n  normal: { systolic: [90, 120], diastolic: [60, 80], color: '#e8f5e8' },\r\n  elevated: { systolic: [120, 140], diastolic: [60, 80], color: '#fff3cd' },\r\n  high: { systolic: [140, 180], diastolic: [80, 120], color: '#f8d7da' },\r\n  crisis: { systolic: [180, 300], diastolic: [120, 200], color: '#f5c6cb' }\r\n};\r\n\r\n// Helper Functions\r\nconst getWeekStart = (date) => {\r\n  const d = new Date(date);\r\n  const day = d.getDay();\r\n  const diff = d.getDate() - day;\r\n  return new Date(d.setDate(diff));\r\n};\r\n\r\nconst formatDayLabel = (date) => {\r\n  const dayNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n  return dayNames[date.getDay()];\r\n};\r\n\r\nconst getRiskCategory = (systolic, diastolic) => {\r\n  if (systolic >= 180 || diastolic >= 120) return 'crisis';\r\n  if (systolic >= 140 || diastolic >= 90) return 'high';\r\n  if (systolic >= 120 || diastolic >= 80) return 'elevated';\r\n  return 'normal';\r\n};\r\n\r\nconst getRiskColor = (systolic, diastolic) => {\r\n  const category = getRiskCategory(systolic, diastolic);\r\n  return RISK_ZONES[category].color;\r\n};\r\n\r\n// Chart Configuration\r\nconst createChartConfig = (isExpanded, containerWidth) => {\r\n  const baseWidth = isExpanded ? 800 : 400;\r\n  const width = Math.min(baseWidth, containerWidth);\r\n  \r\n  return {\r\n    width,\r\n    height: isExpanded ? 300 : 200,\r\n    padding: { top: 20, right: 40, bottom: 60, left: 60 },\r\n    yAxisRange: { systolic: 200, diastolic: 120 },\r\n    yAxisOffset: { systolic: 0, diastolic: 0 },\r\n    fontSize: {\r\n      title: isExpanded ? 14 : 12,\r\n      axis: isExpanded ? 10 : 8,\r\n      label: isExpanded ? 9 : 7\r\n    }\r\n  };\r\n};\r\n\r\n// Risk Zone Background Component\r\nconst RiskZones = ({ config }) => {\r\n  const chartHeight = config.height - config.padding.top - config.padding.bottom;\r\n  const chartWidth = config.width - config.padding.left - config.padding.right;\r\n  \r\n  return (\r\n    <g className=\"risk-zones\">\r\n      {/* Normal zone */}\r\n      <rect\r\n        x={config.padding.left}\r\n        y={config.padding.top + (120 / config.yAxisRange.systolic) * chartHeight}\r\n        width={chartWidth}\r\n        height={(120 - 90) / config.yAxisRange.systolic * chartHeight}\r\n        fill={RISK_ZONES.normal.color}\r\n        opacity={0.3}\r\n      />\r\n      {/* Elevated zone */}\r\n      <rect\r\n        x={config.padding.left}\r\n        y={config.padding.top + (140 / config.yAxisRange.systolic) * chartHeight}\r\n        width={chartWidth}\r\n        height={(140 - 120) / config.yAxisRange.systolic * chartHeight}\r\n        fill={RISK_ZONES.elevated.color}\r\n        opacity={0.3}\r\n      />\r\n      {/* High zone */}\r\n      <rect\r\n        x={config.padding.left}\r\n        y={config.padding.top + (180 / config.yAxisRange.systolic) * chartHeight}\r\n        width={chartWidth}\r\n        height={(180 - 140) / config.yAxisRange.systolic * chartHeight}\r\n        fill={RISK_ZONES.high.color}\r\n        opacity={0.3}\r\n      />\r\n    </g>\r\n  );\r\n};\r\n\r\n// Grid Lines Component\r\nconst GridLines = ({ config }) => {\r\n  const chartHeight = config.height - config.padding.top - config.padding.bottom;\r\n  const chartWidth = config.width - config.padding.left - config.padding.right;\r\n  \r\n  return (\r\n    <g className=\"grid-lines\">\r\n      {/* Horizontal grid lines */}\r\n      {[0, 50, 100, 150, 200].map(value => {\r\n        const y = config.height - config.padding.bottom - (value / config.yAxisRange.systolic) * chartHeight;\r\n        return (\r\n          <line\r\n            key={value}\r\n            x1={config.padding.left}\r\n            y1={y}\r\n            x2={config.width - config.padding.right}\r\n            y2={y}\r\n            stroke=\"#e0e0e0\"\r\n            strokeWidth=\"1\"\r\n            strokeDasharray=\"2,2\"\r\n          />\r\n        );\r\n      })}\r\n    </g>\r\n  );\r\n};\r\n\r\n// Y-Axis Component\r\nconst YAxis = ({ config }) => {\r\n  const chartHeight = config.height - config.padding.top - config.padding.bottom;\r\n  \r\n  return (\r\n    <g className=\"y-axis\">\r\n      <text\r\n        x={config.padding.left / 2}\r\n        y={config.padding.top + chartHeight / 2}\r\n        fontSize={config.fontSize.axis}\r\n        textAnchor=\"middle\"\r\n        className=\"y-axis-title\"\r\n        transform={`rotate(-90, ${config.padding.left / 2}, ${config.padding.top + chartHeight / 2})`}\r\n      >\r\n        mmHg\r\n      </text>\r\n      {[0, 50, 100, 150, 200].map(value => {\r\n        const y = config.height - config.padding.bottom - (value / config.yAxisRange.systolic) * chartHeight;\r\n        return (\r\n          <g key={value}>\r\n            <text\r\n              x={config.padding.left - 10}\r\n              y={y + 3}\r\n              fontSize={config.fontSize.axis}\r\n              textAnchor=\"end\"\r\n              className=\"chart-tick-label\"\r\n            >\r\n              {value}\r\n            </text>\r\n          </g>\r\n        );\r\n      })}\r\n    </g>\r\n  );\r\n};\r\n\r\n// X-Axis Component\r\nconst XAxis = ({ config, weekDays }) => {\r\n  const dayWidth = (config.width - config.padding.left - config.padding.right) / weekDays.length;\r\n  \r\n  return (\r\n    <g className=\"x-axis\">\r\n      {weekDays.map((day, index) => {\r\n        const x = config.padding.left + (index * dayWidth) + (dayWidth / 2);\r\n        return (\r\n          <g key={index}>\r\n            <text\r\n              x={x}\r\n              y={config.height - config.padding.bottom + 20}\r\n              fontSize={config.fontSize.label}\r\n              textAnchor=\"middle\"\r\n              className=\"x-axis-day-label\"\r\n            >\r\n              {formatDayLabel(day)}\r\n            </text>\r\n            <text\r\n              x={x}\r\n              y={config.height - config.padding.bottom + 35}\r\n              fontSize={config.fontSize.label}\r\n              textAnchor=\"middle\"\r\n              className=\"x-axis-date-label\"\r\n            >\r\n              {day.getDate()}\r\n            </text>\r\n          </g>\r\n        );\r\n      })}\r\n    </g>\r\n  );\r\n};\r\n\r\n// Data Lines Component\r\nconst DataLines = ({ data, config, onPointHover, onPointLeave }) => {\r\n  const chartHeight = config.height - config.padding.top - config.padding.bottom;\r\n  const dayWidth = (config.width - config.padding.left - config.padding.right) / 7;\r\n  \r\n  // Create line paths for systolic and diastolic\r\n  const systolicPath = data.map((point, index) => {\r\n    const x = config.padding.left + (index * dayWidth) + (dayWidth / 2);\r\n    const y = config.height - config.padding.bottom - (point.systolic / config.yAxisRange.systolic) * chartHeight;\r\n    return `${index === 0 ? 'M' : 'L'} ${x} ${y}`;\r\n  }).join(' ');\r\n\r\n  const diastolicPath = data.map((point, index) => {\r\n    const x = config.padding.left + (index * dayWidth) + (dayWidth / 2);\r\n    const y = config.height - config.padding.bottom - (point.diastolic / config.yAxisRange.systolic) * chartHeight;\r\n    return `${index === 0 ? 'M' : 'L'} ${x} ${y}`;\r\n  }).join(' ');\r\n\r\n  return (\r\n    <g className=\"data-lines\">\r\n      {/* Systolic line */}\r\n      <path\r\n        d={systolicPath}\r\n        stroke=\"#2563eb\"\r\n        strokeWidth=\"3\"\r\n        fill=\"none\"\r\n        className=\"systolic-line\"\r\n      />\r\n      {/* Diastolic line */}\r\n      <path\r\n        d={diastolicPath}\r\n        stroke=\"#dc2626\"\r\n        strokeWidth=\"3\"\r\n        fill=\"none\"\r\n        className=\"diastolic-line\"\r\n      />\r\n      \r\n      {/* Data points */}\r\n      {data.map((point, index) => {\r\n        const x = config.padding.left + (index * dayWidth) + (dayWidth / 2);\r\n        const systolicY = config.height - config.padding.bottom - (point.systolic / config.yAxisRange.systolic) * chartHeight;\r\n        const diastolicY = config.height - config.padding.bottom - (point.diastolic / config.yAxisRange.systolic) * chartHeight;\r\n        \r\n        const handleMouseEnter = (event) => {\r\n          const tooltipData = {\r\n            systolic: point.systolic,\r\n            diastolic: point.diastolic,\r\n            date: point.date.toLocaleDateString('en-US', { weekday: 'short', month: 'short', day: 'numeric' }),\r\n            risk: getRiskCategory(point.systolic, point.diastolic),\r\n            position: { x: event.clientX, y: event.clientY }\r\n          };\r\n          onPointHover(tooltipData);\r\n        };\r\n\r\n        return (\r\n          <g key={index}>\r\n            {/* Systolic point */}\r\n            <circle\r\n              cx={x}\r\n              cy={systolicY}\r\n              r=\"4\"\r\n              fill=\"#2563eb\"\r\n              stroke=\"white\"\r\n              strokeWidth=\"2\"\r\n              style={{ cursor: 'pointer' }}\r\n              onMouseEnter={handleMouseEnter}\r\n              onMouseLeave={onPointLeave}\r\n            />\r\n            {/* Diastolic point */}\r\n            <circle\r\n              cx={x}\r\n              cy={diastolicY}\r\n              r=\"4\"\r\n              fill=\"#dc2626\"\r\n              stroke=\"white\"\r\n              strokeWidth=\"2\"\r\n              style={{ cursor: 'pointer' }}\r\n              onMouseEnter={handleMouseEnter}\r\n              onMouseLeave={onPointLeave}\r\n            />\r\n          </g>\r\n        );\r\n      })}\r\n    </g>\r\n  );\r\n};\r\n\r\n// Main Component\r\nconst BloodPressureChartEfficient = ({ patientId, isExpanded = false, onExpand, viewMode = 'patient', navigation }) => {\r\n  const { bloodPressureData, loading, error } = usePatientData(patientId, 'bloodPressure');\r\n  const [containerWidth, setContainerWidth] = useState(400);\r\n  const [tooltipData, setTooltipData] = useState(null);\r\n  const [tooltipPosition, setTooltipPosition] = useState({ x: 0, y: 0 });\r\n  const containerRef = useRef(null);\r\n\r\n  // Use navigation from parent or fallback to internal navigation\r\n  const useInternalNavigation = !navigation;\r\n  const internalNavigation = useChartNavigation('bloodPressure');\r\n  const nav = navigation || internalNavigation;\r\n\r\n  // Resize observer to track container width changes\r\n  useLayoutEffect(() => {\r\n    const observeContainer = () => {\r\n      if (containerRef.current) {\r\n        const resizeObserver = new ResizeObserver(entries => {\r\n          for (let entry of entries) {\r\n            const { width } = entry.contentRect;\r\n            setContainerWidth(width);\r\n          }\r\n        });\r\n\r\n        resizeObserver.observe(containerRef.current);\r\n        return () => resizeObserver.disconnect();\r\n      }\r\n    };\r\n\r\n    const cleanup = observeContainer();\r\n    return cleanup;\r\n  }, []);\r\n\r\n  const { start: weekStart, end: weekEnd } = nav.getDateRange();\r\n\r\n  const weekData = bloodPressureData.filter(d => {\r\n    const readingDate = new Date(d.date);\r\n    return readingDate >= weekStart && readingDate <= weekEnd;\r\n  });\r\n\r\n  // Get 3-month data\r\n  const { start: startOfThreeMonths, end: endOfThreeMonths } = nav.getThreeMonthRange();\r\n  const threeMonthData = bloodPressureData.filter(d => {\r\n    const readingDate = new Date(d.date);\r\n    return readingDate >= startOfThreeMonths && readingDate <= endOfThreeMonths;\r\n  });\r\n\r\n  const weekDays = Array.from({ length: 7 }, (_, i) => {\r\n    const d = new Date(weekStart);\r\n    d.setDate(weekStart.getDate() + i);\r\n    return d;\r\n  });\r\n\r\n  // Process data for chart - aggregate multiple daily readings\r\n  const chartData = useMemo(() => {\r\n    const dailyData = new Map();\r\n    \r\n    weekData.forEach(reading => {\r\n      const dateKey = reading.date.toDateString();\r\n      if (!dailyData.has(dateKey)) {\r\n        dailyData.set(dateKey, []);\r\n      }\r\n      dailyData.get(dateKey).push(reading);\r\n    });\r\n\r\n    // Calculate daily averages\r\n    return weekDays.map(day => {\r\n      const dateKey = day.toDateString();\r\n      const dayReadings = dailyData.get(dateKey) || [];\r\n      \r\n      if (dayReadings.length === 0) {\r\n        return { date: day, systolic: 0, diastolic: 0 };\r\n      }\r\n\r\n      const avgSystolic = dayReadings.reduce((sum, r) => sum + r.systolic, 0) / dayReadings.length;\r\n      const avgDiastolic = dayReadings.reduce((sum, r) => sum + r.diastolic, 0) / dayReadings.length;\r\n\r\n      return {\r\n        date: day,\r\n        systolic: Math.round(avgSystolic),\r\n        diastolic: Math.round(avgDiastolic)\r\n      };\r\n    });\r\n  }, [weekData, weekDays]);\r\n\r\n  const config = createChartConfig(isExpanded, containerWidth);\r\n\r\n  const handlePointHover = (data) => {\r\n    setTooltipData(data);\r\n    setTooltipPosition(data.position);\r\n  };\r\n\r\n  const handlePointLeave = () => {\r\n    setTooltipData(null);\r\n  };\r\n\r\n  // Calculate summary statistics for physician view\r\n  const weekSummary = useMemo(() => {\r\n    if (!weekData.length) return null;\r\n\r\n    const systolicReadings = weekData.filter(d => d.systolic && d.systolic > 0).map(d => d.systolic);\r\n    const diastolicReadings = weekData.filter(d => d.diastolic && d.diastolic > 0).map(d => d.diastolic);\r\n\r\n    const avgSystolic = systolicReadings.length > 0 ? \r\n      (systolicReadings.reduce((sum, val) => sum + val, 0) / systolicReadings.length).toFixed(0) : 0;\r\n    const avgDiastolic = diastolicReadings.length > 0 ? \r\n      (diastolicReadings.reduce((sum, val) => sum + val, 0) / diastolicReadings.length).toFixed(0) : 0;\r\n\r\n    const maxSystolic = systolicReadings.length > 0 ? Math.max(...systolicReadings) : 0;\r\n    const maxDiastolic = diastolicReadings.length > 0 ? Math.max(...diastolicReadings) : 0;\r\n\r\n    const avgRisk = getRiskCategory(parseFloat(avgSystolic), parseFloat(avgDiastolic));\r\n    const daysWithReadings = new Set(weekData.map(d => d.date.toDateString())).size;\r\n\r\n    return {\r\n      avgSystolic,\r\n      avgDiastolic,\r\n      maxSystolic,\r\n      maxDiastolic,\r\n      avgRisk,\r\n      daysWithReadings,\r\n      totalReadings: weekData.length\r\n    };\r\n  }, [weekData]);\r\n\r\n  // Calculate 3-month summary statistics for physician view\r\n  const threeMonthSummary = useMemo(() => {\r\n    if (!threeMonthData.length) return null;\r\n\r\n    const systolicReadings = threeMonthData.filter(d => d.systolic && d.systolic > 0).map(d => d.systolic);\r\n    const diastolicReadings = threeMonthData.filter(d => d.diastolic && d.diastolic > 0).map(d => d.diastolic);\r\n\r\n    const avgSystolic = systolicReadings.length > 0 ? \r\n      (systolicReadings.reduce((sum, val) => sum + val, 0) / systolicReadings.length).toFixed(0) : 0;\r\n    const avgDiastolic = diastolicReadings.length > 0 ? \r\n      (diastolicReadings.reduce((sum, val) => sum + val, 0) / diastolicReadings.length).toFixed(0) : 0;\r\n\r\n    const maxSystolic = systolicReadings.length > 0 ? Math.max(...systolicReadings) : 0;\r\n    const maxDiastolic = diastolicReadings.length > 0 ? Math.max(...diastolicReadings) : 0;\r\n\r\n    const avgRisk = getRiskCategory(parseFloat(avgSystolic), parseFloat(avgDiastolic));\r\n    const daysWithReadings = new Set(threeMonthData.map(d => d.date.toDateString())).size;\r\n\r\n    return {\r\n      avgSystolic,\r\n      avgDiastolic,\r\n      maxSystolic,\r\n      maxDiastolic,\r\n      avgRisk,\r\n      daysWithReadings,\r\n      totalReadings: threeMonthData.length\r\n    };\r\n  }, [threeMonthData]);\r\n\r\n  const bloodPressureLegendItems = [\r\n    { color: '#2563eb', label: 'Systolic', description: 'Top number - pressure when heart beats' },\r\n    { color: '#dc2626', label: 'Diastolic', description: 'Bottom number - pressure when heart rests' },\r\n    { color: RISK_ZONES.normal.color, label: 'Normal', description: 'Ideal blood pressure range' },\r\n    { color: RISK_ZONES.elevated.color, label: 'Elevated', description: 'Slightly elevated but not high' },\r\n    { color: RISK_ZONES.high.color, label: 'High', description: 'High blood pressure - requires attention' },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <div className={`bp-chart-efficient-container ${isExpanded ? 'expanded' : ''}`} ref={containerRef}>\r\n        <h3 className=\"bp-main-title\">Blood Pressure</h3>\r\n        <h4 className=\"chart-subtitle\">{nav.getCurrentMonthYear()}</h4>\r\n        \r\n        <div className=\"bp-chart-wrapper\">\r\n          <svg\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            viewBox={`0 0 ${config.width} ${config.height}`}\r\n            className=\"chart-svg\"\r\n          >\r\n            <RiskZones config={config} />\r\n            <GridLines config={config} />\r\n            <YAxis config={config} />\r\n            <XAxis config={config} weekDays={weekDays} />\r\n            <DataLines \r\n              data={chartData} \r\n              config={config} \r\n              onPointHover={handlePointHover}\r\n              onPointLeave={handlePointLeave}\r\n            />\r\n          </svg>\r\n        </div>\r\n        \r\n        <Legend title=\"Blood Pressure Guide:\" items={bloodPressureLegendItems} />\r\n        \r\n        {/* Show InfoBox for patient view, summary for physician view */}\r\n        {viewMode === 'physician' && weekSummary ? (\r\n          <div className=\"summary-container\">\r\n            <div className=\"chart-summary\">\r\n              <h4>Week Summary</h4>\r\n              <div className=\"summary-stats\">\r\n                <div className=\"stat-item\">\r\n                  <span className=\"stat-label\">Average BP:</span>\r\n                  <span className=\"stat-value\">\r\n                    {weekSummary.avgSystolic}/{weekSummary.avgDiastolic} mmHg\r\n                  </span>\r\n                </div>\r\n                <div className=\"stat-item\">\r\n                  <span className=\"stat-label\">Peak BP:</span>\r\n                  <span className=\"stat-value\">\r\n                    {weekSummary.maxSystolic}/{weekSummary.maxDiastolic} mmHg\r\n                  </span>\r\n                </div>\r\n                <div className=\"stat-item\">\r\n                  <span className=\"stat-label\">Risk Level:</span>\r\n                  <span className=\"stat-value\" style={{ \r\n                    color: getRiskColor(weekSummary.avgSystolic, weekSummary.avgDiastolic),\r\n                    fontWeight: 'bold'\r\n                  }}>\r\n                    {weekSummary.avgRisk}\r\n                  </span>\r\n                </div>\r\n                <div className=\"stat-item\">\r\n                  <span className=\"stat-label\">Reading Days:</span>\r\n                  <span className=\"stat-value\">\r\n                    {weekSummary.daysWithReadings}/7 days\r\n                  </span>\r\n                </div>\r\n                <div className=\"stat-item\">\r\n                  <span className=\"stat-label\">Total Readings:</span>\r\n                  <span className=\"stat-value\">\r\n                    {weekSummary.totalReadings}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            {threeMonthSummary && (\r\n              <div className=\"chart-summary\">\r\n                <h4>3-Month Summary</h4>\r\n                <div className=\"summary-stats\">\r\n                  <div className=\"stat-item\">\r\n                    <span className=\"stat-label\">Average BP:</span>\r\n                    <span className=\"stat-value\">\r\n                      {threeMonthSummary.avgSystolic}/{threeMonthSummary.avgDiastolic} mmHg\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"stat-item\">\r\n                    <span className=\"stat-label\">Peak BP:</span>\r\n                    <span className=\"stat-value\">\r\n                      {threeMonthSummary.maxSystolic}/{threeMonthSummary.maxDiastolic} mmHg\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"stat-item\">\r\n                    <span className=\"stat-label\">Risk Level:</span>\r\n                    <span className=\"stat-value\" style={{ \r\n                      color: getRiskColor(threeMonthSummary.avgSystolic, threeMonthSummary.avgDiastolic),\r\n                      fontWeight: 'bold'\r\n                    }}>\r\n                      {threeMonthSummary.avgRisk}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"stat-item\">\r\n                    <span className=\"stat-label\">Total Readings:</span>\r\n                    <span className=\"stat-value\">\r\n                      {threeMonthSummary.totalReadings}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <InfoBox \r\n            title=\"Blood Pressure Information\" \r\n            content=\"This chart shows your blood pressure trends over time. The blue line represents systolic pressure (when your heart beats), and the red line represents diastolic pressure (when your heart rests). The colored background zones help identify normal, elevated, and high blood pressure ranges.\"\r\n          />\r\n        )}\r\n      </div>\r\n      \r\n      {/* Custom Tooltip */}\r\n      <Tooltip\r\n        isVisible={!!tooltipData}\r\n        content={tooltipData && (\r\n          <div>\r\n            <div className=\"tooltip-title\">Blood Pressure Reading</div>\r\n            <div className=\"tooltip-value\">\r\n              {tooltipData.systolic}/{tooltipData.diastolic} mmHg\r\n            </div>\r\n            <div className=\"tooltip-risk\">Risk Level: {tooltipData.risk}</div>\r\n            <div className=\"tooltip-date\">{tooltipData.date}</div>\r\n          </div>\r\n        )}\r\n        position={tooltipPosition}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BloodPressureChartEfficient;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}