{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matteo\\\\Working_Folder\\\\a. MCC Thesis Local Experimental\\\\PGHD_Visualization_Dashboard\\\\src\\\\HealthDashboard.js\",\n  _s = $RefreshSig$();\n/*\r\n HealthDashboard.js - Unified Health Dashboard Component\r\n \r\n This component provides a unified health dashboard that combines the best features\r\n from both patient and physician dashboards. It's designed to be used by both\r\n patients and healthcare providers with a clean, accessible interface.\r\n \r\n Features:\r\n - Patient information display with QR code access\r\n - Week summaries always visible for better health tracking\r\n - Toggle for 3-month summaries for long-term trend analysis\r\n - Exercise visualization with both activity breakdown and weekly goals\r\n - Clean, patient-friendly design with professional functionality\r\n - Screenshot mode support for documentation\r\n \r\n Architecture:\r\n - Uses custom hooks for data management, visualization handling, and navigation\r\n - Implements expandable chart views\r\n - Provides educational information for patients\r\n - Handles loading and error states gracefully\r\n - Includes summary statistics for comprehensive health monitoring\r\n \r\n Custom Hooks Used:\r\n - usePatientData: Manages patient data fetching and caching\r\n - useVisualizations: Handles visualization configuration and availability\r\n - useChartNavigation: Manages time-based navigation for each chart type\r\n \r\n Component Structure:\r\n - PatientInfoCard: Displays patient demographics and medication information\r\n - QR Code Section: Provides access to patient dashboard\r\n - Summary Toggle: Controls visibility of 3-month summaries\r\n - DashboardGrid: Renders the chart grid with navigation and expansion controls\r\n - Individual chart components for each health metric\r\n \r\n State Management:\r\n - Uses custom hooks for centralized state management\r\n - Handles chart expansion state\r\n - Manages navigation state for each chart type independently\r\n - Controls summary visibility with toggle state\r\n */\n\nimport React, { useState } from 'react';\nimport usePatientData from './hooks/usePatientData';\nimport useVisualizations from './hooks/useVisualizations';\nimport useChartNavigation from './hooks/useChartNavigation';\nimport PatientInfoCard from './components/PatientInfoCard';\nimport DashboardGrid from './components/DashboardGrid';\nimport Placeholder from './components/ui/Placeholder';\nimport Switch from './components/ui/Switch';\nimport './HealthDashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HealthDashboard = ({\n  patientId,\n  screenshotMode = false\n}) => {\n  _s();\n  const {\n    data,\n    loading,\n    error\n  } = usePatientData(patientId);\n  const {\n    allVisualizations,\n    availableVisualizations,\n    selectedVisualizations,\n    handleVisualizationChange\n  } = useVisualizations('patient', data);\n\n  // Chart expansion state\n  const [expandedChart, setExpandedChart] = useState(null);\n\n  // 3-month summary toggle state\n  const [showThreeMonthSummaries, setShowThreeMonthSummaries] = useState(false);\n  const handleExpand = chartId => {\n    setExpandedChart(expandedChart === chartId ? null : chartId);\n  };\n  const toggleThreeMonthSummaries = () => {\n    setShowThreeMonthSummaries(prev => !prev);\n  };\n\n  // Navigation for all charts\n  const sharedNavigation = useChartNavigation('glucose'); // Default to 'week' navigation\n\n  const chartNavigation = {\n    glucose: sharedNavigation,\n    bloodPressure: sharedNavigation,\n    exercise: sharedNavigation,\n    sleep: sharedNavigation,\n    pain: sharedNavigation,\n    mood: useChartNavigation('mood'),\n    // Mood uses month navigation, so keep separate\n    mealContents: sharedNavigation\n  };\n\n  // Render visualization with unified view mode\n  const renderVisualizationWithMode = (visualizationType, boxId) => {\n    if (!patientId) {\n      return /*#__PURE__*/_jsxDEV(Placeholder, {\n        message: \"Please select a patient to view data.\",\n        type: \"select-patient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 14\n      }, this);\n    }\n    const viz = allVisualizations[visualizationType];\n    if (!viz) {\n      return /*#__PURE__*/_jsxDEV(Placeholder, {\n        message: \"Invalid visualization\",\n        type: \"error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 14\n      }, this);\n    }\n    const Component = viz.component;\n    const isExpanded = expandedChart === boxId;\n    const navigation = chartNavigation[visualizationType];\n    return /*#__PURE__*/_jsxDEV(Component, {\n      patientId: patientId,\n      isExpanded: isExpanded,\n      onExpand: () => handleExpand(boxId),\n      viewMode: \"unified\" // New unified view mode\n      ,\n      navigation: navigation,\n      screenshotMode: screenshotMode,\n      showThreeMonthSummaries: showThreeMonthSummaries // Pass summary toggle state\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 12\n    }, this);\n  };\n  const patientInfo = data === null || data === void 0 ? void 0 : data.patientInfo;\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading-screen\",\n    children: \"Loading patient data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error-screen\",\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"health-dashboard\",\n    children: [!screenshotMode && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(PatientInfoCard, {\n        patientInfo: patientInfo,\n        loading: loading,\n        error: error,\n        variant: \"unified\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"qr-code-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Patient Dashboard Access\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Scan to access patient view\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `${process.env.PUBLIC_URL}/Public_dashboard_QR_code.png`,\n            alt: \"QR Code for PGHD Dashboard\",\n            className: \"qr-code-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-toggle-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Summary Options\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Switch, {\n            checked: showThreeMonthSummaries,\n            onChange: toggleThreeMonthSummaries,\n            leftLabel: \"Week Only\",\n            rightLabel: \"Include 3-Month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"toggle-description\",\n            children: showThreeMonthSummaries ? \"Showing both week and 3-month summaries for comprehensive health tracking\" : \"Showing week summaries only for focused current health monitoring\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DashboardGrid, {\n      viewMode: \"unified\",\n      selectedVisualizations: selectedVisualizations,\n      availableVisualizations: availableVisualizations,\n      allVisualizations: allVisualizations,\n      onVisualizationChange: handleVisualizationChange,\n      onExpand: handleExpand,\n      expandedItem: expandedChart,\n      renderVisualization: renderVisualizationWithMode,\n      chartNavigation: chartNavigation,\n      screenshotMode: screenshotMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n_s(HealthDashboard, \"yTsi1qr7RVbgW+V9aPSbBqrt2Vc=\", false, function () {\n  return [usePatientData, useVisualizations, useChartNavigation, useChartNavigation];\n});\n_c = HealthDashboard;\nexport default HealthDashboard;\nvar _c;\n$RefreshReg$(_c, \"HealthDashboard\");","map":{"version":3,"names":["React","useState","usePatientData","useVisualizations","useChartNavigation","PatientInfoCard","DashboardGrid","Placeholder","Switch","jsxDEV","_jsxDEV","HealthDashboard","patientId","screenshotMode","_s","data","loading","error","allVisualizations","availableVisualizations","selectedVisualizations","handleVisualizationChange","expandedChart","setExpandedChart","showThreeMonthSummaries","setShowThreeMonthSummaries","handleExpand","chartId","toggleThreeMonthSummaries","prev","sharedNavigation","chartNavigation","glucose","bloodPressure","exercise","sleep","pain","mood","mealContents","renderVisualizationWithMode","visualizationType","boxId","message","type","fileName","_jsxFileName","lineNumber","columnNumber","viz","Component","component","isExpanded","navigation","onExpand","viewMode","patientInfo","className","children","variant","src","process","env","PUBLIC_URL","alt","checked","onChange","leftLabel","rightLabel","onVisualizationChange","expandedItem","renderVisualization","_c","$RefreshReg$"],"sources":["C:/Users/Matteo/Working_Folder/a. MCC Thesis Local Experimental/PGHD_Visualization_Dashboard/src/HealthDashboard.js"],"sourcesContent":["/*\r\n HealthDashboard.js - Unified Health Dashboard Component\r\n \r\n This component provides a unified health dashboard that combines the best features\r\n from both patient and physician dashboards. It's designed to be used by both\r\n patients and healthcare providers with a clean, accessible interface.\r\n \r\n Features:\r\n - Patient information display with QR code access\r\n - Week summaries always visible for better health tracking\r\n - Toggle for 3-month summaries for long-term trend analysis\r\n - Exercise visualization with both activity breakdown and weekly goals\r\n - Clean, patient-friendly design with professional functionality\r\n - Screenshot mode support for documentation\r\n \r\n Architecture:\r\n - Uses custom hooks for data management, visualization handling, and navigation\r\n - Implements expandable chart views\r\n - Provides educational information for patients\r\n - Handles loading and error states gracefully\r\n - Includes summary statistics for comprehensive health monitoring\r\n \r\n Custom Hooks Used:\r\n - usePatientData: Manages patient data fetching and caching\r\n - useVisualizations: Handles visualization configuration and availability\r\n - useChartNavigation: Manages time-based navigation for each chart type\r\n \r\n Component Structure:\r\n - PatientInfoCard: Displays patient demographics and medication information\r\n - QR Code Section: Provides access to patient dashboard\r\n - Summary Toggle: Controls visibility of 3-month summaries\r\n - DashboardGrid: Renders the chart grid with navigation and expansion controls\r\n - Individual chart components for each health metric\r\n \r\n State Management:\r\n - Uses custom hooks for centralized state management\r\n - Handles chart expansion state\r\n - Manages navigation state for each chart type independently\r\n - Controls summary visibility with toggle state\r\n */\r\n\r\nimport React, { useState } from 'react';\r\nimport usePatientData from './hooks/usePatientData';\r\nimport useVisualizations from './hooks/useVisualizations';\r\nimport useChartNavigation from './hooks/useChartNavigation';\r\nimport PatientInfoCard from './components/PatientInfoCard';\r\nimport DashboardGrid from './components/DashboardGrid';\r\nimport Placeholder from './components/ui/Placeholder';\r\nimport Switch from './components/ui/Switch';\r\nimport './HealthDashboard.css';\r\n\r\nconst HealthDashboard = ({ patientId, screenshotMode = false }) => {\r\n  const { data, loading, error } = usePatientData(patientId);\r\n  const { \r\n    allVisualizations, \r\n    availableVisualizations, \r\n    selectedVisualizations, \r\n    handleVisualizationChange \r\n  } = useVisualizations('patient', data);\r\n  \r\n  // Chart expansion state\r\n  const [expandedChart, setExpandedChart] = useState(null);\r\n  \r\n  // 3-month summary toggle state\r\n  const [showThreeMonthSummaries, setShowThreeMonthSummaries] = useState(false);\r\n\r\n  const handleExpand = (chartId) => {\r\n    setExpandedChart(expandedChart === chartId ? null : chartId);\r\n  };\r\n\r\n  const toggleThreeMonthSummaries = () => {\r\n    setShowThreeMonthSummaries(prev => !prev);\r\n  };\r\n\r\n  // Navigation for all charts\r\n  const sharedNavigation = useChartNavigation('glucose'); // Default to 'week' navigation\r\n\r\n  const chartNavigation = {\r\n    glucose: sharedNavigation,\r\n    bloodPressure: sharedNavigation,\r\n    exercise: sharedNavigation,\r\n    sleep: sharedNavigation,\r\n    pain: sharedNavigation,\r\n    mood: useChartNavigation('mood'), // Mood uses month navigation, so keep separate\r\n    mealContents: sharedNavigation\r\n  };\r\n\r\n  // Render visualization with unified view mode\r\n  const renderVisualizationWithMode = (visualizationType, boxId) => {\r\n    if (!patientId) {\r\n      return <Placeholder message=\"Please select a patient to view data.\" type=\"select-patient\" />;\r\n    }\r\n    \r\n    const viz = allVisualizations[visualizationType];\r\n    if (!viz) {\r\n      return <Placeholder message=\"Invalid visualization\" type=\"error\" />;\r\n    }\r\n\r\n    const Component = viz.component;\r\n    const isExpanded = expandedChart === boxId;\r\n    const navigation = chartNavigation[visualizationType];\r\n    \r\n    return <Component \r\n      patientId={patientId} \r\n      isExpanded={isExpanded} \r\n      onExpand={() => handleExpand(boxId)}\r\n      viewMode=\"unified\" // New unified view mode\r\n      navigation={navigation}\r\n      screenshotMode={screenshotMode}\r\n      showThreeMonthSummaries={showThreeMonthSummaries} // Pass summary toggle state\r\n    />;\r\n  };\r\n\r\n  const patientInfo = data?.patientInfo;\r\n\r\n  if (loading) return <div className=\"loading-screen\">Loading patient data...</div>;\r\n  if (error) return <div className=\"error-screen\">Error: {error}</div>;\r\n\r\n  return (\r\n    <div className=\"health-dashboard\">\r\n      {!screenshotMode && (\r\n        <div className=\"dashboard-header\">\r\n          <PatientInfoCard \r\n            patientInfo={patientInfo}\r\n            loading={loading}\r\n            error={error}\r\n            variant=\"unified\"\r\n          />\r\n          \r\n          <div className=\"dashboard-controls\">\r\n            <div className=\"qr-code-section\">\r\n              <h3>Patient Dashboard Access</h3>\r\n              <p>Scan to access patient view</p>\r\n              <img \r\n                src={`${process.env.PUBLIC_URL}/Public_dashboard_QR_code.png`}\r\n                alt=\"QR Code for PGHD Dashboard\"\r\n                className=\"qr-code-image\"\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"summary-toggle-section\">\r\n              <h3>Summary Options</h3>\r\n              <Switch\r\n                checked={showThreeMonthSummaries}\r\n                onChange={toggleThreeMonthSummaries}\r\n                leftLabel=\"Week Only\"\r\n                rightLabel=\"Include 3-Month\"\r\n              />\r\n              <p className=\"toggle-description\">\r\n                {showThreeMonthSummaries \r\n                  ? \"Showing both week and 3-month summaries for comprehensive health tracking\"\r\n                  : \"Showing week summaries only for focused current health monitoring\"\r\n                }\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <DashboardGrid\r\n        viewMode=\"unified\"\r\n        selectedVisualizations={selectedVisualizations}\r\n        availableVisualizations={availableVisualizations}\r\n        allVisualizations={allVisualizations}\r\n        onVisualizationChange={handleVisualizationChange}\r\n        onExpand={handleExpand}\r\n        expandedItem={expandedChart}\r\n        renderVisualization={renderVisualizationWithMode}\r\n        chartNavigation={chartNavigation}\r\n        screenshotMode={screenshotMode}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HealthDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}