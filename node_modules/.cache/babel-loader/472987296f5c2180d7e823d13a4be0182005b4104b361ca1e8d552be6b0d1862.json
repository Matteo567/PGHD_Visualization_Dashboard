{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matteo\\\\Working_Folder\\\\a. MCC Thesis Local\\\\MCC_digital_health_data_visualizations\\\\src\\\\components\\\\patient_charts\\\\ExerciseBarChart.js\",\n  _s = $RefreshSig$();\n/*\r\nExerciseBarChart.js - Exercise Activity Progress Bar Chart\r\n\r\nThis component provides a simple exercise progress visualization for physicians:\r\n- Three exercise categories: Aerobic, Strength, and Flexibility/Balance\r\n- Percentage completion based on weekly goals\r\n- Color-coded bars with different shades to show progress\r\n- Simple, clean design optimized for clinical overview\r\n\r\nGoals:\r\n- Aerobic: 150 minutes per week\r\n- Strength: At least 2 sessions per week (minimum 10 minutes each)\r\n- Flexibility/Balance: At least 1 session per week\r\n\r\nArchitecture:\r\n- Uses SVG for precise bar chart visualization\r\n- Implements percentage-based progress calculation\r\n- Provides color-coded completion status\r\n- Supports expandable views for physician dashboard\r\n\r\nVisualization Features:\r\n- Three horizontal bars showing exercise category progress\r\n- Color intensity based on completion percentage\r\n- Clear goal indicators and current progress\r\n- Professional medical interface design\r\n\r\nComponent Structure:\r\n- Chart Container: Main SVG container with sizing\r\n- Progress Bars: Horizontal bars with percentage completion\r\n- Labels: Category names and goal information\r\n- Legend: Color coding explanation\r\n\r\nEssential for physician exercise monitoring and patient progress tracking.\r\n*/\n\nimport React, { useState, useMemo, useRef } from 'react';\nimport usePatientData from '../../hooks/usePatientData';\nimport useChartNavigation from '../../hooks/useChartNavigation';\nimport Legend from '../Legend';\nimport InfoBox from '../InfoBox';\nimport { createChartConfig } from '../chart-utils/ChartConfigFactory';\nimport './ExerciseBarChart.css';\n\n// Exercise categories and their goals\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EXERCISE_CATEGORIES = [{\n  key: 'aerobic',\n  label: 'Aerobic Activity',\n  goal: 150,\n  // minutes per week\n  unit: 'minutes',\n  color: 'var(--chart-color-blue)',\n  description: 'Cardiovascular exercise like walking, running, swimming'\n}, {\n  key: 'strength',\n  label: 'Strength Training',\n  goal: 2,\n  // sessions per week\n  unit: 'sessions',\n  color: 'var(--chart-color-green)',\n  description: 'Resistance training, weight lifting, bodyweight exercises'\n}, {\n  key: 'flexibility',\n  label: 'Flexibility/Balance',\n  goal: 1,\n  // session per week\n  unit: 'session',\n  color: 'var(--chart-color-purple)',\n  description: 'Yoga, stretching, balance exercises'\n}];\n\n// Helper function to calculate exercise progress\nconst calculateExerciseProgress = (exerciseData, startDate, endDate) => {\n  const filteredData = exerciseData.filter(d => {\n    if (!d.date) return false;\n    const itemDate = new Date(d.date);\n    return itemDate >= startDate && itemDate <= endDate;\n  });\n  const progress = {\n    aerobic: {\n      current: 0,\n      goal: 150,\n      percentage: 0\n    },\n    strength: {\n      current: 0,\n      goal: 2,\n      percentage: 0\n    },\n    flexibility: {\n      current: 0,\n      goal: 1,\n      percentage: 0\n    }\n  };\n\n  // Calculate aerobic minutes (walking, running, swimming, biking)\n  const aerobicActivities = ['walking', 'running', 'swimming', 'biking'];\n  filteredData.forEach(item => {\n    var _item$activity;\n    if (aerobicActivities.includes((_item$activity = item.activity) === null || _item$activity === void 0 ? void 0 : _item$activity.toLowerCase())) {\n      progress.aerobic.current += Number(item.duration) || 0;\n    }\n  });\n  progress.aerobic.percentage = Math.min(progress.aerobic.current / progress.aerobic.goal * 100, 100);\n\n  // Calculate strength sessions (resistance/weights)\n  const strengthSessions = filteredData.filter(item => {\n    var _item$activity2, _item$activity3, _item$activity4;\n    return ((_item$activity2 = item.activity) === null || _item$activity2 === void 0 ? void 0 : _item$activity2.toLowerCase().includes('resistance')) || ((_item$activity3 = item.activity) === null || _item$activity3 === void 0 ? void 0 : _item$activity3.toLowerCase().includes('weight')) || ((_item$activity4 = item.activity) === null || _item$activity4 === void 0 ? void 0 : _item$activity4.toLowerCase().includes('strength'));\n  });\n  progress.strength.current = strengthSessions.length;\n  progress.strength.percentage = Math.min(progress.strength.current / progress.strength.goal * 100, 100);\n\n  // Calculate flexibility sessions (balance/stretching, yoga)\n  const flexibilitySessions = filteredData.filter(item => {\n    var _item$activity5, _item$activity6, _item$activity7, _item$activity8;\n    return ((_item$activity5 = item.activity) === null || _item$activity5 === void 0 ? void 0 : _item$activity5.toLowerCase().includes('balance')) || ((_item$activity6 = item.activity) === null || _item$activity6 === void 0 ? void 0 : _item$activity6.toLowerCase().includes('stretch')) || ((_item$activity7 = item.activity) === null || _item$activity7 === void 0 ? void 0 : _item$activity7.toLowerCase().includes('yoga')) || ((_item$activity8 = item.activity) === null || _item$activity8 === void 0 ? void 0 : _item$activity8.toLowerCase().includes('flexibility'));\n  });\n  progress.flexibility.current = flexibilitySessions.length;\n  progress.flexibility.percentage = Math.min(progress.flexibility.current / progress.flexibility.goal * 100, 100);\n  return progress;\n};\n\n// Chart sub-components\nconst ProgressBar = ({\n  category,\n  progress,\n  config,\n  isExpanded\n}) => {\n  const barWidth = config.width - config.padding.left - config.padding.right;\n  const barHeight = isExpanded ? 40 : 30;\n  const barY = config.padding.top + EXERCISE_CATEGORIES.indexOf(category) * (barHeight + 20);\n  const fillWidth = progress.percentage / 100 * barWidth;\n\n  // Color intensity based on percentage\n  const getBarColor = percentage => {\n    if (percentage >= 100) return category.color;\n    if (percentage >= 75) return `${category.color}CC`; // 80% opacity\n    if (percentage >= 50) return `${category.color}99`; // 60% opacity\n    if (percentage >= 25) return `${category.color}66`; // 40% opacity\n    return `${category.color}33`; // 20% opacity\n  };\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    className: \"progress-bar-group\",\n    children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n      x: config.padding.left,\n      y: barY,\n      width: barWidth,\n      height: barHeight,\n      fill: \"var(--chart-color-neutral-light)\",\n      stroke: \"var(--chart-color-neutral)\",\n      strokeWidth: \"1\",\n      rx: \"4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n      x: config.padding.left,\n      y: barY,\n      width: fillWidth,\n      height: barHeight,\n      fill: getBarColor(progress.percentage),\n      rx: \"4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      x: config.padding.left - 10,\n      y: barY + barHeight / 2,\n      textAnchor: \"end\",\n      fontSize: isExpanded ? 14 : 12,\n      className: \"category-label\",\n      fill: \"var(--chart-color-text)\",\n      children: category.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      x: config.padding.left + barWidth + 10,\n      y: barY + barHeight / 2,\n      textAnchor: \"start\",\n      fontSize: isExpanded ? 12 : 10,\n      className: \"progress-text\",\n      fill: \"var(--chart-color-text)\",\n      children: [Math.round(progress.current), \"/\", progress.goal, \" \", category.unit, \" (\", Math.round(progress.percentage), \"%)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n_c = ProgressBar;\nconst Chart = ({\n  progressData,\n  isExpanded,\n  config\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"exercise-bar-chart-container\",\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: \"100%\",\n      height: \"100%\",\n      viewBox: `0 0 ${config.width} ${config.height}`,\n      className: \"exercise-bar-svg\",\n      children: EXERCISE_CATEGORIES.map(category => /*#__PURE__*/_jsxDEV(ProgressBar, {\n        category: category,\n        progress: progressData[category.key],\n        config: config,\n        isExpanded: isExpanded\n      }, category.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 5\n  }, this);\n};\n\n// Main Component\n_c2 = Chart;\nconst ExerciseBarChart = ({\n  patientId,\n  isExpanded = false,\n  onExpand,\n  viewMode = 'patient',\n  navigation\n}) => {\n  _s();\n  const {\n    exerciseData,\n    loading,\n    error\n  } = usePatientData(patientId, 'exercise');\n\n  // Use navigation from parent or fallback to internal navigation\n  const useInternalNavigation = !navigation;\n  const internalNavigation = useChartNavigation('exercise');\n  const nav = navigation || internalNavigation;\n  const config = createChartConfig('exercise', isExpanded);\n  const {\n    start: startOfWeek,\n    end: endOfWeek\n  } = nav.getDateRange();\n  const weekData = exerciseData.filter(d => {\n    if (!d.date) return false;\n    const itemDate = new Date(d.date);\n    return itemDate >= startOfWeek && itemDate <= endOfWeek;\n  });\n\n  // Get 3-month data\n  const {\n    start: startOfThreeMonths,\n    end: endOfThreeMonths\n  } = nav.getThreeMonthRange();\n  const threeMonthData = exerciseData.filter(d => {\n    if (!d.date) return false;\n    const itemDate = new Date(d.date);\n    return itemDate >= startOfThreeMonths && itemDate <= endOfThreeMonths;\n  });\n\n  // Calculate progress for current week\n  const weekProgress = useMemo(() => {\n    return calculateExerciseProgress(exerciseData, startOfWeek, endOfWeek);\n  }, [exerciseData, startOfWeek, endOfWeek]);\n\n  // Calculate progress for 3-month period\n  const threeMonthProgress = useMemo(() => {\n    return calculateExerciseProgress(exerciseData, startOfThreeMonths, endOfThreeMonths);\n  }, [exerciseData, startOfThreeMonths, endOfThreeMonths]);\n\n  // Calculate summary statistics for physician view\n  const weekSummary = useMemo(() => {\n    if (!weekData.length) return null;\n    const totalAerobicMinutes = weekProgress.aerobic.current;\n    const totalStrengthSessions = weekProgress.strength.current;\n    const totalFlexibilitySessions = weekProgress.flexibility.current;\n    const aerobicGoalMet = totalAerobicMinutes >= 150;\n    const strengthGoalMet = totalStrengthSessions >= 2;\n    const flexibilityGoalMet = totalFlexibilitySessions >= 1;\n    const goalsMet = [aerobicGoalMet, strengthGoalMet, flexibilityGoalMet].filter(Boolean).length;\n    const totalGoals = 3;\n    const overallProgress = Math.round(goalsMet / totalGoals * 100);\n    return {\n      totalAerobicMinutes,\n      totalStrengthSessions,\n      totalFlexibilitySessions,\n      aerobicGoalMet,\n      strengthGoalMet,\n      flexibilityGoalMet,\n      goalsMet,\n      totalGoals,\n      overallProgress\n    };\n  }, [weekData, weekProgress]);\n  const threeMonthSummary = useMemo(() => {\n    if (!threeMonthData.length) return null;\n    const avgAerobicPerWeek = threeMonthProgress.aerobic.current / 12; // 12 weeks in 3 months\n    const avgStrengthPerWeek = threeMonthProgress.strength.current / 12;\n    const avgFlexibilityPerWeek = threeMonthProgress.flexibility.current / 12;\n    return {\n      avgAerobicPerWeek: Math.round(avgAerobicPerWeek),\n      avgStrengthPerWeek: Math.round(avgStrengthPerWeek * 10) / 10,\n      avgFlexibilityPerWeek: Math.round(avgFlexibilityPerWeek * 10) / 10\n    };\n  }, [threeMonthData, threeMonthProgress]);\n  const legendItems = [{\n    color: 'var(--chart-color-blue)',\n    label: 'Aerobic Activity',\n    description: '150 minutes per week'\n  }, {\n    color: 'var(--chart-color-green)',\n    label: 'Strength Training',\n    description: '2+ sessions per week'\n  }, {\n    color: 'var(--chart-color-purple)',\n    label: 'Flexibility/Balance',\n    description: '1+ session per week'\n  }];\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exercise-bar-chart-loading\",\n      children: \"Loading exercise data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exercise-bar-chart-error\",\n      children: [\"Error loading exercise data: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `exercise-bar-chart-container ${isExpanded ? 'expanded' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"exercise-bar-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"exercise-bar-title\",\n          children: \"Exercise Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"chart-subtitle\",\n          children: nav.getCurrentMonthYear()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Chart, {\n        progressData: weekProgress,\n        isExpanded: isExpanded,\n        config: config\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {\n        title: \"Exercise Categories:\",\n        items: legendItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this), viewMode === 'physician' && weekSummary ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-summary\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Week Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-stats\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Aerobic Activity:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `stat-value ${weekSummary.aerobicGoalMet ? 'goal-met' : 'goal-not-met'}`,\n                children: [weekSummary.totalAerobicMinutes, \"/150 minutes\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Strength Training:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `stat-value ${weekSummary.strengthGoalMet ? 'goal-met' : 'goal-not-met'}`,\n                children: [weekSummary.totalStrengthSessions, \"/2 sessions\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Flexibility/Balance:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `stat-value ${weekSummary.flexibilityGoalMet ? 'goal-met' : 'goal-not-met'}`,\n                children: [weekSummary.totalFlexibilitySessions, \"/1 session\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Overall Progress:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: [weekSummary.overallProgress, \"% (\", weekSummary.goalsMet, \"/\", weekSummary.totalGoals, \" goals met)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }, this), threeMonthSummary && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-summary\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"3-Month Average\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-stats\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Aerobic (per week):\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: [threeMonthSummary.avgAerobicPerWeek, \" minutes\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Strength (per week):\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: [threeMonthSummary.avgStrengthPerWeek, \" sessions\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Flexibility (per week):\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: [threeMonthSummary.avgFlexibilityPerWeek, \" sessions\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(InfoBox, {\n        title: \"Exercise Goals\",\n        content: \"Regular exercise is essential for health. Aim for 150 minutes of aerobic activity per week, at least 2 strength training sessions, and 1 flexibility/balance session. These activities help maintain cardiovascular health, muscle strength, and mobility.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(ExerciseBarChart, \"ONcgwsBf02TxoatRP3sJMuZ4o7s=\", false, function () {\n  return [usePatientData, useChartNavigation];\n});\n_c3 = ExerciseBarChart;\nexport default ExerciseBarChart;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ProgressBar\");\n$RefreshReg$(_c2, \"Chart\");\n$RefreshReg$(_c3, \"ExerciseBarChart\");","map":{"version":3,"names":["React","useState","useMemo","useRef","usePatientData","useChartNavigation","Legend","InfoBox","createChartConfig","jsxDEV","_jsxDEV","Fragment","_Fragment","EXERCISE_CATEGORIES","key","label","goal","unit","color","description","calculateExerciseProgress","exerciseData","startDate","endDate","filteredData","filter","d","date","itemDate","Date","progress","aerobic","current","percentage","strength","flexibility","aerobicActivities","forEach","item","_item$activity","includes","activity","toLowerCase","Number","duration","Math","min","strengthSessions","_item$activity2","_item$activity3","_item$activity4","length","flexibilitySessions","_item$activity5","_item$activity6","_item$activity7","_item$activity8","ProgressBar","category","config","isExpanded","barWidth","width","padding","left","right","barHeight","barY","top","indexOf","fillWidth","getBarColor","className","children","x","y","height","fill","stroke","strokeWidth","rx","fileName","_jsxFileName","lineNumber","columnNumber","textAnchor","fontSize","round","_c","Chart","progressData","viewBox","map","_c2","ExerciseBarChart","patientId","onExpand","viewMode","navigation","_s","loading","error","useInternalNavigation","internalNavigation","nav","start","startOfWeek","end","endOfWeek","getDateRange","weekData","startOfThreeMonths","endOfThreeMonths","getThreeMonthRange","threeMonthData","weekProgress","threeMonthProgress","weekSummary","totalAerobicMinutes","totalStrengthSessions","totalFlexibilitySessions","aerobicGoalMet","strengthGoalMet","flexibilityGoalMet","goalsMet","Boolean","totalGoals","overallProgress","threeMonthSummary","avgAerobicPerWeek","avgStrengthPerWeek","avgFlexibilityPerWeek","legendItems","message","getCurrentMonthYear","title","items","content","_c3","$RefreshReg$"],"sources":["C:/Users/Matteo/Working_Folder/a. MCC Thesis Local/MCC_digital_health_data_visualizations/src/components/patient_charts/ExerciseBarChart.js"],"sourcesContent":["/*\r\nExerciseBarChart.js - Exercise Activity Progress Bar Chart\r\n\r\nThis component provides a simple exercise progress visualization for physicians:\r\n- Three exercise categories: Aerobic, Strength, and Flexibility/Balance\r\n- Percentage completion based on weekly goals\r\n- Color-coded bars with different shades to show progress\r\n- Simple, clean design optimized for clinical overview\r\n\r\nGoals:\r\n- Aerobic: 150 minutes per week\r\n- Strength: At least 2 sessions per week (minimum 10 minutes each)\r\n- Flexibility/Balance: At least 1 session per week\r\n\r\nArchitecture:\r\n- Uses SVG for precise bar chart visualization\r\n- Implements percentage-based progress calculation\r\n- Provides color-coded completion status\r\n- Supports expandable views for physician dashboard\r\n\r\nVisualization Features:\r\n- Three horizontal bars showing exercise category progress\r\n- Color intensity based on completion percentage\r\n- Clear goal indicators and current progress\r\n- Professional medical interface design\r\n\r\nComponent Structure:\r\n- Chart Container: Main SVG container with sizing\r\n- Progress Bars: Horizontal bars with percentage completion\r\n- Labels: Category names and goal information\r\n- Legend: Color coding explanation\r\n\r\nEssential for physician exercise monitoring and patient progress tracking.\r\n*/\r\n\r\nimport React, { useState, useMemo, useRef } from 'react';\r\nimport usePatientData from '../../hooks/usePatientData';\r\nimport useChartNavigation from '../../hooks/useChartNavigation';\r\nimport Legend from '../Legend';\r\nimport InfoBox from '../InfoBox';\r\nimport { createChartConfig } from '../chart-utils/ChartConfigFactory';\r\nimport './ExerciseBarChart.css';\r\n\r\n// Exercise categories and their goals\r\nconst EXERCISE_CATEGORIES = [\r\n  {\r\n    key: 'aerobic',\r\n    label: 'Aerobic Activity',\r\n    goal: 150, // minutes per week\r\n    unit: 'minutes',\r\n    color: 'var(--chart-color-blue)',\r\n    description: 'Cardiovascular exercise like walking, running, swimming'\r\n  },\r\n  {\r\n    key: 'strength',\r\n    label: 'Strength Training',\r\n    goal: 2, // sessions per week\r\n    unit: 'sessions',\r\n    color: 'var(--chart-color-green)',\r\n    description: 'Resistance training, weight lifting, bodyweight exercises'\r\n  },\r\n  {\r\n    key: 'flexibility',\r\n    label: 'Flexibility/Balance',\r\n    goal: 1, // session per week\r\n    unit: 'session',\r\n    color: 'var(--chart-color-purple)',\r\n    description: 'Yoga, stretching, balance exercises'\r\n  }\r\n];\r\n\r\n// Helper function to calculate exercise progress\r\nconst calculateExerciseProgress = (exerciseData, startDate, endDate) => {\r\n  const filteredData = exerciseData.filter(d => {\r\n    if (!d.date) return false;\r\n    const itemDate = new Date(d.date);\r\n    return itemDate >= startDate && itemDate <= endDate;\r\n  });\r\n\r\n  const progress = {\r\n    aerobic: { current: 0, goal: 150, percentage: 0 },\r\n    strength: { current: 0, goal: 2, percentage: 0 },\r\n    flexibility: { current: 0, goal: 1, percentage: 0 }\r\n  };\r\n\r\n  // Calculate aerobic minutes (walking, running, swimming, biking)\r\n  const aerobicActivities = ['walking', 'running', 'swimming', 'biking'];\r\n  filteredData.forEach(item => {\r\n    if (aerobicActivities.includes(item.activity?.toLowerCase())) {\r\n      progress.aerobic.current += Number(item.duration) || 0;\r\n    }\r\n  });\r\n  progress.aerobic.percentage = Math.min((progress.aerobic.current / progress.aerobic.goal) * 100, 100);\r\n\r\n  // Calculate strength sessions (resistance/weights)\r\n  const strengthSessions = filteredData.filter(item => \r\n    item.activity?.toLowerCase().includes('resistance') || \r\n    item.activity?.toLowerCase().includes('weight') ||\r\n    item.activity?.toLowerCase().includes('strength')\r\n  );\r\n  progress.strength.current = strengthSessions.length;\r\n  progress.strength.percentage = Math.min((progress.strength.current / progress.strength.goal) * 100, 100);\r\n\r\n  // Calculate flexibility sessions (balance/stretching, yoga)\r\n  const flexibilitySessions = filteredData.filter(item => \r\n    item.activity?.toLowerCase().includes('balance') || \r\n    item.activity?.toLowerCase().includes('stretch') ||\r\n    item.activity?.toLowerCase().includes('yoga') ||\r\n    item.activity?.toLowerCase().includes('flexibility')\r\n  );\r\n  progress.flexibility.current = flexibilitySessions.length;\r\n  progress.flexibility.percentage = Math.min((progress.flexibility.current / progress.flexibility.goal) * 100, 100);\r\n\r\n  return progress;\r\n};\r\n\r\n// Chart sub-components\r\nconst ProgressBar = ({ category, progress, config, isExpanded }) => {\r\n  const barWidth = config.width - config.padding.left - config.padding.right;\r\n  const barHeight = isExpanded ? 40 : 30;\r\n  const barY = config.padding.top + (EXERCISE_CATEGORIES.indexOf(category) * (barHeight + 20));\r\n  \r\n  const fillWidth = (progress.percentage / 100) * barWidth;\r\n  \r\n  // Color intensity based on percentage\r\n  const getBarColor = (percentage) => {\r\n    if (percentage >= 100) return category.color;\r\n    if (percentage >= 75) return `${category.color}CC`; // 80% opacity\r\n    if (percentage >= 50) return `${category.color}99`; // 60% opacity\r\n    if (percentage >= 25) return `${category.color}66`; // 40% opacity\r\n    return `${category.color}33`; // 20% opacity\r\n  };\r\n\r\n  return (\r\n    <g className=\"progress-bar-group\">\r\n      {/* Background bar */}\r\n      <rect\r\n        x={config.padding.left}\r\n        y={barY}\r\n        width={barWidth}\r\n        height={barHeight}\r\n        fill=\"var(--chart-color-neutral-light)\"\r\n        stroke=\"var(--chart-color-neutral)\"\r\n        strokeWidth=\"1\"\r\n        rx=\"4\"\r\n      />\r\n      \r\n      {/* Progress fill */}\r\n      <rect\r\n        x={config.padding.left}\r\n        y={barY}\r\n        width={fillWidth}\r\n        height={barHeight}\r\n        fill={getBarColor(progress.percentage)}\r\n        rx=\"4\"\r\n      />\r\n      \r\n      {/* Category label */}\r\n      <text\r\n        x={config.padding.left - 10}\r\n        y={barY + barHeight / 2}\r\n        textAnchor=\"end\"\r\n        fontSize={isExpanded ? 14 : 12}\r\n        className=\"category-label\"\r\n        fill=\"var(--chart-color-text)\"\r\n      >\r\n        {category.label}\r\n      </text>\r\n      \r\n      {/* Progress text */}\r\n      <text\r\n        x={config.padding.left + barWidth + 10}\r\n        y={barY + barHeight / 2}\r\n        textAnchor=\"start\"\r\n        fontSize={isExpanded ? 12 : 10}\r\n        className=\"progress-text\"\r\n        fill=\"var(--chart-color-text)\"\r\n      >\r\n        {Math.round(progress.current)}/{progress.goal} {category.unit} ({Math.round(progress.percentage)}%)\r\n      </text>\r\n    </g>\r\n  );\r\n};\r\n\r\nconst Chart = ({ progressData, isExpanded, config }) => {\r\n  return (\r\n    <div className=\"exercise-bar-chart-container\">\r\n      <svg\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        viewBox={`0 0 ${config.width} ${config.height}`}\r\n        className=\"exercise-bar-svg\"\r\n      >\r\n        {EXERCISE_CATEGORIES.map(category => (\r\n          <ProgressBar\r\n            key={category.key}\r\n            category={category}\r\n            progress={progressData[category.key]}\r\n            config={config}\r\n            isExpanded={isExpanded}\r\n          />\r\n        ))}\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Main Component\r\nconst ExerciseBarChart = ({ patientId, isExpanded = false, onExpand, viewMode = 'patient', navigation }) => {\r\n  const { exerciseData, loading, error } = usePatientData(patientId, 'exercise');\r\n  \r\n  // Use navigation from parent or fallback to internal navigation\r\n  const useInternalNavigation = !navigation;\r\n  const internalNavigation = useChartNavigation('exercise');\r\n  const nav = navigation || internalNavigation;\r\n\r\n  const config = createChartConfig('exercise', isExpanded);\r\n  \r\n  const { start: startOfWeek, end: endOfWeek } = nav.getDateRange();\r\n  const weekData = exerciseData.filter(d => {\r\n    if (!d.date) return false;\r\n    const itemDate = new Date(d.date);\r\n    return itemDate >= startOfWeek && itemDate <= endOfWeek;\r\n  });\r\n\r\n  // Get 3-month data\r\n  const { start: startOfThreeMonths, end: endOfThreeMonths } = nav.getThreeMonthRange();\r\n  const threeMonthData = exerciseData.filter(d => {\r\n    if (!d.date) return false;\r\n    const itemDate = new Date(d.date);\r\n    return itemDate >= startOfThreeMonths && itemDate <= endOfThreeMonths;\r\n  });\r\n\r\n  // Calculate progress for current week\r\n  const weekProgress = useMemo(() => {\r\n    return calculateExerciseProgress(exerciseData, startOfWeek, endOfWeek);\r\n  }, [exerciseData, startOfWeek, endOfWeek]);\r\n\r\n  // Calculate progress for 3-month period\r\n  const threeMonthProgress = useMemo(() => {\r\n    return calculateExerciseProgress(exerciseData, startOfThreeMonths, endOfThreeMonths);\r\n  }, [exerciseData, startOfThreeMonths, endOfThreeMonths]);\r\n\r\n  // Calculate summary statistics for physician view\r\n  const weekSummary = useMemo(() => {\r\n    if (!weekData.length) return null;\r\n\r\n    const totalAerobicMinutes = weekProgress.aerobic.current;\r\n    const totalStrengthSessions = weekProgress.strength.current;\r\n    const totalFlexibilitySessions = weekProgress.flexibility.current;\r\n\r\n    const aerobicGoalMet = totalAerobicMinutes >= 150;\r\n    const strengthGoalMet = totalStrengthSessions >= 2;\r\n    const flexibilityGoalMet = totalFlexibilitySessions >= 1;\r\n\r\n    const goalsMet = [aerobicGoalMet, strengthGoalMet, flexibilityGoalMet].filter(Boolean).length;\r\n    const totalGoals = 3;\r\n    const overallProgress = Math.round((goalsMet / totalGoals) * 100);\r\n\r\n    return {\r\n      totalAerobicMinutes,\r\n      totalStrengthSessions,\r\n      totalFlexibilitySessions,\r\n      aerobicGoalMet,\r\n      strengthGoalMet,\r\n      flexibilityGoalMet,\r\n      goalsMet,\r\n      totalGoals,\r\n      overallProgress\r\n    };\r\n  }, [weekData, weekProgress]);\r\n\r\n  const threeMonthSummary = useMemo(() => {\r\n    if (!threeMonthData.length) return null;\r\n\r\n    const avgAerobicPerWeek = threeMonthProgress.aerobic.current / 12; // 12 weeks in 3 months\r\n    const avgStrengthPerWeek = threeMonthProgress.strength.current / 12;\r\n    const avgFlexibilityPerWeek = threeMonthProgress.flexibility.current / 12;\r\n\r\n    return {\r\n      avgAerobicPerWeek: Math.round(avgAerobicPerWeek),\r\n      avgStrengthPerWeek: Math.round(avgStrengthPerWeek * 10) / 10,\r\n      avgFlexibilityPerWeek: Math.round(avgFlexibilityPerWeek * 10) / 10\r\n    };\r\n  }, [threeMonthData, threeMonthProgress]);\r\n\r\n  const legendItems = [\r\n    { color: 'var(--chart-color-blue)', label: 'Aerobic Activity', description: '150 minutes per week' },\r\n    { color: 'var(--chart-color-green)', label: 'Strength Training', description: '2+ sessions per week' },\r\n    { color: 'var(--chart-color-purple)', label: 'Flexibility/Balance', description: '1+ session per week' }\r\n  ];\r\n\r\n  if (loading) {\r\n    return <div className=\"exercise-bar-chart-loading\">Loading exercise data...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"exercise-bar-chart-error\">Error loading exercise data: {error.message}</div>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={`exercise-bar-chart-container ${isExpanded ? 'expanded' : ''}`}>\r\n        <div className=\"exercise-bar-header\">\r\n          <h3 className=\"exercise-bar-title\">Exercise Progress</h3>\r\n          <h4 className=\"chart-subtitle\">{nav.getCurrentMonthYear()}</h4>\r\n        </div>\r\n        \r\n        <Chart \r\n          progressData={weekProgress} \r\n          isExpanded={isExpanded} \r\n          config={config}\r\n        />\r\n        \r\n        <Legend title=\"Exercise Categories:\" items={legendItems} />\r\n        \r\n        {/* Show InfoBox for patient view, summary for physician view */}\r\n        {viewMode === 'physician' && weekSummary ? (\r\n          <div className=\"summary-container\">\r\n            <div className=\"chart-summary\">\r\n              <h4>Week Summary</h4>\r\n              <div className=\"summary-stats\">\r\n                <div className=\"stat-item\">\r\n                  <span className=\"stat-label\">Aerobic Activity:</span>\r\n                  <span className={`stat-value ${weekSummary.aerobicGoalMet ? 'goal-met' : 'goal-not-met'}`}>\r\n                    {weekSummary.totalAerobicMinutes}/150 minutes\r\n                  </span>\r\n                </div>\r\n                <div className=\"stat-item\">\r\n                  <span className=\"stat-label\">Strength Training:</span>\r\n                  <span className={`stat-value ${weekSummary.strengthGoalMet ? 'goal-met' : 'goal-not-met'}`}>\r\n                    {weekSummary.totalStrengthSessions}/2 sessions\r\n                  </span>\r\n                </div>\r\n                <div className=\"stat-item\">\r\n                  <span className=\"stat-label\">Flexibility/Balance:</span>\r\n                  <span className={`stat-value ${weekSummary.flexibilityGoalMet ? 'goal-met' : 'goal-not-met'}`}>\r\n                    {weekSummary.totalFlexibilitySessions}/1 session\r\n                  </span>\r\n                </div>\r\n                <div className=\"stat-item\">\r\n                  <span className=\"stat-label\">Overall Progress:</span>\r\n                  <span className=\"stat-value\">\r\n                    {weekSummary.overallProgress}% ({weekSummary.goalsMet}/{weekSummary.totalGoals} goals met)\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            {threeMonthSummary && (\r\n              <div className=\"chart-summary\">\r\n                <h4>3-Month Average</h4>\r\n                <div className=\"summary-stats\">\r\n                  <div className=\"stat-item\">\r\n                    <span className=\"stat-label\">Aerobic (per week):</span>\r\n                    <span className=\"stat-value\">\r\n                      {threeMonthSummary.avgAerobicPerWeek} minutes\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"stat-item\">\r\n                    <span className=\"stat-label\">Strength (per week):</span>\r\n                    <span className=\"stat-value\">\r\n                      {threeMonthSummary.avgStrengthPerWeek} sessions\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"stat-item\">\r\n                    <span className=\"stat-label\">Flexibility (per week):</span>\r\n                    <span className=\"stat-value\">\r\n                      {threeMonthSummary.avgFlexibilityPerWeek} sessions\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <InfoBox \r\n            title=\"Exercise Goals\" \r\n            content=\"Regular exercise is essential for health. Aim for 150 minutes of aerobic activity per week, at least 2 strength training sessions, and 1 flexibility/balance session. These activities help maintain cardiovascular health, muscle strength, and mobility.\"\r\n          />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExerciseBarChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}