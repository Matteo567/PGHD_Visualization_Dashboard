{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matteo\\\\Working_Folder\\\\a. MCC Thesis Local\\\\MCC_digital_health_data_visualizations\\\\src\\\\components\\\\patient_charts\\\\SleepChart.js\",\n  _s = $RefreshSig$();\n/*\n SleepChart.js - Sleep Pattern Monitoring Visualization\n \n This component provides comprehensive sleep tracking:\n - Sleep duration and quality rating visualization\n - Weekly sleep pattern analysis\n - Color-coded sleep quality indicators\n - Interactive tooltips with sleep details\n - Navigation controls for time periods\n - Integration with patient data and chart navigation\n \n Architecture:\n - Uses custom SVG for bar chart visualization\n - Implements sleep quality categorization system\n - Provides color-coded quality indicators for easy interpretation\n - Supports expandable views\n - Implements time-based navigation and data filtering\n \n Visualizatoin Features:\n - Bar chart showing daily sleep duration\n - Color-coded quality indicators (Very good, Fairly good, Fairly bad, Very bad)\n - Interactive tooltips with detailed sleep information\n - Design adapting to container size\n - Dynamic Y-axis scaling based on sleep duration range\n \n Sleep Quality Categories:\n - Very good: Optimal sleep quality (green)\n - Fairly good: Good sleep quality (blue)\n - Fairly bad: Poor sleep quality (light green)\n - Very bad: Very poor sleep quality (dark green)\n \n Clinical Features:\n - Sleep duration tracking with recommended ranges\n - Quality assessment based on subjective ratings\n - Sleep consistency analysis\n - Summary statistics for physician view\n - Trend analysis over time periods\n \n Component Structure:\n - Chart Container: Main SVG container with sizing\n - Y-Axis: Duration scale with hour-based labeling\n - X-Axis: Day-of-week labels with date information\n - Data Bars: Sleep duration bars with quality color coding\n - Legend: Sleep quality explanations\n - Tooltip: Detailed sleep information on hover\n \n Essential for sleep hygiene monitoring and sleep disorder assessment.\n */\n\nimport React, { useState, useMemo, useRef } from 'react';\nimport usePatientData from '../../hooks/usePatientData';\nimport useChartNavigation from '../../hooks/useChartNavigation';\nimport Legend from '../Legend';\nimport './SleepChart.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SleepChart = ({\n  patientId,\n  isExpanded,\n  onExpand,\n  viewMode = 'patient',\n  navigation\n}) => {\n  _s();\n  const {\n    sleepData,\n    loading,\n    error\n  } = usePatientData(patientId, 'sleep');\n  const [useLineChart, setUseLineChart] = useState(false); // Toggle state for chart view\n\n  // Use navigation from parent or fallback to internal navigation\n  const useInternalNavigation = !navigation;\n  const internalNavigation = useChartNavigation('sleep');\n  const nav = navigation || internalNavigation;\n  const {\n    start: startOfWeek,\n    end: endOfWeek\n  } = nav.getDateRange();\n  const weekData = sleepData.filter(d => d.date >= startOfWeek && d.date <= endOfWeek);\n\n  // Get 3-month data\n  const {\n    start: startOfThreeMonths,\n    end: endOfThreeMonths\n  } = nav.getThreeMonthRange();\n  const threeMonthData = sleepData.filter(d => d.date >= startOfThreeMonths && d.date <= endOfThreeMonths);\n  const formatDateRange = data => {\n    if (!data || data.length === 0) return '';\n    const startDate = new Date(data[0].date).toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric'\n    });\n    const endDate = new Date(data[data.length - 1].date).toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric'\n    });\n    return `${startDate} to ${endDate}`;\n  };\n  const qualityLevels = {\n    'Very good': 'var(--chart-color-sleep-very-good)',\n    'Fairly good': 'var(--chart-color-sleep-fairly-good)',\n    'Fairly bad': 'var(--chart-color-sleep-fairly-bad)',\n    'Very bad': 'var(--chart-color-sleep-very-bad)'\n  };\n  const getQualityColor = quality => qualityLevels[quality] || '#D3D3D3';\n  const legendItems = Object.entries(qualityLevels).map(([label, color]) => ({\n    label,\n    color\n  }));\n\n  // Calculate summary statistics for physician view\n  const weekSummary = useMemo(() => {\n    if (!weekData || weekData.length === 0) return null;\n    const totalHours = weekData.reduce((sum, day) => sum + day.hours, 0);\n    const avgHours = (totalHours / weekData.length).toFixed(1);\n\n    // Count quality levels\n    const qualityCounts = {};\n    Object.keys(qualityLevels).forEach(quality => {\n      qualityCounts[quality] = 0;\n    });\n    weekData.forEach(day => {\n      if (qualityCounts[day.quality] !== undefined) {\n        qualityCounts[day.quality]++;\n      }\n    });\n\n    // Find most common quality\n    const mostCommonQuality = Object.entries(qualityCounts).sort(([, a], [, b]) => b - a)[0];\n\n    // Calculate sleep consistency (how much variation in sleep hours)\n    const hourVariations = weekData.map(day => Math.abs(day.hours - parseFloat(avgHours)));\n    const avgVariation = (hourVariations.reduce((sum, v) => sum + v, 0) / hourVariations.length).toFixed(1);\n\n    // Sleep quality score (Very good=4, Fairly good=3, Fairly bad=2, Very bad=1)\n    const qualityScores = {\n      'Very good': 4,\n      'Fairly good': 3,\n      'Fairly bad': 2,\n      'Very bad': 1\n    };\n    const avgQualityScore = weekData.reduce((sum, day) => sum + (qualityScores[day.quality] || 0), 0) / weekData.length;\n    const qualityAssessment = avgQualityScore >= 3.5 ? 'Good' : avgQualityScore >= 2.5 ? 'Fair' : 'Poor';\n\n    // Count nights with adequate sleep (7+ hours)\n    const adequateSleepNights = weekData.filter(day => day.hours >= 7).length;\n    return {\n      totalHours: totalHours.toFixed(1),\n      avgHours,\n      mostCommonQuality: mostCommonQuality[0],\n      mostCommonQualityCount: mostCommonQuality[1],\n      avgVariation,\n      qualityAssessment,\n      adequateSleepNights,\n      daysTracked: weekData.length\n    };\n  }, [weekData]);\n\n  // Calculate 3-month summary statistics for physician view\n  const threeMonthSummary = useMemo(() => {\n    if (!threeMonthData || threeMonthData.length === 0) return null;\n    const totalHours = threeMonthData.reduce((sum, day) => sum + day.hours, 0);\n    const avgHours = (totalHours / threeMonthData.length).toFixed(1);\n\n    // Count quality levels\n    const qualityCounts = {};\n    Object.keys(qualityLevels).forEach(quality => {\n      qualityCounts[quality] = 0;\n    });\n    threeMonthData.forEach(day => {\n      if (qualityCounts[day.quality] !== undefined) {\n        qualityCounts[day.quality]++;\n      }\n    });\n\n    // Find most common quality\n    const mostCommonQuality = Object.entries(qualityCounts).sort(([, a], [, b]) => b - a)[0];\n\n    // Calculate sleep consistency (how much variation in sleep hours)\n    const hourVariations = threeMonthData.map(day => Math.abs(day.hours - parseFloat(avgHours)));\n    const avgVariation = (hourVariations.reduce((sum, v) => sum + v, 0) / hourVariations.length).toFixed(1);\n    return {\n      totalHours: totalHours.toFixed(1),\n      avgHours,\n      mostCommonQuality: mostCommonQuality[0],\n      mostCommonQualityCount: mostCommonQuality[1],\n      avgVariation,\n      daysTracked: threeMonthData.length\n    };\n  }, [threeMonthData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sleep-chart-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"chart-title\",\n      children: \"Sleep Quality & Duration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"chart-subtitle\",\n      children: nav.getCurrentMonthYear()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sleep-chart\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sleep-quality-row\",\n        children: weekData.map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sleep-quality-item\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sleep-quality-indicator\",\n            style: {\n              backgroundColor: getQualityColor(day.quality)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 17\n          }, this)\n        }, `quality-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bed-icons-row\",\n        children: weekData.map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bed-item\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bed-icon-wrapper\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              viewBox: \"0 0 486.5 225.1\",\n              className: \"bed-icon\",\n              children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M471.9,68.9c-8,0-14.5,6.5-14.5,14.5v68.6H26.1l-.6-139.3c0-7-5.8-12.7-12.8-12.7h0C5.7,0,0,5.7,0,12.8v199.6c0,7,5.7,12.8,12.7,12.8s12.8-5.7,12.8-12.8v-37h431.9v35.2c0,8,6.5,14.5,14.5,14.5s14.5-6.5,14.5-14.5v-127.1c0-8-6.5-14.5-14.5-14.5ZM483.7,210.6c0,6.5-5.3,11.8-11.8,11.8s-11.8-5.3-11.8-11.8v-38H22.7v39.7c0,5.5-4.5,10-10,10s-10-4.5-10-10V12.8C2.8,7.3,7.3,2.8,12.7,2.8h0c5.5,0,9.9,4.5,10,9.9l.6,142.1h436.8v-71.4c0-6.5,5.3-11.7,11.8-11.7s11.8,5.3,11.8,11.7v127.1Z\",\n                fill: \"#D2B48C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M29.9,94.2v54.5h425.4v-54.5H29.9ZM452.5,145.9H32.7v-48.9h419.8v48.9Z\",\n                fill: \"#e0e0e0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n                x: \"32.7\",\n                y: \"97\",\n                width: `${day.hours / 10 * 419.8}`,\n                height: \"48.9\",\n                fill: \"#FF4500\",\n                className: \"sleep-fill-rect\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M112.8,46.3h-55.4c-12.1,0-22,9.9-22,22s9.9,22,22,22h55.4c12.1,0,22-9.9,22-22s-9.9-22-22-22ZM112.8,87.5h-55.4c-10.6,0-19.2-8.6-19.2-19.2s8.6-19.2,19.2-19.2h55.4c10.6,0,19.2,8.6,19.2,19.2s-8.6,19.2-19.2,19.2Z\",\n                fill: \"#FFFFFF\",\n                stroke: \"#AAAAAA\",\n                strokeWidth: \"1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 17\n          }, this)\n        }, `bed-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sleep-info-row\",\n        children: weekData.map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sleep-info-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sleep-hours\",\n            children: [day.hours.toFixed(1), \"h\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"day-label\",\n            children: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'][new Date(day.date).getDay()]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date-label\",\n            children: new Date(day.date).getDate()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 17\n          }, this)]\n        }, `info-${index}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Legend, {\n      title: \"Sleep Quality\",\n      items: legendItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 9\n    }, this), viewMode === 'physician' && weekSummary && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"summary-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Week Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Average Sleep:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [weekSummary.avgHours, \" hours/night\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Total Sleep:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [weekSummary.totalHours, \" hours\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Sleep Consistency:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [\"\\xB1\", weekSummary.avgVariation, \" hours variation\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Common Quality:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [weekSummary.mostCommonQuality, \" (\", weekSummary.mostCommonQualityCount, \"x)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 13\n      }, this), threeMonthSummary && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"3-Month Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Average Sleep:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [threeMonthSummary.avgHours, \" hours/night\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Total Sleep:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [threeMonthSummary.totalHours, \" hours\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Sleep Consistency:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [\"\\xB1\", threeMonthSummary.avgVariation, \" hours variation\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Common Quality:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [threeMonthSummary.mostCommonQuality, \" (\", threeMonthSummary.mostCommonQualityCount, \"x)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 7\n  }, this);\n};\n_s(SleepChart, \"bmMEvv8gY8hfi3Uh8xrCWGxsEsE=\", false, function () {\n  return [usePatientData, useChartNavigation];\n});\n_c = SleepChart;\nexport default SleepChart;\nvar _c;\n$RefreshReg$(_c, \"SleepChart\");","map":{"version":3,"names":["React","useState","useMemo","useRef","usePatientData","useChartNavigation","Legend","jsxDEV","_jsxDEV","SleepChart","patientId","isExpanded","onExpand","viewMode","navigation","_s","sleepData","loading","error","useLineChart","setUseLineChart","useInternalNavigation","internalNavigation","nav","start","startOfWeek","end","endOfWeek","getDateRange","weekData","filter","d","date","startOfThreeMonths","endOfThreeMonths","getThreeMonthRange","threeMonthData","formatDateRange","data","length","startDate","Date","toLocaleDateString","month","day","endDate","qualityLevels","getQualityColor","quality","legendItems","Object","entries","map","label","color","weekSummary","totalHours","reduce","sum","hours","avgHours","toFixed","qualityCounts","keys","forEach","undefined","mostCommonQuality","sort","a","b","hourVariations","Math","abs","parseFloat","avgVariation","v","qualityScores","avgQualityScore","qualityAssessment","adequateSleepNights","mostCommonQualityCount","daysTracked","threeMonthSummary","className","children","fileName","_jsxFileName","lineNumber","columnNumber","getCurrentMonthYear","index","style","backgroundColor","viewBox","fill","x","y","width","height","stroke","strokeWidth","getDay","getDate","title","items","_c","$RefreshReg$"],"sources":["C:/Users/Matteo/Working_Folder/a. MCC Thesis Local/MCC_digital_health_data_visualizations/src/components/patient_charts/SleepChart.js"],"sourcesContent":["/*\n SleepChart.js - Sleep Pattern Monitoring Visualization\n \n This component provides comprehensive sleep tracking:\n - Sleep duration and quality rating visualization\n - Weekly sleep pattern analysis\n - Color-coded sleep quality indicators\n - Interactive tooltips with sleep details\n - Navigation controls for time periods\n - Integration with patient data and chart navigation\n \n Architecture:\n - Uses custom SVG for bar chart visualization\n - Implements sleep quality categorization system\n - Provides color-coded quality indicators for easy interpretation\n - Supports expandable views\n - Implements time-based navigation and data filtering\n \n Visualizatoin Features:\n - Bar chart showing daily sleep duration\n - Color-coded quality indicators (Very good, Fairly good, Fairly bad, Very bad)\n - Interactive tooltips with detailed sleep information\n - Design adapting to container size\n - Dynamic Y-axis scaling based on sleep duration range\n \n Sleep Quality Categories:\n - Very good: Optimal sleep quality (green)\n - Fairly good: Good sleep quality (blue)\n - Fairly bad: Poor sleep quality (light green)\n - Very bad: Very poor sleep quality (dark green)\n \n Clinical Features:\n - Sleep duration tracking with recommended ranges\n - Quality assessment based on subjective ratings\n - Sleep consistency analysis\n - Summary statistics for physician view\n - Trend analysis over time periods\n \n Component Structure:\n - Chart Container: Main SVG container with sizing\n - Y-Axis: Duration scale with hour-based labeling\n - X-Axis: Day-of-week labels with date information\n - Data Bars: Sleep duration bars with quality color coding\n - Legend: Sleep quality explanations\n - Tooltip: Detailed sleep information on hover\n \n Essential for sleep hygiene monitoring and sleep disorder assessment.\n */\n\nimport React, { useState, useMemo, useRef } from 'react';\n\nimport usePatientData from '../../hooks/usePatientData';\nimport useChartNavigation from '../../hooks/useChartNavigation';\nimport Legend from '../Legend';\nimport './SleepChart.css';\n\n\nconst SleepChart = ({ patientId, isExpanded, onExpand, viewMode = 'patient', navigation }) => {\n  const { sleepData, loading, error } = usePatientData(patientId, 'sleep');\n  const [useLineChart, setUseLineChart] = useState(false); // Toggle state for chart view\n  \n  // Use navigation from parent or fallback to internal navigation\n  const useInternalNavigation = !navigation;\n  const internalNavigation = useChartNavigation('sleep');\n  const nav = navigation || internalNavigation;\n\n  const { start: startOfWeek, end: endOfWeek } = nav.getDateRange();\n  const weekData = sleepData.filter(d => d.date >= startOfWeek && d.date <= endOfWeek);\n\n  // Get 3-month data\n  const { start: startOfThreeMonths, end: endOfThreeMonths } = nav.getThreeMonthRange();\n  const threeMonthData = sleepData.filter(d => d.date >= startOfThreeMonths && d.date <= endOfThreeMonths);\n\n  const formatDateRange = (data) => {\n    if (!data || data.length === 0) return '';\n    const startDate = new Date(data[0].date).toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\n    const endDate = new Date(data[data.length - 1].date).toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\n    return `${startDate} to ${endDate}`;\n  };\n\n  const qualityLevels = {\n    'Very good': 'var(--chart-color-sleep-very-good)',\n    'Fairly good': 'var(--chart-color-sleep-fairly-good)',\n    'Fairly bad': 'var(--chart-color-sleep-fairly-bad)',\n    'Very bad': 'var(--chart-color-sleep-very-bad)',\n  };\n\n  const getQualityColor = (quality) => qualityLevels[quality] || '#D3D3D3';\n\n  const legendItems = Object.entries(qualityLevels).map(([label, color]) => ({\n    label,\n    color,\n  }));\n\n  // Calculate summary statistics for physician view\n  const weekSummary = useMemo(() => {\n    if (!weekData || weekData.length === 0) return null;\n\n    const totalHours = weekData.reduce((sum, day) => sum + day.hours, 0);\n    const avgHours = (totalHours / weekData.length).toFixed(1);\n\n    // Count quality levels\n    const qualityCounts = {};\n    Object.keys(qualityLevels).forEach(quality => {\n      qualityCounts[quality] = 0;\n    });\n\n    weekData.forEach(day => {\n      if (qualityCounts[day.quality] !== undefined) {\n        qualityCounts[day.quality]++;\n      }\n    });\n\n    // Find most common quality\n    const mostCommonQuality = Object.entries(qualityCounts)\n      .sort(([,a], [,b]) => b - a)[0];\n\n    // Calculate sleep consistency (how much variation in sleep hours)\n    const hourVariations = weekData.map(day => Math.abs(day.hours - parseFloat(avgHours)));\n    const avgVariation = (hourVariations.reduce((sum, v) => sum + v, 0) / hourVariations.length).toFixed(1);\n\n    // Sleep quality score (Very good=4, Fairly good=3, Fairly bad=2, Very bad=1)\n    const qualityScores = {\n      'Very good': 4,\n      'Fairly good': 3,\n      'Fairly bad': 2,\n      'Very bad': 1\n    };\n    const avgQualityScore = weekData.reduce((sum, day) => sum + (qualityScores[day.quality] || 0), 0) / weekData.length;\n    const qualityAssessment = avgQualityScore >= 3.5 ? 'Good' : avgQualityScore >= 2.5 ? 'Fair' : 'Poor';\n\n    // Count nights with adequate sleep (7+ hours)\n    const adequateSleepNights = weekData.filter(day => day.hours >= 7).length;\n\n    return {\n      totalHours: totalHours.toFixed(1),\n      avgHours,\n      mostCommonQuality: mostCommonQuality[0],\n      mostCommonQualityCount: mostCommonQuality[1],\n      avgVariation,\n      qualityAssessment,\n      adequateSleepNights,\n      daysTracked: weekData.length\n    };\n  }, [weekData]);\n\n  // Calculate 3-month summary statistics for physician view\n  const threeMonthSummary = useMemo(() => {\n    if (!threeMonthData || threeMonthData.length === 0) return null;\n\n    const totalHours = threeMonthData.reduce((sum, day) => sum + day.hours, 0);\n    const avgHours = (totalHours / threeMonthData.length).toFixed(1);\n\n    // Count quality levels\n    const qualityCounts = {};\n    Object.keys(qualityLevels).forEach(quality => {\n      qualityCounts[quality] = 0;\n    });\n\n    threeMonthData.forEach(day => {\n      if (qualityCounts[day.quality] !== undefined) {\n        qualityCounts[day.quality]++;\n      }\n    });\n\n    // Find most common quality\n    const mostCommonQuality = Object.entries(qualityCounts)\n      .sort(([,a], [,b]) => b - a)[0];\n\n    // Calculate sleep consistency (how much variation in sleep hours)\n    const hourVariations = threeMonthData.map(day => Math.abs(day.hours - parseFloat(avgHours)));\n    const avgVariation = (hourVariations.reduce((sum, v) => sum + v, 0) / hourVariations.length).toFixed(1);\n\n    return {\n      totalHours: totalHours.toFixed(1),\n      avgHours,\n      mostCommonQuality: mostCommonQuality[0],\n      mostCommonQualityCount: mostCommonQuality[1],\n      avgVariation,\n      daysTracked: threeMonthData.length\n    };\n  }, [threeMonthData]);\n\n  return (\n      <div className=\"sleep-chart-content\">\n        <h3 className=\"chart-title\">Sleep Quality & Duration</h3>\n        <h4 className=\"chart-subtitle\">{nav.getCurrentMonthYear()}</h4>\n        <div className=\"sleep-chart\">\n          {/* Sleep Quality Indicators Row */}\n          <div className=\"sleep-quality-row\">\n            {weekData.map((day, index) => (\n              <div key={`quality-${index}`} className=\"sleep-quality-item\">\n                <div \n                  className=\"sleep-quality-indicator\"\n                  style={{ backgroundColor: getQualityColor(day.quality) }}\n                ></div>\n              </div>\n            ))}\n          </div>\n          \n          {/* Bed Icons Row */}\n          <div className=\"bed-icons-row\">\n            {weekData.map((day, index) => (\n              <div key={`bed-${index}`} className=\"bed-item\">\n                <div className=\"bed-icon-wrapper\">\n                  <svg viewBox=\"0 0 486.5 225.1\" className=\"bed-icon\">\n                    <path d=\"M471.9,68.9c-8,0-14.5,6.5-14.5,14.5v68.6H26.1l-.6-139.3c0-7-5.8-12.7-12.8-12.7h0C5.7,0,0,5.7,0,12.8v199.6c0,7,5.7,12.8,12.7,12.8s12.8-5.7,12.8-12.8v-37h431.9v35.2c0,8,6.5,14.5,14.5,14.5s14.5-6.5,14.5-14.5v-127.1c0-8-6.5-14.5-14.5-14.5ZM483.7,210.6c0,6.5-5.3,11.8-11.8,11.8s-11.8-5.3-11.8-11.8v-38H22.7v39.7c0,5.5-4.5,10-10,10s-10-4.5-10-10V12.8C2.8,7.3,7.3,2.8,12.7,2.8h0c5.5,0,9.9,4.5,10,9.9l.6,142.1h436.8v-71.4c0-6.5,5.3-11.7,11.8-11.7s11.8,5.3,11.8,11.7v127.1Z\" fill=\"#D2B48C\"/>\n                    <path d=\"M29.9,94.2v54.5h425.4v-54.5H29.9ZM452.5,145.9H32.7v-48.9h419.8v48.9Z\" fill=\"#e0e0e0\"/>\n                    <rect x=\"32.7\" y=\"97\" width={`${(day.hours / 10) * 419.8}`} height=\"48.9\" fill=\"#FF4500\" className=\"sleep-fill-rect\" />\n                    <path d=\"M112.8,46.3h-55.4c-12.1,0-22,9.9-22,22s9.9,22,22,22h55.4c12.1,0,22-9.9,22-22s-9.9-22-22-22ZM112.8,87.5h-55.4c-10.6,0-19.2-8.6-19.2-19.2s8.6-19.2,19.2-19.2h55.4c10.6,0,19.2,8.6,19.2,19.2s-8.6,19.2-19.2,19.2Z\" fill=\"#FFFFFF\" stroke=\"#AAAAAA\" strokeWidth=\"1\"/>\n                  </svg>\n                </div>\n              </div>\n            ))}\n          </div>\n          \n          {/* Sleep Information Row */}\n          <div className=\"sleep-info-row\">\n            {weekData.map((day, index) => (\n              <div key={`info-${index}`} className=\"sleep-info-item\">\n                <div className=\"sleep-hours\">{day.hours.toFixed(1)}h</div>\n                <div className=\"day-label\">{['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'][new Date(day.date).getDay()]}</div>\n                <div className=\"date-label\">{new Date(day.date).getDate()}</div>\n              </div>\n            ))}\n          </div>\n        </div>\n        \n        <Legend title=\"Sleep Quality\" items={legendItems} />\n\n        {/* Show summary for physician view only */}\n        {viewMode === 'physician' && weekSummary && (\n          <div className=\"summary-container\">\n            <div className=\"chart-summary\">\n              <h4>Week Summary</h4>\n              <div className=\"summary-stats\">\n                <div className=\"stat-item\">\n                  <span className=\"stat-label\">Average Sleep:</span>\n                  <span className=\"stat-value\">\n                    {weekSummary.avgHours} hours/night\n                  </span>\n                </div>\n                <div className=\"stat-item\">\n                  <span className=\"stat-label\">Total Sleep:</span>\n                  <span className=\"stat-value\">\n                    {weekSummary.totalHours} hours\n                  </span>\n                </div>\n                <div className=\"stat-item\">\n                  <span className=\"stat-label\">Sleep Consistency:</span>\n                  <span className=\"stat-value\">\n                    ±{weekSummary.avgVariation} hours variation\n                  </span>\n                </div>\n\n                <div className=\"stat-item\">\n                  <span className=\"stat-label\">Common Quality:</span>\n                  <span className=\"stat-value\">\n                    {weekSummary.mostCommonQuality} ({weekSummary.mostCommonQualityCount}x)\n                  </span>\n                </div>\n\n              </div>\n            </div>\n            \n            {threeMonthSummary && (\n              <div className=\"chart-summary\">\n                <h4>3-Month Summary</h4>\n                <div className=\"summary-stats\">\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">Average Sleep:</span>\n                    <span className=\"stat-value\">\n                      {threeMonthSummary.avgHours} hours/night\n                    </span>\n                  </div>\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">Total Sleep:</span>\n                    <span className=\"stat-value\">\n                      {threeMonthSummary.totalHours} hours\n                    </span>\n                  </div>\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">Sleep Consistency:</span>\n                    <span className=\"stat-value\">\n                      ±{threeMonthSummary.avgVariation} hours variation\n                    </span>\n                  </div>\n\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">Common Quality:</span>\n                    <span className=\"stat-value\">\n                      {threeMonthSummary.mostCommonQuality} ({threeMonthSummary.mostCommonQualityCount}x)\n                    </span>\n                  </div>\n\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n  );\n};\n\nexport default SleepChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}