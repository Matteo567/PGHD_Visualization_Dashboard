{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matteo\\\\Working_Folder\\\\a. MCC Thesis Local\\\\MCC_digital_health_data_visualizations\\\\src\\\\components\\\\patient_charts\\\\MealContentsChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo } from 'react';\nimport usePatientData from '../../hooks/usePatientData';\nimport ChartContainer from '../ChartContainer';\nimport Legend from '../Legend';\nimport './MealContentsChart.css';\nimport '../ChartStyles.css';\n\n// --- Constants ---\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DAYS_OF_WEEK = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\nconst MEAL_TYPES = ['Breakfast', 'Lunch', 'Dinner'];\nconst FOOD_CATEGORIES = ['Protein', 'Carbohydrates', 'Vegetables', 'Fruit', 'Alcohol'];\nconst SUGAR_CATEGORIES = ['', '1-20g', '20-40g', '40-60g', '60g+'];\nconst DEFAULT_WEEK = new Date(2025, 4, 1);\n\n// Emoji mappings for food categories\nconst CATEGORY_EMOJIS = {\n  'Protein': '🥩',\n  'Carbohydrates': '🍞',\n  'Vegetables': '🥦',\n  'Fruit': '🍎',\n  'Alcohol': '🍷'\n};\nconst SUGAR_EMOJIS = {\n  '': '',\n  // No sugar\n  '1-20g': '🍭',\n  // Lollipop\n  '20-40g': '🍫',\n  // Chocolate bar\n  '40-60g': '🍩',\n  // Donut\n  '60g+': '🎂' // Cake\n};\nconst getChartConfig = isExpanded => ({\n  width: isExpanded ? 700 : 500,\n  height: isExpanded ? 400 : 300,\n  padding: {\n    top: 40,\n    right: 30,\n    bottom: 80,\n    left: 100\n  },\n  dayWidth: isExpanded ? 85 : 60,\n  mealHeight: isExpanded ? 80 : 60,\n  fontSize: {\n    dayLabel: isExpanded ? 14 : 12,\n    dateLabel: isExpanded ? 12 : 10,\n    mealLabel: isExpanded ? 10 : 8,\n    timeLabel: isExpanded ? 8 : 7\n  }\n});\n\n// --- Helper Functions ---\nconst getWeekStart = date => {\n  const d = new Date(date);\n  const day = d.getDay();\n  const diff = d.getDate() - day;\n  return new Date(d.setDate(diff));\n};\nconst formatDayLabel = date => date.toLocaleDateString('en-US', {\n  weekday: 'short'\n});\nconst formatDateLabel = date => date.toLocaleDateString('en-US', {\n  month: 'short',\n  day: 'numeric'\n});\nconst getMealTime = (data, mealType) => {\n  const timeKey = `${mealType}_Time`;\n  return data[timeKey] || '';\n};\nconst getMealData = (data, mealType) => {\n  const mealData = {};\n  FOOD_CATEGORIES.forEach(category => {\n    const key = `${mealType}_${category}`;\n    mealData[category] = data[key] === 1 || data[key] === '1';\n  });\n  const sugarKey = `${mealType}_Added_Sugar`;\n  mealData['Added Sugar'] = data[sugarKey] || '';\n  return mealData;\n};\n\n// --- Chart Sub-components ---\n\nconst XAxis = ({\n  config,\n  weekDays\n}) => /*#__PURE__*/_jsxDEV(\"g\", {\n  className: \"x-axis\",\n  children: [weekDays.map((day, dayIndex) => {\n    const x = config.padding.left + dayIndex * config.dayWidth + config.dayWidth / 2;\n    return /*#__PURE__*/_jsxDEV(\"g\", {\n      children: [/*#__PURE__*/_jsxDEV(\"text\", {\n        x: x,\n        y: config.height - config.padding.bottom + 30,\n        fontSize: config.fontSize.dayLabel,\n        textAnchor: \"middle\",\n        fill: \"#333\",\n        fontWeight: \"600\",\n        children: DAYS_OF_WEEK[day.getDay()]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: x,\n        y: config.height - config.padding.bottom + 45,\n        fontSize: config.fontSize.dateLabel,\n        textAnchor: \"middle\",\n        fill: \"#666\",\n        children: day.getDate()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n        className: \"chart-grid-line-vertical\",\n        x1: config.padding.left + dayIndex * config.dayWidth,\n        y1: config.padding.top,\n        x2: config.padding.left + dayIndex * config.dayWidth,\n        y2: config.height - config.padding.bottom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, dayIndex, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this);\n  }), /*#__PURE__*/_jsxDEV(\"line\", {\n    className: \"chart-grid-line-vertical\",\n    x1: config.padding.left + 7 * config.dayWidth,\n    y1: config.padding.top,\n    x2: config.padding.left + 7 * config.dayWidth,\n    y2: config.height - config.padding.bottom\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 78,\n  columnNumber: 3\n}, this);\n_c = XAxis;\nconst YAxis = ({\n  config\n}) => {\n  const mealTimes = {\n    'Breakfast': '6-10am',\n    'Lunch': '11-2pm',\n    'Dinner': '5-9pm'\n  };\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    className: \"y-axis\",\n    children: [MEAL_TYPES.map((meal, mealIndex) => {\n      const y = config.padding.top + mealIndex * config.mealHeight + config.mealHeight / 2;\n      return /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"text\", {\n          x: config.padding.left - 25,\n          y: y - 5,\n          fontSize: config.fontSize.mealLabel,\n          textAnchor: \"end\",\n          fill: \"#333\",\n          fontWeight: \"600\",\n          children: meal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: config.padding.left - 25,\n          y: y + 10,\n          fontSize: config.fontSize.timeLabel,\n          textAnchor: \"end\",\n          fill: \"#666\",\n          children: mealTimes[meal]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n          className: \"chart-grid-line-horizontal\",\n          x1: config.padding.left,\n          y1: config.padding.top + mealIndex * config.mealHeight,\n          x2: config.padding.left + 7 * config.dayWidth,\n          y2: config.padding.top + mealIndex * config.mealHeight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this)]\n      }, meal, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"line\", {\n      className: \"chart-grid-line-horizontal\",\n      x1: config.padding.left,\n      y1: config.padding.top + 3 * config.mealHeight,\n      x2: config.padding.left + 7 * config.dayWidth,\n      y2: config.padding.top + 3 * config.mealHeight\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n_c2 = YAxis;\nconst MealCell = ({\n  config,\n  dayIndex,\n  mealIndex,\n  mealData,\n  mealTime\n}) => {\n  const x = config.padding.left + dayIndex * config.dayWidth + 5;\n  const y = config.padding.top + mealIndex * config.mealHeight + 5;\n  const cellWidth = config.dayWidth - 10;\n  const cellHeight = config.mealHeight - 10;\n\n  // Calculate grid layout for food categories (2x3 grid)\n  const categoriesPerRow = 3;\n  const categoryWidth = cellWidth / categoriesPerRow;\n  const categoryHeight = (cellHeight - 20) / 2; // Reserve space for time and sugar\n\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    className: \"meal-cell\",\n    children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n      x: x,\n      y: y,\n      width: cellWidth,\n      height: cellHeight,\n      fill: \"#f9f9f9\",\n      stroke: \"#ddd\",\n      strokeWidth: \"1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      x: x + cellWidth / 2,\n      y: y + 12,\n      fontSize: config.fontSize.timeLabel,\n      textAnchor: \"middle\",\n      fill: \"#666\",\n      children: mealTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), FOOD_CATEGORIES.map((category, index) => {\n      const row = Math.floor(index / categoriesPerRow);\n      const col = index % categoriesPerRow;\n      const categoryX = x + col * categoryWidth + categoryWidth / 2;\n      const categoryY = y + 20 + row * categoryHeight + categoryHeight / 2;\n      const hasCategory = mealData[category];\n      return /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: categoryX,\n          cy: categoryY,\n          r: \"12\",\n          fill: hasCategory ? \"#f0f8ff\" : \"#f5f5f5\",\n          stroke: \"#ddd\",\n          strokeWidth: \"1\",\n          opacity: hasCategory ? 1 : 0.3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this), hasCategory && /*#__PURE__*/_jsxDEV(\"text\", {\n          x: categoryX,\n          y: categoryY + 2,\n          fontSize: \"12\",\n          textAnchor: \"middle\",\n          dominantBaseline: \"central\",\n          style: {\n            fontFamily: 'Apple Color Emoji, Segoe UI Emoji, Noto Color Emoji, sans-serif'\n          },\n          children: CATEGORY_EMOJIS[category]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 15\n        }, this)]\n      }, category, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this);\n    }), mealData['Added Sugar'] && SUGAR_EMOJIS[mealData['Added Sugar']] && /*#__PURE__*/_jsxDEV(\"text\", {\n      x: x + cellWidth / 2,\n      y: y + cellHeight - 8,\n      fontSize: \"12\",\n      textAnchor: \"middle\",\n      dominantBaseline: \"central\",\n      style: {\n        fontFamily: 'Apple Color Emoji, Segoe UI Emoji, Noto Color Emoji, sans-serif'\n      },\n      children: SUGAR_EMOJIS[mealData['Added Sugar']]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 5\n  }, this);\n};\n_c3 = MealCell;\nconst MealGrid = ({\n  config,\n  weekDays,\n  patientData\n}) => {\n  if (!patientData || patientData.length === 0) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    className: \"meal-grid\",\n    children: weekDays.map((day, dayIndex) => {\n      const dayData = patientData.find(d => {\n        const dataDate = new Date(d.Date);\n        return dataDate.toDateString() === day.toDateString();\n      });\n      if (!dayData) return null;\n      return MEAL_TYPES.map((meal, mealIndex) => {\n        const mealData = getMealData(dayData, meal);\n        const mealTime = getMealTime(dayData, meal);\n        return /*#__PURE__*/_jsxDEV(MealCell, {\n          config: config,\n          dayIndex: dayIndex,\n          mealIndex: mealIndex,\n          mealData: mealData,\n          mealTime: mealTime\n        }, `${dayIndex}-${mealIndex}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this);\n      });\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 270,\n    columnNumber: 5\n  }, this);\n};\n\n// --- Main Component ---\n_c4 = MealGrid;\nconst MealContentsChart = ({\n  patientId = 'Patient_001',\n  isExpanded,\n  onExpand,\n  isPhysicianView = false\n}) => {\n  _s();\n  const [selectedWeek, setSelectedWeek] = useState(DEFAULT_WEEK);\n  const {\n    mealData: patientData,\n    loading,\n    error\n  } = usePatientData(patientId);\n  const config = getChartConfig(isExpanded);\n  const weekStart = getWeekStart(selectedWeek);\n  const weekDays = Array.from({\n    length: 7\n  }, (_, i) => {\n    const day = new Date(weekStart);\n    day.setDate(weekStart.getDate() + i);\n    return day;\n  });\n  const handlePrevWeek = () => setSelectedWeek(prev => new Date(new Date(prev).setDate(prev.getDate() - 7)));\n  const handleNextWeek = () => setSelectedWeek(prev => new Date(new Date(prev).setDate(prev.getDate() + 7)));\n  const startOfWeek = new Date(weekStart);\n  const endOfWeek = new Date(startOfWeek);\n  endOfWeek.setDate(endOfWeek.getDate() + 6);\n  const formatDateRange = (start, end) => {\n    const startStr = start.toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric'\n    });\n    const endStr = end.toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric'\n    });\n    return `${startStr} to ${endStr}`;\n  };\n\n  // Calculate summary statistics for physician view\n  const weekSummary = useMemo(() => {\n    if (!patientData || patientData.length === 0) return null;\n    const weekData = patientData.filter(d => {\n      const dataDate = new Date(d.Date);\n      return dataDate >= startOfWeek && dataDate <= endOfWeek;\n    });\n    if (weekData.length === 0) return null;\n\n    // Count food categories across all meals\n    const categoryStats = {};\n    FOOD_CATEGORIES.forEach(category => {\n      categoryStats[category] = 0;\n    });\n\n    // Count sugar levels\n    const sugarStats = {};\n    SUGAR_CATEGORIES.filter(s => s !== '').forEach(sugar => {\n      sugarStats[sugar] = 0;\n    });\n    let totalMealsLogged = 0;\n    let daysWithMeals = new Set();\n    weekData.forEach(dayData => {\n      daysWithMeals.add(dayData.Date);\n      MEAL_TYPES.forEach(meal => {\n        const mealData = getMealData(dayData, meal);\n        const hasAnyFood = FOOD_CATEGORIES.some(category => mealData[category]);\n        if (hasAnyFood) {\n          totalMealsLogged++;\n\n          // Count each food category\n          FOOD_CATEGORIES.forEach(category => {\n            if (mealData[category]) {\n              categoryStats[category]++;\n            }\n          });\n\n          // Count sugar levels\n          if (mealData['Added Sugar'] && mealData['Added Sugar'] !== '') {\n            sugarStats[mealData['Added Sugar']]++;\n          }\n        }\n      });\n    });\n\n    // Find most common food category\n    const mostCommonFood = Object.entries(categoryStats).sort(([, a], [, b]) => b - a)[0];\n\n    // Calculate sugar frequency\n    const totalSugarMeals = Object.values(sugarStats).reduce((sum, count) => sum + count, 0);\n    const sugarPercentage = totalMealsLogged > 0 ? (totalSugarMeals / totalMealsLogged * 100).toFixed(0) : 0;\n    return {\n      totalMealsLogged,\n      daysWithMeals: daysWithMeals.size,\n      mostCommonFood: mostCommonFood[0],\n      mostCommonFoodCount: mostCommonFood[1],\n      categoryStats,\n      sugarPercentage,\n      totalSugarMeals\n    };\n  }, [patientData, startOfWeek, endOfWeek]);\n  return /*#__PURE__*/_jsxDEV(ChartContainer, {\n    title: \"Meal Contents\",\n    icon: \"\\uD83C\\uDF7D\\uFE0F\",\n    isLoading: loading,\n    error: error,\n    noData: !loading && !error && (!patientData || patientData.length === 0),\n    isExpanded: isExpanded,\n    onExpand: onExpand,\n    onPrev: handlePrevWeek,\n    onNext: handleNextWeek,\n    navigationLabel: formatDateRange(startOfWeek, endOfWeek),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meal-contents-chart-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meal-contents-legends-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(Legend, {\n          title: \"Food Categories\",\n          items: FOOD_CATEGORIES.map(category => ({\n            label: `${CATEGORY_EMOJIS[category]} ${category}`,\n            color: null\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {\n          title: \"Sugar Levels\",\n          items: SUGAR_CATEGORIES.filter(sugar => sugar !== '').map(sugar => ({\n            label: `${SUGAR_EMOJIS[sugar]} ${sugar}`,\n            color: null\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `meal-chart-wrapper ${isExpanded ? 'expanded' : ''}`,\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"100%\",\n          height: \"100%\",\n          viewBox: `0 0 ${config.width} ${config.height}`,\n          className: \"meal-chart\",\n          children: [/*#__PURE__*/_jsxDEV(XAxis, {\n            config: config,\n            weekDays: weekDays\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            config: config\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MealGrid, {\n            config: config,\n            weekDays: weekDays,\n            patientData: patientData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 9\n      }, this), isPhysicianView && weekSummary && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meal-summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Week Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Meals Logged:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [weekSummary.totalMealsLogged, \"/21 possible\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Days with Meals:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [weekSummary.daysWithMeals, \"/7 days\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Most Common Food:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [CATEGORY_EMOJIS[weekSummary.mostCommonFood], \" \", weekSummary.mostCommonFood, \" (\", weekSummary.mostCommonFoodCount, \"x)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Added Sugar:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [weekSummary.sugarPercentage, \"% of meals (\", weekSummary.totalSugarMeals, \"/\", weekSummary.totalMealsLogged, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Food Balance:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: Object.entries(weekSummary.categoryStats).sort(([, a], [, b]) => b - a).slice(0, 3).map(([cat, count]) => `${CATEGORY_EMOJIS[cat]}${count}`).join(' ')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 400,\n    columnNumber: 5\n  }, this);\n};\n_s(MealContentsChart, \"8RlG1QM/Poi48N4B7gaD+VLTVGc=\", false, function () {\n  return [usePatientData];\n});\n_c5 = MealContentsChart;\nexport default MealContentsChart;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"XAxis\");\n$RefreshReg$(_c2, \"YAxis\");\n$RefreshReg$(_c3, \"MealCell\");\n$RefreshReg$(_c4, \"MealGrid\");\n$RefreshReg$(_c5, \"MealContentsChart\");","map":{"version":3,"names":["React","useState","useMemo","usePatientData","ChartContainer","Legend","jsxDEV","_jsxDEV","DAYS_OF_WEEK","MEAL_TYPES","FOOD_CATEGORIES","SUGAR_CATEGORIES","DEFAULT_WEEK","Date","CATEGORY_EMOJIS","SUGAR_EMOJIS","getChartConfig","isExpanded","width","height","padding","top","right","bottom","left","dayWidth","mealHeight","fontSize","dayLabel","dateLabel","mealLabel","timeLabel","getWeekStart","date","d","day","getDay","diff","getDate","setDate","formatDayLabel","toLocaleDateString","weekday","formatDateLabel","month","getMealTime","data","mealType","timeKey","getMealData","mealData","forEach","category","key","sugarKey","XAxis","config","weekDays","className","children","map","dayIndex","x","y","textAnchor","fill","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","x1","y1","x2","y2","_c","YAxis","mealTimes","meal","mealIndex","_c2","MealCell","mealTime","cellWidth","cellHeight","categoriesPerRow","categoryWidth","categoryHeight","stroke","strokeWidth","index","row","Math","floor","col","categoryX","categoryY","hasCategory","cx","cy","r","opacity","dominantBaseline","style","fontFamily","_c3","MealGrid","patientData","length","dayData","find","dataDate","toDateString","_c4","MealContentsChart","patientId","onExpand","isPhysicianView","_s","selectedWeek","setSelectedWeek","loading","error","weekStart","Array","from","_","i","handlePrevWeek","prev","handleNextWeek","startOfWeek","endOfWeek","formatDateRange","start","end","startStr","endStr","weekSummary","weekData","filter","categoryStats","sugarStats","s","sugar","totalMealsLogged","daysWithMeals","Set","add","hasAnyFood","some","mostCommonFood","Object","entries","sort","a","b","totalSugarMeals","values","reduce","sum","count","sugarPercentage","toFixed","size","mostCommonFoodCount","title","icon","isLoading","noData","onPrev","onNext","navigationLabel","items","label","color","viewBox","slice","cat","join","_c5","$RefreshReg$"],"sources":["C:/Users/Matteo/Working_Folder/a. MCC Thesis Local/MCC_digital_health_data_visualizations/src/components/patient_charts/MealContentsChart.js"],"sourcesContent":["import React, { useState, useMemo } from 'react';\nimport usePatientData from '../../hooks/usePatientData';\nimport ChartContainer from '../ChartContainer';\nimport Legend from '../Legend';\nimport './MealContentsChart.css';\nimport '../ChartStyles.css';\n\n// --- Constants ---\nconst DAYS_OF_WEEK = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\nconst MEAL_TYPES = ['Breakfast', 'Lunch', 'Dinner'];\nconst FOOD_CATEGORIES = ['Protein', 'Carbohydrates', 'Vegetables', 'Fruit', 'Alcohol'];\nconst SUGAR_CATEGORIES = ['', '1-20g', '20-40g', '40-60g', '60g+'];\nconst DEFAULT_WEEK = new Date(2025, 4, 1);\n\n// Emoji mappings for food categories\nconst CATEGORY_EMOJIS = {\n  'Protein': '🥩',\n  'Carbohydrates': '🍞',\n  'Vegetables': '🥦',\n  'Fruit': '🍎',\n  'Alcohol': '🍷'\n};\n\nconst SUGAR_EMOJIS = {\n  '': '',              // No sugar\n  '1-20g': '🍭',       // Lollipop\n  '20-40g': '🍫',      // Chocolate bar\n  '40-60g': '🍩',      // Donut\n  '60g+': '🎂'         // Cake\n};\n\nconst getChartConfig = (isExpanded) => ({\n  width: isExpanded ? 700 : 500,\n  height: isExpanded ? 400 : 300,\n  padding: { top: 40, right: 30, bottom: 80, left: 100 },\n  dayWidth: isExpanded ? 85 : 60,\n  mealHeight: isExpanded ? 80 : 60,\n  fontSize: {\n    dayLabel: isExpanded ? 14 : 12,\n    dateLabel: isExpanded ? 12 : 10,\n    mealLabel: isExpanded ? 10 : 8,\n    timeLabel: isExpanded ? 8 : 7,\n  },\n});\n\n// --- Helper Functions ---\nconst getWeekStart = (date) => {\n  const d = new Date(date);\n  const day = d.getDay();\n  const diff = d.getDate() - day;\n  return new Date(d.setDate(diff));\n};\n\nconst formatDayLabel = (date) => date.toLocaleDateString('en-US', { weekday: 'short' });\nconst formatDateLabel = (date) => date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\n\nconst getMealTime = (data, mealType) => {\n  const timeKey = `${mealType}_Time`;\n  return data[timeKey] || '';\n};\n\nconst getMealData = (data, mealType) => {\n  const mealData = {};\n  FOOD_CATEGORIES.forEach(category => {\n    const key = `${mealType}_${category}`;\n    mealData[category] = data[key] === 1 || data[key] === '1';\n  });\n  \n  const sugarKey = `${mealType}_Added_Sugar`;\n  mealData['Added Sugar'] = data[sugarKey] || '';\n  \n  return mealData;\n};\n\n// --- Chart Sub-components ---\n\nconst XAxis = ({ config, weekDays }) => (\n  <g className=\"x-axis\">\n    {weekDays.map((day, dayIndex) => {\n      const x = config.padding.left + dayIndex * config.dayWidth + config.dayWidth / 2;\n      return (\n        <g key={dayIndex}>\n          <text\n            x={x}\n            y={config.height - config.padding.bottom + 30}\n            fontSize={config.fontSize.dayLabel}\n            textAnchor=\"middle\"\n            fill=\"#333\"\n            fontWeight=\"600\"\n          >\n            {DAYS_OF_WEEK[day.getDay()]}\n          </text>\n          <text\n            x={x}\n            y={config.height - config.padding.bottom + 45}\n            fontSize={config.fontSize.dateLabel}\n            textAnchor=\"middle\"\n            fill=\"#666\"\n          >\n            {day.getDate()}\n          </text>\n          <line\n            className=\"chart-grid-line-vertical\"\n            x1={config.padding.left + dayIndex * config.dayWidth}\n            y1={config.padding.top}\n            x2={config.padding.left + dayIndex * config.dayWidth}\n            y2={config.height - config.padding.bottom}\n          />\n        </g>\n      );\n    })}\n    <line\n      className=\"chart-grid-line-vertical\"\n      x1={config.padding.left + 7 * config.dayWidth}\n      y1={config.padding.top}\n      x2={config.padding.left + 7 * config.dayWidth}\n      y2={config.height - config.padding.bottom}\n    />\n  </g>\n);\n\nconst YAxis = ({ config }) => {\n  const mealTimes = {\n    'Breakfast': '6-10am',\n    'Lunch': '11-2pm', \n    'Dinner': '5-9pm'\n  };\n\n  return (\n    <g className=\"y-axis\">\n      {MEAL_TYPES.map((meal, mealIndex) => {\n        const y = config.padding.top + mealIndex * config.mealHeight + config.mealHeight / 2;\n        return (\n          <g key={meal}>\n            <text\n              x={config.padding.left - 25}\n              y={y - 5}\n              fontSize={config.fontSize.mealLabel}\n              textAnchor=\"end\"\n              fill=\"#333\"\n              fontWeight=\"600\"\n            >\n              {meal}\n            </text>\n            <text\n              x={config.padding.left - 25}\n              y={y + 10}\n              fontSize={config.fontSize.timeLabel}\n              textAnchor=\"end\"\n              fill=\"#666\"\n            >\n              {mealTimes[meal]}\n            </text>\n            <line\n              className=\"chart-grid-line-horizontal\"\n              x1={config.padding.left}\n              y1={config.padding.top + mealIndex * config.mealHeight}\n              x2={config.padding.left + 7 * config.dayWidth}\n              y2={config.padding.top + mealIndex * config.mealHeight}\n            />\n          </g>\n        );\n      })}\n      <line\n        className=\"chart-grid-line-horizontal\"\n        x1={config.padding.left}\n        y1={config.padding.top + 3 * config.mealHeight}\n        x2={config.padding.left + 7 * config.dayWidth}\n        y2={config.padding.top + 3 * config.mealHeight}\n      />\n    </g>\n  );\n};\n\nconst MealCell = ({ config, dayIndex, mealIndex, mealData, mealTime }) => {\n  const x = config.padding.left + dayIndex * config.dayWidth + 5;\n  const y = config.padding.top + mealIndex * config.mealHeight + 5;\n  const cellWidth = config.dayWidth - 10;\n  const cellHeight = config.mealHeight - 10;\n  \n  // Calculate grid layout for food categories (2x3 grid)\n  const categoriesPerRow = 3;\n  const categoryWidth = cellWidth / categoriesPerRow;\n  const categoryHeight = (cellHeight - 20) / 2; // Reserve space for time and sugar\n  \n  return (\n    <g className=\"meal-cell\">\n      {/* Background */}\n      <rect\n        x={x}\n        y={y}\n        width={cellWidth}\n        height={cellHeight}\n        fill=\"#f9f9f9\"\n        stroke=\"#ddd\"\n        strokeWidth=\"1\"\n      />\n      \n      {/* Meal time */}\n      <text\n        x={x + cellWidth / 2}\n        y={y + 12}\n        fontSize={config.fontSize.timeLabel}\n        textAnchor=\"middle\"\n        fill=\"#666\"\n      >\n        {mealTime}\n      </text>\n      \n      {/* Food category emojis */}\n      {FOOD_CATEGORIES.map((category, index) => {\n        const row = Math.floor(index / categoriesPerRow);\n        const col = index % categoriesPerRow;\n        const categoryX = x + col * categoryWidth + categoryWidth / 2;\n        const categoryY = y + 20 + row * categoryHeight + categoryHeight / 2;\n        const hasCategory = mealData[category];\n        \n        return (\n          <g key={category}>\n            {/* Background circle for visibility */}\n            <circle\n              cx={categoryX}\n              cy={categoryY}\n              r=\"12\"\n              fill={hasCategory ? \"#f0f8ff\" : \"#f5f5f5\"}\n              stroke=\"#ddd\"\n              strokeWidth=\"1\"\n              opacity={hasCategory ? 1 : 0.3}\n            />\n            {/* Emoji */}\n            {hasCategory && (\n              <text\n                x={categoryX}\n                y={categoryY + 2}\n                fontSize=\"12\"\n                textAnchor=\"middle\"\n                dominantBaseline=\"central\"\n                style={{ fontFamily: 'Apple Color Emoji, Segoe UI Emoji, Noto Color Emoji, sans-serif' }}\n              >\n                {CATEGORY_EMOJIS[category]}\n              </text>\n            )}\n          </g>\n        );\n      })}\n      \n      {/* Added sugar emoji */}\n      {mealData['Added Sugar'] && SUGAR_EMOJIS[mealData['Added Sugar']] && (\n        <text\n          x={x + cellWidth / 2}\n          y={y + cellHeight - 8}\n          fontSize=\"12\"\n          textAnchor=\"middle\"\n          dominantBaseline=\"central\"\n          style={{ fontFamily: 'Apple Color Emoji, Segoe UI Emoji, Noto Color Emoji, sans-serif' }}\n        >\n          {SUGAR_EMOJIS[mealData['Added Sugar']]}\n        </text>\n      )}\n    </g>\n  );\n};\n\nconst MealGrid = ({ config, weekDays, patientData }) => {\n  if (!patientData || patientData.length === 0) {\n    return null;\n  }\n\n  return (\n    <g className=\"meal-grid\">\n      {weekDays.map((day, dayIndex) => {\n        const dayData = patientData.find(d => {\n          const dataDate = new Date(d.Date);\n          return dataDate.toDateString() === day.toDateString();\n        });\n\n        if (!dayData) return null;\n\n        return MEAL_TYPES.map((meal, mealIndex) => {\n          const mealData = getMealData(dayData, meal);\n          const mealTime = getMealTime(dayData, meal);\n          \n          return (\n            <MealCell\n              key={`${dayIndex}-${mealIndex}`}\n              config={config}\n              dayIndex={dayIndex}\n              mealIndex={mealIndex}\n              mealData={mealData}\n              mealTime={mealTime}\n            />\n          );\n        });\n      })}\n    </g>\n  );\n};\n\n\n// --- Main Component ---\nconst MealContentsChart = ({ patientId = 'Patient_001', isExpanded, onExpand, isPhysicianView = false }) => {\n  const [selectedWeek, setSelectedWeek] = useState(DEFAULT_WEEK);\n  const { mealData: patientData, loading, error } = usePatientData(patientId);\n\n  const config = getChartConfig(isExpanded);\n  const weekStart = getWeekStart(selectedWeek);\n  const weekDays = Array.from({ length: 7 }, (_, i) => {\n    const day = new Date(weekStart);\n    day.setDate(weekStart.getDate() + i);\n    return day;\n  });\n\n  const handlePrevWeek = () => setSelectedWeek(prev => new Date(new Date(prev).setDate(prev.getDate() - 7)));\n  const handleNextWeek = () => setSelectedWeek(prev => new Date(new Date(prev).setDate(prev.getDate() + 7)));\n\n  const startOfWeek = new Date(weekStart);\n  const endOfWeek = new Date(startOfWeek);\n  endOfWeek.setDate(endOfWeek.getDate() + 6);\n\n  const formatDateRange = (start, end) => {\n    const startStr = start.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\n    const endStr = end.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\n    return `${startStr} to ${endStr}`;\n  };\n\n  // Calculate summary statistics for physician view\n  const weekSummary = useMemo(() => {\n    if (!patientData || patientData.length === 0) return null;\n\n    const weekData = patientData.filter(d => {\n      const dataDate = new Date(d.Date);\n      return dataDate >= startOfWeek && dataDate <= endOfWeek;\n    });\n\n    if (weekData.length === 0) return null;\n\n    // Count food categories across all meals\n    const categoryStats = {};\n    FOOD_CATEGORIES.forEach(category => {\n      categoryStats[category] = 0;\n    });\n\n    // Count sugar levels\n    const sugarStats = {};\n    SUGAR_CATEGORIES.filter(s => s !== '').forEach(sugar => {\n      sugarStats[sugar] = 0;\n    });\n\n    let totalMealsLogged = 0;\n    let daysWithMeals = new Set();\n\n    weekData.forEach(dayData => {\n      daysWithMeals.add(dayData.Date);\n      \n      MEAL_TYPES.forEach(meal => {\n        const mealData = getMealData(dayData, meal);\n        const hasAnyFood = FOOD_CATEGORIES.some(category => mealData[category]);\n        \n        if (hasAnyFood) {\n          totalMealsLogged++;\n          \n          // Count each food category\n          FOOD_CATEGORIES.forEach(category => {\n            if (mealData[category]) {\n              categoryStats[category]++;\n            }\n          });\n\n          // Count sugar levels\n          if (mealData['Added Sugar'] && mealData['Added Sugar'] !== '') {\n            sugarStats[mealData['Added Sugar']]++;\n          }\n        }\n      });\n    });\n\n    // Find most common food category\n    const mostCommonFood = Object.entries(categoryStats)\n      .sort(([,a], [,b]) => b - a)[0];\n\n    // Calculate sugar frequency\n    const totalSugarMeals = Object.values(sugarStats).reduce((sum, count) => sum + count, 0);\n    const sugarPercentage = totalMealsLogged > 0 ? \n      ((totalSugarMeals / totalMealsLogged) * 100).toFixed(0) : 0;\n\n    return {\n      totalMealsLogged,\n      daysWithMeals: daysWithMeals.size,\n      mostCommonFood: mostCommonFood[0],\n      mostCommonFoodCount: mostCommonFood[1],\n      categoryStats,\n      sugarPercentage,\n      totalSugarMeals\n    };\n  }, [patientData, startOfWeek, endOfWeek]);\n\n\n  \n  return (\n    <ChartContainer\n      title=\"Meal Contents\"\n      icon=\"🍽️\"\n      isLoading={loading}\n      error={error}\n      noData={!loading && !error && (!patientData || patientData.length === 0)}\n      isExpanded={isExpanded}\n      onExpand={onExpand}\n      onPrev={handlePrevWeek}\n      onNext={handleNextWeek}\n      navigationLabel={formatDateRange(startOfWeek, endOfWeek)}\n    >\n      <div className=\"meal-contents-chart-container\">\n        <div className=\"meal-contents-legends-wrapper\">\n            <Legend \n              title=\"Food Categories\" \n              items={FOOD_CATEGORIES.map(category => ({\n                label: `${CATEGORY_EMOJIS[category]} ${category}`,\n                color: null\n              }))}\n            />\n            <Legend \n              title=\"Sugar Levels\" \n              items={SUGAR_CATEGORIES.filter(sugar => sugar !== '').map(sugar => ({\n                label: `${SUGAR_EMOJIS[sugar]} ${sugar}`,\n                color: null\n              }))}\n            />\n        </div>\n        <div className={`meal-chart-wrapper ${isExpanded ? 'expanded' : ''}`}>\n          <svg width=\"100%\" height=\"100%\" viewBox={`0 0 ${config.width} ${config.height}`} className=\"meal-chart\">\n            <XAxis config={config} weekDays={weekDays} />\n            <YAxis config={config} />\n            <MealGrid \n              config={config} \n              weekDays={weekDays} \n              patientData={patientData} \n            />\n          </svg>\n        </div>\n\n        {/* Show summary for physician view only */}\n        {isPhysicianView && weekSummary && (\n          <div className=\"meal-summary\">\n            <h4>Week Summary</h4>\n            <div className=\"summary-stats\">\n              <div className=\"stat-item\">\n                <span className=\"stat-label\">Meals Logged:</span>\n                <span className=\"stat-value\">\n                  {weekSummary.totalMealsLogged}/21 possible\n                </span>\n              </div>\n              <div className=\"stat-item\">\n                <span className=\"stat-label\">Days with Meals:</span>\n                <span className=\"stat-value\">\n                  {weekSummary.daysWithMeals}/7 days\n                </span>\n              </div>\n              <div className=\"stat-item\">\n                <span className=\"stat-label\">Most Common Food:</span>\n                <span className=\"stat-value\">\n                  {CATEGORY_EMOJIS[weekSummary.mostCommonFood]} {weekSummary.mostCommonFood} ({weekSummary.mostCommonFoodCount}x)\n                </span>\n              </div>\n              <div className=\"stat-item\">\n                <span className=\"stat-label\">Added Sugar:</span>\n                <span className=\"stat-value\">\n                  {weekSummary.sugarPercentage}% of meals ({weekSummary.totalSugarMeals}/{weekSummary.totalMealsLogged})\n                </span>\n              </div>\n              <div className=\"stat-item\">\n                <span className=\"stat-label\">Food Balance:</span>\n                <span className=\"stat-value\">\n                  {Object.entries(weekSummary.categoryStats)\n                    .sort(([,a], [,b]) => b - a)\n                    .slice(0, 3)\n                    .map(([cat, count]) => `${CATEGORY_EMOJIS[cat]}${count}`)\n                    .join(' ')}\n                </span>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </ChartContainer>\n  );\n};\n\nexport default MealContentsChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}