{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matteo\\\\Working_Folder\\\\a. MCC Thesis Local\\\\MCC_digital_health_data_visualizations\\\\src\\\\components\\\\ui\\\\ChartNavigation.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './ChartNavigation.css';\n\n/**\r\n * Reusable chart navigation component for time period controls\r\n * \r\n * @param {Object} props\r\n * @param {Function} props.onPrevious - Function to call when going to previous period\r\n * @param {Function} props.onNext - Function to call when going to next period\r\n * @param {string} props.currentPeriod - Current period label (e.g., \"May 1 to May 7\")\r\n * @param {string} props.periodType - Type of period ('week', 'month', 'day')\r\n * @param {boolean} props.canGoBack - Whether previous button should be enabled\r\n * @param {boolean} props.canGoForward - Whether next button should be enabled\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChartNavigation({\n  onPrevious,\n  onNext,\n  currentPeriod,\n  periodType = 'week',\n  canGoBack = true,\n  canGoForward = true\n}) {\n  const handleKeyDown = (event, action) => {\n    // Support keyboard navigation\n    if (event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault();\n      action();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-navigation\",\n    role: \"navigation\",\n    \"aria-label\": \"Chart time period navigation\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onPrevious,\n      onKeyDown: e => handleKeyDown(e, onPrevious),\n      disabled: !canGoBack,\n      className: \"nav-button nav-previous\",\n      \"aria-label\": `Go to previous ${periodType}`,\n      title: `Previous ${periodType}`,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"nav-icon\",\n        children: \"\\u2039\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"nav-text\",\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"current-period\",\n      \"aria-live\": \"polite\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"period-label\",\n        children: currentPeriod\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onNext,\n      onKeyDown: e => handleKeyDown(e, onNext),\n      disabled: !canGoForward,\n      className: \"nav-button nav-next\",\n      \"aria-label\": `Go to next ${periodType}`,\n      title: `Next ${periodType}`,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"nav-text\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"nav-icon\",\n        children: \"\\u203A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_c = ChartNavigation;\nChartNavigation.propTypes = {\n  onPrevious: PropTypes.func.isRequired,\n  onNext: PropTypes.func.isRequired,\n  currentPeriod: PropTypes.string.isRequired,\n  periodType: PropTypes.oneOf(['week', 'month', 'day']),\n  canGoBack: PropTypes.bool,\n  canGoForward: PropTypes.bool\n};\nexport default ChartNavigation;\nvar _c;\n$RefreshReg$(_c, \"ChartNavigation\");","map":{"version":3,"names":["React","PropTypes","jsxDEV","_jsxDEV","ChartNavigation","onPrevious","onNext","currentPeriod","periodType","canGoBack","canGoForward","handleKeyDown","event","action","key","preventDefault","className","role","children","onClick","onKeyDown","e","disabled","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","func","isRequired","string","oneOf","bool","$RefreshReg$"],"sources":["C:/Users/Matteo/Working_Folder/a. MCC Thesis Local/MCC_digital_health_data_visualizations/src/components/ui/ChartNavigation.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './ChartNavigation.css';\r\n\r\n/**\r\n * Reusable chart navigation component for time period controls\r\n * \r\n * @param {Object} props\r\n * @param {Function} props.onPrevious - Function to call when going to previous period\r\n * @param {Function} props.onNext - Function to call when going to next period\r\n * @param {string} props.currentPeriod - Current period label (e.g., \"May 1 to May 7\")\r\n * @param {string} props.periodType - Type of period ('week', 'month', 'day')\r\n * @param {boolean} props.canGoBack - Whether previous button should be enabled\r\n * @param {boolean} props.canGoForward - Whether next button should be enabled\r\n */\r\nfunction ChartNavigation({ \r\n  onPrevious, \r\n  onNext, \r\n  currentPeriod,\r\n  periodType = 'week',\r\n  canGoBack = true,\r\n  canGoForward = true\r\n}) {\r\n  \r\n  const handleKeyDown = (event, action) => {\r\n    // Support keyboard navigation\r\n    if (event.key === 'Enter' || event.key === ' ') {\r\n      event.preventDefault();\r\n      action();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chart-navigation\" role=\"navigation\" aria-label=\"Chart time period navigation\">\r\n      <button \r\n        onClick={onPrevious}\r\n        onKeyDown={(e) => handleKeyDown(e, onPrevious)}\r\n        disabled={!canGoBack}\r\n        className=\"nav-button nav-previous\"\r\n        aria-label={`Go to previous ${periodType}`}\r\n        title={`Previous ${periodType}`}\r\n      >\r\n        <span className=\"nav-icon\">‹</span>\r\n        <span className=\"nav-text\">Previous</span>\r\n      </button>\r\n      \r\n      <div className=\"current-period\" aria-live=\"polite\">\r\n        <span className=\"period-label\">{currentPeriod}</span>\r\n      </div>\r\n      \r\n      <button \r\n        onClick={onNext}\r\n        onKeyDown={(e) => handleKeyDown(e, onNext)}\r\n        disabled={!canGoForward}\r\n        className=\"nav-button nav-next\"\r\n        aria-label={`Go to next ${periodType}`}\r\n        title={`Next ${periodType}`}\r\n      >\r\n        <span className=\"nav-text\">Next</span>\r\n        <span className=\"nav-icon\">›</span>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nChartNavigation.propTypes = {\r\n  onPrevious: PropTypes.func.isRequired,\r\n  onNext: PropTypes.func.isRequired,\r\n  currentPeriod: PropTypes.string.isRequired,\r\n  periodType: PropTypes.oneOf(['week', 'month', 'day']),\r\n  canGoBack: PropTypes.bool,\r\n  canGoForward: PropTypes.bool\r\n};\r\n\r\nexport default ChartNavigation;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}