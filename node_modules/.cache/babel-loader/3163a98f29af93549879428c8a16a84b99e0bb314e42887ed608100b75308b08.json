{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matteo\\\\Working_Folder\\\\a. MCC Thesis Local\\\\MCC_digital_health_data_visualizations\\\\src\\\\components\\\\ui\\\\LoadingSpinner.js\";\n/**\r\n * LoadingSpinner.js - Loading State Indicator Component\r\n * \r\n * A customizable loading spinner component that provides:\r\n * - Visual feedback during data loading operations\r\n * - Multiple size variants (small, medium, large)\r\n * - Customizable loading messages\r\n * - Consistent loading state presentation\r\n * - PropTypes validation for component props\r\n * \r\n * Used throughout the application to indicate when data is being fetched or processed.\r\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './LoadingSpinner.css';\n\n/**\r\n * Loading spinner component with customizable message and size\r\n * \r\n * @param {Object} props\r\n * @param {string} props.message - Loading message to display\r\n * @param {string} props.size - Size variant: 'small', 'medium', 'large'\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoadingSpinner({\n  message = 'Loading...',\n  size = 'medium'\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `loading-container ${size}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-spinner\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_c = LoadingSpinner;\nLoadingSpinner.propTypes = {\n  message: PropTypes.string,\n  size: PropTypes.oneOf(['small', 'medium', 'large'])\n};\nexport default LoadingSpinner;\nvar _c;\n$RefreshReg$(_c, \"LoadingSpinner\");","map":{"version":3,"names":["React","PropTypes","jsxDEV","_jsxDEV","LoadingSpinner","message","size","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","string","oneOf","$RefreshReg$"],"sources":["C:/Users/Matteo/Working_Folder/a. MCC Thesis Local/MCC_digital_health_data_visualizations/src/components/ui/LoadingSpinner.js"],"sourcesContent":["/**\r\n * LoadingSpinner.js - Loading State Indicator Component\r\n * \r\n * A customizable loading spinner component that provides:\r\n * - Visual feedback during data loading operations\r\n * - Multiple size variants (small, medium, large)\r\n * - Customizable loading messages\r\n * - Consistent loading state presentation\r\n * - PropTypes validation for component props\r\n * \r\n * Used throughout the application to indicate when data is being fetched or processed.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './LoadingSpinner.css';\r\n\r\n/**\r\n * Loading spinner component with customizable message and size\r\n * \r\n * @param {Object} props\r\n * @param {string} props.message - Loading message to display\r\n * @param {string} props.size - Size variant: 'small', 'medium', 'large'\r\n */\r\nfunction LoadingSpinner({ \r\n  message = 'Loading...', \r\n  size = 'medium' \r\n}) {\r\n  return (\r\n    <div className={`loading-container ${size}`}>\r\n      <div className=\"loading-spinner\">\r\n        <div className=\"spinner-circle\"></div>\r\n      </div>\r\n      <p className=\"loading-message\">{message}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nLoadingSpinner.propTypes = {\r\n  message: PropTypes.string,\r\n  size: PropTypes.oneOf(['small', 'medium', 'large'])\r\n};\r\n\r\nexport default LoadingSpinner;\r\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAO,sBAAsB;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AANA,SAAAC,MAAA,IAAAC,OAAA;AAOA,SAASC,cAAcA,CAAC;EACtBC,OAAO,GAAG,YAAY;EACtBC,IAAI,GAAG;AACT,CAAC,EAAE;EACD,oBACEH,OAAA;IAAKI,SAAS,EAAE,qBAAqBD,IAAI,EAAG;IAAAE,QAAA,gBAC1CL,OAAA;MAAKI,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAC9BL,OAAA;QAAKI,SAAS,EAAC;MAAgB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eACNT,OAAA;MAAGI,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAAEH;IAAO;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEV;AAACC,EAAA,GAZQT,cAAc;AAcvBA,cAAc,CAACU,SAAS,GAAG;EACzBT,OAAO,EAAEJ,SAAS,CAACc,MAAM;EACzBT,IAAI,EAAEL,SAAS,CAACe,KAAK,CAAC,CAAC,OAAO,EAAE,QAAQ,EAAE,OAAO,CAAC;AACpD,CAAC;AAED,eAAeZ,cAAc;AAAC,IAAAS,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}