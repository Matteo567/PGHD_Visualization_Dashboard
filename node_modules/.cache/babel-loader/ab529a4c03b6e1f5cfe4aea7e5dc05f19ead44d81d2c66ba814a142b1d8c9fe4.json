{"ast":null,"code":"import _objectSpread from\"C:/Users/Matteo/Working_Folder/a. MCC Thesis Local/MCC_digital_health_data_visualizations/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";/**\n * DashboardGrid.js - Responsive Chart Grid Layout Component\n * \n * This component provides a flexible grid layout system for organizing charts:\n * - Renders all available visualizations in a responsive grid\n * - Handles expanded/collapsed chart states\n * - Integrates chart navigation controls\n * - Provides placeholder states for empty data scenarios\n * \n * Acts as the main container for organizing multiple health metric visualizations.\n */import React from'react';import VisualizationWrapper from'./VisualizationWrapper';import Placeholder from'./ui/Placeholder';import'./DashboardGrid.css';/**\n * Shared component for rendering dashboard grids with visualization wrappers\n * Now shows all available visualizations instead of using dropdown selectors\n */import{jsx as _jsx}from\"react/jsx-runtime\";const DashboardGrid=_ref=>{let{viewMode,// 'patient' or 'physician'\nselectedVisualizations,availableVisualizations,allVisualizations,onVisualizationChange,onExpand,expandedItem,renderVisualization,disabled=false,placeholderText=\"No data available for this patient.\",// New props for physician summary functionality\nshowSummaries=false,summaryTexts={},onSummaryChange=null,// Navigation props\nchartNavigation={}}=_ref;// Configuration for different view modes\nconst gridConfig={patient:{className:'dashboard-grid',chartClassNames:['visualization-box']},physician:{className:'physician-charts-grid',chartClassNames:['physician-chart-container']}};const config=gridConfig[viewMode];// Get all available visualization types\nconst availableVizTypes=Object.keys(availableVisualizations);// If there's an expanded item, show only that\nif(expandedItem){const selectedViz=selectedVisualizations[expandedItem];const navigation=chartNavigation[selectedViz];const wrapperProps={id:expandedItem,className:\"\".concat(config.chartClassNames[0],\" expanded-view\"),selectedViz:selectedViz,availableVisualizations:availableVisualizations,allVisualizations:allVisualizations,onVisualizationChange:onVisualizationChange,onExpand:onExpand,isExpanded:true,renderVisualization:renderVisualization,disabled:disabled,placeholderText:placeholderText,onPrev:navigation===null||navigation===void 0?void 0:navigation.goToPrevious,onNext:navigation===null||navigation===void 0?void 0:navigation.goToNext,navigationLabel:(navigation===null||navigation===void 0?void 0:navigation.navigationLabel)||'Week'};return/*#__PURE__*/_jsx(VisualizationWrapper,_objectSpread({},wrapperProps));}// If no visualizations available, show placeholder\nif(availableVizTypes.length===0){return/*#__PURE__*/_jsx(\"div\",{className:config.className,children:/*#__PURE__*/_jsx(Placeholder,{message:placeholderText,type:\"no-data\"})});}// Render all available visualizations\nreturn/*#__PURE__*/_jsx(\"div\",{className:config.className,children:availableVizTypes.map((vizType,index)=>{const chartId=\"\".concat(viewMode,\"-chart-\").concat(index);const navigation=chartNavigation[vizType];const wrapperProps={key:chartId,id:chartId,className:\"\".concat(config.chartClassNames[0],\" \").concat(config.chartClassNames[0],\"-\").concat(index+1),selectedViz:vizType,availableVisualizations:availableVisualizations,allVisualizations:allVisualizations,onVisualizationChange:onVisualizationChange,onExpand:onExpand,isExpanded:expandedItem===chartId,renderVisualization:renderVisualization,disabled:disabled,placeholderText:placeholderText,onPrev:navigation===null||navigation===void 0?void 0:navigation.goToPrevious,onNext:navigation===null||navigation===void 0?void 0:navigation.goToNext,navigationLabel:(navigation===null||navigation===void 0?void 0:navigation.navigationLabel)||'Week'};return/*#__PURE__*/_jsx(VisualizationWrapper,_objectSpread({},wrapperProps));})});};export default DashboardGrid;","map":{"version":3,"names":["React","VisualizationWrapper","Placeholder","jsx","_jsx","DashboardGrid","_ref","viewMode","selectedVisualizations","availableVisualizations","allVisualizations","onVisualizationChange","onExpand","expandedItem","renderVisualization","disabled","placeholderText","showSummaries","summaryTexts","onSummaryChange","chartNavigation","gridConfig","patient","className","chartClassNames","physician","config","availableVizTypes","Object","keys","selectedViz","navigation","wrapperProps","id","concat","isExpanded","onPrev","goToPrevious","onNext","goToNext","navigationLabel","_objectSpread","length","children","message","type","map","vizType","index","chartId","key"],"sources":["C:/Users/Matteo/Working_Folder/a. MCC Thesis Local/MCC_digital_health_data_visualizations/src/components/DashboardGrid.js"],"sourcesContent":["/**\n * DashboardGrid.js - Responsive Chart Grid Layout Component\n * \n * This component provides a flexible grid layout system for organizing charts:\n * - Renders all available visualizations in a responsive grid\n * - Handles expanded/collapsed chart states\n * - Integrates chart navigation controls\n * - Provides placeholder states for empty data scenarios\n * \n * Acts as the main container for organizing multiple health metric visualizations.\n */\n\nimport React from 'react';\nimport VisualizationWrapper from './VisualizationWrapper';\nimport Placeholder from './ui/Placeholder';\nimport './DashboardGrid.css';\n\n/**\n * Shared component for rendering dashboard grids with visualization wrappers\n * Now shows all available visualizations instead of using dropdown selectors\n */\nconst DashboardGrid = ({\n  viewMode, // 'patient' or 'physician'\n  selectedVisualizations,\n  availableVisualizations,\n  allVisualizations,\n  onVisualizationChange,\n  onExpand,\n  expandedItem,\n  renderVisualization,\n  disabled = false,\n  placeholderText = \"No data available for this patient.\",\n  // New props for physician summary functionality\n  showSummaries = false,\n  summaryTexts = {},\n  onSummaryChange = null,\n  // Navigation props\n  chartNavigation = {}\n}) => {\n  // Configuration for different view modes\n  const gridConfig = {\n    patient: {\n      className: 'dashboard-grid',\n      chartClassNames: ['visualization-box']\n    },\n    physician: {\n      className: 'physician-charts-grid',\n      chartClassNames: ['physician-chart-container']\n    }\n  };\n\n  const config = gridConfig[viewMode];\n\n  // Get all available visualization types\n  const availableVizTypes = Object.keys(availableVisualizations);\n\n  // If there's an expanded item, show only that\n  if (expandedItem) {\n    const selectedViz = selectedVisualizations[expandedItem];\n    const navigation = chartNavigation[selectedViz];\n    \n    const wrapperProps = {\n      id: expandedItem,\n      className: `${config.chartClassNames[0]} expanded-view`,\n      selectedViz: selectedViz,\n      availableVisualizations: availableVisualizations,\n      allVisualizations: allVisualizations,\n      onVisualizationChange: onVisualizationChange,\n      onExpand: onExpand,\n      isExpanded: true,\n      renderVisualization: renderVisualization,\n      disabled: disabled,\n      placeholderText: placeholderText,\n      onPrev: navigation?.goToPrevious,\n      onNext: navigation?.goToNext,\n      navigationLabel: navigation?.navigationLabel || 'Week'\n    };\n\n    return <VisualizationWrapper {...wrapperProps} />;\n  }\n\n  // If no visualizations available, show placeholder\n  if (availableVizTypes.length === 0) {\n    return (\n      <div className={config.className}>\n        <Placeholder message={placeholderText} type=\"no-data\" />\n      </div>\n    );\n  }\n\n  // Render all available visualizations\n  return (\n    <div className={config.className}>\n      {availableVizTypes.map((vizType, index) => {\n        const chartId = `${viewMode}-chart-${index}`;\n        \n        const navigation = chartNavigation[vizType];\n        const wrapperProps = {\n          key: chartId,\n          id: chartId,\n          className: `${config.chartClassNames[0]} ${config.chartClassNames[0]}-${index + 1}`,\n          selectedViz: vizType,\n          availableVisualizations: availableVisualizations,\n          allVisualizations: allVisualizations,\n          onVisualizationChange: onVisualizationChange,\n          onExpand: onExpand,\n          isExpanded: expandedItem === chartId,\n          renderVisualization: renderVisualization,\n          disabled: disabled,\n          placeholderText: placeholderText,\n          onPrev: navigation?.goToPrevious,\n          onNext: navigation?.goToNext,\n          navigationLabel: navigation?.navigationLabel || 'Week'\n        };\n\n        return <VisualizationWrapper {...wrapperProps} />;\n      })}\n    </div>\n  );\n};\n\nexport default DashboardGrid;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}