{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matteo\\\\Working_Folder\\\\a. MCC Thesis Local\\\\MCC_digital_health_data_visualizations\\\\src\\\\components\\\\patient_charts\\\\SleepChart.js\",\n  _s = $RefreshSig$();\n/*\r\n SleepChart.js - Sleep Pattern Monitoring Visualization\r\n \r\n This component provides comprehensive sleep tracking:\r\n - Sleep duration and quality rating visualization\r\n - Weekly sleep pattern analysis\r\n - Color-coded sleep quality indicators\r\n - Interactive tooltips with sleep details\r\n - Navigation controls for time periods\r\n - Integration with patient data and chart navigation\r\n \r\n Architecture:\r\n - Uses custom SVG for bar chart visualization\r\n - Implements sleep quality categorization system\r\n - Provides color-coded quality indicators for easy interpretation\r\n - Supports expandable views\r\n - Implements time-based navigation and data filtering\r\n \r\n Visualizatoin Features:\r\n - Bar chart showing daily sleep duration\r\n - Color-coded quality indicators (Very good, Fairly good, Fairly bad, Very bad)\r\n - Interactive tooltips with detailed sleep information\r\n - Design adapting to container size\r\n - Dynamic Y-axis scaling based on sleep duration range\r\n \r\n Sleep Quality Categories:\r\n - Very good: Optimal sleep quality (green)\r\n - Fairly good: Good sleep quality (blue)\r\n - Fairly bad: Poor sleep quality (light green)\r\n - Very bad: Very poor sleep quality (dark green)\r\n \r\n Clinical Features:\r\n - Sleep duration tracking with recommended ranges\r\n - Quality assessment based on subjective ratings\r\n - Sleep consistency analysis\r\n - Summary statistics for physician view\r\n - Trend analysis over time periods\r\n \r\n Component Structure:\r\n - Chart Container: Main SVG container with sizing\r\n - Y-Axis: Duration scale with hour-based labeling\r\n - X-Axis: Day-of-week labels with date information\r\n - Data Bars: Sleep duration bars with quality color coding\r\n - Legend: Sleep quality explanations\r\n - Tooltip: Detailed sleep information on hover\r\n \r\n Essential for sleep hygiene monitoring and sleep disorder assessment.\r\n */\n\nimport React, { useState, useMemo, useRef } from 'react';\nimport usePatientData from '../../hooks/usePatientData';\nimport useChartNavigation from '../../hooks/useChartNavigation';\nimport Legend from '../Legend';\nimport './SleepChart.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SleepChart = ({\n  patientId,\n  isExpanded,\n  onExpand,\n  viewMode = 'patient',\n  navigation\n}) => {\n  _s();\n  const {\n    sleepData,\n    loading,\n    error\n  } = usePatientData(patientId, 'sleep');\n\n  // Use navigation from parent or fallback to internal navigation\n  const useInternalNavigation = !navigation;\n  const internalNavigation = useChartNavigation('sleep');\n  const nav = navigation || internalNavigation;\n\n  // Handle loading and error states\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sleep-chart-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading sleep data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 62\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sleep-chart-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: [\"Error loading sleep data: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 60\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 21\n  }, this);\n  if (!sleepData || sleepData.length === 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sleep-chart-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-data\",\n      children: \"No sleep data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 91\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 52\n  }, this);\n  const {\n    start: startOfWeek,\n    end: endOfWeek\n  } = nav.getDateRange();\n  const weekData = sleepData.filter(d => d.date >= startOfWeek && d.date <= endOfWeek);\n\n  // Get 3-month data\n  const {\n    start: startOfThreeMonths,\n    end: endOfThreeMonths\n  } = nav.getThreeMonthRange();\n  const threeMonthData = sleepData.filter(d => d.date >= startOfThreeMonths && d.date <= endOfThreeMonths);\n  const formatDateRange = data => {\n    if (!data || data.length === 0) return '';\n    const startDate = new Date(data[0].date).toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric'\n    });\n    const endDate = new Date(data[data.length - 1].date).toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric'\n    });\n    return `${startDate} to ${endDate}`;\n  };\n  const qualityLevels = {\n    'Very good': 'var(--chart-color-sleep-very-good)',\n    'Fairly good': 'var(--chart-color-sleep-fairly-good)',\n    'Fairly bad': 'var(--chart-color-sleep-fairly-bad)',\n    'Very bad': 'var(--chart-color-sleep-very-bad)'\n  };\n  const getQualityColor = quality => qualityLevels[quality] || '#D3D3D3';\n  const legendItems = Object.entries(qualityLevels).map(([label, color]) => ({\n    label,\n    color\n  }));\n\n  // Calculate summary statistics for physician view\n  const weekSummary = useMemo(() => {\n    if (!weekData || weekData.length === 0) return null;\n    const totalHours = weekData.reduce((sum, day) => sum + day.hours, 0);\n    const avgHours = (totalHours / weekData.length).toFixed(1);\n\n    // Count quality levels\n    const qualityCounts = {};\n    Object.keys(qualityLevels).forEach(quality => {\n      qualityCounts[quality] = 0;\n    });\n    weekData.forEach(day => {\n      if (qualityCounts[day.quality] !== undefined) {\n        qualityCounts[day.quality]++;\n      }\n    });\n\n    // Find most common quality\n    const mostCommonQuality = Object.entries(qualityCounts).sort(([, a], [, b]) => b - a)[0];\n\n    // Calculate sleep consistency (how much variation in sleep hours)\n    const hourVariations = weekData.map(day => Math.abs(day.hours - parseFloat(avgHours)));\n    const avgVariation = (hourVariations.reduce((sum, v) => sum + v, 0) / hourVariations.length).toFixed(1);\n\n    // Sleep quality score (Very good=4, Fairly good=3, Fairly bad=2, Very bad=1)\n    const qualityScores = {\n      'Very good': 4,\n      'Fairly good': 3,\n      'Fairly bad': 2,\n      'Very bad': 1\n    };\n    const avgQualityScore = weekData.reduce((sum, day) => sum + (qualityScores[day.quality] || 0), 0) / weekData.length;\n    const qualityAssessment = avgQualityScore >= 3.5 ? 'Good' : avgQualityScore >= 2.5 ? 'Fair' : 'Poor';\n\n    // Count nights with adequate sleep (7+ hours)\n    const adequateSleepNights = weekData.filter(day => day.hours >= 7).length;\n    return {\n      totalHours: totalHours.toFixed(1),\n      avgHours,\n      mostCommonQuality: mostCommonQuality[0],\n      mostCommonQualityCount: mostCommonQuality[1],\n      avgVariation,\n      qualityAssessment,\n      adequateSleepNights,\n      daysTracked: weekData.length\n    };\n  }, [weekData]);\n\n  // Calculate 3-month summary statistics for physician view\n  const threeMonthSummary = useMemo(() => {\n    if (!threeMonthData || threeMonthData.length === 0) return null;\n    const totalHours = threeMonthData.reduce((sum, day) => sum + day.hours, 0);\n    const avgHours = (totalHours / threeMonthData.length).toFixed(1);\n\n    // Count quality levels\n    const qualityCounts = {};\n    Object.keys(qualityLevels).forEach(quality => {\n      qualityCounts[quality] = 0;\n    });\n    threeMonthData.forEach(day => {\n      if (qualityCounts[day.quality] !== undefined) {\n        qualityCounts[day.quality]++;\n      }\n    });\n\n    // Find most common quality\n    const mostCommonQuality = Object.entries(qualityCounts).sort(([, a], [, b]) => b - a)[0];\n\n    // Calculate sleep consistency (how much variation in sleep hours)\n    const hourVariations = threeMonthData.map(day => Math.abs(day.hours - parseFloat(avgHours)));\n    const avgVariation = (hourVariations.reduce((sum, v) => sum + v, 0) / hourVariations.length).toFixed(1);\n    return {\n      totalHours: totalHours.toFixed(1),\n      avgHours,\n      mostCommonQuality: mostCommonQuality[0],\n      mostCommonQualityCount: mostCommonQuality[1],\n      avgVariation,\n      daysTracked: threeMonthData.length\n    };\n  }, [threeMonthData]);\n\n  // Function to get bar color based on sleep hours\n  const getBarColor = hours => {\n    if (hours < 4) return '#dc3545'; // Red for < 4 hours\n    if (hours >= 4 && hours < 6) return '#fd7e14'; // Orange for 4-6 hours\n    return '#28a745'; // Green for 6+ hours\n  };\n\n  // Function to get bar height percentage (max 10 hours for scaling)\n  const getBarHeight = hours => {\n    return Math.min(hours / 10 * 100, 100);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sleep-chart-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"chart-title\",\n      children: \"Sleep Quality & Duration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"chart-subtitle\",\n      children: nav.getCurrentMonthYear()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }, this), viewMode === 'physician' ?\n    /*#__PURE__*/\n    // Bar chart for physician view\n    _jsxDEV(\"div\", {\n      className: \"sleep-bar-chart\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bar-chart-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"y-axis-labels\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"y-label\",\n            children: \"10h\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"y-label\",\n            children: \"8h\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"y-label\",\n            children: \"6h\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"y-label\",\n            children: \"4h\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"y-label\",\n            children: \"2h\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"y-label\",\n            children: \"0h\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bars-container\",\n          children: weekData.map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bar-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bar-container\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sleep-bar\",\n                style: {\n                  height: `${getBarHeight(day.hours)}%`,\n                  backgroundColor: getBarColor(day.hours)\n                },\n                title: `${day.hours.toFixed(1)} hours - ${day.quality}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bar-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"day-label\",\n                children: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'][new Date(day.date).getDay()]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"date-label\",\n                children: new Date(day.date).getDate()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"hours-label\",\n                children: [day.hours.toFixed(1), \"h\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 21\n            }, this)]\n          }, `bar-${index}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bar-chart-legend\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-color\",\n            style: {\n              backgroundColor: '#dc3545'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Insufficient (<4h)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-color\",\n            style: {\n              backgroundColor: '#fd7e14'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Moderate (4-6h)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-color\",\n            style: {\n              backgroundColor: '#28a745'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Good (6h+)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 11\n    }, this) :\n    /*#__PURE__*/\n    // Original bed icons for patient view\n    _jsxDEV(\"div\", {\n      className: \"sleep-chart\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sleep-quality-row\",\n        children: weekData.map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sleep-quality-item\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sleep-quality-indicator\",\n            style: {\n              backgroundColor: getQualityColor(day.quality)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 19\n          }, this)\n        }, `quality-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bed-icons-row\",\n        children: weekData.map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bed-item\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bed-icon-wrapper\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              viewBox: \"0 0 486.5 225.1\",\n              className: \"bed-icon\",\n              children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M471.9,68.9c-8,0-14.5,6.5-14.5,14.5v68.6H26.1l-.6-139.3c0-7-5.8-12.7-12.8-12.7h0C5.7,0,0,5.7,0,12.8v199.6c0,7,5.7,12.8,12.7,12.8s12.8-5.7,12.8-12.8v-37h431.9v35.2c0,8,6.5,14.5,14.5,14.5s14.5-6.5,14.5-14.5v-127.1c0-8-6.5-14.5-14.5-14.5ZM483.7,210.6c0,6.5-5.3,11.8-11.8,11.8s-11.8-5.3-11.8-11.8v-38H22.7v39.7c0,5.5-4.5,10-10,10s-10-4.5-10-10V12.8C2.8,7.3,7.3,2.8,12.7,2.8h0c5.5,0,9.9,4.5,10,9.9l.6,142.1h436.8v-71.4c0-6.5,5.3-11.7,11.8-11.7s11.8,5.3,11.8,11.7v127.1Z\",\n                fill: \"#D2B48C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M29.9,94.2v54.5h425.4v-54.5H29.9ZM452.5,145.9H32.7v-48.9h419.8v48.9Z\",\n                fill: \"#e0e0e0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n                x: \"32.7\",\n                y: \"97\",\n                width: `${day.hours / 10 * 419.8}`,\n                height: \"48.9\",\n                fill: \"#FF4500\",\n                className: \"sleep-fill-rect\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M112.8,46.3h-55.4c-12.1,0-22,9.9-22,22s9.9,22,22,22h55.4c12.1,0,22-9.9,22-22s-9.9-22-22-22ZM112.8,87.5h-55.4c-10.6,0-19.2-8.6-19.2-19.2s8.6-19.2,19.2-19.2h55.4c10.6,0,19.2,8.6,19.2,19.2s-8.6,19.2-19.2,19.2Z\",\n                fill: \"#FFFFFF\",\n                stroke: \"#AAAAAA\",\n                strokeWidth: \"1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 19\n          }, this)\n        }, `bed-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sleep-info-row\",\n        children: weekData.map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sleep-info-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sleep-hours\",\n            children: [day.hours.toFixed(1), \"h\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"day-label\",\n            children: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'][new Date(day.date).getDay()]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date-label\",\n            children: new Date(day.date).getDate()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 19\n          }, this)]\n        }, `info-${index}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 11\n    }, this), viewMode !== 'physician' && /*#__PURE__*/_jsxDEV(Legend, {\n      title: \"Sleep Quality\",\n      items: legendItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 38\n    }, this), viewMode === 'physician' && weekSummary && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"summary-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Week Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Average Sleep:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [weekSummary.avgHours, \" hours/night\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Total Sleep:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [weekSummary.totalHours, \" hours\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Sleep Consistency:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [\"\\xB1\", weekSummary.avgVariation, \" hours variation\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Common Quality:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [weekSummary.mostCommonQuality, \" (\", weekSummary.mostCommonQualityCount, \"x)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 13\n      }, this), threeMonthSummary && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"3-Month Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Average Sleep:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [threeMonthSummary.avgHours, \" hours/night\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Total Sleep:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [threeMonthSummary.totalHours, \" hours\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Sleep Consistency:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [\"\\xB1\", threeMonthSummary.avgVariation, \" hours variation\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Common Quality:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [threeMonthSummary.mostCommonQuality, \" (\", threeMonthSummary.mostCommonQualityCount, \"x)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 7\n  }, this);\n};\n_s(SleepChart, \"AY8XCFOh+vMX4Oz6mYOmD81/T20=\", false, function () {\n  return [usePatientData, useChartNavigation];\n});\n_c = SleepChart;\nexport default SleepChart;\nvar _c;\n$RefreshReg$(_c, \"SleepChart\");","map":{"version":3,"names":["React","useState","useMemo","useRef","usePatientData","useChartNavigation","Legend","jsxDEV","_jsxDEV","SleepChart","patientId","isExpanded","onExpand","viewMode","navigation","_s","sleepData","loading","error","useInternalNavigation","internalNavigation","nav","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","start","startOfWeek","end","endOfWeek","getDateRange","weekData","filter","d","date","startOfThreeMonths","endOfThreeMonths","getThreeMonthRange","threeMonthData","formatDateRange","data","startDate","Date","toLocaleDateString","month","day","endDate","qualityLevels","getQualityColor","quality","legendItems","Object","entries","map","label","color","weekSummary","totalHours","reduce","sum","hours","avgHours","toFixed","qualityCounts","keys","forEach","undefined","mostCommonQuality","sort","a","b","hourVariations","Math","abs","parseFloat","avgVariation","v","qualityScores","avgQualityScore","qualityAssessment","adequateSleepNights","mostCommonQualityCount","daysTracked","threeMonthSummary","getBarColor","getBarHeight","min","getCurrentMonthYear","index","style","height","backgroundColor","title","getDay","getDate","viewBox","fill","x","y","width","stroke","strokeWidth","items","_c","$RefreshReg$"],"sources":["C:/Users/Matteo/Working_Folder/a. MCC Thesis Local/MCC_digital_health_data_visualizations/src/components/patient_charts/SleepChart.js"],"sourcesContent":["/*\r\n SleepChart.js - Sleep Pattern Monitoring Visualization\r\n \r\n This component provides comprehensive sleep tracking:\r\n - Sleep duration and quality rating visualization\r\n - Weekly sleep pattern analysis\r\n - Color-coded sleep quality indicators\r\n - Interactive tooltips with sleep details\r\n - Navigation controls for time periods\r\n - Integration with patient data and chart navigation\r\n \r\n Architecture:\r\n - Uses custom SVG for bar chart visualization\r\n - Implements sleep quality categorization system\r\n - Provides color-coded quality indicators for easy interpretation\r\n - Supports expandable views\r\n - Implements time-based navigation and data filtering\r\n \r\n Visualizatoin Features:\r\n - Bar chart showing daily sleep duration\r\n - Color-coded quality indicators (Very good, Fairly good, Fairly bad, Very bad)\r\n - Interactive tooltips with detailed sleep information\r\n - Design adapting to container size\r\n - Dynamic Y-axis scaling based on sleep duration range\r\n \r\n Sleep Quality Categories:\r\n - Very good: Optimal sleep quality (green)\r\n - Fairly good: Good sleep quality (blue)\r\n - Fairly bad: Poor sleep quality (light green)\r\n - Very bad: Very poor sleep quality (dark green)\r\n \r\n Clinical Features:\r\n - Sleep duration tracking with recommended ranges\r\n - Quality assessment based on subjective ratings\r\n - Sleep consistency analysis\r\n - Summary statistics for physician view\r\n - Trend analysis over time periods\r\n \r\n Component Structure:\r\n - Chart Container: Main SVG container with sizing\r\n - Y-Axis: Duration scale with hour-based labeling\r\n - X-Axis: Day-of-week labels with date information\r\n - Data Bars: Sleep duration bars with quality color coding\r\n - Legend: Sleep quality explanations\r\n - Tooltip: Detailed sleep information on hover\r\n \r\n Essential for sleep hygiene monitoring and sleep disorder assessment.\r\n */\r\n\r\nimport React, { useState, useMemo, useRef } from 'react';\r\n\r\nimport usePatientData from '../../hooks/usePatientData';\r\nimport useChartNavigation from '../../hooks/useChartNavigation';\r\nimport Legend from '../Legend';\r\nimport './SleepChart.css';\r\n\r\n\r\nconst SleepChart = ({ patientId, isExpanded, onExpand, viewMode = 'patient', navigation }) => {\r\n  const { sleepData, loading, error } = usePatientData(patientId, 'sleep');\r\n  \r\n  // Use navigation from parent or fallback to internal navigation\r\n  const useInternalNavigation = !navigation;\r\n  const internalNavigation = useChartNavigation('sleep');\r\n  const nav = navigation || internalNavigation;\r\n\r\n  // Handle loading and error states\r\n  if (loading) return <div className=\"sleep-chart-container\"><div className=\"loading\">Loading sleep data...</div></div>;\r\n  if (error) return <div className=\"sleep-chart-container\"><div className=\"error\">Error loading sleep data: {error}</div></div>;\r\n  if (!sleepData || sleepData.length === 0) return <div className=\"sleep-chart-container\"><div className=\"no-data\">No sleep data available</div></div>;\r\n\r\n  const { start: startOfWeek, end: endOfWeek } = nav.getDateRange();\r\n  const weekData = sleepData.filter(d => d.date >= startOfWeek && d.date <= endOfWeek);\r\n\r\n  // Get 3-month data\r\n  const { start: startOfThreeMonths, end: endOfThreeMonths } = nav.getThreeMonthRange();\r\n  const threeMonthData = sleepData.filter(d => d.date >= startOfThreeMonths && d.date <= endOfThreeMonths);\r\n\r\n  const formatDateRange = (data) => {\r\n    if (!data || data.length === 0) return '';\r\n    const startDate = new Date(data[0].date).toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\r\n    const endDate = new Date(data[data.length - 1].date).toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\r\n    return `${startDate} to ${endDate}`;\r\n  };\r\n\r\n  const qualityLevels = {\r\n    'Very good': 'var(--chart-color-sleep-very-good)',\r\n    'Fairly good': 'var(--chart-color-sleep-fairly-good)',\r\n    'Fairly bad': 'var(--chart-color-sleep-fairly-bad)',\r\n    'Very bad': 'var(--chart-color-sleep-very-bad)',\r\n  };\r\n\r\n  const getQualityColor = (quality) => qualityLevels[quality] || '#D3D3D3';\r\n\r\n  const legendItems = Object.entries(qualityLevels).map(([label, color]) => ({\r\n    label,\r\n    color,\r\n  }));\r\n\r\n  // Calculate summary statistics for physician view\r\n  const weekSummary = useMemo(() => {\r\n    if (!weekData || weekData.length === 0) return null;\r\n\r\n    const totalHours = weekData.reduce((sum, day) => sum + day.hours, 0);\r\n    const avgHours = (totalHours / weekData.length).toFixed(1);\r\n\r\n    // Count quality levels\r\n    const qualityCounts = {};\r\n    Object.keys(qualityLevels).forEach(quality => {\r\n      qualityCounts[quality] = 0;\r\n    });\r\n\r\n    weekData.forEach(day => {\r\n      if (qualityCounts[day.quality] !== undefined) {\r\n        qualityCounts[day.quality]++;\r\n      }\r\n    });\r\n\r\n    // Find most common quality\r\n    const mostCommonQuality = Object.entries(qualityCounts)\r\n      .sort(([,a], [,b]) => b - a)[0];\r\n\r\n    // Calculate sleep consistency (how much variation in sleep hours)\r\n    const hourVariations = weekData.map(day => Math.abs(day.hours - parseFloat(avgHours)));\r\n    const avgVariation = (hourVariations.reduce((sum, v) => sum + v, 0) / hourVariations.length).toFixed(1);\r\n\r\n    // Sleep quality score (Very good=4, Fairly good=3, Fairly bad=2, Very bad=1)\r\n    const qualityScores = {\r\n      'Very good': 4,\r\n      'Fairly good': 3,\r\n      'Fairly bad': 2,\r\n      'Very bad': 1\r\n    };\r\n    const avgQualityScore = weekData.reduce((sum, day) => sum + (qualityScores[day.quality] || 0), 0) / weekData.length;\r\n    const qualityAssessment = avgQualityScore >= 3.5 ? 'Good' : avgQualityScore >= 2.5 ? 'Fair' : 'Poor';\r\n\r\n    // Count nights with adequate sleep (7+ hours)\r\n    const adequateSleepNights = weekData.filter(day => day.hours >= 7).length;\r\n\r\n    return {\r\n      totalHours: totalHours.toFixed(1),\r\n      avgHours,\r\n      mostCommonQuality: mostCommonQuality[0],\r\n      mostCommonQualityCount: mostCommonQuality[1],\r\n      avgVariation,\r\n      qualityAssessment,\r\n      adequateSleepNights,\r\n      daysTracked: weekData.length\r\n    };\r\n  }, [weekData]);\r\n\r\n  // Calculate 3-month summary statistics for physician view\r\n  const threeMonthSummary = useMemo(() => {\r\n    if (!threeMonthData || threeMonthData.length === 0) return null;\r\n\r\n    const totalHours = threeMonthData.reduce((sum, day) => sum + day.hours, 0);\r\n    const avgHours = (totalHours / threeMonthData.length).toFixed(1);\r\n\r\n    // Count quality levels\r\n    const qualityCounts = {};\r\n    Object.keys(qualityLevels).forEach(quality => {\r\n      qualityCounts[quality] = 0;\r\n    });\r\n\r\n    threeMonthData.forEach(day => {\r\n      if (qualityCounts[day.quality] !== undefined) {\r\n        qualityCounts[day.quality]++;\r\n      }\r\n    });\r\n\r\n    // Find most common quality\r\n    const mostCommonQuality = Object.entries(qualityCounts)\r\n      .sort(([,a], [,b]) => b - a)[0];\r\n\r\n    // Calculate sleep consistency (how much variation in sleep hours)\r\n    const hourVariations = threeMonthData.map(day => Math.abs(day.hours - parseFloat(avgHours)));\r\n    const avgVariation = (hourVariations.reduce((sum, v) => sum + v, 0) / hourVariations.length).toFixed(1);\r\n\r\n    return {\r\n      totalHours: totalHours.toFixed(1),\r\n      avgHours,\r\n      mostCommonQuality: mostCommonQuality[0],\r\n      mostCommonQualityCount: mostCommonQuality[1],\r\n      avgVariation,\r\n      daysTracked: threeMonthData.length\r\n    };\r\n  }, [threeMonthData]);\r\n\r\n  // Function to get bar color based on sleep hours\r\n  const getBarColor = (hours) => {\r\n    if (hours < 4) return '#dc3545'; // Red for < 4 hours\r\n    if (hours >= 4 && hours < 6) return '#fd7e14'; // Orange for 4-6 hours\r\n    return '#28a745'; // Green for 6+ hours\r\n  };\r\n\r\n  // Function to get bar height percentage (max 10 hours for scaling)\r\n  const getBarHeight = (hours) => {\r\n    return Math.min((hours / 10) * 100, 100);\r\n  };\r\n\r\n  return (\r\n      <div className=\"sleep-chart-content\">\r\n        <h3 className=\"chart-title\">Sleep Quality & Duration</h3>\r\n        <h4 className=\"chart-subtitle\">{nav.getCurrentMonthYear()}</h4>\r\n        \r\n        {viewMode === 'physician' ? (\r\n          // Bar chart for physician view\r\n          <div className=\"sleep-bar-chart\">\r\n            <div className=\"bar-chart-container\">\r\n              <div className=\"y-axis-labels\">\r\n                <div className=\"y-label\">10h</div>\r\n                <div className=\"y-label\">8h</div>\r\n                <div className=\"y-label\">6h</div>\r\n                <div className=\"y-label\">4h</div>\r\n                <div className=\"y-label\">2h</div>\r\n                <div className=\"y-label\">0h</div>\r\n              </div>\r\n              <div className=\"bars-container\">\r\n                {weekData.map((day, index) => (\r\n                  <div key={`bar-${index}`} className=\"bar-wrapper\">\r\n                    <div className=\"bar-container\">\r\n                      <div \r\n                        className=\"sleep-bar\"\r\n                        style={{\r\n                          height: `${getBarHeight(day.hours)}%`,\r\n                          backgroundColor: getBarColor(day.hours)\r\n                        }}\r\n                        title={`${day.hours.toFixed(1)} hours - ${day.quality}`}\r\n                      ></div>\r\n                    </div>\r\n                    <div className=\"bar-label\">\r\n                      <div className=\"day-label\">{['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'][new Date(day.date).getDay()]}</div>\r\n                      <div className=\"date-label\">{new Date(day.date).getDate()}</div>\r\n                      <div className=\"hours-label\">{day.hours.toFixed(1)}h</div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <div className=\"bar-chart-legend\">\r\n              <div className=\"legend-item\">\r\n                <div className=\"legend-color\" style={{ backgroundColor: '#dc3545' }}></div>\r\n                <span>Insufficient (&lt;4h)</span>\r\n              </div>\r\n              <div className=\"legend-item\">\r\n                <div className=\"legend-color\" style={{ backgroundColor: '#fd7e14' }}></div>\r\n                <span>Moderate (4-6h)</span>\r\n              </div>\r\n              <div className=\"legend-item\">\r\n                <div className=\"legend-color\" style={{ backgroundColor: '#28a745' }}></div>\r\n                <span>Good (6h+)</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          // Original bed icons for patient view\r\n          <div className=\"sleep-chart\">\r\n            {/* Sleep Quality Indicators Row */}\r\n            <div className=\"sleep-quality-row\">\r\n              {weekData.map((day, index) => (\r\n                <div key={`quality-${index}`} className=\"sleep-quality-item\">\r\n                  <div \r\n                    className=\"sleep-quality-indicator\"\r\n                    style={{ backgroundColor: getQualityColor(day.quality) }}\r\n                  ></div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            \r\n            {/* Bed Icons Row */}\r\n            <div className=\"bed-icons-row\">\r\n              {weekData.map((day, index) => (\r\n                <div key={`bed-${index}`} className=\"bed-item\">\r\n                  <div className=\"bed-icon-wrapper\">\r\n                    <svg viewBox=\"0 0 486.5 225.1\" className=\"bed-icon\">\r\n                      <path d=\"M471.9,68.9c-8,0-14.5,6.5-14.5,14.5v68.6H26.1l-.6-139.3c0-7-5.8-12.7-12.8-12.7h0C5.7,0,0,5.7,0,12.8v199.6c0,7,5.7,12.8,12.7,12.8s12.8-5.7,12.8-12.8v-37h431.9v35.2c0,8,6.5,14.5,14.5,14.5s14.5-6.5,14.5-14.5v-127.1c0-8-6.5-14.5-14.5-14.5ZM483.7,210.6c0,6.5-5.3,11.8-11.8,11.8s-11.8-5.3-11.8-11.8v-38H22.7v39.7c0,5.5-4.5,10-10,10s-10-4.5-10-10V12.8C2.8,7.3,7.3,2.8,12.7,2.8h0c5.5,0,9.9,4.5,10,9.9l.6,142.1h436.8v-71.4c0-6.5,5.3-11.7,11.8-11.7s11.8,5.3,11.8,11.7v127.1Z\" fill=\"#D2B48C\"/>\r\n                      <path d=\"M29.9,94.2v54.5h425.4v-54.5H29.9ZM452.5,145.9H32.7v-48.9h419.8v48.9Z\" fill=\"#e0e0e0\"/>\r\n                      <rect x=\"32.7\" y=\"97\" width={`${(day.hours / 10) * 419.8}`} height=\"48.9\" fill=\"#FF4500\" className=\"sleep-fill-rect\" />\r\n                      <path d=\"M112.8,46.3h-55.4c-12.1,0-22,9.9-22,22s9.9,22,22,22h55.4c12.1,0,22-9.9,22-22s-9.9-22-22-22ZM112.8,87.5h-55.4c-10.6,0-19.2-8.6-19.2-19.2s8.6-19.2,19.2-19.2h55.4c10.6,0,19.2,8.6,19.2,19.2s-8.6,19.2-19.2,19.2Z\" fill=\"#FFFFFF\" stroke=\"#AAAAAA\" strokeWidth=\"1\"/>\r\n                    </svg>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            \r\n            {/* Sleep Information Row */}\r\n            <div className=\"sleep-info-row\">\r\n              {weekData.map((day, index) => (\r\n                <div key={`info-${index}`} className=\"sleep-info-item\">\r\n                  <div className=\"sleep-hours\">{day.hours.toFixed(1)}h</div>\r\n                  <div className=\"day-label\">{['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'][new Date(day.date).getDay()]}</div>\r\n                  <div className=\"date-label\">{new Date(day.date).getDate()}</div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        {viewMode !== 'physician' && <Legend title=\"Sleep Quality\" items={legendItems} />}\r\n\r\n        {/* Show summary for physician view only */}\r\n        {viewMode === 'physician' && weekSummary && (\r\n          <div className=\"summary-container\">\r\n            <div className=\"chart-summary\">\r\n              <h4>Week Summary</h4>\r\n              <div className=\"summary-stats\">\r\n                <div className=\"stat-item\">\r\n                  <span className=\"stat-label\">Average Sleep:</span>\r\n                  <span className=\"stat-value\">\r\n                    {weekSummary.avgHours} hours/night\r\n                  </span>\r\n                </div>\r\n                <div className=\"stat-item\">\r\n                  <span className=\"stat-label\">Total Sleep:</span>\r\n                  <span className=\"stat-value\">\r\n                    {weekSummary.totalHours} hours\r\n                  </span>\r\n                </div>\r\n                <div className=\"stat-item\">\r\n                  <span className=\"stat-label\">Sleep Consistency:</span>\r\n                  <span className=\"stat-value\">\r\n                    ±{weekSummary.avgVariation} hours variation\r\n                  </span>\r\n                </div>\r\n\r\n                <div className=\"stat-item\">\r\n                  <span className=\"stat-label\">Common Quality:</span>\r\n                  <span className=\"stat-value\">\r\n                    {weekSummary.mostCommonQuality} ({weekSummary.mostCommonQualityCount}x)\r\n                  </span>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n            \r\n            {threeMonthSummary && (\r\n              <div className=\"chart-summary\">\r\n                <h4>3-Month Summary</h4>\r\n                <div className=\"summary-stats\">\r\n                  <div className=\"stat-item\">\r\n                    <span className=\"stat-label\">Average Sleep:</span>\r\n                    <span className=\"stat-value\">\r\n                      {threeMonthSummary.avgHours} hours/night\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"stat-item\">\r\n                    <span className=\"stat-label\">Total Sleep:</span>\r\n                    <span className=\"stat-value\">\r\n                      {threeMonthSummary.totalHours} hours\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"stat-item\">\r\n                    <span className=\"stat-label\">Sleep Consistency:</span>\r\n                    <span className=\"stat-value\">\r\n                      ±{threeMonthSummary.avgVariation} hours variation\r\n                    </span>\r\n                  </div>\r\n\r\n                  <div className=\"stat-item\">\r\n                    <span className=\"stat-label\">Common Quality:</span>\r\n                    <span className=\"stat-value\">\r\n                      {threeMonthSummary.mostCommonQuality} ({threeMonthSummary.mostCommonQualityCount}x)\r\n                    </span>\r\n                  </div>\r\n\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default SleepChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}