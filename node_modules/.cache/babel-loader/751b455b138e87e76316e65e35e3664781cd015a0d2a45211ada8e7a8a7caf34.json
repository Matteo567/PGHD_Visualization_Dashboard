{"ast":null,"code":"import React,{useState}from'react';import usePatientData from'../../hooks/usePatientData';import ChartContainer from'../ChartContainer';import Legend from'../Legend';import'../ChartStyles.css';import'./ExerciseChart.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const exerciseTypes=[{key:'walking',label:'Walking',color:'var(--chart-color-walking)',emoji:'🚶'},{key:'swimming',label:'Swimming',color:'var(--chart-color-swimming)',emoji:'🏊‍♀️'},{key:'running',label:'Running',color:'var(--chart-color-running)',emoji:'🏃‍♂️'},{key:'resistance/weights',label:'Resistance/Weights',color:'var(--chart-color-resistance)',emoji:'🏋️'},{key:'biking',label:'Biking',color:'var(--chart-color-biking)',emoji:'🚴'},{key:'balance/stretching',label:'Balance/Stretching',color:'var(--chart-color-balance)',emoji:'🧘'},{key:'other',label:'Other',color:'var(--chart-color-other)',emoji:'➕'}];const exerciseLegendItems=exerciseTypes.map(_ref=>{let{label,color,emoji}=_ref;return{label:\"\".concat(emoji,\" \").concat(label),color};});const getChartConfig=isExpanded=>({width:isExpanded?700:320,height:isExpanded?245:180,// Increased from 140 to 180 for more chart space\npadding:{top:30,right:10,bottom:60,left:50},// Increased left padding from 40 to 50\ndayWidth:isExpanded?90:38,barWidth:isExpanded?25:20,fontSize:{yAxis:isExpanded?8:6,yAxisTitle:isExpanded?9:8,dayLabel:isExpanded?8:6,dateLabel:isExpanded?7:5,emoji:isExpanded?10:8}});const ExerciseChart=_ref2=>{let{patientId,isExpanded=false,onExpand}=_ref2;const{exerciseData,loading,error}=usePatientData(patientId,'exercise');const[currentWeek,setCurrentWeek]=useState(new Date(2025,4,1));const handlePrevWeek=()=>{setCurrentWeek(prev=>new Date(new Date(prev).setDate(prev.getDate()-7)));};const handleNextWeek=()=>{setCurrentWeek(prev=>new Date(new Date(prev).setDate(prev.getDate()+7)));};const config=getChartConfig(isExpanded);const chartHeight=config.height-config.padding.top-config.padding.bottom;const startOfWeek=new Date(currentWeek);startOfWeek.setDate(startOfWeek.getDate()-startOfWeek.getDay());startOfWeek.setHours(0,0,0,0);const endOfWeek=new Date(startOfWeek);endOfWeek.setDate(endOfWeek.getDate()+6);endOfWeek.setHours(23,59,59,999);const weekData=exerciseData.filter(d=>{if(!d.date)return false;const itemDate=new Date(d.date);return itemDate>=startOfWeek&&itemDate<=endOfWeek;});const daysOfWeek=['Sun','Mon','Tue','Wed','Thu','Fri','Sat'];const groupedData=daysOfWeek.reduce((acc,day)=>{acc[day]={walking:0,swimming:0,running:0,'resistance/weights':0,biking:0,'balance/stretching':0,other:0,totalMinutes:0};return acc;},{});weekData.forEach(item=>{if(!item.date)return;const dayName=daysOfWeek[new Date(item.date).getDay()];if(groupedData[dayName]){groupedData[dayName].walking+=Number(item.walking)||0;groupedData[dayName].swimming+=Number(item.swimming)||0;groupedData[dayName].running+=Number(item.running)||0;groupedData[dayName]['resistance/weights']+=Number(item['resistance/weights'])||0;groupedData[dayName].biking+=Number(item.biking)||0;groupedData[dayName]['balance/stretching']+=Number(item['balance/stretching'])||0;groupedData[dayName].other+=Number(item.other)||0;groupedData[dayName].totalMinutes=groupedData[dayName].walking+groupedData[dayName].swimming+groupedData[dayName].running+groupedData[dayName]['resistance/weights']+groupedData[dayName].biking+groupedData[dayName]['balance/stretching']+groupedData[dayName].other;}});const maxVal=Math.max(...Object.values(groupedData).map(day=>day.totalMinutes),0);const maxDuration=Math.max(60,Math.ceil(maxVal/30)*30);const generateYAxisLabels=max=>{if(max===0)return[0];const step=Math.max(15,Math.ceil(max/6/15)*15);const labels=[];for(let i=0;i<=max;i+=step){labels.push(i);}return labels;};const yAxisLabels=generateYAxisLabels(maxDuration);const formatDateRange=(start,end)=>{const startStr=start.toLocaleDateString('en-US',{month:'short',day:'numeric'});const endStr=end.toLocaleDateString('en-US',{month:'short',day:'numeric'});return\"\".concat(startStr,\" to \").concat(endStr);};return/*#__PURE__*/_jsx(ChartContainer,{title:\"Exercise\",icon:\"\\uD83C\\uDFC3\",isLoading:loading,error:error,noData:!loading&&!error&&(!exerciseData||exerciseData.length===0),isExpanded:isExpanded,onExpand:onExpand,onPrev:handlePrevWeek,onNext:handleNextWeek,navigationLabel:formatDateRange(startOfWeek,endOfWeek),children:/*#__PURE__*/_jsxs(\"div\",{className:\"exercise-chart-container\",children:[/*#__PURE__*/_jsx(Legend,{title:\"Exercise Type\",items:exerciseLegendItems,orientation:\"horizontal\",size:\"medium\"}),/*#__PURE__*/_jsx(\"div\",{className:\"exercise-chart-content \".concat(isExpanded?'expanded':''),children:/*#__PURE__*/_jsxs(\"svg\",{width:\"100%\",viewBox:\"0 0 \".concat(config.width,\" \").concat(config.height),className:\"exercise-svg\",children:[/*#__PURE__*/_jsxs(\"g\",{className:\"y-axis\",children:[yAxisLabels.map(value=>{const y=config.padding.top+chartHeight-value/maxDuration*chartHeight;return/*#__PURE__*/_jsxs(\"g\",{className:\"y-axis-grid-group\",children:[/*#__PURE__*/_jsx(\"line\",{className:\"chart-grid-line-horizontal\",x1:config.padding.left,y1:y,x2:config.width-config.padding.right,y2:y}),/*#__PURE__*/_jsx(\"text\",{x:config.padding.left-15,y:y+3,fontSize:config.fontSize.yAxis,textAnchor:\"end\",fill:\"var(--chart-color-text-secondary)\",className:\"chart-tick-label\",children:value})]},value);}),/*#__PURE__*/_jsx(\"text\",{x:-(config.padding.top+chartHeight/2),y:config.padding.left/2-5,fontSize:config.fontSize.yAxisTitle,textAnchor:\"middle\",fill:\"var(--chart-color-text-primary)\",transform:\"rotate(-90)\",className:\"y-axis-title\",children:\"Minutes\"})]}),/*#__PURE__*/_jsx(\"g\",{className:\"x-axis\",children:daysOfWeek.map((day,dayIndex)=>{const date=new Date(startOfWeek);date.setDate(date.getDate()+dayIndex);const x=config.padding.left+dayIndex*config.dayWidth+config.dayWidth/2;const dayData=groupedData[day];const performedExercises=exerciseTypes.filter(type=>(dayData[type.key]||0)>0);const emojis=performedExercises.map(type=>type.emoji).join(' ');return/*#__PURE__*/_jsxs(\"g\",{className:\"x-axis-label-group\",children:[/*#__PURE__*/_jsx(\"line\",{className:\"chart-grid-line-vertical\",x1:config.padding.left+dayIndex*config.dayWidth,y1:config.padding.top,x2:config.padding.left+dayIndex*config.dayWidth,y2:config.height-config.padding.bottom}),/*#__PURE__*/_jsx(\"text\",{x:x,y:config.height-config.padding.bottom+15,textAnchor:\"middle\",fontSize:config.fontSize.dayLabel,fill:\"var(--chart-color-text-primary)\",className:\"x-axis-day-label\",children:day}),/*#__PURE__*/_jsx(\"text\",{x:x,y:config.height-config.padding.bottom+30,textAnchor:\"middle\",fontSize:config.fontSize.dateLabel,fill:\"var(--chart-color-text-secondary)\",className:\"x-axis-date-label\",children:date.getDate()}),/*#__PURE__*/_jsx(\"text\",{x:x,y:config.height-config.padding.bottom+48,textAnchor:\"middle\",fontSize:config.fontSize.emoji,children:emojis})]},dayIndex);})}),/*#__PURE__*/_jsx(\"g\",{className:\"data-bars\",children:daysOfWeek.map((day,dayIndex)=>{const dayData=groupedData[day];const x=config.padding.left+dayIndex*config.dayWidth+config.dayWidth/2;let currentY=config.height-config.padding.bottom;return/*#__PURE__*/_jsx(\"g\",{children:exerciseTypes.map(type=>{const minutes=Number(dayData[type.key])||0;if(minutes<=0)return null;const segmentHeight=minutes/maxDuration*chartHeight;const segmentY=currentY-segmentHeight;const segment=/*#__PURE__*/_jsx(\"rect\",{x:x-config.barWidth/2,y:segmentY,width:config.barWidth,height:segmentHeight,fill:type.color,className:\"data-bar\",children:/*#__PURE__*/_jsx(\"title\",{children:\"\".concat(type.label,\": \").concat(Math.round(minutes),\" min\")})},type.key);currentY=segmentY;return segment;})},day);})})]})})]})});};export default ExerciseChart;","map":{"version":3,"names":["React","useState","usePatientData","ChartContainer","Legend","jsx","_jsx","jsxs","_jsxs","exerciseTypes","key","label","color","emoji","exerciseLegendItems","map","_ref","concat","getChartConfig","isExpanded","width","height","padding","top","right","bottom","left","dayWidth","barWidth","fontSize","yAxis","yAxisTitle","dayLabel","dateLabel","ExerciseChart","_ref2","patientId","onExpand","exerciseData","loading","error","currentWeek","setCurrentWeek","Date","handlePrevWeek","prev","setDate","getDate","handleNextWeek","config","chartHeight","startOfWeek","getDay","setHours","endOfWeek","weekData","filter","d","date","itemDate","daysOfWeek","groupedData","reduce","acc","day","walking","swimming","running","biking","other","totalMinutes","forEach","item","dayName","Number","maxVal","Math","max","Object","values","maxDuration","ceil","generateYAxisLabels","step","labels","i","push","yAxisLabels","formatDateRange","start","end","startStr","toLocaleDateString","month","endStr","title","icon","isLoading","noData","length","onPrev","onNext","navigationLabel","children","className","items","orientation","size","viewBox","value","y","x1","y1","x2","y2","x","textAnchor","fill","transform","dayIndex","dayData","performedExercises","type","emojis","join","currentY","minutes","segmentHeight","segmentY","segment","round"],"sources":["C:/Users/Matteo/Working_Folder/a. MCC Thesis Local/MCC_digital_health_data_visualizations/src/components/patient_charts/ExerciseChart.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport usePatientData from '../../hooks/usePatientData';\r\nimport ChartContainer from '../ChartContainer';\r\nimport Legend from '../Legend';\r\nimport '../ChartStyles.css';\r\nimport './ExerciseChart.css';\r\n\r\nconst exerciseTypes = [\r\n  { key: 'walking', label: 'Walking', color: 'var(--chart-color-walking)', emoji: '🚶' },\r\n  { key: 'swimming', label: 'Swimming', color: 'var(--chart-color-swimming)', emoji: '🏊‍♀️' },\r\n  { key: 'running', label: 'Running', color: 'var(--chart-color-running)', emoji: '🏃‍♂️' },\r\n  { key: 'resistance/weights', label: 'Resistance/Weights', color: 'var(--chart-color-resistance)', emoji: '🏋️' },\r\n  { key: 'biking', label: 'Biking', color: 'var(--chart-color-biking)', emoji: '🚴' },\r\n  { key: 'balance/stretching', label: 'Balance/Stretching', color: 'var(--chart-color-balance)', emoji: '🧘' },\r\n  { key: 'other', label: 'Other', color: 'var(--chart-color-other)', emoji: '➕' },\r\n];\r\n\r\nconst exerciseLegendItems = exerciseTypes.map(({ label, color, emoji }) => ({\r\n  label: `${emoji} ${label}`,\r\n  color,\r\n}));\r\n\r\nconst getChartConfig = (isExpanded) => ({\r\n  width: isExpanded ? 700 : 320,\r\n  height: isExpanded ? 245 : 180, // Increased from 140 to 180 for more chart space\r\n  padding: { top: 30, right: 10, bottom: 60, left: 50 }, // Increased left padding from 40 to 50\r\n  dayWidth: isExpanded ? 90 : 38,\r\n  barWidth: isExpanded ? 25 : 20,\r\n  fontSize: {\r\n    yAxis: isExpanded ? 8 : 6,\r\n    yAxisTitle: isExpanded ? 9 : 8,\r\n    dayLabel: isExpanded ? 8 : 6,\r\n    dateLabel: isExpanded ? 7 : 5,\r\n    emoji: isExpanded ? 10 : 8,\r\n  },\r\n});\r\n\r\nconst ExerciseChart = ({ patientId, isExpanded = false, onExpand }) => {\r\n  const { exerciseData, loading, error } = usePatientData(patientId, 'exercise');\r\n  const [currentWeek, setCurrentWeek] = useState(new Date(2025, 4, 1));\r\n\r\n  const handlePrevWeek = () => {\r\n    setCurrentWeek(prev => new Date(new Date(prev).setDate(prev.getDate() - 7)));\r\n  };\r\n\r\n  const handleNextWeek = () => {\r\n    setCurrentWeek(prev => new Date(new Date(prev).setDate(prev.getDate() + 7)));\r\n  };\r\n\r\n  const config = getChartConfig(isExpanded);\r\n  const chartHeight = config.height - config.padding.top - config.padding.bottom;\r\n\r\n  const startOfWeek = new Date(currentWeek);\r\n  startOfWeek.setDate(startOfWeek.getDate() - startOfWeek.getDay());\r\n  startOfWeek.setHours(0, 0, 0, 0);\r\n\r\n  const endOfWeek = new Date(startOfWeek);\r\n  endOfWeek.setDate(endOfWeek.getDate() + 6);\r\n  endOfWeek.setHours(23, 59, 59, 999);\r\n\r\n  const weekData = exerciseData.filter(d => {\r\n    if (!d.date) return false;\r\n    const itemDate = new Date(d.date);\r\n    return itemDate >= startOfWeek && itemDate <= endOfWeek;\r\n  });\r\n\r\n  const daysOfWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n  const groupedData = daysOfWeek.reduce((acc, day) => {\r\n    acc[day] = { walking: 0, swimming: 0, running: 0, 'resistance/weights': 0, biking: 0, 'balance/stretching': 0, other: 0, totalMinutes: 0 };\r\n    return acc;\r\n  }, {});\r\n\r\n  weekData.forEach(item => {\r\n    if (!item.date) return;\r\n    const dayName = daysOfWeek[new Date(item.date).getDay()];\r\n    if (groupedData[dayName]) {\r\n      groupedData[dayName].walking += Number(item.walking) || 0;\r\n      groupedData[dayName].swimming += Number(item.swimming) || 0;\r\n      groupedData[dayName].running += Number(item.running) || 0;\r\n      groupedData[dayName]['resistance/weights'] += Number(item['resistance/weights']) || 0;\r\n      groupedData[dayName].biking += Number(item.biking) || 0;\r\n      groupedData[dayName]['balance/stretching'] += Number(item['balance/stretching']) || 0;\r\n      groupedData[dayName].other += Number(item.other) || 0;\r\n      groupedData[dayName].totalMinutes = groupedData[dayName].walking + groupedData[dayName].swimming + groupedData[dayName].running + groupedData[dayName]['resistance/weights'] + groupedData[dayName].biking + groupedData[dayName]['balance/stretching'] + groupedData[dayName].other;\r\n    }\r\n  });\r\n\r\n  const maxVal = Math.max(...Object.values(groupedData).map(day => day.totalMinutes), 0);\r\n  const maxDuration = Math.max(60, Math.ceil(maxVal / 30) * 30);\r\n\r\n  const generateYAxisLabels = (max) => {\r\n    if (max === 0) return [0];\r\n    const step = Math.max(15, Math.ceil(max / 6 / 15) * 15);\r\n    const labels = [];\r\n    for (let i = 0; i <= max; i += step) {\r\n      labels.push(i);\r\n    }\r\n    return labels;\r\n  };\r\n\r\n  const yAxisLabels = generateYAxisLabels(maxDuration);\r\n\r\n  const formatDateRange = (start, end) => {\r\n    const startStr = start.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\r\n    const endStr = end.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\r\n    return `${startStr} to ${endStr}`;\r\n  };\r\n\r\n  return (\r\n    <ChartContainer\r\n      title=\"Exercise\"\r\n      icon=\"🏃\"\r\n      isLoading={loading}\r\n      error={error}\r\n      noData={!loading && !error && (!exerciseData || exerciseData.length === 0)}\r\n      isExpanded={isExpanded}\r\n      onExpand={onExpand}\r\n      onPrev={handlePrevWeek}\r\n      onNext={handleNextWeek}\r\n      navigationLabel={formatDateRange(startOfWeek, endOfWeek)}\r\n    >\r\n      <div className=\"exercise-chart-container\">\r\n        <Legend title=\"Exercise Type\" items={exerciseLegendItems} orientation=\"horizontal\" size=\"medium\" />\r\n        <div className={`exercise-chart-content ${isExpanded ? 'expanded' : ''}`}>\r\n          <svg \r\n            width=\"100%\" \r\n            viewBox={`0 0 ${config.width} ${config.height}`}\r\n            className=\"exercise-svg\"\r\n          >\r\n            <g className=\"y-axis\">\r\n              {yAxisLabels.map(value => {\r\n                const y = config.padding.top + chartHeight - (value / maxDuration) * chartHeight;\r\n                return (\r\n                  <g key={value} className=\"y-axis-grid-group\">\r\n                    <line className=\"chart-grid-line-horizontal\" x1={config.padding.left} y1={y} x2={config.width - config.padding.right} y2={y} />\r\n                    <text x={config.padding.left - 15} y={y + 3} fontSize={config.fontSize.yAxis} textAnchor=\"end\" fill=\"var(--chart-color-text-secondary)\" className=\"chart-tick-label\">{value}</text>\r\n                  </g>\r\n                );\r\n              })}\r\n              <text x={-(config.padding.top + chartHeight / 2)} y={config.padding.left / 2 - 5} fontSize={config.fontSize.yAxisTitle} textAnchor=\"middle\" fill=\"var(--chart-color-text-primary)\" transform=\"rotate(-90)\" className=\"y-axis-title\">Minutes</text>\r\n            </g>\r\n\r\n            <g className=\"x-axis\">\r\n              {daysOfWeek.map((day, dayIndex) => {\r\n                const date = new Date(startOfWeek);\r\n                date.setDate(date.getDate() + dayIndex);\r\n                const x = config.padding.left + dayIndex * config.dayWidth + config.dayWidth / 2;\r\n\r\n                const dayData = groupedData[day];\r\n                const performedExercises = exerciseTypes.filter(type => (dayData[type.key] || 0) > 0);\r\n                const emojis = performedExercises.map(type => type.emoji).join(' ');\r\n\r\n                return (\r\n                  <g key={dayIndex} className=\"x-axis-label-group\">\r\n                    <line className=\"chart-grid-line-vertical\" x1={config.padding.left + dayIndex * config.dayWidth} y1={config.padding.top} x2={config.padding.left + dayIndex * config.dayWidth} y2={config.height - config.padding.bottom} />\r\n                    <text x={x} y={config.height - config.padding.bottom + 15} textAnchor=\"middle\" fontSize={config.fontSize.dayLabel} fill=\"var(--chart-color-text-primary)\" className=\"x-axis-day-label\">{day}</text>\r\n                    <text x={x} y={config.height - config.padding.bottom + 30} textAnchor=\"middle\" fontSize={config.fontSize.dateLabel} fill=\"var(--chart-color-text-secondary)\" className=\"x-axis-date-label\">{date.getDate()}</text>\r\n                    <text x={x} y={config.height - config.padding.bottom + 48} textAnchor=\"middle\" fontSize={config.fontSize.emoji}>{emojis}</text>\r\n                  </g>\r\n                );\r\n              })}\r\n            </g>\r\n\r\n            <g className=\"data-bars\">\r\n              {daysOfWeek.map((day, dayIndex) => {\r\n                const dayData = groupedData[day];\r\n                const x = config.padding.left + dayIndex * config.dayWidth + config.dayWidth / 2;\r\n                let currentY = config.height - config.padding.bottom;\r\n\r\n                return (\r\n                  <g key={day}>\r\n                    {exerciseTypes.map(type => {\r\n                      const minutes = Number(dayData[type.key]) || 0;\r\n                      if (minutes <= 0) return null;\r\n\r\n                      const segmentHeight = (minutes / maxDuration) * chartHeight;\r\n                      const segmentY = currentY - segmentHeight;\r\n\r\n                      const segment = (\r\n                        <rect\r\n                          key={type.key}\r\n                          x={x - config.barWidth / 2}\r\n                          y={segmentY}\r\n                          width={config.barWidth}\r\n                          height={segmentHeight}\r\n                          fill={type.color}\r\n                          className=\"data-bar\"\r\n                        >\r\n                          <title>{`${type.label}: ${Math.round(minutes)} min`}</title>\r\n                        </rect>\r\n                      );\r\n\r\n                      currentY = segmentY;\r\n                      return segment;\r\n                    })}\r\n                  </g>\r\n                );\r\n              })}\r\n            </g>\r\n          </svg>\r\n        </div>\r\n      </div>\r\n    </ChartContainer>\r\n  );\r\n};\r\n\r\nexport default ExerciseChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}