{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matteo\\\\Working_Folder\\\\a. MCC Thesis Local\\\\MCC_digital_health_data_visualizations\\\\src\\\\components\\\\patient_charts\\\\SleepChart.js\",\n  _s = $RefreshSig$();\n/*\n SleepChart.js - Sleep Pattern Monitoring Visualization\n \n This component provides comprehensive sleep tracking:\n - Sleep duration and quality rating visualization\n - Weekly sleep pattern analysis\n - Color-coded sleep quality indicators\n - Interactive tooltips with sleep details\n - Navigation controls for time periods\n - Integration with patient data and chart navigation\n \n Architecture:\n - Uses custom SVG for bar chart visualization\n - Implements sleep quality categorization system\n - Provides color-coded quality indicators for easy interpretation\n - Supports expandable views\n - Implements time-based navigation and data filtering\n \n Visualizatoin Features:\n - Bar chart showing daily sleep duration\n - Color-coded quality indicators (Very good, Fairly good, Fairly bad, Very bad)\n - Interactive tooltips with detailed sleep information\n - Design adapting to container size\n - Dynamic Y-axis scaling based on sleep duration range\n \n Sleep Quality Categories:\n - Very good: Optimal sleep quality (green)\n - Fairly good: Good sleep quality (blue)\n - Fairly bad: Poor sleep quality (light green)\n - Very bad: Very poor sleep quality (dark green)\n \n Clinical Features:\n - Sleep duration tracking with recommended ranges\n - Quality assessment based on subjective ratings\n - Sleep consistency analysis\n - Summary statistics for physician view\n - Trend analysis over time periods\n \n Component Structure:\n - Chart Container: Main SVG container with sizing\n - Y-Axis: Duration scale with hour-based labeling\n - X-Axis: Day-of-week labels with date information\n - Data Bars: Sleep duration bars with quality color coding\n - Legend: Sleep quality explanations\n - Tooltip: Detailed sleep information on hover\n \n Essential for sleep hygiene monitoring and sleep disorder assessment.\n */\n\nimport React, { useState, useMemo, useRef } from 'react';\nimport usePatientData from '../../hooks/usePatientData';\nimport useChartNavigation from '../../hooks/useChartNavigation';\nimport Legend from '../Legend';\nimport './SleepChart.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SleepChart = ({\n  patientId,\n  isExpanded,\n  onExpand,\n  viewMode = 'patient',\n  navigation\n}) => {\n  _s();\n  const {\n    sleepData,\n    loading,\n    error\n  } = usePatientData(patientId, 'sleep');\n  const [useLineChart, setUseLineChart] = useState(false); // Toggle state for chart view\n\n  // Use navigation from parent or fallback to internal navigation\n  const useInternalNavigation = !navigation;\n  const internalNavigation = useChartNavigation('sleep');\n  const nav = navigation || internalNavigation;\n  const {\n    start: startOfWeek,\n    end: endOfWeek\n  } = nav.getDateRange();\n  const weekData = sleepData.filter(d => d.date >= startOfWeek && d.date <= endOfWeek);\n\n  // Get previous week data\n  const prevWeekStart = new Date(startOfWeek);\n  prevWeekStart.setDate(prevWeekStart.getDate() - 7);\n  const prevWeekEnd = new Date(startOfWeek);\n  prevWeekEnd.setDate(prevWeekEnd.getDate() - 1);\n  const prevWeekData = sleepData.filter(d => d.date >= prevWeekStart && d.date <= prevWeekEnd);\n\n  // Get next week data\n  const nextWeekStart = new Date(endOfWeek);\n  nextWeekStart.setDate(nextWeekStart.getDate() + 1);\n  const nextWeekEnd = new Date(nextWeekStart);\n  nextWeekEnd.setDate(nextWeekEnd.getDate() + 6);\n  const nextWeekData = sleepData.filter(d => d.date >= nextWeekStart && d.date <= nextWeekEnd);\n\n  // Get 3-month data\n  const {\n    start: startOfThreeMonths,\n    end: endOfThreeMonths\n  } = nav.getThreeMonthRange();\n  const threeMonthData = sleepData.filter(d => d.date >= startOfThreeMonths && d.date <= endOfThreeMonths);\n  const formatDateRange = data => {\n    if (!data || data.length === 0) return '';\n    const startDate = new Date(data[0].date).toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric'\n    });\n    const endDate = new Date(data[data.length - 1].date).toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric'\n    });\n    return `${startDate} to ${endDate}`;\n  };\n  const qualityLevels = {\n    'Very good': 'var(--chart-color-sleep-very-good)',\n    'Fairly good': 'var(--chart-color-sleep-fairly-good)',\n    'Fairly bad': 'var(--chart-color-sleep-fairly-bad)',\n    'Very bad': 'var(--chart-color-sleep-very-bad)'\n  };\n  const getQualityColor = quality => qualityLevels[quality] || '#D3D3D3';\n  const legendItems = Object.entries(qualityLevels).map(([label, color]) => ({\n    label,\n    color\n  }));\n\n  // Process data for extended chart (3 weeks)\n  const {\n    extendedChartData\n  } = useMemo(() => {\n    if (!isExpanded) return {\n      extendedChartData: []\n    };\n\n    // Combine all three weeks of data\n    const allWeeksData = [...prevWeekData, ...weekData, ...nextWeekData];\n\n    // Create a map of dates to sleep data for all 3 weeks\n    const dateMap = new Map();\n    allWeeksData.forEach(item => {\n      const dateKey = item.date.toDateString();\n      dateMap.set(dateKey, item);\n    });\n\n    // Generate chart data for all 21 days (3 weeks)\n    const data = [];\n    const weekLabels = ['Prev Week', 'Current Week', 'Next Week'];\n    for (let week = 0; week < 3; week++) {\n      const weekStart = week === 0 ? prevWeekStart : week === 1 ? startOfWeek : nextWeekStart;\n      for (let day = 0; day < 7; day++) {\n        const date = new Date(weekStart);\n        date.setDate(date.getDate() + day);\n        const dateKey = date.toDateString();\n        const sleepData = dateMap.get(dateKey) || {\n          hours: 0,\n          quality: 'Very bad'\n        };\n        data.push({\n          date,\n          day: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'][date.getDay()],\n          hours: sleepData.hours,\n          quality: sleepData.quality,\n          color: getQualityColor(sleepData.quality),\n          week: week,\n          weekLabel: weekLabels[week]\n        });\n      }\n    }\n    return {\n      extendedChartData: data\n    };\n  }, [isExpanded, prevWeekData, weekData, nextWeekData, prevWeekStart, startOfWeek, nextWeekStart]);\n\n  // Calculate summary statistics for physician view\n  const weekSummary = useMemo(() => {\n    if (!weekData || weekData.length === 0) return null;\n    const totalHours = weekData.reduce((sum, day) => sum + day.hours, 0);\n    const avgHours = (totalHours / weekData.length).toFixed(1);\n\n    // Count quality levels\n    const qualityCounts = {};\n    Object.keys(qualityLevels).forEach(quality => {\n      qualityCounts[quality] = 0;\n    });\n    weekData.forEach(day => {\n      if (qualityCounts[day.quality] !== undefined) {\n        qualityCounts[day.quality]++;\n      }\n    });\n\n    // Find most common quality\n    const mostCommonQuality = Object.entries(qualityCounts).sort(([, a], [, b]) => b - a)[0];\n\n    // Calculate sleep consistency (how much variation in sleep hours)\n    const hourVariations = weekData.map(day => Math.abs(day.hours - parseFloat(avgHours)));\n    const avgVariation = (hourVariations.reduce((sum, v) => sum + v, 0) / hourVariations.length).toFixed(1);\n\n    // Sleep quality score (Very good=4, Fairly good=3, Fairly bad=2, Very bad=1)\n    const qualityScores = {\n      'Very good': 4,\n      'Fairly good': 3,\n      'Fairly bad': 2,\n      'Very bad': 1\n    };\n    const avgQualityScore = weekData.reduce((sum, day) => sum + (qualityScores[day.quality] || 0), 0) / weekData.length;\n    const qualityAssessment = avgQualityScore >= 3.5 ? 'Good' : avgQualityScore >= 2.5 ? 'Fair' : 'Poor';\n\n    // Count nights with adequate sleep (7+ hours)\n    const adequateSleepNights = weekData.filter(day => day.hours >= 7).length;\n    return {\n      totalHours: totalHours.toFixed(1),\n      avgHours,\n      mostCommonQuality: mostCommonQuality[0],\n      mostCommonQualityCount: mostCommonQuality[1],\n      avgVariation,\n      qualityAssessment,\n      adequateSleepNights,\n      daysTracked: weekData.length\n    };\n  }, [weekData]);\n\n  // Calculate 3-month summary statistics for physician view\n  const threeMonthSummary = useMemo(() => {\n    if (!threeMonthData || threeMonthData.length === 0) return null;\n    const totalHours = threeMonthData.reduce((sum, day) => sum + day.hours, 0);\n    const avgHours = (totalHours / threeMonthData.length).toFixed(1);\n\n    // Count quality levels\n    const qualityCounts = {};\n    Object.keys(qualityLevels).forEach(quality => {\n      qualityCounts[quality] = 0;\n    });\n    threeMonthData.forEach(day => {\n      if (qualityCounts[day.quality] !== undefined) {\n        qualityCounts[day.quality]++;\n      }\n    });\n\n    // Find most common quality\n    const mostCommonQuality = Object.entries(qualityCounts).sort(([, a], [, b]) => b - a)[0];\n\n    // Calculate sleep consistency (how much variation in sleep hours)\n    const hourVariations = threeMonthData.map(day => Math.abs(day.hours - parseFloat(avgHours)));\n    const avgVariation = (hourVariations.reduce((sum, v) => sum + v, 0) / hourVariations.length).toFixed(1);\n    return {\n      totalHours: totalHours.toFixed(1),\n      avgHours,\n      mostCommonQuality: mostCommonQuality[0],\n      mostCommonQualityCount: mostCommonQuality[1],\n      avgVariation,\n      daysTracked: threeMonthData.length\n    };\n  }, [threeMonthData]);\n\n  // Line Chart Component for Sleep Duration\n  const SleepLineChart = ({\n    data\n  }) => {\n    if (!data || data.length === 0) return null;\n    const maxHours = Math.max(...data.map(d => d.hours));\n    const minHours = 0; // Always start Y-axis at 0\n    const range = Math.max(maxHours - minHours, 1); // Ensure minimum range of 1\n    const padding = Math.max(range * 0.1, 0.5); // 10% padding, minimum 0.5\n    const chartHeight = 200;\n    const chartWidth = 400;\n    const paddingX = 40;\n    const paddingY = 20;\n    const getX = index => paddingX + index * (chartWidth - 2 * paddingX) / Math.max(data.length - 1, 1);\n    const getY = hours => chartHeight - paddingY - (hours - minHours + padding) / (range + 2 * padding) * (chartHeight - 2 * paddingY);\n    const pathData = data.map((day, index) => {\n      const x = getX(index);\n      const y = getY(day.hours);\n      return `${index === 0 ? 'M' : 'L'} ${x} ${y}`;\n    }).join(' ');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sleep-line-chart\",\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        width: \"100%\",\n        height: chartHeight,\n        viewBox: `0 0 ${chartWidth} ${chartHeight}`,\n        children: [[0, 2, 4, 6, 8, 10, 12].map(hours => {\n          if (hours > maxHours + padding) return null; // Don't show grid lines above data range\n          const y = getY(hours);\n          return /*#__PURE__*/_jsxDEV(\"g\", {\n            children: [/*#__PURE__*/_jsxDEV(\"line\", {\n              x1: paddingX,\n              y1: y,\n              x2: chartWidth - paddingX,\n              y2: y,\n              stroke: \"#e0e0e0\",\n              strokeWidth: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n              x: paddingX - 10,\n              y: y + 4,\n              fontSize: \"12\",\n              fill: \"#666\",\n              textAnchor: \"end\",\n              children: [hours, \"h\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 17\n            }, this)]\n          }, hours, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"path\", {\n          d: pathData,\n          fill: \"none\",\n          stroke: \"#007bff\",\n          strokeWidth: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), data.map((day, index) => {\n          const x = getX(index);\n          const y = getY(day.hours);\n          return /*#__PURE__*/_jsxDEV(\"g\", {\n            children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n              cx: x,\n              cy: y,\n              r: \"6\",\n              fill: getQualityColor(day.quality),\n              stroke: \"#fff\",\n              strokeWidth: \"2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n              x: x,\n              y: y - 15,\n              fontSize: \"10\",\n              fill: \"#333\",\n              textAnchor: \"middle\",\n              children: [day.hours.toFixed(1), \"h\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n              x: x,\n              y: chartHeight - 20,\n              fontSize: \"10\",\n              fill: \"#000\",\n              textAnchor: \"middle\",\n              fontWeight: \"400\",\n              children: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'][new Date(day.date).getDay()]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n              x: x,\n              y: chartHeight - 5,\n              fontSize: \"10\",\n              fill: \"#666\",\n              textAnchor: \"middle\",\n              children: new Date(day.date).getDate()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sleep-chart-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sleep-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"chart-title\",\n        children: \"Sleep Quality & Duration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"chart-subtitle\",\n        children: nav.getCurrentMonthYear()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view-toggle\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `toggle-btn ${!useLineChart ? 'active' : ''}`,\n          onClick: () => setUseLineChart(false),\n          children: \"Bar Chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `toggle-btn ${useLineChart ? 'active' : ''}`,\n          onClick: () => setUseLineChart(true),\n          children: \"Line Chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 9\n    }, this), useLineChart ? /*#__PURE__*/_jsxDEV(SleepLineChart, {\n      data: weekData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sleep-chart\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sleep-quality-row\",\n        children: weekData.map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sleep-quality-item\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sleep-quality-indicator\",\n            style: {\n              backgroundColor: getQualityColor(day.quality)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 19\n          }, this)\n        }, `quality-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bed-icons-row\",\n        children: weekData.map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bed-item\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bed-icon-wrapper\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              viewBox: \"0 0 486.5 225.1\",\n              className: \"bed-icon\",\n              children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M471.9,68.9c-8,0-14.5,6.5-14.5,14.5v68.6H26.1l-.6-139.3c0-7-5.8-12.7-12.8-12.7h0C5.7,0,0,5.7,0,12.8v199.6c0,7,5.7,12.8,12.7,12.8s12.8-5.7,12.8-12.8v-37h431.9v35.2c0,8,6.5,14.5,14.5,14.5s14.5-6.5,14.5-14.5v-127.1c0-8-6.5-14.5-14.5-14.5ZM483.7,210.6c0,6.5-5.3,11.8-11.8,11.8s-11.8-5.3-11.8-11.8v-38H22.7v39.7c0,5.5-4.5,10-10,10s-10-4.5-10-10V12.8C2.8,7.3,7.3,2.8,12.7,2.8h0c5.5,0,9.9,4.5,10,9.9l.6,142.1h436.8v-71.4c0-6.5,5.3-11.7,11.8-11.7s11.8,5.3,11.8,11.7v127.1Z\",\n                fill: \"#D2B48C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M29.9,94.2v54.5h425.4v-54.5H29.9ZM452.5,145.9H32.7v-48.9h419.8v48.9Z\",\n                fill: \"#e0e0e0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n                x: \"32.7\",\n                y: \"97\",\n                width: `${day.hours / 10 * 419.8}`,\n                height: \"48.9\",\n                fill: \"#FF4500\",\n                className: \"sleep-fill-rect\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M112.8,46.3h-55.4c-12.1,0-22,9.9-22,22s9.9,22,22,22h55.4c12.1,0,22-9.9,22-22s-9.9-22-22-22ZM112.8,87.5h-55.4c-10.6,0-19.2-8.6-19.2-19.2s8.6-19.2,19.2-19.2h55.4c10.6,0,19.2,8.6,19.2,19.2s-8.6,19.2-19.2,19.2Z\",\n                fill: \"#FFFFFF\",\n                stroke: \"#AAAAAA\",\n                strokeWidth: \"1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 19\n          }, this)\n        }, `bed-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sleep-info-row\",\n        children: weekData.map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sleep-info-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sleep-hours\",\n            children: [day.hours.toFixed(1), \"h\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"day-label\",\n            children: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'][new Date(day.date).getDay()]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date-label\",\n            children: new Date(day.date).getDate()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 19\n          }, this)]\n        }, `info-${index}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Legend, {\n      title: \"Sleep Quality\",\n      items: legendItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 9\n    }, this), viewMode === 'physician' && weekSummary && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"summary-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Week Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Average Sleep:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [weekSummary.avgHours, \" hours/night\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Total Sleep:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [weekSummary.totalHours, \" hours\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Sleep Consistency:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [\"\\xB1\", weekSummary.avgVariation, \" hours variation\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Common Quality:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [weekSummary.mostCommonQuality, \" (\", weekSummary.mostCommonQualityCount, \"x)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 13\n      }, this), threeMonthSummary && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"3-Month Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Average Sleep:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [threeMonthSummary.avgHours, \" hours/night\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Total Sleep:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [threeMonthSummary.totalHours, \" hours\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Sleep Consistency:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [\"\\xB1\", threeMonthSummary.avgVariation, \" hours variation\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Common Quality:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [threeMonthSummary.mostCommonQuality, \" (\", threeMonthSummary.mostCommonQualityCount, \"x)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 312,\n    columnNumber: 7\n  }, this);\n};\n_s(SleepChart, \"ExBLlmvSu81F/uG09J4t2l1v684=\", false, function () {\n  return [usePatientData, useChartNavigation];\n});\n_c = SleepChart;\nexport default SleepChart;\nvar _c;\n$RefreshReg$(_c, \"SleepChart\");","map":{"version":3,"names":["React","useState","useMemo","useRef","usePatientData","useChartNavigation","Legend","jsxDEV","_jsxDEV","SleepChart","patientId","isExpanded","onExpand","viewMode","navigation","_s","sleepData","loading","error","useLineChart","setUseLineChart","useInternalNavigation","internalNavigation","nav","start","startOfWeek","end","endOfWeek","getDateRange","weekData","filter","d","date","prevWeekStart","Date","setDate","getDate","prevWeekEnd","prevWeekData","nextWeekStart","nextWeekEnd","nextWeekData","startOfThreeMonths","endOfThreeMonths","getThreeMonthRange","threeMonthData","formatDateRange","data","length","startDate","toLocaleDateString","month","day","endDate","qualityLevels","getQualityColor","quality","legendItems","Object","entries","map","label","color","extendedChartData","allWeeksData","dateMap","Map","forEach","item","dateKey","toDateString","set","weekLabels","week","weekStart","get","hours","push","getDay","weekLabel","weekSummary","totalHours","reduce","sum","avgHours","toFixed","qualityCounts","keys","undefined","mostCommonQuality","sort","a","b","hourVariations","Math","abs","parseFloat","avgVariation","v","qualityScores","avgQualityScore","qualityAssessment","adequateSleepNights","mostCommonQualityCount","daysTracked","threeMonthSummary","SleepLineChart","maxHours","max","minHours","range","padding","chartHeight","chartWidth","paddingX","paddingY","getX","index","getY","pathData","x","y","join","className","children","width","height","viewBox","x1","y1","x2","y2","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","fill","textAnchor","cx","cy","r","fontWeight","getCurrentMonthYear","onClick","style","backgroundColor","title","items","_c","$RefreshReg$"],"sources":["C:/Users/Matteo/Working_Folder/a. MCC Thesis Local/MCC_digital_health_data_visualizations/src/components/patient_charts/SleepChart.js"],"sourcesContent":["/*\n SleepChart.js - Sleep Pattern Monitoring Visualization\n \n This component provides comprehensive sleep tracking:\n - Sleep duration and quality rating visualization\n - Weekly sleep pattern analysis\n - Color-coded sleep quality indicators\n - Interactive tooltips with sleep details\n - Navigation controls for time periods\n - Integration with patient data and chart navigation\n \n Architecture:\n - Uses custom SVG for bar chart visualization\n - Implements sleep quality categorization system\n - Provides color-coded quality indicators for easy interpretation\n - Supports expandable views\n - Implements time-based navigation and data filtering\n \n Visualizatoin Features:\n - Bar chart showing daily sleep duration\n - Color-coded quality indicators (Very good, Fairly good, Fairly bad, Very bad)\n - Interactive tooltips with detailed sleep information\n - Design adapting to container size\n - Dynamic Y-axis scaling based on sleep duration range\n \n Sleep Quality Categories:\n - Very good: Optimal sleep quality (green)\n - Fairly good: Good sleep quality (blue)\n - Fairly bad: Poor sleep quality (light green)\n - Very bad: Very poor sleep quality (dark green)\n \n Clinical Features:\n - Sleep duration tracking with recommended ranges\n - Quality assessment based on subjective ratings\n - Sleep consistency analysis\n - Summary statistics for physician view\n - Trend analysis over time periods\n \n Component Structure:\n - Chart Container: Main SVG container with sizing\n - Y-Axis: Duration scale with hour-based labeling\n - X-Axis: Day-of-week labels with date information\n - Data Bars: Sleep duration bars with quality color coding\n - Legend: Sleep quality explanations\n - Tooltip: Detailed sleep information on hover\n \n Essential for sleep hygiene monitoring and sleep disorder assessment.\n */\n\nimport React, { useState, useMemo, useRef } from 'react';\n\nimport usePatientData from '../../hooks/usePatientData';\nimport useChartNavigation from '../../hooks/useChartNavigation';\nimport Legend from '../Legend';\nimport './SleepChart.css';\n\n\nconst SleepChart = ({ patientId, isExpanded, onExpand, viewMode = 'patient', navigation }) => {\n  const { sleepData, loading, error } = usePatientData(patientId, 'sleep');\n  const [useLineChart, setUseLineChart] = useState(false); // Toggle state for chart view\n  \n  // Use navigation from parent or fallback to internal navigation\n  const useInternalNavigation = !navigation;\n  const internalNavigation = useChartNavigation('sleep');\n  const nav = navigation || internalNavigation;\n\n  const { start: startOfWeek, end: endOfWeek } = nav.getDateRange();\n  const weekData = sleepData.filter(d => d.date >= startOfWeek && d.date <= endOfWeek);\n\n  // Get previous week data\n  const prevWeekStart = new Date(startOfWeek);\n  prevWeekStart.setDate(prevWeekStart.getDate() - 7);\n  const prevWeekEnd = new Date(startOfWeek);\n  prevWeekEnd.setDate(prevWeekEnd.getDate() - 1);\n  const prevWeekData = sleepData.filter(d => d.date >= prevWeekStart && d.date <= prevWeekEnd);\n\n  // Get next week data\n  const nextWeekStart = new Date(endOfWeek);\n  nextWeekStart.setDate(nextWeekStart.getDate() + 1);\n  const nextWeekEnd = new Date(nextWeekStart);\n  nextWeekEnd.setDate(nextWeekEnd.getDate() + 6);\n  const nextWeekData = sleepData.filter(d => d.date >= nextWeekStart && d.date <= nextWeekEnd);\n\n  // Get 3-month data\n  const { start: startOfThreeMonths, end: endOfThreeMonths } = nav.getThreeMonthRange();\n  const threeMonthData = sleepData.filter(d => d.date >= startOfThreeMonths && d.date <= endOfThreeMonths);\n\n  const formatDateRange = (data) => {\n    if (!data || data.length === 0) return '';\n    const startDate = new Date(data[0].date).toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\n    const endDate = new Date(data[data.length - 1].date).toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\n    return `${startDate} to ${endDate}`;\n  };\n\n  const qualityLevels = {\n    'Very good': 'var(--chart-color-sleep-very-good)',\n    'Fairly good': 'var(--chart-color-sleep-fairly-good)',\n    'Fairly bad': 'var(--chart-color-sleep-fairly-bad)',\n    'Very bad': 'var(--chart-color-sleep-very-bad)',\n  };\n\n  const getQualityColor = (quality) => qualityLevels[quality] || '#D3D3D3';\n\n  const legendItems = Object.entries(qualityLevels).map(([label, color]) => ({\n    label,\n    color,\n  }));\n\n  // Process data for extended chart (3 weeks)\n  const { extendedChartData } = useMemo(() => {\n    if (!isExpanded) return { extendedChartData: [] };\n\n    // Combine all three weeks of data\n    const allWeeksData = [...prevWeekData, ...weekData, ...nextWeekData];\n    \n    // Create a map of dates to sleep data for all 3 weeks\n    const dateMap = new Map();\n    allWeeksData.forEach(item => {\n      const dateKey = item.date.toDateString();\n      dateMap.set(dateKey, item);\n    });\n\n    // Generate chart data for all 21 days (3 weeks)\n    const data = [];\n    const weekLabels = ['Prev Week', 'Current Week', 'Next Week'];\n    \n    for (let week = 0; week < 3; week++) {\n      const weekStart = week === 0 ? prevWeekStart : week === 1 ? startOfWeek : nextWeekStart;\n      \n      for (let day = 0; day < 7; day++) {\n        const date = new Date(weekStart);\n        date.setDate(date.getDate() + day);\n        const dateKey = date.toDateString();\n        const sleepData = dateMap.get(dateKey) || { hours: 0, quality: 'Very bad' };\n        \n        data.push({\n          date,\n          day: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'][date.getDay()],\n          hours: sleepData.hours,\n          quality: sleepData.quality,\n          color: getQualityColor(sleepData.quality),\n          week: week,\n          weekLabel: weekLabels[week]\n        });\n      }\n    }\n\n    return { extendedChartData: data };\n  }, [isExpanded, prevWeekData, weekData, nextWeekData, prevWeekStart, startOfWeek, nextWeekStart]);\n\n  // Calculate summary statistics for physician view\n  const weekSummary = useMemo(() => {\n    if (!weekData || weekData.length === 0) return null;\n\n    const totalHours = weekData.reduce((sum, day) => sum + day.hours, 0);\n    const avgHours = (totalHours / weekData.length).toFixed(1);\n\n    // Count quality levels\n    const qualityCounts = {};\n    Object.keys(qualityLevels).forEach(quality => {\n      qualityCounts[quality] = 0;\n    });\n\n    weekData.forEach(day => {\n      if (qualityCounts[day.quality] !== undefined) {\n        qualityCounts[day.quality]++;\n      }\n    });\n\n    // Find most common quality\n    const mostCommonQuality = Object.entries(qualityCounts)\n      .sort(([,a], [,b]) => b - a)[0];\n\n    // Calculate sleep consistency (how much variation in sleep hours)\n    const hourVariations = weekData.map(day => Math.abs(day.hours - parseFloat(avgHours)));\n    const avgVariation = (hourVariations.reduce((sum, v) => sum + v, 0) / hourVariations.length).toFixed(1);\n\n    // Sleep quality score (Very good=4, Fairly good=3, Fairly bad=2, Very bad=1)\n    const qualityScores = {\n      'Very good': 4,\n      'Fairly good': 3,\n      'Fairly bad': 2,\n      'Very bad': 1\n    };\n    const avgQualityScore = weekData.reduce((sum, day) => sum + (qualityScores[day.quality] || 0), 0) / weekData.length;\n    const qualityAssessment = avgQualityScore >= 3.5 ? 'Good' : avgQualityScore >= 2.5 ? 'Fair' : 'Poor';\n\n    // Count nights with adequate sleep (7+ hours)\n    const adequateSleepNights = weekData.filter(day => day.hours >= 7).length;\n\n    return {\n      totalHours: totalHours.toFixed(1),\n      avgHours,\n      mostCommonQuality: mostCommonQuality[0],\n      mostCommonQualityCount: mostCommonQuality[1],\n      avgVariation,\n      qualityAssessment,\n      adequateSleepNights,\n      daysTracked: weekData.length\n    };\n  }, [weekData]);\n\n  // Calculate 3-month summary statistics for physician view\n  const threeMonthSummary = useMemo(() => {\n    if (!threeMonthData || threeMonthData.length === 0) return null;\n\n    const totalHours = threeMonthData.reduce((sum, day) => sum + day.hours, 0);\n    const avgHours = (totalHours / threeMonthData.length).toFixed(1);\n\n    // Count quality levels\n    const qualityCounts = {};\n    Object.keys(qualityLevels).forEach(quality => {\n      qualityCounts[quality] = 0;\n    });\n\n    threeMonthData.forEach(day => {\n      if (qualityCounts[day.quality] !== undefined) {\n        qualityCounts[day.quality]++;\n      }\n    });\n\n    // Find most common quality\n    const mostCommonQuality = Object.entries(qualityCounts)\n      .sort(([,a], [,b]) => b - a)[0];\n\n    // Calculate sleep consistency (how much variation in sleep hours)\n    const hourVariations = threeMonthData.map(day => Math.abs(day.hours - parseFloat(avgHours)));\n    const avgVariation = (hourVariations.reduce((sum, v) => sum + v, 0) / hourVariations.length).toFixed(1);\n\n    return {\n      totalHours: totalHours.toFixed(1),\n      avgHours,\n      mostCommonQuality: mostCommonQuality[0],\n      mostCommonQualityCount: mostCommonQuality[1],\n      avgVariation,\n      daysTracked: threeMonthData.length\n    };\n  }, [threeMonthData]);\n\n  // Line Chart Component for Sleep Duration\n  const SleepLineChart = ({ data }) => {\n    if (!data || data.length === 0) return null;\n\n    const maxHours = Math.max(...data.map(d => d.hours));\n    const minHours = 0; // Always start Y-axis at 0\n    const range = Math.max(maxHours - minHours, 1); // Ensure minimum range of 1\n    const padding = Math.max(range * 0.1, 0.5); // 10% padding, minimum 0.5\n    const chartHeight = 200;\n    const chartWidth = 400;\n    const paddingX = 40;\n    const paddingY = 20;\n\n    const getX = (index) => paddingX + (index * (chartWidth - 2 * paddingX) / Math.max(data.length - 1, 1));\n    const getY = (hours) => chartHeight - paddingY - ((hours - minHours + padding) / (range + 2 * padding)) * (chartHeight - 2 * paddingY);\n\n    const pathData = data.map((day, index) => {\n      const x = getX(index);\n      const y = getY(day.hours);\n      return `${index === 0 ? 'M' : 'L'} ${x} ${y}`;\n    }).join(' ');\n\n    return (\n      <div className=\"sleep-line-chart\">\n        <svg width=\"100%\" height={chartHeight} viewBox={`0 0 ${chartWidth} ${chartHeight}`}>\n          {/* Grid lines */}\n          {[0, 2, 4, 6, 8, 10, 12].map(hours => {\n            if (hours > maxHours + padding) return null; // Don't show grid lines above data range\n            const y = getY(hours);\n            return (\n              <g key={hours}>\n                <line x1={paddingX} y1={y} x2={chartWidth - paddingX} y2={y} stroke=\"#e0e0e0\" strokeWidth=\"1\" />\n                <text x={paddingX - 10} y={y + 4} fontSize=\"12\" fill=\"#666\" textAnchor=\"end\">{hours}h</text>\n              </g>\n            );\n          })}\n          \n          {/* Line path */}\n          <path d={pathData} fill=\"none\" stroke=\"#007bff\" strokeWidth=\"3\" />\n          \n          {/* Data points */}\n          {data.map((day, index) => {\n            const x = getX(index);\n            const y = getY(day.hours);\n            return (\n              <g key={index}>\n                <circle \n                  cx={x} \n                  cy={y} \n                  r=\"6\" \n                  fill={getQualityColor(day.quality)}\n                  stroke=\"#fff\"\n                  strokeWidth=\"2\"\n                />\n                <text x={x} y={y - 15} fontSize=\"10\" fill=\"#333\" textAnchor=\"middle\">\n                  {day.hours.toFixed(1)}h\n                </text>\n                <text x={x} y={chartHeight - 20} fontSize=\"10\" fill=\"#000\" textAnchor=\"middle\" fontWeight=\"400\">\n                  {['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'][new Date(day.date).getDay()]}\n                </text>\n                <text x={x} y={chartHeight - 5} fontSize=\"10\" fill=\"#666\" textAnchor=\"middle\">\n                  {new Date(day.date).getDate()}\n                </text>\n              </g>\n            );\n          })}\n        </svg>\n      </div>\n    );\n  };\n\n  return (\n      <div className=\"sleep-chart-content\">\n        <div className=\"sleep-header\">\n          <h3 className=\"chart-title\">Sleep Quality & Duration</h3>\n          <h4 className=\"chart-subtitle\">{nav.getCurrentMonthYear()}</h4>\n          \n          {/* View Toggle */}\n          <div className=\"view-toggle\">\n            <button \n              className={`toggle-btn ${!useLineChart ? 'active' : ''}`}\n              onClick={() => setUseLineChart(false)}\n            >\n              Bar Chart\n            </button>\n            <button \n              className={`toggle-btn ${useLineChart ? 'active' : ''}`}\n              onClick={() => setUseLineChart(true)}\n            >\n              Line Chart\n            </button>\n          </div>\n        </div>\n        \n        {/* Conditional Chart Rendering */}\n        {useLineChart ? (\n          <SleepLineChart data={weekData} />\n        ) : (\n          <div className=\"sleep-chart\">\n            {/* Sleep Quality Indicators Row */}\n            <div className=\"sleep-quality-row\">\n              {weekData.map((day, index) => (\n                <div key={`quality-${index}`} className=\"sleep-quality-item\">\n                  <div \n                    className=\"sleep-quality-indicator\"\n                    style={{ backgroundColor: getQualityColor(day.quality) }}\n                  ></div>\n                </div>\n              ))}\n            </div>\n            \n            {/* Bed Icons Row */}\n            <div className=\"bed-icons-row\">\n              {weekData.map((day, index) => (\n                <div key={`bed-${index}`} className=\"bed-item\">\n                  <div className=\"bed-icon-wrapper\">\n                    <svg viewBox=\"0 0 486.5 225.1\" className=\"bed-icon\">\n                      <path d=\"M471.9,68.9c-8,0-14.5,6.5-14.5,14.5v68.6H26.1l-.6-139.3c0-7-5.8-12.7-12.8-12.7h0C5.7,0,0,5.7,0,12.8v199.6c0,7,5.7,12.8,12.7,12.8s12.8-5.7,12.8-12.8v-37h431.9v35.2c0,8,6.5,14.5,14.5,14.5s14.5-6.5,14.5-14.5v-127.1c0-8-6.5-14.5-14.5-14.5ZM483.7,210.6c0,6.5-5.3,11.8-11.8,11.8s-11.8-5.3-11.8-11.8v-38H22.7v39.7c0,5.5-4.5,10-10,10s-10-4.5-10-10V12.8C2.8,7.3,7.3,2.8,12.7,2.8h0c5.5,0,9.9,4.5,10,9.9l.6,142.1h436.8v-71.4c0-6.5,5.3-11.7,11.8-11.7s11.8,5.3,11.8,11.7v127.1Z\" fill=\"#D2B48C\"/>\n                      <path d=\"M29.9,94.2v54.5h425.4v-54.5H29.9ZM452.5,145.9H32.7v-48.9h419.8v48.9Z\" fill=\"#e0e0e0\"/>\n                      <rect x=\"32.7\" y=\"97\" width={`${(day.hours / 10) * 419.8}`} height=\"48.9\" fill=\"#FF4500\" className=\"sleep-fill-rect\" />\n                      <path d=\"M112.8,46.3h-55.4c-12.1,0-22,9.9-22,22s9.9,22,22,22h55.4c12.1,0,22-9.9,22-22s-9.9-22-22-22ZM112.8,87.5h-55.4c-10.6,0-19.2-8.6-19.2-19.2s8.6-19.2,19.2-19.2h55.4c10.6,0,19.2,8.6,19.2,19.2s-8.6,19.2-19.2,19.2Z\" fill=\"#FFFFFF\" stroke=\"#AAAAAA\" strokeWidth=\"1\"/>\n                    </svg>\n                  </div>\n                </div>\n              ))}\n            </div>\n            \n            {/* Sleep Information Row */}\n            <div className=\"sleep-info-row\">\n              {weekData.map((day, index) => (\n                <div key={`info-${index}`} className=\"sleep-info-item\">\n                  <div className=\"sleep-hours\">{day.hours.toFixed(1)}h</div>\n                  <div className=\"day-label\">{['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'][new Date(day.date).getDay()]}</div>\n                  <div className=\"date-label\">{new Date(day.date).getDate()}</div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n        \n        <Legend title=\"Sleep Quality\" items={legendItems} />\n\n        {/* Show summary for physician view only */}\n        {viewMode === 'physician' && weekSummary && (\n          <div className=\"summary-container\">\n            <div className=\"chart-summary\">\n              <h4>Week Summary</h4>\n              <div className=\"summary-stats\">\n                <div className=\"stat-item\">\n                  <span className=\"stat-label\">Average Sleep:</span>\n                  <span className=\"stat-value\">\n                    {weekSummary.avgHours} hours/night\n                  </span>\n                </div>\n                <div className=\"stat-item\">\n                  <span className=\"stat-label\">Total Sleep:</span>\n                  <span className=\"stat-value\">\n                    {weekSummary.totalHours} hours\n                  </span>\n                </div>\n                <div className=\"stat-item\">\n                  <span className=\"stat-label\">Sleep Consistency:</span>\n                  <span className=\"stat-value\">\n                    ±{weekSummary.avgVariation} hours variation\n                  </span>\n                </div>\n\n                <div className=\"stat-item\">\n                  <span className=\"stat-label\">Common Quality:</span>\n                  <span className=\"stat-value\">\n                    {weekSummary.mostCommonQuality} ({weekSummary.mostCommonQualityCount}x)\n                  </span>\n                </div>\n\n              </div>\n            </div>\n            \n            {threeMonthSummary && (\n              <div className=\"chart-summary\">\n                <h4>3-Month Summary</h4>\n                <div className=\"summary-stats\">\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">Average Sleep:</span>\n                    <span className=\"stat-value\">\n                      {threeMonthSummary.avgHours} hours/night\n                    </span>\n                  </div>\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">Total Sleep:</span>\n                    <span className=\"stat-value\">\n                      {threeMonthSummary.totalHours} hours\n                    </span>\n                  </div>\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">Sleep Consistency:</span>\n                    <span className=\"stat-value\">\n                      ±{threeMonthSummary.avgVariation} hours variation\n                    </span>\n                  </div>\n\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">Common Quality:</span>\n                    <span className=\"stat-value\">\n                      {threeMonthSummary.mostCommonQuality} ({threeMonthSummary.mostCommonQualityCount}x)\n                    </span>\n                  </div>\n\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n  );\n};\n\nexport default SleepChart;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,OAAO,EAAEC,MAAM,QAAQ,OAAO;AAExD,OAAOC,cAAc,MAAM,4BAA4B;AACvD,OAAOC,kBAAkB,MAAM,gCAAgC;AAC/D,OAAOC,MAAM,MAAM,WAAW;AAC9B,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1B,MAAMC,UAAU,GAAGA,CAAC;EAAEC,SAAS;EAAEC,UAAU;EAAEC,QAAQ;EAAEC,QAAQ,GAAG,SAAS;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAC5F,MAAM;IAAEC,SAAS;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGd,cAAc,CAACM,SAAS,EAAE,OAAO,CAAC;EACxE,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEzD;EACA,MAAMoB,qBAAqB,GAAG,CAACP,UAAU;EACzC,MAAMQ,kBAAkB,GAAGjB,kBAAkB,CAAC,OAAO,CAAC;EACtD,MAAMkB,GAAG,GAAGT,UAAU,IAAIQ,kBAAkB;EAE5C,MAAM;IAAEE,KAAK,EAAEC,WAAW;IAAEC,GAAG,EAAEC;EAAU,CAAC,GAAGJ,GAAG,CAACK,YAAY,CAAC,CAAC;EACjE,MAAMC,QAAQ,GAAGb,SAAS,CAACc,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,IAAIP,WAAW,IAAIM,CAAC,CAACC,IAAI,IAAIL,SAAS,CAAC;;EAEpF;EACA,MAAMM,aAAa,GAAG,IAAIC,IAAI,CAACT,WAAW,CAAC;EAC3CQ,aAAa,CAACE,OAAO,CAACF,aAAa,CAACG,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;EAClD,MAAMC,WAAW,GAAG,IAAIH,IAAI,CAACT,WAAW,CAAC;EACzCY,WAAW,CAACF,OAAO,CAACE,WAAW,CAACD,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;EAC9C,MAAME,YAAY,GAAGtB,SAAS,CAACc,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,IAAIC,aAAa,IAAIF,CAAC,CAACC,IAAI,IAAIK,WAAW,CAAC;;EAE5F;EACA,MAAME,aAAa,GAAG,IAAIL,IAAI,CAACP,SAAS,CAAC;EACzCY,aAAa,CAACJ,OAAO,CAACI,aAAa,CAACH,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;EAClD,MAAMI,WAAW,GAAG,IAAIN,IAAI,CAACK,aAAa,CAAC;EAC3CC,WAAW,CAACL,OAAO,CAACK,WAAW,CAACJ,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;EAC9C,MAAMK,YAAY,GAAGzB,SAAS,CAACc,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,IAAIO,aAAa,IAAIR,CAAC,CAACC,IAAI,IAAIQ,WAAW,CAAC;;EAE5F;EACA,MAAM;IAAEhB,KAAK,EAAEkB,kBAAkB;IAAEhB,GAAG,EAAEiB;EAAiB,CAAC,GAAGpB,GAAG,CAACqB,kBAAkB,CAAC,CAAC;EACrF,MAAMC,cAAc,GAAG7B,SAAS,CAACc,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,IAAIU,kBAAkB,IAAIX,CAAC,CAACC,IAAI,IAAIW,gBAAgB,CAAC;EAExG,MAAMG,eAAe,GAAIC,IAAI,IAAK;IAChC,IAAI,CAACA,IAAI,IAAIA,IAAI,CAACC,MAAM,KAAK,CAAC,EAAE,OAAO,EAAE;IACzC,MAAMC,SAAS,GAAG,IAAIf,IAAI,CAACa,IAAI,CAAC,CAAC,CAAC,CAACf,IAAI,CAAC,CAACkB,kBAAkB,CAAC,OAAO,EAAE;MAAEC,KAAK,EAAE,OAAO;MAAEC,GAAG,EAAE;IAAU,CAAC,CAAC;IACxG,MAAMC,OAAO,GAAG,IAAInB,IAAI,CAACa,IAAI,CAACA,IAAI,CAACC,MAAM,GAAG,CAAC,CAAC,CAAChB,IAAI,CAAC,CAACkB,kBAAkB,CAAC,OAAO,EAAE;MAAEC,KAAK,EAAE,OAAO;MAAEC,GAAG,EAAE;IAAU,CAAC,CAAC;IACpH,OAAO,GAAGH,SAAS,OAAOI,OAAO,EAAE;EACrC,CAAC;EAED,MAAMC,aAAa,GAAG;IACpB,WAAW,EAAE,oCAAoC;IACjD,aAAa,EAAE,sCAAsC;IACrD,YAAY,EAAE,qCAAqC;IACnD,UAAU,EAAE;EACd,CAAC;EAED,MAAMC,eAAe,GAAIC,OAAO,IAAKF,aAAa,CAACE,OAAO,CAAC,IAAI,SAAS;EAExE,MAAMC,WAAW,GAAGC,MAAM,CAACC,OAAO,CAACL,aAAa,CAAC,CAACM,GAAG,CAAC,CAAC,CAACC,KAAK,EAAEC,KAAK,CAAC,MAAM;IACzED,KAAK;IACLC;EACF,CAAC,CAAC,CAAC;;EAEH;EACA,MAAM;IAAEC;EAAkB,CAAC,GAAG7D,OAAO,CAAC,MAAM;IAC1C,IAAI,CAACS,UAAU,EAAE,OAAO;MAAEoD,iBAAiB,EAAE;IAAG,CAAC;;IAEjD;IACA,MAAMC,YAAY,GAAG,CAAC,GAAG1B,YAAY,EAAE,GAAGT,QAAQ,EAAE,GAAGY,YAAY,CAAC;;IAEpE;IACA,MAAMwB,OAAO,GAAG,IAAIC,GAAG,CAAC,CAAC;IACzBF,YAAY,CAACG,OAAO,CAACC,IAAI,IAAI;MAC3B,MAAMC,OAAO,GAAGD,IAAI,CAACpC,IAAI,CAACsC,YAAY,CAAC,CAAC;MACxCL,OAAO,CAACM,GAAG,CAACF,OAAO,EAAED,IAAI,CAAC;IAC5B,CAAC,CAAC;;IAEF;IACA,MAAMrB,IAAI,GAAG,EAAE;IACf,MAAMyB,UAAU,GAAG,CAAC,WAAW,EAAE,cAAc,EAAE,WAAW,CAAC;IAE7D,KAAK,IAAIC,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAG,CAAC,EAAEA,IAAI,EAAE,EAAE;MACnC,MAAMC,SAAS,GAAGD,IAAI,KAAK,CAAC,GAAGxC,aAAa,GAAGwC,IAAI,KAAK,CAAC,GAAGhD,WAAW,GAAGc,aAAa;MAEvF,KAAK,IAAIa,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAG,CAAC,EAAEA,GAAG,EAAE,EAAE;QAChC,MAAMpB,IAAI,GAAG,IAAIE,IAAI,CAACwC,SAAS,CAAC;QAChC1C,IAAI,CAACG,OAAO,CAACH,IAAI,CAACI,OAAO,CAAC,CAAC,GAAGgB,GAAG,CAAC;QAClC,MAAMiB,OAAO,GAAGrC,IAAI,CAACsC,YAAY,CAAC,CAAC;QACnC,MAAMtD,SAAS,GAAGiD,OAAO,CAACU,GAAG,CAACN,OAAO,CAAC,IAAI;UAAEO,KAAK,EAAE,CAAC;UAAEpB,OAAO,EAAE;QAAW,CAAC;QAE3ET,IAAI,CAAC8B,IAAI,CAAC;UACR7C,IAAI;UACJoB,GAAG,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAACpB,IAAI,CAAC8C,MAAM,CAAC,CAAC,CAAC;UACrEF,KAAK,EAAE5D,SAAS,CAAC4D,KAAK;UACtBpB,OAAO,EAAExC,SAAS,CAACwC,OAAO;UAC1BM,KAAK,EAAEP,eAAe,CAACvC,SAAS,CAACwC,OAAO,CAAC;UACzCiB,IAAI,EAAEA,IAAI;UACVM,SAAS,EAAEP,UAAU,CAACC,IAAI;QAC5B,CAAC,CAAC;MACJ;IACF;IAEA,OAAO;MAAEV,iBAAiB,EAAEhB;IAAK,CAAC;EACpC,CAAC,EAAE,CAACpC,UAAU,EAAE2B,YAAY,EAAET,QAAQ,EAAEY,YAAY,EAAER,aAAa,EAAER,WAAW,EAAEc,aAAa,CAAC,CAAC;;EAEjG;EACA,MAAMyC,WAAW,GAAG9E,OAAO,CAAC,MAAM;IAChC,IAAI,CAAC2B,QAAQ,IAAIA,QAAQ,CAACmB,MAAM,KAAK,CAAC,EAAE,OAAO,IAAI;IAEnD,MAAMiC,UAAU,GAAGpD,QAAQ,CAACqD,MAAM,CAAC,CAACC,GAAG,EAAE/B,GAAG,KAAK+B,GAAG,GAAG/B,GAAG,CAACwB,KAAK,EAAE,CAAC,CAAC;IACpE,MAAMQ,QAAQ,GAAG,CAACH,UAAU,GAAGpD,QAAQ,CAACmB,MAAM,EAAEqC,OAAO,CAAC,CAAC,CAAC;;IAE1D;IACA,MAAMC,aAAa,GAAG,CAAC,CAAC;IACxB5B,MAAM,CAAC6B,IAAI,CAACjC,aAAa,CAAC,CAACa,OAAO,CAACX,OAAO,IAAI;MAC5C8B,aAAa,CAAC9B,OAAO,CAAC,GAAG,CAAC;IAC5B,CAAC,CAAC;IAEF3B,QAAQ,CAACsC,OAAO,CAACf,GAAG,IAAI;MACtB,IAAIkC,aAAa,CAAClC,GAAG,CAACI,OAAO,CAAC,KAAKgC,SAAS,EAAE;QAC5CF,aAAa,CAAClC,GAAG,CAACI,OAAO,CAAC,EAAE;MAC9B;IACF,CAAC,CAAC;;IAEF;IACA,MAAMiC,iBAAiB,GAAG/B,MAAM,CAACC,OAAO,CAAC2B,aAAa,CAAC,CACpDI,IAAI,CAAC,CAAC,GAAEC,CAAC,CAAC,EAAE,GAAEC,CAAC,CAAC,KAAKA,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,CAAC;;IAEjC;IACA,MAAME,cAAc,GAAGhE,QAAQ,CAAC+B,GAAG,CAACR,GAAG,IAAI0C,IAAI,CAACC,GAAG,CAAC3C,GAAG,CAACwB,KAAK,GAAGoB,UAAU,CAACZ,QAAQ,CAAC,CAAC,CAAC;IACtF,MAAMa,YAAY,GAAG,CAACJ,cAAc,CAACX,MAAM,CAAC,CAACC,GAAG,EAAEe,CAAC,KAAKf,GAAG,GAAGe,CAAC,EAAE,CAAC,CAAC,GAAGL,cAAc,CAAC7C,MAAM,EAAEqC,OAAO,CAAC,CAAC,CAAC;;IAEvG;IACA,MAAMc,aAAa,GAAG;MACpB,WAAW,EAAE,CAAC;MACd,aAAa,EAAE,CAAC;MAChB,YAAY,EAAE,CAAC;MACf,UAAU,EAAE;IACd,CAAC;IACD,MAAMC,eAAe,GAAGvE,QAAQ,CAACqD,MAAM,CAAC,CAACC,GAAG,EAAE/B,GAAG,KAAK+B,GAAG,IAAIgB,aAAa,CAAC/C,GAAG,CAACI,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG3B,QAAQ,CAACmB,MAAM;IACnH,MAAMqD,iBAAiB,GAAGD,eAAe,IAAI,GAAG,GAAG,MAAM,GAAGA,eAAe,IAAI,GAAG,GAAG,MAAM,GAAG,MAAM;;IAEpG;IACA,MAAME,mBAAmB,GAAGzE,QAAQ,CAACC,MAAM,CAACsB,GAAG,IAAIA,GAAG,CAACwB,KAAK,IAAI,CAAC,CAAC,CAAC5B,MAAM;IAEzE,OAAO;MACLiC,UAAU,EAAEA,UAAU,CAACI,OAAO,CAAC,CAAC,CAAC;MACjCD,QAAQ;MACRK,iBAAiB,EAAEA,iBAAiB,CAAC,CAAC,CAAC;MACvCc,sBAAsB,EAAEd,iBAAiB,CAAC,CAAC,CAAC;MAC5CQ,YAAY;MACZI,iBAAiB;MACjBC,mBAAmB;MACnBE,WAAW,EAAE3E,QAAQ,CAACmB;IACxB,CAAC;EACH,CAAC,EAAE,CAACnB,QAAQ,CAAC,CAAC;;EAEd;EACA,MAAM4E,iBAAiB,GAAGvG,OAAO,CAAC,MAAM;IACtC,IAAI,CAAC2C,cAAc,IAAIA,cAAc,CAACG,MAAM,KAAK,CAAC,EAAE,OAAO,IAAI;IAE/D,MAAMiC,UAAU,GAAGpC,cAAc,CAACqC,MAAM,CAAC,CAACC,GAAG,EAAE/B,GAAG,KAAK+B,GAAG,GAAG/B,GAAG,CAACwB,KAAK,EAAE,CAAC,CAAC;IAC1E,MAAMQ,QAAQ,GAAG,CAACH,UAAU,GAAGpC,cAAc,CAACG,MAAM,EAAEqC,OAAO,CAAC,CAAC,CAAC;;IAEhE;IACA,MAAMC,aAAa,GAAG,CAAC,CAAC;IACxB5B,MAAM,CAAC6B,IAAI,CAACjC,aAAa,CAAC,CAACa,OAAO,CAACX,OAAO,IAAI;MAC5C8B,aAAa,CAAC9B,OAAO,CAAC,GAAG,CAAC;IAC5B,CAAC,CAAC;IAEFX,cAAc,CAACsB,OAAO,CAACf,GAAG,IAAI;MAC5B,IAAIkC,aAAa,CAAClC,GAAG,CAACI,OAAO,CAAC,KAAKgC,SAAS,EAAE;QAC5CF,aAAa,CAAClC,GAAG,CAACI,OAAO,CAAC,EAAE;MAC9B;IACF,CAAC,CAAC;;IAEF;IACA,MAAMiC,iBAAiB,GAAG/B,MAAM,CAACC,OAAO,CAAC2B,aAAa,CAAC,CACpDI,IAAI,CAAC,CAAC,GAAEC,CAAC,CAAC,EAAE,GAAEC,CAAC,CAAC,KAAKA,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,CAAC;;IAEjC;IACA,MAAME,cAAc,GAAGhD,cAAc,CAACe,GAAG,CAACR,GAAG,IAAI0C,IAAI,CAACC,GAAG,CAAC3C,GAAG,CAACwB,KAAK,GAAGoB,UAAU,CAACZ,QAAQ,CAAC,CAAC,CAAC;IAC5F,MAAMa,YAAY,GAAG,CAACJ,cAAc,CAACX,MAAM,CAAC,CAACC,GAAG,EAAEe,CAAC,KAAKf,GAAG,GAAGe,CAAC,EAAE,CAAC,CAAC,GAAGL,cAAc,CAAC7C,MAAM,EAAEqC,OAAO,CAAC,CAAC,CAAC;IAEvG,OAAO;MACLJ,UAAU,EAAEA,UAAU,CAACI,OAAO,CAAC,CAAC,CAAC;MACjCD,QAAQ;MACRK,iBAAiB,EAAEA,iBAAiB,CAAC,CAAC,CAAC;MACvCc,sBAAsB,EAAEd,iBAAiB,CAAC,CAAC,CAAC;MAC5CQ,YAAY;MACZO,WAAW,EAAE3D,cAAc,CAACG;IAC9B,CAAC;EACH,CAAC,EAAE,CAACH,cAAc,CAAC,CAAC;;EAEpB;EACA,MAAM6D,cAAc,GAAGA,CAAC;IAAE3D;EAAK,CAAC,KAAK;IACnC,IAAI,CAACA,IAAI,IAAIA,IAAI,CAACC,MAAM,KAAK,CAAC,EAAE,OAAO,IAAI;IAE3C,MAAM2D,QAAQ,GAAGb,IAAI,CAACc,GAAG,CAAC,GAAG7D,IAAI,CAACa,GAAG,CAAC7B,CAAC,IAAIA,CAAC,CAAC6C,KAAK,CAAC,CAAC;IACpD,MAAMiC,QAAQ,GAAG,CAAC,CAAC,CAAC;IACpB,MAAMC,KAAK,GAAGhB,IAAI,CAACc,GAAG,CAACD,QAAQ,GAAGE,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;IAChD,MAAME,OAAO,GAAGjB,IAAI,CAACc,GAAG,CAACE,KAAK,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;IAC5C,MAAME,WAAW,GAAG,GAAG;IACvB,MAAMC,UAAU,GAAG,GAAG;IACtB,MAAMC,QAAQ,GAAG,EAAE;IACnB,MAAMC,QAAQ,GAAG,EAAE;IAEnB,MAAMC,IAAI,GAAIC,KAAK,IAAKH,QAAQ,GAAIG,KAAK,IAAIJ,UAAU,GAAG,CAAC,GAAGC,QAAQ,CAAC,GAAGpB,IAAI,CAACc,GAAG,CAAC7D,IAAI,CAACC,MAAM,GAAG,CAAC,EAAE,CAAC,CAAE;IACvG,MAAMsE,IAAI,GAAI1C,KAAK,IAAKoC,WAAW,GAAGG,QAAQ,GAAI,CAACvC,KAAK,GAAGiC,QAAQ,GAAGE,OAAO,KAAKD,KAAK,GAAG,CAAC,GAAGC,OAAO,CAAC,IAAKC,WAAW,GAAG,CAAC,GAAGG,QAAQ,CAAC;IAEtI,MAAMI,QAAQ,GAAGxE,IAAI,CAACa,GAAG,CAAC,CAACR,GAAG,EAAEiE,KAAK,KAAK;MACxC,MAAMG,CAAC,GAAGJ,IAAI,CAACC,KAAK,CAAC;MACrB,MAAMI,CAAC,GAAGH,IAAI,CAAClE,GAAG,CAACwB,KAAK,CAAC;MACzB,OAAO,GAAGyC,KAAK,KAAK,CAAC,GAAG,GAAG,GAAG,GAAG,IAAIG,CAAC,IAAIC,CAAC,EAAE;IAC/C,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;IAEZ,oBACElH,OAAA;MAAKmH,SAAS,EAAC,kBAAkB;MAAAC,QAAA,eAC/BpH,OAAA;QAAKqH,KAAK,EAAC,MAAM;QAACC,MAAM,EAAEd,WAAY;QAACe,OAAO,EAAE,OAAOd,UAAU,IAAID,WAAW,EAAG;QAAAY,QAAA,GAEhF,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAChE,GAAG,CAACgB,KAAK,IAAI;UACpC,IAAIA,KAAK,GAAG+B,QAAQ,GAAGI,OAAO,EAAE,OAAO,IAAI,CAAC,CAAC;UAC7C,MAAMU,CAAC,GAAGH,IAAI,CAAC1C,KAAK,CAAC;UACrB,oBACEpE,OAAA;YAAAoH,QAAA,gBACEpH,OAAA;cAAMwH,EAAE,EAAEd,QAAS;cAACe,EAAE,EAAER,CAAE;cAACS,EAAE,EAAEjB,UAAU,GAAGC,QAAS;cAACiB,EAAE,EAAEV,CAAE;cAACW,MAAM,EAAC,SAAS;cAACC,WAAW,EAAC;YAAG;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAChGjI,OAAA;cAAMgH,CAAC,EAAEN,QAAQ,GAAG,EAAG;cAACO,CAAC,EAAEA,CAAC,GAAG,CAAE;cAACiB,QAAQ,EAAC,IAAI;cAACC,IAAI,EAAC,MAAM;cAACC,UAAU,EAAC,KAAK;cAAAhB,QAAA,GAAEhD,KAAK,EAAC,GAAC;YAAA;cAAA0D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA,GAFtF7D,KAAK;YAAA0D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAGV,CAAC;QAER,CAAC,CAAC,eAGFjI,OAAA;UAAMuB,CAAC,EAAEwF,QAAS;UAACoB,IAAI,EAAC,MAAM;UAACP,MAAM,EAAC,SAAS;UAACC,WAAW,EAAC;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAGjE1F,IAAI,CAACa,GAAG,CAAC,CAACR,GAAG,EAAEiE,KAAK,KAAK;UACxB,MAAMG,CAAC,GAAGJ,IAAI,CAACC,KAAK,CAAC;UACrB,MAAMI,CAAC,GAAGH,IAAI,CAAClE,GAAG,CAACwB,KAAK,CAAC;UACzB,oBACEpE,OAAA;YAAAoH,QAAA,gBACEpH,OAAA;cACEqI,EAAE,EAAErB,CAAE;cACNsB,EAAE,EAAErB,CAAE;cACNsB,CAAC,EAAC,GAAG;cACLJ,IAAI,EAAEpF,eAAe,CAACH,GAAG,CAACI,OAAO,CAAE;cACnC4E,MAAM,EAAC,MAAM;cACbC,WAAW,EAAC;YAAG;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChB,CAAC,eACFjI,OAAA;cAAMgH,CAAC,EAAEA,CAAE;cAACC,CAAC,EAAEA,CAAC,GAAG,EAAG;cAACiB,QAAQ,EAAC,IAAI;cAACC,IAAI,EAAC,MAAM;cAACC,UAAU,EAAC,QAAQ;cAAAhB,QAAA,GACjExE,GAAG,CAACwB,KAAK,CAACS,OAAO,CAAC,CAAC,CAAC,EAAC,GACxB;YAAA;cAAAiD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACPjI,OAAA;cAAMgH,CAAC,EAAEA,CAAE;cAACC,CAAC,EAAET,WAAW,GAAG,EAAG;cAAC0B,QAAQ,EAAC,IAAI;cAACC,IAAI,EAAC,MAAM;cAACC,UAAU,EAAC,QAAQ;cAACI,UAAU,EAAC,KAAK;cAAApB,QAAA,EAC5F,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,IAAI1F,IAAI,CAACkB,GAAG,CAACpB,IAAI,CAAC,CAAC8C,MAAM,CAAC,CAAC;YAAC;cAAAwD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3E,CAAC,eACPjI,OAAA;cAAMgH,CAAC,EAAEA,CAAE;cAACC,CAAC,EAAET,WAAW,GAAG,CAAE;cAAC0B,QAAQ,EAAC,IAAI;cAACC,IAAI,EAAC,MAAM;cAACC,UAAU,EAAC,QAAQ;cAAAhB,QAAA,EAC1E,IAAI1F,IAAI,CAACkB,GAAG,CAACpB,IAAI,CAAC,CAACI,OAAO,CAAC;YAAC;cAAAkG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzB,CAAC;UAAA,GAjBDpB,KAAK;YAAAiB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAkBV,CAAC;QAER,CAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV,CAAC;EAED,oBACIjI,OAAA;IAAKmH,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClCpH,OAAA;MAAKmH,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BpH,OAAA;QAAImH,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAAwB;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzDjI,OAAA;QAAImH,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAAErG,GAAG,CAAC0H,mBAAmB,CAAC;MAAC;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAG/DjI,OAAA;QAAKmH,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1BpH,OAAA;UACEmH,SAAS,EAAE,cAAc,CAACxG,YAAY,GAAG,QAAQ,GAAG,EAAE,EAAG;UACzD+H,OAAO,EAAEA,CAAA,KAAM9H,eAAe,CAAC,KAAK,CAAE;UAAAwG,QAAA,EACvC;QAED;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTjI,OAAA;UACEmH,SAAS,EAAE,cAAcxG,YAAY,GAAG,QAAQ,GAAG,EAAE,EAAG;UACxD+H,OAAO,EAAEA,CAAA,KAAM9H,eAAe,CAAC,IAAI,CAAE;UAAAwG,QAAA,EACtC;QAED;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAGLtH,YAAY,gBACXX,OAAA,CAACkG,cAAc;MAAC3D,IAAI,EAAElB;IAAS;MAAAyG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAElCjI,OAAA;MAAKmH,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAE1BpH,OAAA;QAAKmH,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EAC/B/F,QAAQ,CAAC+B,GAAG,CAAC,CAACR,GAAG,EAAEiE,KAAK,kBACvB7G,OAAA;UAA8BmH,SAAS,EAAC,oBAAoB;UAAAC,QAAA,eAC1DpH,OAAA;YACEmH,SAAS,EAAC,yBAAyB;YACnCwB,KAAK,EAAE;cAAEC,eAAe,EAAE7F,eAAe,CAACH,GAAG,CAACI,OAAO;YAAE;UAAE;YAAA8E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrD;QAAC,GAJC,WAAWpB,KAAK,EAAE;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKvB,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAGNjI,OAAA;QAAKmH,SAAS,EAAC,eAAe;QAAAC,QAAA,EAC3B/F,QAAQ,CAAC+B,GAAG,CAAC,CAACR,GAAG,EAAEiE,KAAK,kBACvB7G,OAAA;UAA0BmH,SAAS,EAAC,UAAU;UAAAC,QAAA,eAC5CpH,OAAA;YAAKmH,SAAS,EAAC,kBAAkB;YAAAC,QAAA,eAC/BpH,OAAA;cAAKuH,OAAO,EAAC,iBAAiB;cAACJ,SAAS,EAAC,UAAU;cAAAC,QAAA,gBACjDpH,OAAA;gBAAMuB,CAAC,EAAC,kdAAkd;gBAAC4G,IAAI,EAAC;cAAS;gBAAAL,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAC,CAAC,eAC3ejI,OAAA;gBAAMuB,CAAC,EAAC,sEAAsE;gBAAC4G,IAAI,EAAC;cAAS;gBAAAL,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAC,CAAC,eAC/FjI,OAAA;gBAAMgH,CAAC,EAAC,MAAM;gBAACC,CAAC,EAAC,IAAI;gBAACI,KAAK,EAAE,GAAIzE,GAAG,CAACwB,KAAK,GAAG,EAAE,GAAI,KAAK,EAAG;gBAACkD,MAAM,EAAC,MAAM;gBAACa,IAAI,EAAC,SAAS;gBAAChB,SAAS,EAAC;cAAiB;gBAAAW,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eACvHjI,OAAA;gBAAMuB,CAAC,EAAC,gNAAgN;gBAAC4G,IAAI,EAAC,SAAS;gBAACP,MAAM,EAAC,SAAS;gBAACC,WAAW,EAAC;cAAG;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC,GARE,OAAOpB,KAAK,EAAE;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OASnB,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAGNjI,OAAA;QAAKmH,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAC5B/F,QAAQ,CAAC+B,GAAG,CAAC,CAACR,GAAG,EAAEiE,KAAK,kBACvB7G,OAAA;UAA2BmH,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBACpDpH,OAAA;YAAKmH,SAAS,EAAC,aAAa;YAAAC,QAAA,GAAExE,GAAG,CAACwB,KAAK,CAACS,OAAO,CAAC,CAAC,CAAC,EAAC,GAAC;UAAA;YAAAiD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC1DjI,OAAA;YAAKmH,SAAS,EAAC,WAAW;YAAAC,QAAA,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,IAAI1F,IAAI,CAACkB,GAAG,CAACpB,IAAI,CAAC,CAAC8C,MAAM,CAAC,CAAC;UAAC;YAAAwD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACjHjI,OAAA;YAAKmH,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAE,IAAI1F,IAAI,CAACkB,GAAG,CAACpB,IAAI,CAAC,CAACI,OAAO,CAAC;UAAC;YAAAkG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA,GAHxD,QAAQpB,KAAK,EAAE;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIpB,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,eAEDjI,OAAA,CAACF,MAAM;MAAC+I,KAAK,EAAC,eAAe;MAACC,KAAK,EAAE7F;IAAY;MAAA6E,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAGnD5H,QAAQ,KAAK,WAAW,IAAImE,WAAW,iBACtCxE,OAAA;MAAKmH,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAChCpH,OAAA;QAAKmH,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5BpH,OAAA;UAAAoH,QAAA,EAAI;QAAY;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrBjI,OAAA;UAAKmH,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC5BpH,OAAA;YAAKmH,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACxBpH,OAAA;cAAMmH,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAC;YAAc;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAClDjI,OAAA;cAAMmH,SAAS,EAAC,YAAY;cAAAC,QAAA,GACzB5C,WAAW,CAACI,QAAQ,EAAC,cACxB;YAAA;cAAAkD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC,eACNjI,OAAA;YAAKmH,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACxBpH,OAAA;cAAMmH,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAC;YAAY;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAChDjI,OAAA;cAAMmH,SAAS,EAAC,YAAY;cAAAC,QAAA,GACzB5C,WAAW,CAACC,UAAU,EAAC,QAC1B;YAAA;cAAAqD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC,eACNjI,OAAA;YAAKmH,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACxBpH,OAAA;cAAMmH,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAC;YAAkB;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACtDjI,OAAA;cAAMmH,SAAS,EAAC,YAAY;cAAAC,QAAA,GAAC,MAC1B,EAAC5C,WAAW,CAACiB,YAAY,EAAC,kBAC7B;YAAA;cAAAqC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC,eAENjI,OAAA;YAAKmH,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACxBpH,OAAA;cAAMmH,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAC;YAAe;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACnDjI,OAAA;cAAMmH,SAAS,EAAC,YAAY;cAAAC,QAAA,GACzB5C,WAAW,CAACS,iBAAiB,EAAC,IAAE,EAACT,WAAW,CAACuB,sBAAsB,EAAC,IACvE;YAAA;cAAA+B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,EAELhC,iBAAiB,iBAChBjG,OAAA;QAAKmH,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5BpH,OAAA;UAAAoH,QAAA,EAAI;QAAe;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxBjI,OAAA;UAAKmH,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC5BpH,OAAA;YAAKmH,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACxBpH,OAAA;cAAMmH,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAC;YAAc;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAClDjI,OAAA;cAAMmH,SAAS,EAAC,YAAY;cAAAC,QAAA,GACzBnB,iBAAiB,CAACrB,QAAQ,EAAC,cAC9B;YAAA;cAAAkD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC,eACNjI,OAAA;YAAKmH,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACxBpH,OAAA;cAAMmH,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAC;YAAY;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAChDjI,OAAA;cAAMmH,SAAS,EAAC,YAAY;cAAAC,QAAA,GACzBnB,iBAAiB,CAACxB,UAAU,EAAC,QAChC;YAAA;cAAAqD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC,eACNjI,OAAA;YAAKmH,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACxBpH,OAAA;cAAMmH,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAC;YAAkB;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACtDjI,OAAA;cAAMmH,SAAS,EAAC,YAAY;cAAAC,QAAA,GAAC,MAC1B,EAACnB,iBAAiB,CAACR,YAAY,EAAC,kBACnC;YAAA;cAAAqC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC,eAENjI,OAAA;YAAKmH,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACxBpH,OAAA;cAAMmH,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAC;YAAe;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACnDjI,OAAA;cAAMmH,SAAS,EAAC,YAAY;cAAAC,QAAA,GACzBnB,iBAAiB,CAAChB,iBAAiB,EAAC,IAAE,EAACgB,iBAAiB,CAACF,sBAAsB,EAAC,IACnF;YAAA;cAAA+B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEZ,CAAC;AAAC1H,EAAA,CA5YIN,UAAU;EAAA,QACwBL,cAAc,EAKzBC,kBAAkB;AAAA;AAAAkJ,EAAA,GANzC9I,UAAU;AA8YhB,eAAeA,UAAU;AAAC,IAAA8I,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}