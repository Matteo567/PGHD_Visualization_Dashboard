{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matteo\\\\Working_Folder\\\\a. MCC Thesis Local\\\\MCC_digital_health_data_visualizations\\\\src\\\\components\\\\patient_charts\\\\ExerciseProgressChart.js\",\n  _s = $RefreshSig$();\n/**\r\n * ExerciseProgressChart.js - Exercise Progress Visualization for Physician View\r\n * \r\n * This component provides a physician-focused exercise progress visualization:\r\n * - Three exercise categories: Aerobic, Strength, and Flexibility/Balance\r\n * - Progress bars showing completion percentage against weekly goals\r\n * - Color-coded progress indicators (green for goal met, yellow for partial, red for not met)\r\n * - Weekly goal tracking with clear visual feedback\r\n * - Integration with patient data and chart navigation\r\n * \r\n * Architecture:\r\n * - Uses custom SVG for progress bar visualization\r\n * - Implements goal-based progress tracking\r\n * - Provides color-coded progress indicators\r\n * - Supports expandable views\r\n * - Implements time-based navigation and data filtering\r\n * \r\n * Exercise Categories:\r\n * - Aerobic: 150 minutes per week goal\r\n * - Strength: At least 2 sessions per week (minimum 10 minutes each)\r\n * - Flexibility/Balance: At least 1 session per week\r\n * \r\n * Component Structure:\r\n * - Chart Container: Main SVG container with sizing\r\n * - Progress Bars: Three horizontal progress bars with percentage completion\r\n * - Goal Indicators: Clear goal targets and current progress\r\n * - Color Coding: Visual feedback for goal achievement\r\n * - Summary Statistics: Weekly totals and goal achievement status\r\n * \r\n * Essential for physician exercise monitoring and goal tracking.\r\n */\n\nimport React, { useState, useMemo, useRef } from 'react';\nimport usePatientData from '../../hooks/usePatientData';\nimport useChartNavigation from '../../hooks/useChartNavigation';\nimport { createChartConfig } from '../chart-utils/ChartConfigFactory';\nimport './ExerciseProgressChart.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExerciseProgressChart = ({\n  patientId,\n  isExpanded = false,\n  onExpand,\n  viewMode = 'physician',\n  navigation\n}) => {\n  _s();\n  const {\n    exerciseData,\n    loading,\n    error\n  } = usePatientData(patientId, 'exercise');\n\n  // Use navigation from parent or fallback to internal navigation\n  const useInternalNavigation = !navigation;\n  const internalNavigation = useChartNavigation('exercise');\n  const nav = navigation || internalNavigation;\n  const config = createChartConfig('exercise', isExpanded);\n  const chartHeight = config.height - config.padding.top - config.padding.bottom;\n  const {\n    start: startOfWeek,\n    end: endOfWeek\n  } = nav.getDateRange();\n  const weekData = exerciseData.filter(d => {\n    if (!d.date) return false;\n    const itemDate = new Date(d.date);\n    return itemDate >= startOfWeek && itemDate <= endOfWeek;\n  });\n\n  // Calculate exercise progress for the week\n  const exerciseProgress = useMemo(() => {\n    if (!weekData.length) {\n      return {\n        aerobic: {\n          minutes: 0,\n          goal: 150,\n          percentage: 0,\n          status: 'not-met'\n        },\n        strength: {\n          sessions: 0,\n          goal: 2,\n          percentage: 0,\n          status: 'not-met'\n        },\n        flexibility: {\n          sessions: 0,\n          goal: 1,\n          percentage: 0,\n          status: 'not-met'\n        }\n      };\n    }\n\n    // Calculate aerobic minutes (walking, swimming, running, biking)\n    const aerobicMinutes = weekData.reduce((total, day) => {\n      return total + (Number(day.walking) || 0) + (Number(day.swimming) || 0) + (Number(day.running) || 0) + (Number(day.biking) || 0);\n    }, 0);\n\n    // Calculate strength sessions (resistance/weights with minimum 10 minutes)\n    const strengthSessions = weekData.filter(day => {\n      const strengthMinutes = Number(day['resistance/weights']) || 0;\n      return strengthMinutes >= 10;\n    }).length;\n\n    // Calculate flexibility/balance sessions (balance/stretching with any duration)\n    const flexibilitySessions = weekData.filter(day => {\n      const flexibilityMinutes = Number(day['balance/stretching']) || 0;\n      return flexibilityMinutes > 0;\n    }).length;\n\n    // Calculate percentages and status\n    const aerobicPercentage = Math.min(aerobicMinutes / 150 * 100, 100);\n    const strengthPercentage = Math.min(strengthSessions / 2 * 100, 100);\n    const flexibilityPercentage = Math.min(flexibilitySessions / 1 * 100, 100);\n    const getStatus = percentage => {\n      if (percentage >= 100) return 'met';\n      if (percentage >= 50) return 'partial';\n      return 'not-met';\n    };\n    return {\n      aerobic: {\n        minutes: aerobicMinutes,\n        goal: 150,\n        percentage: aerobicPercentage,\n        status: getStatus(aerobicPercentage)\n      },\n      strength: {\n        sessions: strengthSessions,\n        goal: 2,\n        percentage: strengthPercentage,\n        status: getStatus(strengthPercentage)\n      },\n      flexibility: {\n        sessions: flexibilitySessions,\n        goal: 1,\n        percentage: flexibilityPercentage,\n        status: getStatus(flexibilityPercentage)\n      }\n    };\n  }, [weekData]);\n  const getStatusColor = status => {\n    switch (status) {\n      case 'met':\n        return '#27ae60';\n      // Green\n      case 'partial':\n        return '#f39c12';\n      // Orange\n      case 'not-met':\n        return '#e74c3c';\n      // Red\n      default:\n        return '#bdc3c7';\n      // Gray\n    }\n  };\n  const getStatusText = status => {\n    switch (status) {\n      case 'met':\n        return 'Goal Met';\n      case 'partial':\n        return 'Partial';\n      case 'not-met':\n        return 'Not Met';\n      default:\n        return 'Unknown';\n    }\n  };\n  const categories = [{\n    key: 'aerobic',\n    label: 'Aerobic Activity',\n    emoji: '🏃‍♂️',\n    progress: exerciseProgress.aerobic,\n    description: '150 minutes per week'\n  }, {\n    key: 'strength',\n    label: 'Strength Training',\n    emoji: '🏋️',\n    progress: exerciseProgress.strength,\n    description: '2+ sessions per week (10+ min each)'\n  }, {\n    key: 'flexibility',\n    label: 'Flexibility/Balance',\n    emoji: '🧘',\n    progress: exerciseProgress.flexibility,\n    description: '1+ session per week'\n  }];\n  const barHeight = 40;\n  const barSpacing = 60;\n  const startY = config.padding.top + 50;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `exercise-progress-chart-container ${isExpanded ? 'expanded' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"chart-title\",\n      children: \"Exercise Progress\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"chart-subtitle\",\n      children: nav.getCurrentMonthYear()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: \"100%\",\n      viewBox: `0 0 ${config.width} ${config.height}`,\n      className: \"exercise-progress-svg\",\n      children: categories.map((category, index) => {\n        const y = startY + index * barSpacing;\n        const barWidth = config.width - config.padding.left - config.padding.right - 200;\n        const progressWidth = category.progress.percentage / 100 * barWidth;\n        return /*#__PURE__*/_jsxDEV(\"g\", {\n          className: \"progress-bar-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n            x: config.padding.left,\n            y: y - barHeight / 2,\n            width: barWidth,\n            height: barHeight,\n            fill: \"#ecf0f1\",\n            stroke: \"#bdc3c7\",\n            strokeWidth: \"1\",\n            rx: \"5\",\n            className: \"progress-background\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n            x: config.padding.left,\n            y: y - barHeight / 2,\n            width: progressWidth,\n            height: barHeight,\n            fill: getStatusColor(category.progress.status),\n            rx: \"5\",\n            className: \"progress-fill\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n            x: config.padding.left - 10,\n            y: y + 5,\n            textAnchor: \"end\",\n            fontSize: \"14\",\n            fill: \"var(--chart-color-text-primary)\",\n            className: \"category-label\",\n            children: [category.emoji, \" \", category.label]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n            x: config.padding.left + barWidth + 10,\n            y: y + 5,\n            textAnchor: \"start\",\n            fontSize: \"12\",\n            fill: \"var(--chart-color-text-primary)\",\n            className: \"percentage-label\",\n            children: [Math.round(category.progress.percentage), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: config.padding.left + barWidth + 10,\n            cy: y - 10,\n            r: \"6\",\n            fill: getStatusColor(category.progress.status),\n            className: \"status-indicator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n            x: config.padding.left + barWidth + 30,\n            y: y - 5,\n            textAnchor: \"start\",\n            fontSize: \"10\",\n            fill: \"var(--chart-color-text-secondary)\",\n            className: \"progress-text\",\n            children: category.key === 'aerobic' ? `${category.progress.minutes}/${category.progress.goal} min` : `${category.progress.sessions}/${category.progress.goal} sessions`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n            x: config.padding.left + barWidth + 30,\n            y: y + 8,\n            textAnchor: \"start\",\n            fontSize: \"9\",\n            fill: \"var(--chart-color-text-secondary)\",\n            className: \"goal-description\",\n            children: category.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this)]\n        }, category.key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exercise-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Weekly Goals Met:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: [Object.values(exerciseProgress).filter(p => p.status === 'met').length, \"/3\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Total Aerobic:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: [exerciseProgress.aerobic.minutes, \" minutes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Strength Sessions:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: [exerciseProgress.strength.sessions, \" sessions\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Flexibility Sessions:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: [exerciseProgress.flexibility.sessions, \" sessions\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-legend\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-color\",\n            style: {\n              backgroundColor: '#27ae60'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Goal Met\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-color\",\n            style: {\n              backgroundColor: '#f39c12'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Partial\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-color\",\n            style: {\n              backgroundColor: '#e74c3c'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Not Met\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n};\n_s(ExerciseProgressChart, \"4elc6i0wJ7yLGIiGiWyNgsJGvpw=\", false, function () {\n  return [usePatientData, useChartNavigation];\n});\n_c = ExerciseProgressChart;\nexport default ExerciseProgressChart;\nvar _c;\n$RefreshReg$(_c, \"ExerciseProgressChart\");","map":{"version":3,"names":["React","useState","useMemo","useRef","usePatientData","useChartNavigation","createChartConfig","jsxDEV","_jsxDEV","ExerciseProgressChart","patientId","isExpanded","onExpand","viewMode","navigation","_s","exerciseData","loading","error","useInternalNavigation","internalNavigation","nav","config","chartHeight","height","padding","top","bottom","start","startOfWeek","end","endOfWeek","getDateRange","weekData","filter","d","date","itemDate","Date","exerciseProgress","length","aerobic","minutes","goal","percentage","status","strength","sessions","flexibility","aerobicMinutes","reduce","total","day","Number","walking","swimming","running","biking","strengthSessions","strengthMinutes","flexibilitySessions","flexibilityMinutes","aerobicPercentage","Math","min","strengthPercentage","flexibilityPercentage","getStatus","getStatusColor","getStatusText","categories","key","label","emoji","progress","description","barHeight","barSpacing","startY","className","children","fileName","_jsxFileName","lineNumber","columnNumber","getCurrentMonthYear","width","viewBox","map","category","index","y","barWidth","left","right","progressWidth","x","fill","stroke","strokeWidth","rx","textAnchor","fontSize","round","cx","cy","r","Object","values","p","style","backgroundColor","_c","$RefreshReg$"],"sources":["C:/Users/Matteo/Working_Folder/a. MCC Thesis Local/MCC_digital_health_data_visualizations/src/components/patient_charts/ExerciseProgressChart.js"],"sourcesContent":["/**\r\n * ExerciseProgressChart.js - Exercise Progress Visualization for Physician View\r\n * \r\n * This component provides a physician-focused exercise progress visualization:\r\n * - Three exercise categories: Aerobic, Strength, and Flexibility/Balance\r\n * - Progress bars showing completion percentage against weekly goals\r\n * - Color-coded progress indicators (green for goal met, yellow for partial, red for not met)\r\n * - Weekly goal tracking with clear visual feedback\r\n * - Integration with patient data and chart navigation\r\n * \r\n * Architecture:\r\n * - Uses custom SVG for progress bar visualization\r\n * - Implements goal-based progress tracking\r\n * - Provides color-coded progress indicators\r\n * - Supports expandable views\r\n * - Implements time-based navigation and data filtering\r\n * \r\n * Exercise Categories:\r\n * - Aerobic: 150 minutes per week goal\r\n * - Strength: At least 2 sessions per week (minimum 10 minutes each)\r\n * - Flexibility/Balance: At least 1 session per week\r\n * \r\n * Component Structure:\r\n * - Chart Container: Main SVG container with sizing\r\n * - Progress Bars: Three horizontal progress bars with percentage completion\r\n * - Goal Indicators: Clear goal targets and current progress\r\n * - Color Coding: Visual feedback for goal achievement\r\n * - Summary Statistics: Weekly totals and goal achievement status\r\n * \r\n * Essential for physician exercise monitoring and goal tracking.\r\n */\r\n\r\nimport React, { useState, useMemo, useRef } from 'react';\r\nimport usePatientData from '../../hooks/usePatientData';\r\nimport useChartNavigation from '../../hooks/useChartNavigation';\r\nimport { createChartConfig } from '../chart-utils/ChartConfigFactory';\r\nimport './ExerciseProgressChart.css';\r\n\r\nconst ExerciseProgressChart = ({ patientId, isExpanded = false, onExpand, viewMode = 'physician', navigation }) => {\r\n  const { exerciseData, loading, error } = usePatientData(patientId, 'exercise');\r\n  \r\n  // Use navigation from parent or fallback to internal navigation\r\n  const useInternalNavigation = !navigation;\r\n  const internalNavigation = useChartNavigation('exercise');\r\n  const nav = navigation || internalNavigation;\r\n\r\n  const config = createChartConfig('exercise', isExpanded);\r\n  const chartHeight = config.height - config.padding.top - config.padding.bottom;\r\n\r\n  const { start: startOfWeek, end: endOfWeek } = nav.getDateRange();\r\n\r\n  const weekData = exerciseData.filter(d => {\r\n    if (!d.date) return false;\r\n    const itemDate = new Date(d.date);\r\n    return itemDate >= startOfWeek && itemDate <= endOfWeek;\r\n  });\r\n\r\n  // Calculate exercise progress for the week\r\n  const exerciseProgress = useMemo(() => {\r\n    if (!weekData.length) {\r\n      return {\r\n        aerobic: { minutes: 0, goal: 150, percentage: 0, status: 'not-met' },\r\n        strength: { sessions: 0, goal: 2, percentage: 0, status: 'not-met' },\r\n        flexibility: { sessions: 0, goal: 1, percentage: 0, status: 'not-met' }\r\n      };\r\n    }\r\n\r\n    // Calculate aerobic minutes (walking, swimming, running, biking)\r\n    const aerobicMinutes = weekData.reduce((total, day) => {\r\n      return total + (Number(day.walking) || 0) + (Number(day.swimming) || 0) + \r\n             (Number(day.running) || 0) + (Number(day.biking) || 0);\r\n    }, 0);\r\n\r\n    // Calculate strength sessions (resistance/weights with minimum 10 minutes)\r\n    const strengthSessions = weekData.filter(day => {\r\n      const strengthMinutes = Number(day['resistance/weights']) || 0;\r\n      return strengthMinutes >= 10;\r\n    }).length;\r\n\r\n    // Calculate flexibility/balance sessions (balance/stretching with any duration)\r\n    const flexibilitySessions = weekData.filter(day => {\r\n      const flexibilityMinutes = Number(day['balance/stretching']) || 0;\r\n      return flexibilityMinutes > 0;\r\n    }).length;\r\n\r\n    // Calculate percentages and status\r\n    const aerobicPercentage = Math.min((aerobicMinutes / 150) * 100, 100);\r\n    const strengthPercentage = Math.min((strengthSessions / 2) * 100, 100);\r\n    const flexibilityPercentage = Math.min((flexibilitySessions / 1) * 100, 100);\r\n\r\n    const getStatus = (percentage) => {\r\n      if (percentage >= 100) return 'met';\r\n      if (percentage >= 50) return 'partial';\r\n      return 'not-met';\r\n    };\r\n\r\n    return {\r\n      aerobic: {\r\n        minutes: aerobicMinutes,\r\n        goal: 150,\r\n        percentage: aerobicPercentage,\r\n        status: getStatus(aerobicPercentage)\r\n      },\r\n      strength: {\r\n        sessions: strengthSessions,\r\n        goal: 2,\r\n        percentage: strengthPercentage,\r\n        status: getStatus(strengthPercentage)\r\n      },\r\n      flexibility: {\r\n        sessions: flexibilitySessions,\r\n        goal: 1,\r\n        percentage: flexibilityPercentage,\r\n        status: getStatus(flexibilityPercentage)\r\n      }\r\n    };\r\n  }, [weekData]);\r\n\r\n  const getStatusColor = (status) => {\r\n    switch (status) {\r\n      case 'met': return '#27ae60'; // Green\r\n      case 'partial': return '#f39c12'; // Orange\r\n      case 'not-met': return '#e74c3c'; // Red\r\n      default: return '#bdc3c7'; // Gray\r\n    }\r\n  };\r\n\r\n  const getStatusText = (status) => {\r\n    switch (status) {\r\n      case 'met': return 'Goal Met';\r\n      case 'partial': return 'Partial';\r\n      case 'not-met': return 'Not Met';\r\n      default: return 'Unknown';\r\n    }\r\n  };\r\n\r\n  const categories = [\r\n    {\r\n      key: 'aerobic',\r\n      label: 'Aerobic Activity',\r\n      emoji: '🏃‍♂️',\r\n      progress: exerciseProgress.aerobic,\r\n      description: '150 minutes per week'\r\n    },\r\n    {\r\n      key: 'strength',\r\n      label: 'Strength Training',\r\n      emoji: '🏋️',\r\n      progress: exerciseProgress.strength,\r\n      description: '2+ sessions per week (10+ min each)'\r\n    },\r\n    {\r\n      key: 'flexibility',\r\n      label: 'Flexibility/Balance',\r\n      emoji: '🧘',\r\n      progress: exerciseProgress.flexibility,\r\n      description: '1+ session per week'\r\n    }\r\n  ];\r\n\r\n  const barHeight = 40;\r\n  const barSpacing = 60;\r\n  const startY = config.padding.top + 50;\r\n\r\n  return (\r\n    <div className={`exercise-progress-chart-container ${isExpanded ? 'expanded' : ''}`}>\r\n      <h3 className=\"chart-title\">Exercise Progress</h3>\r\n      <h4 className=\"chart-subtitle\">{nav.getCurrentMonthYear()}</h4>\r\n      \r\n      <svg \r\n        width=\"100%\" \r\n        viewBox={`0 0 ${config.width} ${config.height}`}\r\n        className=\"exercise-progress-svg\"\r\n      >\r\n        {/* Background bars */}\r\n        {categories.map((category, index) => {\r\n          const y = startY + index * barSpacing;\r\n          const barWidth = config.width - config.padding.left - config.padding.right - 200;\r\n          const progressWidth = (category.progress.percentage / 100) * barWidth;\r\n          \r\n          return (\r\n            <g key={category.key} className=\"progress-bar-group\">\r\n              {/* Background bar */}\r\n              <rect\r\n                x={config.padding.left}\r\n                y={y - barHeight / 2}\r\n                width={barWidth}\r\n                height={barHeight}\r\n                fill=\"#ecf0f1\"\r\n                stroke=\"#bdc3c7\"\r\n                strokeWidth=\"1\"\r\n                rx=\"5\"\r\n                className=\"progress-background\"\r\n              />\r\n              \r\n              {/* Progress bar */}\r\n              <rect\r\n                x={config.padding.left}\r\n                y={y - barHeight / 2}\r\n                width={progressWidth}\r\n                height={barHeight}\r\n                fill={getStatusColor(category.progress.status)}\r\n                rx=\"5\"\r\n                className=\"progress-fill\"\r\n              />\r\n              \r\n              {/* Category label */}\r\n              <text\r\n                x={config.padding.left - 10}\r\n                y={y + 5}\r\n                textAnchor=\"end\"\r\n                fontSize=\"14\"\r\n                fill=\"var(--chart-color-text-primary)\"\r\n                className=\"category-label\"\r\n              >\r\n                {category.emoji} {category.label}\r\n              </text>\r\n              \r\n              {/* Progress percentage */}\r\n              <text\r\n                x={config.padding.left + barWidth + 10}\r\n                y={y + 5}\r\n                textAnchor=\"start\"\r\n                fontSize=\"12\"\r\n                fill=\"var(--chart-color-text-primary)\"\r\n                className=\"percentage-label\"\r\n              >\r\n                {Math.round(category.progress.percentage)}%\r\n              </text>\r\n              \r\n              {/* Status indicator */}\r\n              <circle\r\n                cx={config.padding.left + barWidth + 10}\r\n                cy={y - 10}\r\n                r=\"6\"\r\n                fill={getStatusColor(category.progress.status)}\r\n                className=\"status-indicator\"\r\n              />\r\n              \r\n              {/* Current progress text */}\r\n              <text\r\n                x={config.padding.left + barWidth + 30}\r\n                y={y - 5}\r\n                textAnchor=\"start\"\r\n                fontSize=\"10\"\r\n                fill=\"var(--chart-color-text-secondary)\"\r\n                className=\"progress-text\"\r\n              >\r\n                {category.key === 'aerobic' \r\n                  ? `${category.progress.minutes}/${category.progress.goal} min`\r\n                  : `${category.progress.sessions}/${category.progress.goal} sessions`\r\n                }\r\n              </text>\r\n              \r\n              {/* Goal description */}\r\n              <text\r\n                x={config.padding.left + barWidth + 30}\r\n                y={y + 8}\r\n                textAnchor=\"start\"\r\n                fontSize=\"9\"\r\n                fill=\"var(--chart-color-text-secondary)\"\r\n                className=\"goal-description\"\r\n              >\r\n                {category.description}\r\n              </text>\r\n            </g>\r\n          );\r\n        })}\r\n      </svg>\r\n      \r\n      {/* Summary statistics */}\r\n      <div className=\"exercise-summary\">\r\n        <div className=\"summary-stats\">\r\n          <div className=\"stat-item\">\r\n            <span className=\"stat-label\">Weekly Goals Met:</span>\r\n            <span className=\"stat-value\">\r\n              {Object.values(exerciseProgress).filter(p => p.status === 'met').length}/3\r\n            </span>\r\n          </div>\r\n          <div className=\"stat-item\">\r\n            <span className=\"stat-label\">Total Aerobic:</span>\r\n            <span className=\"stat-value\">\r\n              {exerciseProgress.aerobic.minutes} minutes\r\n            </span>\r\n          </div>\r\n          <div className=\"stat-item\">\r\n            <span className=\"stat-label\">Strength Sessions:</span>\r\n            <span className=\"stat-value\">\r\n              {exerciseProgress.strength.sessions} sessions\r\n            </span>\r\n          </div>\r\n          <div className=\"stat-item\">\r\n            <span className=\"stat-label\">Flexibility Sessions:</span>\r\n            <span className=\"stat-value\">\r\n              {exerciseProgress.flexibility.sessions} sessions\r\n            </span>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Status legend */}\r\n        <div className=\"status-legend\">\r\n          <div className=\"legend-item\">\r\n            <div className=\"legend-color\" style={{ backgroundColor: '#27ae60' }}></div>\r\n            <span>Goal Met</span>\r\n          </div>\r\n          <div className=\"legend-item\">\r\n            <div className=\"legend-color\" style={{ backgroundColor: '#f39c12' }}></div>\r\n            <span>Partial</span>\r\n          </div>\r\n          <div className=\"legend-item\">\r\n            <div className=\"legend-color\" style={{ backgroundColor: '#e74c3c' }}></div>\r\n            <span>Not Met</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExerciseProgressChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}