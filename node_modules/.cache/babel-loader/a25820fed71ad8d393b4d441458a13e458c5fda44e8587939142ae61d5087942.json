{"ast":null,"code":"import { SIZING_CONSTANTS, calculateResponsiveDimensions, getConsistentPadding, getConsistentFontSizes } from '../../constants';\n\n/**\r\n * Factory for creating chart configurations with consistent sizing\r\n * Uses unified sizing logic for all chart types\r\n */\nexport const createChartConfig = (type, isExpanded, containerWidth = 400) => {\n  // Get consistent dimensions and styling\n  const {\n    width,\n    height\n  } = calculateResponsiveDimensions(containerWidth, isExpanded);\n  const padding = getConsistentPadding(isExpanded);\n  const fontSizes = getConsistentFontSizes(isExpanded);\n\n  // Base configuration that all charts share\n  const baseConfig = {\n    width,\n    height,\n    padding,\n    fontSize: fontSizes,\n    expanded: isExpanded,\n    containerWidth\n  };\n  switch (type) {\n    case 'glucose':\n      return {\n        ...baseConfig,\n        // Glucose-specific settings\n        dayWidth: isExpanded ? 54 : 45,\n        yAxisLabels: [0, 4, 8, 12],\n        yAxisRange: 12,\n        barWidth: isExpanded ? 8 : 6\n      };\n    case 'bloodPressure':\n      return {\n        ...baseConfig,\n        // Blood pressure-specific settings\n        yAxisRange: {\n          systolic: 200,\n          diastolic: 120\n        },\n        yAxisOffset: {\n          systolic: 0,\n          diastolic: 0\n        },\n        yAxisLabels: {\n          systolic: isExpanded ? [0, 40, 80, 120, 160, 200] : [0, 100, 200],\n          diastolic: isExpanded ? [0, 20, 40, 60, 80, 100, 120] : [0, 60, 120]\n        },\n        dayWidth: (width - padding.left - padding.right) / 7,\n        barWidth: isExpanded ? 12 : 6,\n        dayPadding: isExpanded ? 8 : 4\n      };\n    case 'exercise':\n      return {\n        ...baseConfig,\n        // Exercise-specific settings\n        dayWidth: isExpanded ? 90 : 38,\n        barWidth: isExpanded ? 25 : 20\n      };\n    case 'mealContents':\n      // Calculate meal-specific dimensions\n      const mealHeight = isExpanded ? 80 : 60;\n      const totalMealHeight = 4 * mealHeight;\n      const mealDayWidth = (width - padding.left - padding.right) / 7;\n      return {\n        ...baseConfig,\n        height: totalMealHeight + padding.top + padding.bottom,\n        // Meal-specific settings\n        mealHeight,\n        dayWidth: mealDayWidth,\n        totalMealHeight\n      };\n    case 'sleep':\n      return {\n        ...baseConfig,\n        // Sleep-specific settings\n        dayWidth: (width - padding.left - padding.right) / 7,\n        barWidth: isExpanded ? 12 : 6\n      };\n    case 'pain':\n      return {\n        ...baseConfig,\n        // Pain-specific settings\n        bodySvgWidth: isExpanded ? 100 : 80,\n        bodySvgHeight: isExpanded ? 200 : 160\n      };\n    case 'mood':\n      return {\n        ...baseConfig,\n        // Mood-specific settings\n        dayWidth: (width - padding.left - padding.right) / 7,\n        cellSize: isExpanded ? 40 : 30\n      };\n    default:\n      return baseConfig;\n  }\n};","map":{"version":3,"names":["SIZING_CONSTANTS","calculateResponsiveDimensions","getConsistentPadding","getConsistentFontSizes","createChartConfig","type","isExpanded","containerWidth","width","height","padding","fontSizes","baseConfig","fontSize","expanded","dayWidth","yAxisLabels","yAxisRange","barWidth","systolic","diastolic","yAxisOffset","left","right","dayPadding","mealHeight","totalMealHeight","mealDayWidth","top","bottom","bodySvgWidth","bodySvgHeight","cellSize"],"sources":["C:/Users/Matteo/Working_Folder/a. MCC Thesis Local/MCC_digital_health_data_visualizations/src/components/chart-utils/ChartConfigFactory.js"],"sourcesContent":["import { \r\n  SIZING_CONSTANTS, \r\n  calculateResponsiveDimensions, \r\n  getConsistentPadding, \r\n  getConsistentFontSizes \r\n} from '../../constants';\r\n\r\n/**\r\n * Factory for creating chart configurations with consistent sizing\r\n * Uses unified sizing logic for all chart types\r\n */\r\nexport const createChartConfig = (type, isExpanded, containerWidth = 400) => {\r\n  // Get consistent dimensions and styling\r\n  const { width, height } = calculateResponsiveDimensions(containerWidth, isExpanded);\r\n  const padding = getConsistentPadding(isExpanded);\r\n  const fontSizes = getConsistentFontSizes(isExpanded);\r\n  \r\n  // Base configuration that all charts share\r\n  const baseConfig = {\r\n    width,\r\n    height,\r\n    padding,\r\n    fontSize: fontSizes,\r\n    expanded: isExpanded,\r\n    containerWidth\r\n  };\r\n\r\n  switch (type) {\r\n    case 'glucose':\r\n      return {\r\n        ...baseConfig,\r\n        // Glucose-specific settings\r\n        dayWidth: isExpanded ? 54 : 45,\r\n        yAxisLabels: [0, 4, 8, 12],\r\n        yAxisRange: 12,\r\n        barWidth: isExpanded ? 8 : 6,\r\n      };\r\n\r\n    case 'bloodPressure':\r\n      return {\r\n        ...baseConfig,\r\n        // Blood pressure-specific settings\r\n        yAxisRange: { systolic: 200, diastolic: 120 },\r\n        yAxisOffset: { systolic: 0, diastolic: 0 },\r\n        yAxisLabels: {\r\n          systolic: isExpanded ? [0, 40, 80, 120, 160, 200] : [0, 100, 200],\r\n          diastolic: isExpanded ? [0, 20, 40, 60, 80, 100, 120] : [0, 60, 120],\r\n        },\r\n        dayWidth: (width - padding.left - padding.right) / 7,\r\n        barWidth: isExpanded ? 12 : 6,\r\n        dayPadding: isExpanded ? 8 : 4,\r\n      };\r\n\r\n    case 'exercise':\r\n      return {\r\n        ...baseConfig,\r\n        // Exercise-specific settings\r\n        dayWidth: isExpanded ? 90 : 38,\r\n        barWidth: isExpanded ? 25 : 20,\r\n      };\r\n\r\n    case 'mealContents':\r\n      // Calculate meal-specific dimensions\r\n      const mealHeight = isExpanded ? 80 : 60;\r\n      const totalMealHeight = 4 * mealHeight;\r\n      const mealDayWidth = (width - padding.left - padding.right) / 7;\r\n      \r\n      return {\r\n        ...baseConfig,\r\n        height: totalMealHeight + padding.top + padding.bottom,\r\n        // Meal-specific settings\r\n        mealHeight,\r\n        dayWidth: mealDayWidth,\r\n        totalMealHeight,\r\n      };\r\n\r\n    case 'sleep':\r\n      return {\r\n        ...baseConfig,\r\n        // Sleep-specific settings\r\n        dayWidth: (width - padding.left - padding.right) / 7,\r\n        barWidth: isExpanded ? 12 : 6,\r\n      };\r\n\r\n    case 'pain':\r\n      return {\r\n        ...baseConfig,\r\n        // Pain-specific settings\r\n        bodySvgWidth: isExpanded ? 100 : 80,\r\n        bodySvgHeight: isExpanded ? 200 : 160,\r\n      };\r\n\r\n    case 'mood':\r\n      return {\r\n        ...baseConfig,\r\n        // Mood-specific settings\r\n        dayWidth: (width - padding.left - padding.right) / 7,\r\n        cellSize: isExpanded ? 40 : 30,\r\n      };\r\n\r\n    default:\r\n      return baseConfig;\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}