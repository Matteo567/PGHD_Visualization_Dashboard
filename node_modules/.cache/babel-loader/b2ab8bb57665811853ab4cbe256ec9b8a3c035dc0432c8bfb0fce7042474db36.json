{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matteo\\\\Working_Folder\\\\a. MCC Thesis Local\\\\MCC_digital_health_data_visualizations\\\\src\\\\components\\\\ui\\\\Placeholder.js\";\n/**\r\n * Placeholder.js - Shared Placeholder Component\r\n * \r\n * This component provides consistent placeholder styling for:\r\n * - No data scenarios\r\n * - Loading states\r\n * - Error states\r\n * - Empty chart containers\r\n * \r\n * Replaces redundant chart-placeholder divs throughout the application\r\n * with a unified, maintainable component.\r\n */\n\nimport React from 'react';\nimport './Placeholder.css';\n\n/**\r\n * Universal placeholder component for consistent styling\r\n * \r\n * @param {string} message - The placeholder message to display\r\n * @param {string} type - The type of placeholder ('no-data', 'loading', 'error', 'select-patient')\r\n * @param {string} className - Additional CSS classes\r\n * @returns {JSX.Element} The placeholder component\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Placeholder = ({\n  message,\n  type = 'no-data',\n  className = ''\n}) => {\n  const getIcon = () => {\n    switch (type) {\n      case 'loading':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"placeholder-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 16\n        }, this);\n      case 'error':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"placeholder-icon error\",\n          children: \"!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 16\n        }, this);\n      case 'select-patient':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"placeholder-icon info\",\n          children: \"\\uD83D\\uDC64\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"placeholder-icon no-data\",\n          children: \"\\u2014\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `placeholder ${type} ${className}`,\n    children: [getIcon(), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"placeholder-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_c = Placeholder;\nexport default Placeholder;\nvar _c;\n$RefreshReg$(_c, \"Placeholder\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Placeholder","message","type","className","getIcon","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["C:/Users/Matteo/Working_Folder/a. MCC Thesis Local/MCC_digital_health_data_visualizations/src/components/ui/Placeholder.js"],"sourcesContent":["/**\r\n * Placeholder.js - Shared Placeholder Component\r\n * \r\n * This component provides consistent placeholder styling for:\r\n * - No data scenarios\r\n * - Loading states\r\n * - Error states\r\n * - Empty chart containers\r\n * \r\n * Replaces redundant chart-placeholder divs throughout the application\r\n * with a unified, maintainable component.\r\n */\r\n\r\nimport React from 'react';\r\nimport './Placeholder.css';\r\n\r\n/**\r\n * Universal placeholder component for consistent styling\r\n * \r\n * @param {string} message - The placeholder message to display\r\n * @param {string} type - The type of placeholder ('no-data', 'loading', 'error', 'select-patient')\r\n * @param {string} className - Additional CSS classes\r\n * @returns {JSX.Element} The placeholder component\r\n */\r\nconst Placeholder = ({ message, type = 'no-data', className = '' }) => {\r\n  const getIcon = () => {\r\n    switch (type) {\r\n      case 'loading':\r\n        return <div className=\"placeholder-spinner\"></div>;\r\n      case 'error':\r\n        return <div className=\"placeholder-icon error\">!</div>;\r\n      case 'select-patient':\r\n        return <div className=\"placeholder-icon info\">ðŸ‘¤</div>;\r\n      default:\r\n        return <div className=\"placeholder-icon no-data\">â€”</div>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`placeholder ${type} ${className}`}>\r\n      {getIcon()}\r\n      <p className=\"placeholder-message\">{message}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Placeholder;\r\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,mBAAmB;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA,SAAAC,MAAA,IAAAC,OAAA;AAQA,MAAMC,WAAW,GAAGA,CAAC;EAAEC,OAAO;EAAEC,IAAI,GAAG,SAAS;EAAEC,SAAS,GAAG;AAAG,CAAC,KAAK;EACrE,MAAMC,OAAO,GAAGA,CAAA,KAAM;IACpB,QAAQF,IAAI;MACV,KAAK,SAAS;QACZ,oBAAOH,OAAA;UAAKI,SAAS,EAAC;QAAqB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MACpD,KAAK,OAAO;QACV,oBAAOT,OAAA;UAAKI,SAAS,EAAC,wBAAwB;UAAAM,QAAA,EAAC;QAAC;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MACxD,KAAK,gBAAgB;QACnB,oBAAOT,OAAA;UAAKI,SAAS,EAAC,uBAAuB;UAAAM,QAAA,EAAC;QAAE;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MACxD;QACE,oBAAOT,OAAA;UAAKI,SAAS,EAAC,0BAA0B;UAAAM,QAAA,EAAC;QAAC;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;IAC5D;EACF,CAAC;EAED,oBACET,OAAA;IAAKI,SAAS,EAAE,eAAeD,IAAI,IAAIC,SAAS,EAAG;IAAAM,QAAA,GAChDL,OAAO,CAAC,CAAC,eACVL,OAAA;MAAGI,SAAS,EAAC,qBAAqB;MAAAM,QAAA,EAAER;IAAO;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEV,CAAC;AAACE,EAAA,GApBIV,WAAW;AAsBjB,eAAeA,WAAW;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}