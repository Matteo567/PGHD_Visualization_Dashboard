{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matteo\\\\Working_Folder\\\\a. MCC Thesis Local\\\\MCC_digital_health_data_visualizations\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n/*\n App.js - Main Health Dashboard Application Component\n \n This is the root component that provides the main application structure.\n It manages the role toggle between Patient and Physician views, patient selection,\n and provides the main routing structure for the dashboard.\n \n Features:\n - Role toggle between Patient and Physician views\n - Patient selection from 100 synthetic patients\n - Unified dashboard routing with lazy loading\n - Error boundary and loading state management\n - Header with application title and controls\n \n Component Structure:\n - Header: Contains title, role toggle, and patient selector\n - Main: Contains the dashboard with error boundary and loading states\n - Dashboard: Renders either PatientDashboard or PhysicianDashboard based on role\n \n State Management:\n - selectedPatient: Currently selected patient ID\n - currentRole: Current view mode ('patient' or 'physician')\n */\n\nimport React, { useState } from 'react';\nimport PatientSelector from './PatientSelector';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport Switch from './components/ui/Switch';\nimport Dashboard from './components/Dashboard';\nimport { PATIENTS } from './constants/index';\nimport './App.css';\n\n/*\n Main Health Dashboard Application\n Features both Patient and Physician views with role toggle\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedPatient, setSelectedPatient] = useState('Patient_001');\n  const [currentRole, setCurrentRole] = useState('patient'); // 'patient' or 'physician'\n\n  const toggleRole = () => {\n    setCurrentRole(prev => prev === 'patient' ? 'physician' : 'patient');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Health Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"role-toggle\",\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            checked: currentRole === 'physician',\n            onChange: toggleRole,\n            leftLabel: \"Patient View\",\n            rightLabel: \"Physician View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"patient-selector\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"patient-select\",\n            children: \"Select Patient:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PatientSelector, {\n            id: \"patient-select\",\n            patients: PATIENTS,\n            value: selectedPatient,\n            onChange: setSelectedPatient\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"app-main\",\n      children: /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n        children: /*#__PURE__*/_jsxDEV(Dashboard, {\n          patientId: selectedPatient,\n          viewMode: currentRole\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Y9PE2siRTPg+x1hzVhPzlXHS5r0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","PatientSelector","ErrorBoundary","Switch","Dashboard","PATIENTS","jsxDEV","_jsxDEV","App","_s","selectedPatient","setSelectedPatient","currentRole","setCurrentRole","toggleRole","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","checked","onChange","leftLabel","rightLabel","htmlFor","id","patients","value","patientId","viewMode","_c","$RefreshReg$"],"sources":["C:/Users/Matteo/Working_Folder/a. MCC Thesis Local/MCC_digital_health_data_visualizations/src/App.js"],"sourcesContent":["/*\n App.js - Main Health Dashboard Application Component\n \n This is the root component that provides the main application structure.\n It manages the role toggle between Patient and Physician views, patient selection,\n and provides the main routing structure for the dashboard.\n \n Features:\n - Role toggle between Patient and Physician views\n - Patient selection from 100 synthetic patients\n - Unified dashboard routing with lazy loading\n - Error boundary and loading state management\n - Header with application title and controls\n \n Component Structure:\n - Header: Contains title, role toggle, and patient selector\n - Main: Contains the dashboard with error boundary and loading states\n - Dashboard: Renders either PatientDashboard or PhysicianDashboard based on role\n \n State Management:\n - selectedPatient: Currently selected patient ID\n - currentRole: Current view mode ('patient' or 'physician')\n */\n\nimport React, { useState } from 'react';\nimport PatientSelector from './PatientSelector';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport Switch from './components/ui/Switch';\nimport Dashboard from './components/Dashboard';\nimport { PATIENTS } from './constants/index';\nimport './App.css';\n\n  /*\n   Main Health Dashboard Application\n   Features both Patient and Physician views with role toggle\n   */\nfunction App() {\n  const [selectedPatient, setSelectedPatient] = useState('Patient_001');\n  const [currentRole, setCurrentRole] = useState('patient'); // 'patient' or 'physician'\n\n  const toggleRole = () => {\n    setCurrentRole(prev => prev === 'patient' ? 'physician' : 'patient');\n  };\n\n  return (\n    <div className=\"app\">\n      <header className=\"app-header\">\n        <div className=\"header-content\">\n          <h1>Health Dashboard</h1>\n          \n          {/* Role Toggle */}\n          <div className=\"role-toggle\">\n            <Switch\n              checked={currentRole === 'physician'}\n              onChange={toggleRole}\n              leftLabel=\"Patient View\"\n              rightLabel=\"Physician View\"\n            />\n          </div>\n\n          {/* Patient Selector */}\n          <div className=\"patient-selector\">\n            <label htmlFor=\"patient-select\">Select Patient:</label>\n            <PatientSelector\n              id=\"patient-select\"\n              patients={PATIENTS}\n              value={selectedPatient}\n              onChange={setSelectedPatient}\n            />\n          </div>\n        </div>\n      </header>\n\n      <main className=\"app-main\">\n        <ErrorBoundary>\n          <Dashboard \n            patientId={selectedPatient} \n            viewMode={currentRole}\n          />\n        </ErrorBoundary>\n      </main>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}