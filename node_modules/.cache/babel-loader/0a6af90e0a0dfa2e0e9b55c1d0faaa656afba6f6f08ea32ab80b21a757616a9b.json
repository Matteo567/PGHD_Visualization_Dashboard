{"ast":null,"code":"/*\r\n HealthDashboard.js - Unified Health Dashboard Component\r\n \r\n This component provides a unified health dashboard that combines the best features\r\n from both patient and physician dashboards. It's designed to be used by both\r\n patients and healthcare providers with a clean, accessible interface.\r\n \r\n Features:\r\n - Patient information display with QR code access\r\n - Week summaries always visible for better health tracking\r\n - Toggle for 3-month summaries for long-term trend analysis\r\n - Exercise visualization with both activity breakdown and weekly goals\r\n - Clean, patient-friendly design with professional functionality\r\n - Screenshot mode support for documentation\r\n \r\n Architecture:\r\n - Uses custom hooks for data management, visualization handling, and navigation\r\n - Implements expandable chart views\r\n - Provides educational information for patients\r\n - Handles loading and error states gracefully\r\n - Includes summary statistics for comprehensive health monitoring\r\n \r\n Custom Hooks Used:\r\n - usePatientData: Manages patient data fetching and caching\r\n - useVisualizations: Handles visualization configuration and availability\r\n - useChartNavigation: Manages time-based navigation for each chart type\r\n \r\n Component Structure:\r\n - PatientInfoCard: Displays patient demographics and medication information\r\n - QR Code Section: Provides access to patient dashboard\r\n - Summary Toggle: Controls visibility of 3-month summaries\r\n - DashboardGrid: Renders the chart grid with navigation and expansion controls\r\n - Individual chart components for each health metric\r\n \r\n State Management:\r\n - Uses custom hooks for centralized state management\r\n - Handles chart expansion state\r\n - Manages navigation state for each chart type independently\r\n - Controls summary visibility with toggle state\r\n */import React from'react';import usePatientData from'./hooks/usePatientData';import useVisualizations from'./hooks/useVisualizations';import useChartNavigation from'./hooks/useChartNavigation';import useDashboardState from'./hooks/useDashboardState';import PatientInfoCard from'./components/PatientInfoCard';import DashboardGrid from'./components/DashboardGrid';import Placeholder from'./components/ui/Placeholder';import Switch from'./components/ui/Switch';import'./HealthDashboard.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const HealthDashboard=_ref=>{let{patientId,screenshotMode=false}=_ref;const{data,loading,error}=usePatientData(patientId);const{allVisualizations,availableVisualizations,selectedVisualizations,handleVisualizationChange}=useVisualizations('patient',data);// Use custom dashboard state hook\nconst{expandedChart,showThreeMonthSummaries,toggleChart,toggleThreeMonthSummaries}=useDashboardState();// Navigation for all charts\nconst sharedNavigation=useChartNavigation('glucose');// Default to 'week' navigation\nconst chartNavigation={glucose:sharedNavigation,bloodPressure:sharedNavigation,exercise:sharedNavigation,sleep:sharedNavigation,pain:sharedNavigation,mood:sharedNavigation,// Now use shared weekly navigation\nmealContents:sharedNavigation};// Render visualization with unified view mode\nconst renderVisualizationWithMode=(visualizationType,boxId)=>{if(!patientId){return/*#__PURE__*/_jsx(Placeholder,{message:\"Please select a patient to view data.\",type:\"select-patient\"});}const viz=allVisualizations[visualizationType];if(!viz){return/*#__PURE__*/_jsx(Placeholder,{message:\"Invalid visualization\",type:\"error\"});}const Component=viz.component;const isExpanded=expandedChart===boxId;const navigation=chartNavigation[visualizationType];return/*#__PURE__*/_jsx(Component,{patientId:patientId,isExpanded:isExpanded,onExpand:()=>toggleChart(boxId),viewMode:\"unified\"// New unified view mode\n,navigation:navigation,screenshotMode:screenshotMode,showThreeMonthSummaries:showThreeMonthSummaries// Pass summary toggle state\n});};const patientInfo=data===null||data===void 0?void 0:data.patientInfo;if(loading)return/*#__PURE__*/_jsx(\"div\",{className:\"loading-screen\",children:\"Loading patient data...\"});if(error)return/*#__PURE__*/_jsxs(\"div\",{className:\"error-screen\",children:[\"Error: \",error]});return/*#__PURE__*/_jsxs(\"div\",{className:\"health-dashboard\",children:[!screenshotMode&&/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-header\",children:[/*#__PURE__*/_jsx(PatientInfoCard,{patientInfo:patientInfo,loading:loading,error:error,variant:\"unified\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-controls\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"qr-code-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Access Health Dashboard\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Scan QR code for quick access\"}),/*#__PURE__*/_jsx(\"img\",{src:\"\".concat(process.env.PUBLIC_URL,\"/Public_dashboard_QR_code.png\"),alt:\"QR Code for PGHD Dashboard\",className:\"qr-code-image\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-toggle-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Summary Options\"}),/*#__PURE__*/_jsx(Switch,{checked:showThreeMonthSummaries,onChange:toggleThreeMonthSummaries,leftLabel:\"Week Only\",rightLabel:\"Include 3-Month\"}),/*#__PURE__*/_jsx(\"p\",{className:\"toggle-description\",children:showThreeMonthSummaries?\"Showing both week and 3-month summaries for comprehensive health tracking\":\"Showing week summaries only for focused current health monitoring\"})]})]})]}),/*#__PURE__*/_jsx(DashboardGrid,{viewMode:\"unified\",selectedVisualizations:selectedVisualizations,availableVisualizations:availableVisualizations,allVisualizations:allVisualizations,onVisualizationChange:handleVisualizationChange,onExpand:toggleChart,expandedItem:expandedChart,renderVisualization:renderVisualizationWithMode,chartNavigation:chartNavigation,screenshotMode:screenshotMode})]});};export default HealthDashboard;","map":{"version":3,"names":["React","usePatientData","useVisualizations","useChartNavigation","useDashboardState","PatientInfoCard","DashboardGrid","Placeholder","Switch","jsx","_jsx","jsxs","_jsxs","HealthDashboard","_ref","patientId","screenshotMode","data","loading","error","allVisualizations","availableVisualizations","selectedVisualizations","handleVisualizationChange","expandedChart","showThreeMonthSummaries","toggleChart","toggleThreeMonthSummaries","sharedNavigation","chartNavigation","glucose","bloodPressure","exercise","sleep","pain","mood","mealContents","renderVisualizationWithMode","visualizationType","boxId","message","type","viz","Component","component","isExpanded","navigation","onExpand","viewMode","patientInfo","className","children","variant","src","concat","process","env","PUBLIC_URL","alt","checked","onChange","leftLabel","rightLabel","onVisualizationChange","expandedItem","renderVisualization"],"sources":["C:/Users/Matteo/Working_Folder/a. MCC Thesis Local Experimental/PGHD_Visualization_Dashboard/src/HealthDashboard.js"],"sourcesContent":["/*\r\n HealthDashboard.js - Unified Health Dashboard Component\r\n \r\n This component provides a unified health dashboard that combines the best features\r\n from both patient and physician dashboards. It's designed to be used by both\r\n patients and healthcare providers with a clean, accessible interface.\r\n \r\n Features:\r\n - Patient information display with QR code access\r\n - Week summaries always visible for better health tracking\r\n - Toggle for 3-month summaries for long-term trend analysis\r\n - Exercise visualization with both activity breakdown and weekly goals\r\n - Clean, patient-friendly design with professional functionality\r\n - Screenshot mode support for documentation\r\n \r\n Architecture:\r\n - Uses custom hooks for data management, visualization handling, and navigation\r\n - Implements expandable chart views\r\n - Provides educational information for patients\r\n - Handles loading and error states gracefully\r\n - Includes summary statistics for comprehensive health monitoring\r\n \r\n Custom Hooks Used:\r\n - usePatientData: Manages patient data fetching and caching\r\n - useVisualizations: Handles visualization configuration and availability\r\n - useChartNavigation: Manages time-based navigation for each chart type\r\n \r\n Component Structure:\r\n - PatientInfoCard: Displays patient demographics and medication information\r\n - QR Code Section: Provides access to patient dashboard\r\n - Summary Toggle: Controls visibility of 3-month summaries\r\n - DashboardGrid: Renders the chart grid with navigation and expansion controls\r\n - Individual chart components for each health metric\r\n \r\n State Management:\r\n - Uses custom hooks for centralized state management\r\n - Handles chart expansion state\r\n - Manages navigation state for each chart type independently\r\n - Controls summary visibility with toggle state\r\n */\r\n\r\nimport React from 'react';\r\nimport usePatientData from './hooks/usePatientData';\r\nimport useVisualizations from './hooks/useVisualizations';\r\nimport useChartNavigation from './hooks/useChartNavigation';\r\nimport useDashboardState from './hooks/useDashboardState';\r\nimport PatientInfoCard from './components/PatientInfoCard';\r\nimport DashboardGrid from './components/DashboardGrid';\r\nimport Placeholder from './components/ui/Placeholder';\r\nimport Switch from './components/ui/Switch';\r\nimport './HealthDashboard.css';\r\n\r\nconst HealthDashboard = ({ patientId, screenshotMode = false }) => {\r\n  const { data, loading, error } = usePatientData(patientId);\r\n  const { \r\n    allVisualizations, \r\n    availableVisualizations, \r\n    selectedVisualizations, \r\n    handleVisualizationChange \r\n  } = useVisualizations('patient', data);\r\n  \r\n  // Use custom dashboard state hook\r\n  const {\r\n    expandedChart,\r\n    showThreeMonthSummaries,\r\n    toggleChart,\r\n    toggleThreeMonthSummaries\r\n  } = useDashboardState();\r\n\r\n  // Navigation for all charts\r\n  const sharedNavigation = useChartNavigation('glucose'); // Default to 'week' navigation\r\n\r\n  const chartNavigation = {\r\n    glucose: sharedNavigation,\r\n    bloodPressure: sharedNavigation,\r\n    exercise: sharedNavigation,\r\n    sleep: sharedNavigation,\r\n    pain: sharedNavigation,\r\n    mood: sharedNavigation, // Now use shared weekly navigation\r\n    mealContents: sharedNavigation\r\n  };\r\n\r\n  // Render visualization with unified view mode\r\n  const renderVisualizationWithMode = (visualizationType, boxId) => {\r\n    if (!patientId) {\r\n      return <Placeholder message=\"Please select a patient to view data.\" type=\"select-patient\" />;\r\n    }\r\n    \r\n    const viz = allVisualizations[visualizationType];\r\n    if (!viz) {\r\n      return <Placeholder message=\"Invalid visualization\" type=\"error\" />;\r\n    }\r\n\r\n    const Component = viz.component;\r\n    const isExpanded = expandedChart === boxId;\r\n    const navigation = chartNavigation[visualizationType];\r\n    \r\n    return <Component \r\n      patientId={patientId} \r\n      isExpanded={isExpanded} \r\n      onExpand={() => toggleChart(boxId)}\r\n      viewMode=\"unified\" // New unified view mode\r\n      navigation={navigation}\r\n      screenshotMode={screenshotMode}\r\n      showThreeMonthSummaries={showThreeMonthSummaries} // Pass summary toggle state\r\n    />;\r\n  };\r\n\r\n  const patientInfo = data?.patientInfo;\r\n\r\n  if (loading) return <div className=\"loading-screen\">Loading patient data...</div>;\r\n  if (error) return <div className=\"error-screen\">Error: {error}</div>;\r\n\r\n  return (\r\n    <div className=\"health-dashboard\">\r\n      {!screenshotMode && (\r\n        <div className=\"dashboard-header\">\r\n          <PatientInfoCard \r\n            patientInfo={patientInfo}\r\n            loading={loading}\r\n            error={error}\r\n            variant=\"unified\"\r\n          />\r\n          \r\n          <div className=\"dashboard-controls\">\r\n            <div className=\"qr-code-section\">\r\n              <h3>Access Health Dashboard</h3>\r\n              <p>Scan QR code for quick access</p>\r\n              <img \r\n                src={`${process.env.PUBLIC_URL}/Public_dashboard_QR_code.png`}\r\n                alt=\"QR Code for PGHD Dashboard\"\r\n                className=\"qr-code-image\"\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"summary-toggle-section\">\r\n              <h3>Summary Options</h3>\r\n              <Switch\r\n                checked={showThreeMonthSummaries}\r\n                onChange={toggleThreeMonthSummaries}\r\n                leftLabel=\"Week Only\"\r\n                rightLabel=\"Include 3-Month\"\r\n              />\r\n              <p className=\"toggle-description\">\r\n                {showThreeMonthSummaries \r\n                  ? \"Showing both week and 3-month summaries for comprehensive health tracking\"\r\n                  : \"Showing week summaries only for focused current health monitoring\"\r\n                }\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n          <DashboardGrid\r\n            viewMode=\"unified\"\r\n            selectedVisualizations={selectedVisualizations}\r\n            availableVisualizations={availableVisualizations}\r\n            allVisualizations={allVisualizations}\r\n            onVisualizationChange={handleVisualizationChange}\r\n            onExpand={toggleChart}\r\n            expandedItem={expandedChart}\r\n            renderVisualization={renderVisualizationWithMode}\r\n            chartNavigation={chartNavigation}\r\n            screenshotMode={screenshotMode}\r\n          />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HealthDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}