{"ast":null,"code":"/*\n SleepChart.js - Sleep Pattern Monitoring Visualization\n \n This component provides comprehensive sleep tracking:\n - Sleep duration and quality rating visualization\n - Weekly sleep pattern analysis\n - Color-coded sleep quality indicators\n - Interactive tooltips with sleep details\n - Navigation controls for time periods\n - Integration with patient data and chart navigation\n \n Architecture:\n - Uses custom SVG for bar chart visualization\n - Implements sleep quality categorization system\n - Provides color-coded quality indicators for easy interpretation\n - Supports expandable views\n - Implements time-based navigation and data filtering\n \n Visualizatoin Features:\n - Bar chart showing daily sleep duration\n - Color-coded quality indicators (Very good, Fairly good, Fairly bad, Very bad)\n - Interactive tooltips with detailed sleep information\n - Design adapting to container size\n - Dynamic Y-axis scaling based on sleep duration range\n \n Sleep Quality Categories:\n - Very good: Optimal sleep quality (green)\n - Fairly good: Good sleep quality (blue)\n - Fairly bad: Poor sleep quality (light green)\n - Very bad: Very poor sleep quality (dark green)\n \n Clinical Features:\n - Sleep duration tracking with recommended ranges\n - Quality assessment based on subjective ratings\n - Sleep consistency analysis\n - Summary statistics for physician view\n - Trend analysis over time periods\n \n Component Structure:\n - Chart Container: Main SVG container with sizing\n - Y-Axis: Duration scale with hour-based labeling\n - X-Axis: Day-of-week labels with date information\n - Data Bars: Sleep duration bars with quality color coding\n - Legend: Sleep quality explanations\n - Tooltip: Detailed sleep information on hover\n \n Essential for sleep hygiene monitoring and sleep disorder assessment.\n */import React,{useState,useRef}from'react';import usePatientData from'../../hooks/usePatientData';import useChartNavigation from'../../hooks/useChartNavigation';import Legend from'../Legend';import'./SleepChart.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const SleepChart=_ref=>{let{patientId,isExpanded,onExpand,viewMode='patient',navigation,screenshotMode=false,showThreeMonthSummaries=false}=_ref;const{sleepData,loading,error}=usePatientData(patientId,'sleep');const[useLineChart,setUseLineChart]=useState(false);// Toggle state for chart view\n// Use navigation from parent or fallback to internal navigation\nconst useInternalNavigation=!navigation;const internalNavigation=useChartNavigation('sleep');const nav=navigation||internalNavigation;const{start:startOfWeek,end:endOfWeek}=nav.getDateRange();const weekData=sleepData.filter(d=>d.date>=startOfWeek&&d.date<=endOfWeek);// Get previous week data\nconst prevWeekStart=new Date(startOfWeek);prevWeekStart.setDate(prevWeekStart.getDate()-7);const prevWeekEnd=new Date(startOfWeek);prevWeekEnd.setDate(prevWeekEnd.getDate()-1);const prevWeekData=sleepData.filter(d=>d.date>=prevWeekStart&&d.date<=prevWeekEnd);// Get next week data\nconst nextWeekStart=new Date(endOfWeek);nextWeekStart.setDate(nextWeekStart.getDate()+1);const nextWeekEnd=new Date(nextWeekStart);nextWeekEnd.setDate(nextWeekEnd.getDate()+6);const nextWeekData=sleepData.filter(d=>d.date>=nextWeekStart&&d.date<=nextWeekEnd);// Get 3-month data\nconst{start:startOfThreeMonths,end:endOfThreeMonths}=nav.getThreeMonthRange();const threeMonthData=sleepData.filter(d=>d.date>=startOfThreeMonths&&d.date<=endOfThreeMonths);const formatDateRange=data=>{if(!data||data.length===0)return'';const startDate=new Date(data[0].date).toLocaleDateString('en-US',{month:'short',day:'numeric'});const endDate=new Date(data[data.length-1].date).toLocaleDateString('en-US',{month:'short',day:'numeric'});return\"\".concat(startDate,\" to \").concat(endDate);};const qualityLevels={'Very good':'var(--chart-color-sleep-very-good)','Fairly good':'var(--chart-color-sleep-fairly-good)','Fairly bad':'var(--chart-color-sleep-fairly-bad)','Very bad':'var(--chart-color-sleep-very-bad)'};const getQualityColor=quality=>qualityLevels[quality]||'#D3D3D3';const legendItems=Object.entries(qualityLevels).map(_ref2=>{let[label,color]=_ref2;return{label,color};});// Process data for extended chart (3 weeks)\nlet extendedChartData=[];if(isExpanded){// Combine all three weeks of data\nconst allWeeksData=[...prevWeekData,...weekData,...nextWeekData];// Create a map of dates to sleep data for all 3 weeks\nconst dateMap=new Map();allWeeksData.forEach(item=>{const dateKey=item.date.toDateString();dateMap.set(dateKey,item);});// Generate chart data for all 21 days (3 weeks)\nconst data=[];const weekLabels=['Prev Week','Current Week','Next Week'];for(let week=0;week<3;week++){const weekStart=week===0?prevWeekStart:week===1?startOfWeek:nextWeekStart;for(let day=0;day<7;day++){const date=new Date(weekStart);date.setDate(date.getDate()+day);const dateKey=date.toDateString();const sleepData=dateMap.get(dateKey)||{hours:0,quality:'Very bad'};data.push({date,day:['Sun','Mon','Tue','Wed','Thu','Fri','Sat'][date.getDay()],hours:sleepData.hours,quality:sleepData.quality,color:getQualityColor(sleepData.quality),week:week,weekLabel:weekLabels[week]});}}extendedChartData=data;}// Calculate summary statistics for physician view\nlet weekSummary=null;if(weekData&&weekData.length>0){const totalHours=weekData.reduce((sum,day)=>sum+day.hours,0);const avgHours=(totalHours/weekData.length).toFixed(1);// Count quality levels\nconst qualityCounts={};Object.keys(qualityLevels).forEach(quality=>{qualityCounts[quality]=0;});weekData.forEach(day=>{if(qualityCounts[day.quality]!==undefined){qualityCounts[day.quality]++;}});// Find most common quality\nconst mostCommonQuality=Object.entries(qualityCounts).sort((_ref3,_ref4)=>{let[,a]=_ref3;let[,b]=_ref4;return b-a;})[0];// Calculate sleep consistency (how much variation in sleep hours)\nconst hourVariations=weekData.map(day=>Math.abs(day.hours-parseFloat(avgHours)));const avgVariation=(hourVariations.reduce((sum,v)=>sum+v,0)/hourVariations.length).toFixed(1);// Sleep quality score (Very good=4, Fairly good=3, Fairly bad=2, Very bad=1)\nconst qualityScores={'Very good':4,'Fairly good':3,'Fairly bad':2,'Very bad':1};const avgQualityScore=weekData.reduce((sum,day)=>sum+(qualityScores[day.quality]||0),0)/weekData.length;const qualityAssessment=avgQualityScore>=3.5?'Good':avgQualityScore>=2.5?'Fair':'Poor';// Count nights with adequate sleep (7+ hours)\nconst adequateSleepNights=weekData.filter(day=>day.hours>=7).length;weekSummary={totalHours:totalHours.toFixed(1),avgHours,mostCommonQuality:mostCommonQuality[0],mostCommonQualityCount:mostCommonQuality[1],avgVariation,qualityAssessment,adequateSleepNights,daysTracked:weekData.length};}// Calculate 3-month summary statistics for physician view\nlet threeMonthSummary=null;if(threeMonthData&&threeMonthData.length>0){const totalHours=threeMonthData.reduce((sum,day)=>sum+day.hours,0);const avgHours=(totalHours/threeMonthData.length).toFixed(1);// Count quality levels\nconst qualityCounts={};Object.keys(qualityLevels).forEach(quality=>{qualityCounts[quality]=0;});threeMonthData.forEach(day=>{if(qualityCounts[day.quality]!==undefined){qualityCounts[day.quality]++;}});// Find most common quality\nconst mostCommonQuality=Object.entries(qualityCounts).sort((_ref5,_ref6)=>{let[,a]=_ref5;let[,b]=_ref6;return b-a;})[0];// Calculate sleep consistency (how much variation in sleep hours)\nconst hourVariations=threeMonthData.map(day=>Math.abs(day.hours-parseFloat(avgHours)));const avgVariation=(hourVariations.reduce((sum,v)=>sum+v,0)/hourVariations.length).toFixed(1);threeMonthSummary={totalHours:totalHours.toFixed(1),avgHours,mostCommonQuality:mostCommonQuality[0],mostCommonQualityCount:mostCommonQuality[1],avgVariation,daysTracked:threeMonthData.length};}// Line Chart Component for Sleep Duration\nconst SleepLineChart=_ref7=>{let{data,isExpanded,extendedData}=_ref7;const isExtendedView=isExpanded&&extendedData&&extendedData.length>0;const chartData=isExtendedView?extendedData:data;if(!chartData||chartData.length===0)return null;const maxHours=chartData.length>0?Math.max(...chartData.map(d=>d.hours)):0;const minHours=0;// Always start Y-axis at 0\nconst range=Math.max(maxHours-minHours,1);// Ensure minimum range of 1\nconst padding=Math.max(range*0.1,0.5);// 10% padding, minimum 0.5\nconst config={width:isExtendedView?900:isExpanded?600:400,// Wider for 3-week view\nheight:isExpanded?220:150,// Reduced height since we removed week labels\npadding:{top:20,right:30,bottom:50,left:50},// Reduced bottom padding\nfontSize:{yAxis:isExpanded?10:8,xAxis:isExpanded?10:8}};const chartWidth=config.width-config.padding.left-config.padding.right;const chartHeight=config.height-config.padding.top-config.padding.bottom;const dayWidth=chartWidth/(chartData.length-1);// Dynamic based on data length\nconst getX=index=>config.padding.left+index*dayWidth;const getY=hours=>config.padding.top+chartHeight-(hours-minHours+padding)/(range+2*padding)*chartHeight;const pathData=chartData.map((day,index)=>{const x=getX(index);const y=getY(day.hours);return\"\".concat(index===0?'M':'L',\" \").concat(x,\" \").concat(y);}).join(' ');return/*#__PURE__*/_jsx(\"div\",{className:\"sleep-line-chart\",children:/*#__PURE__*/_jsxs(\"svg\",{width:\"100%\",height:\"100%\",viewBox:\"0 0 \".concat(config.width,\" \").concat(config.height),children:[[0,2,4,6,8,10,12].map(hours=>{if(hours>maxHours+padding)return null;// Don't show grid lines above data range\nconst y=getY(hours);return/*#__PURE__*/_jsxs(\"g\",{children:[/*#__PURE__*/_jsx(\"line\",{x1:config.padding.left,y1:y,x2:config.width-config.padding.right,y2:y,stroke:\"#e0e0e0\",strokeWidth:\"1\",strokeDasharray:\"2,2\"}),/*#__PURE__*/_jsxs(\"text\",{x:config.padding.left-10,y:y+3,fontSize:config.fontSize.yAxis,textAnchor:\"end\",fill:\"var(--chart-color-text-secondary)\",children:[hours,\"h\"]})]},hours);}),isExtendedView&&[7,14].map(weekIndex=>{const x=config.padding.left+weekIndex*dayWidth;return/*#__PURE__*/_jsx(\"line\",{x1:x,y1:config.padding.top,x2:x,y2:config.height-config.padding.bottom,stroke:\"#ccc\",strokeWidth:\"2\",strokeDasharray:\"5,5\"},weekIndex);}),/*#__PURE__*/_jsx(\"path\",{d:pathData,fill:\"none\",stroke:\"#007bff\",strokeWidth:\"3\"}),chartData.map((day,index)=>{const x=getX(index);const y=getY(day.hours);const showLabel=isExtendedView?index%7===0:true;// Show every 7th day for extended view\nconst dateStr=day.date.toLocaleDateString('en-US',{month:'short',day:'numeric'});return/*#__PURE__*/_jsxs(\"g\",{children:[/*#__PURE__*/_jsx(\"circle\",{cx:x,cy:y,r:\"6\",fill:getQualityColor(day.quality),stroke:\"#fff\",strokeWidth:\"2\"}),/*#__PURE__*/_jsxs(\"text\",{x:x,y:y-15,fontSize:\"10\",fill:\"#333\",textAnchor:\"middle\",children:[day.hours.toFixed(1),\"h\"]}),showLabel&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"text\",{x:x,y:config.height-config.padding.bottom+15,fontSize:config.fontSize.xAxis,textAnchor:\"middle\",className:\"x-axis-day-label\",children:day.day}),/*#__PURE__*/_jsx(\"text\",{x:x,y:config.height-config.padding.bottom+30,fontSize:config.fontSize.xAxis-1,textAnchor:\"middle\",className:\"x-axis-date-label\",fill:\"var(--chart-color-text-secondary)\",children:dateStr})]})]},index);})]})});};return/*#__PURE__*/_jsxs(\"div\",{className:\"sleep-chart-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"sleep-header\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"chart-title\",children:\"Sleep Quality & Duration\"}),/*#__PURE__*/_jsx(\"h4\",{className:\"chart-subtitle\",children:nav.getFormattedDateRange()}),/*#__PURE__*/_jsxs(\"div\",{className:\"view-toggle\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"toggle-btn \".concat(!useLineChart?'active':''),onClick:()=>setUseLineChart(false),children:\"Bar Chart\"}),/*#__PURE__*/_jsx(\"button\",{className:\"toggle-btn \".concat(useLineChart?'active':''),onClick:()=>setUseLineChart(true),children:\"Line Chart\"})]})]}),useLineChart?/*#__PURE__*/_jsx(SleepLineChart,{data:weekData,isExpanded:isExpanded,extendedData:extendedChartData}):/*#__PURE__*/_jsxs(\"div\",{className:\"sleep-chart\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"sleep-quality-row\",children:weekData.map((day,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"sleep-quality-item\",children:/*#__PURE__*/_jsx(\"div\",{className:\"sleep-quality-indicator\",style:{backgroundColor:getQualityColor(day.quality)}})},\"quality-\".concat(index)))}),/*#__PURE__*/_jsx(\"div\",{className:\"bed-icons-row\",children:weekData.map((day,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"bed-item\",children:/*#__PURE__*/_jsx(\"div\",{className:\"bed-icon-wrapper\",children:/*#__PURE__*/_jsxs(\"svg\",{viewBox:\"0 0 486.5 225.1\",className:\"bed-icon\",children:[/*#__PURE__*/_jsx(\"path\",{d:\"M471.9,68.9c-8,0-14.5,6.5-14.5,14.5v68.6H26.1l-.6-139.3c0-7-5.8-12.7-12.8-12.7h0C5.7,0,0,5.7,0,12.8v199.6c0,7,5.7,12.8,12.7,12.8s12.8-5.7,12.8-12.8v-37h431.9v35.2c0,8,6.5,14.5,14.5,14.5s14.5-6.5,14.5-14.5v-127.1c0-8-6.5-14.5-14.5-14.5ZM483.7,210.6c0,6.5-5.3,11.8-11.8,11.8s-11.8-5.3-11.8-11.8v-38H22.7v39.7c0,5.5-4.5,10-10,10s-10-4.5-10-10V12.8C2.8,7.3,7.3,2.8,12.7,2.8h0c5.5,0,9.9,4.5,10,9.9l.6,142.1h436.8v-71.4c0-6.5,5.3-11.7,11.8-11.7s11.8,5.3,11.8,11.7v127.1Z\",fill:\"#D2B48C\"}),/*#__PURE__*/_jsx(\"path\",{d:\"M29.9,94.2v54.5h425.4v-54.5H29.9ZM452.5,145.9H32.7v-48.9h419.8v48.9Z\",fill:\"#e0e0e0\"}),/*#__PURE__*/_jsx(\"rect\",{x:\"32.7\",y:\"97\",width:\"\".concat(day.hours/10*419.8),height:\"48.9\",fill:\"#FF4500\",className:\"sleep-fill-rect\"}),/*#__PURE__*/_jsx(\"path\",{d:\"M112.8,46.3h-55.4c-12.1,0-22,9.9-22,22s9.9,22,22,22h55.4c12.1,0,22-9.9,22-22s-9.9-22-22-22ZM112.8,87.5h-55.4c-10.6,0-19.2-8.6-19.2-19.2s8.6-19.2,19.2-19.2h55.4c10.6,0,19.2,8.6,19.2,19.2s-8.6,19.2-19.2,19.2Z\",fill:\"#FFFFFF\",stroke:\"#AAAAAA\",strokeWidth:\"1\"})]})})},\"bed-\".concat(index)))}),/*#__PURE__*/_jsx(\"div\",{className:\"sleep-info-row\",children:weekData.map((day,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"sleep-info-item\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"sleep-hours\",children:[day.hours.toFixed(1),\"h\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"day-label\",children:['Sun','Mon','Tue','Wed','Thu','Fri','Sat'][(()=>{const date=new Date(day.date);return!isNaN(date.getTime())?date.getDay():0;})()]}),/*#__PURE__*/_jsx(\"div\",{className:\"date-label\",children:(()=>{const date=new Date(day.date);return!isNaN(date.getTime())?date.getDate():'Invalid';})()})]},\"info-\".concat(index)))})]}),/*#__PURE__*/_jsx(Legend,{title:\"Sleep Quality\",items:legendItems,hide:screenshotMode}),(viewMode==='physician'||viewMode==='unified')&&weekSummary&&/*#__PURE__*/_jsxs(\"div\",{className:\"summary-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chart-summary\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Week Summary\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-stats\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Average Sleep:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"stat-value\",children:[weekSummary.avgHours,\" hours/night\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Total Sleep:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"stat-value\",children:[weekSummary.totalHours,\" hours\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Sleep Consistency:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"stat-value\",children:[\"\\xB1\",weekSummary.avgVariation,\" hours variation\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Common Quality:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"stat-value\",children:[weekSummary.mostCommonQuality,\" (\",weekSummary.mostCommonQualityCount,\"x)\"]})]})]})]}),showThreeMonthSummaries&&threeMonthSummary&&/*#__PURE__*/_jsxs(\"div\",{className:\"chart-summary\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"3-Month Summary\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-stats\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Average Sleep:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"stat-value\",children:[threeMonthSummary.avgHours,\" hours/night\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Total Sleep:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"stat-value\",children:[threeMonthSummary.totalHours,\" hours\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Sleep Consistency:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"stat-value\",children:[\"\\xB1\",threeMonthSummary.avgVariation,\" hours variation\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Common Quality:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"stat-value\",children:[threeMonthSummary.mostCommonQuality,\" (\",threeMonthSummary.mostCommonQualityCount,\"x)\"]})]})]})]})]})]});};export default SleepChart;","map":{"version":3,"names":["React","useState","useRef","usePatientData","useChartNavigation","Legend","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","SleepChart","_ref","patientId","isExpanded","onExpand","viewMode","navigation","screenshotMode","showThreeMonthSummaries","sleepData","loading","error","useLineChart","setUseLineChart","useInternalNavigation","internalNavigation","nav","start","startOfWeek","end","endOfWeek","getDateRange","weekData","filter","d","date","prevWeekStart","Date","setDate","getDate","prevWeekEnd","prevWeekData","nextWeekStart","nextWeekEnd","nextWeekData","startOfThreeMonths","endOfThreeMonths","getThreeMonthRange","threeMonthData","formatDateRange","data","length","startDate","toLocaleDateString","month","day","endDate","concat","qualityLevels","getQualityColor","quality","legendItems","Object","entries","map","_ref2","label","color","extendedChartData","allWeeksData","dateMap","Map","forEach","item","dateKey","toDateString","set","weekLabels","week","weekStart","get","hours","push","getDay","weekLabel","weekSummary","totalHours","reduce","sum","avgHours","toFixed","qualityCounts","keys","undefined","mostCommonQuality","sort","_ref3","_ref4","a","b","hourVariations","Math","abs","parseFloat","avgVariation","v","qualityScores","avgQualityScore","qualityAssessment","adequateSleepNights","mostCommonQualityCount","daysTracked","threeMonthSummary","_ref5","_ref6","SleepLineChart","_ref7","extendedData","isExtendedView","chartData","maxHours","max","minHours","range","padding","config","width","height","top","right","bottom","left","fontSize","yAxis","xAxis","chartWidth","chartHeight","dayWidth","getX","index","getY","pathData","x","y","join","className","children","viewBox","x1","y1","x2","y2","stroke","strokeWidth","strokeDasharray","textAnchor","fill","weekIndex","showLabel","dateStr","cx","cy","r","getFormattedDateRange","onClick","style","backgroundColor","isNaN","getTime","title","items","hide"],"sources":["C:/Users/Matteo/Working_Folder/a. MCC Thesis Local Experimental/PGHD_Visualization_Dashboard/src/components/patient_charts/SleepChart.js"],"sourcesContent":["/*\n SleepChart.js - Sleep Pattern Monitoring Visualization\n \n This component provides comprehensive sleep tracking:\n - Sleep duration and quality rating visualization\n - Weekly sleep pattern analysis\n - Color-coded sleep quality indicators\n - Interactive tooltips with sleep details\n - Navigation controls for time periods\n - Integration with patient data and chart navigation\n \n Architecture:\n - Uses custom SVG for bar chart visualization\n - Implements sleep quality categorization system\n - Provides color-coded quality indicators for easy interpretation\n - Supports expandable views\n - Implements time-based navigation and data filtering\n \n Visualizatoin Features:\n - Bar chart showing daily sleep duration\n - Color-coded quality indicators (Very good, Fairly good, Fairly bad, Very bad)\n - Interactive tooltips with detailed sleep information\n - Design adapting to container size\n - Dynamic Y-axis scaling based on sleep duration range\n \n Sleep Quality Categories:\n - Very good: Optimal sleep quality (green)\n - Fairly good: Good sleep quality (blue)\n - Fairly bad: Poor sleep quality (light green)\n - Very bad: Very poor sleep quality (dark green)\n \n Clinical Features:\n - Sleep duration tracking with recommended ranges\n - Quality assessment based on subjective ratings\n - Sleep consistency analysis\n - Summary statistics for physician view\n - Trend analysis over time periods\n \n Component Structure:\n - Chart Container: Main SVG container with sizing\n - Y-Axis: Duration scale with hour-based labeling\n - X-Axis: Day-of-week labels with date information\n - Data Bars: Sleep duration bars with quality color coding\n - Legend: Sleep quality explanations\n - Tooltip: Detailed sleep information on hover\n \n Essential for sleep hygiene monitoring and sleep disorder assessment.\n */\n\nimport React, { useState, useRef } from 'react';\n\nimport usePatientData from '../../hooks/usePatientData';\nimport useChartNavigation from '../../hooks/useChartNavigation';\nimport Legend from '../Legend';\nimport './SleepChart.css';\n\n\nconst SleepChart = ({ patientId, isExpanded, onExpand, viewMode = 'patient', navigation, screenshotMode = false, showThreeMonthSummaries = false }) => {\n  const { sleepData, loading, error } = usePatientData(patientId, 'sleep');\n  const [useLineChart, setUseLineChart] = useState(false); // Toggle state for chart view\n  \n  // Use navigation from parent or fallback to internal navigation\n  const useInternalNavigation = !navigation;\n  const internalNavigation = useChartNavigation('sleep');\n  const nav = navigation || internalNavigation;\n\n  const { start: startOfWeek, end: endOfWeek } = nav.getDateRange();\n  const weekData = sleepData.filter(d => d.date >= startOfWeek && d.date <= endOfWeek);\n\n  // Get previous week data\n  const prevWeekStart = new Date(startOfWeek);\n  prevWeekStart.setDate(prevWeekStart.getDate() - 7);\n  const prevWeekEnd = new Date(startOfWeek);\n  prevWeekEnd.setDate(prevWeekEnd.getDate() - 1);\n  const prevWeekData = sleepData.filter(d => d.date >= prevWeekStart && d.date <= prevWeekEnd);\n\n  // Get next week data\n  const nextWeekStart = new Date(endOfWeek);\n  nextWeekStart.setDate(nextWeekStart.getDate() + 1);\n  const nextWeekEnd = new Date(nextWeekStart);\n  nextWeekEnd.setDate(nextWeekEnd.getDate() + 6);\n  const nextWeekData = sleepData.filter(d => d.date >= nextWeekStart && d.date <= nextWeekEnd);\n\n  // Get 3-month data\n  const { start: startOfThreeMonths, end: endOfThreeMonths } = nav.getThreeMonthRange();\n  const threeMonthData = sleepData.filter(d => d.date >= startOfThreeMonths && d.date <= endOfThreeMonths);\n\n  const formatDateRange = (data) => {\n    if (!data || data.length === 0) return '';\n    const startDate = new Date(data[0].date).toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\n    const endDate = new Date(data[data.length - 1].date).toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\n    return `${startDate} to ${endDate}`;\n  };\n\n  const qualityLevels = {\n    'Very good': 'var(--chart-color-sleep-very-good)',\n    'Fairly good': 'var(--chart-color-sleep-fairly-good)',\n    'Fairly bad': 'var(--chart-color-sleep-fairly-bad)',\n    'Very bad': 'var(--chart-color-sleep-very-bad)',\n  };\n\n  const getQualityColor = (quality) => qualityLevels[quality] || '#D3D3D3';\n\n  const legendItems = Object.entries(qualityLevels).map(([label, color]) => ({\n    label,\n    color,\n  }));\n\n  // Process data for extended chart (3 weeks)\n  let extendedChartData = [];\n  if (isExpanded) {\n\n    // Combine all three weeks of data\n    const allWeeksData = [...prevWeekData, ...weekData, ...nextWeekData];\n    \n    // Create a map of dates to sleep data for all 3 weeks\n    const dateMap = new Map();\n    allWeeksData.forEach(item => {\n      const dateKey = item.date.toDateString();\n      dateMap.set(dateKey, item);\n    });\n\n    // Generate chart data for all 21 days (3 weeks)\n    const data = [];\n    const weekLabels = ['Prev Week', 'Current Week', 'Next Week'];\n    \n    for (let week = 0; week < 3; week++) {\n      const weekStart = week === 0 ? prevWeekStart : week === 1 ? startOfWeek : nextWeekStart;\n      \n      for (let day = 0; day < 7; day++) {\n        const date = new Date(weekStart);\n        date.setDate(date.getDate() + day);\n        const dateKey = date.toDateString();\n        const sleepData = dateMap.get(dateKey) || { hours: 0, quality: 'Very bad' };\n        \n        data.push({\n          date,\n          day: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'][date.getDay()],\n          hours: sleepData.hours,\n          quality: sleepData.quality,\n          color: getQualityColor(sleepData.quality),\n          week: week,\n          weekLabel: weekLabels[week]\n        });\n      }\n    }\n\n    extendedChartData = data;\n  }\n\n  // Calculate summary statistics for physician view\n  let weekSummary = null;\n  if (weekData && weekData.length > 0) {\n\n    const totalHours = weekData.reduce((sum, day) => sum + day.hours, 0);\n    const avgHours = (totalHours / weekData.length).toFixed(1);\n\n    // Count quality levels\n    const qualityCounts = {};\n    Object.keys(qualityLevels).forEach(quality => {\n      qualityCounts[quality] = 0;\n    });\n\n    weekData.forEach(day => {\n      if (qualityCounts[day.quality] !== undefined) {\n        qualityCounts[day.quality]++;\n      }\n    });\n\n    // Find most common quality\n    const mostCommonQuality = Object.entries(qualityCounts)\n      .sort(([,a], [,b]) => b - a)[0];\n\n    // Calculate sleep consistency (how much variation in sleep hours)\n    const hourVariations = weekData.map(day => Math.abs(day.hours - parseFloat(avgHours)));\n    const avgVariation = (hourVariations.reduce((sum, v) => sum + v, 0) / hourVariations.length).toFixed(1);\n\n    // Sleep quality score (Very good=4, Fairly good=3, Fairly bad=2, Very bad=1)\n    const qualityScores = {\n      'Very good': 4,\n      'Fairly good': 3,\n      'Fairly bad': 2,\n      'Very bad': 1\n    };\n    const avgQualityScore = weekData.reduce((sum, day) => sum + (qualityScores[day.quality] || 0), 0) / weekData.length;\n    const qualityAssessment = avgQualityScore >= 3.5 ? 'Good' : avgQualityScore >= 2.5 ? 'Fair' : 'Poor';\n\n    // Count nights with adequate sleep (7+ hours)\n    const adequateSleepNights = weekData.filter(day => day.hours >= 7).length;\n\n    weekSummary = {\n      totalHours: totalHours.toFixed(1),\n      avgHours,\n      mostCommonQuality: mostCommonQuality[0],\n      mostCommonQualityCount: mostCommonQuality[1],\n      avgVariation,\n      qualityAssessment,\n      adequateSleepNights,\n      daysTracked: weekData.length\n    };\n  }\n\n  // Calculate 3-month summary statistics for physician view\n  let threeMonthSummary = null;\n  if (threeMonthData && threeMonthData.length > 0) {\n\n    const totalHours = threeMonthData.reduce((sum, day) => sum + day.hours, 0);\n    const avgHours = (totalHours / threeMonthData.length).toFixed(1);\n\n    // Count quality levels\n    const qualityCounts = {};\n    Object.keys(qualityLevels).forEach(quality => {\n      qualityCounts[quality] = 0;\n    });\n\n    threeMonthData.forEach(day => {\n      if (qualityCounts[day.quality] !== undefined) {\n        qualityCounts[day.quality]++;\n      }\n    });\n\n    // Find most common quality\n    const mostCommonQuality = Object.entries(qualityCounts)\n      .sort(([,a], [,b]) => b - a)[0];\n\n    // Calculate sleep consistency (how much variation in sleep hours)\n    const hourVariations = threeMonthData.map(day => Math.abs(day.hours - parseFloat(avgHours)));\n    const avgVariation = (hourVariations.reduce((sum, v) => sum + v, 0) / hourVariations.length).toFixed(1);\n\n    threeMonthSummary = {\n      totalHours: totalHours.toFixed(1),\n      avgHours,\n      mostCommonQuality: mostCommonQuality[0],\n      mostCommonQualityCount: mostCommonQuality[1],\n      avgVariation,\n      daysTracked: threeMonthData.length\n    };\n  }\n\n  // Line Chart Component for Sleep Duration\n  const SleepLineChart = ({ data, isExpanded, extendedData }) => {\n    const isExtendedView = isExpanded && extendedData && extendedData.length > 0;\n    const chartData = isExtendedView ? extendedData : data;\n    \n    if (!chartData || chartData.length === 0) return null;\n\n    const maxHours = chartData.length > 0 ? Math.max(...chartData.map(d => d.hours)) : 0;\n    const minHours = 0; // Always start Y-axis at 0\n    const range = Math.max(maxHours - minHours, 1); // Ensure minimum range of 1\n    const padding = Math.max(range * 0.1, 0.5); // 10% padding, minimum 0.5\n    \n    const config = {\n      width: isExtendedView ? 900 : (isExpanded ? 600 : 400), // Wider for 3-week view\n      height: isExpanded ? 220 : 150, // Reduced height since we removed week labels\n      padding: { top: 20, right: 30, bottom: 50, left: 50 }, // Reduced bottom padding\n      fontSize: {\n        yAxis: isExpanded ? 10 : 8,\n        xAxis: isExpanded ? 10 : 8,\n      }\n    };\n\n    const chartWidth = config.width - config.padding.left - config.padding.right;\n    const chartHeight = config.height - config.padding.top - config.padding.bottom;\n    const dayWidth = chartWidth / (chartData.length - 1); // Dynamic based on data length\n\n    const getX = (index) => config.padding.left + (index * dayWidth);\n    const getY = (hours) => config.padding.top + chartHeight - ((hours - minHours + padding) / (range + 2 * padding)) * chartHeight;\n\n    const pathData = chartData.map((day, index) => {\n      const x = getX(index);\n      const y = getY(day.hours);\n      return `${index === 0 ? 'M' : 'L'} ${x} ${y}`;\n    }).join(' ');\n\n    return (\n      <div className=\"sleep-line-chart\">\n        <svg width=\"100%\" height=\"100%\" viewBox={`0 0 ${config.width} ${config.height}`}>\n          {/* Grid lines */}\n          {[0, 2, 4, 6, 8, 10, 12].map(hours => {\n            if (hours > maxHours + padding) return null; // Don't show grid lines above data range\n            const y = getY(hours);\n            return (\n              <g key={hours}>\n                <line \n                  x1={config.padding.left} \n                  y1={y} \n                  x2={config.width - config.padding.right} \n                  y2={y} \n                  stroke=\"#e0e0e0\" \n                  strokeWidth=\"1\" \n                  strokeDasharray=\"2,2\"\n                />\n                <text \n                  x={config.padding.left - 10} \n                  y={y + 3} \n                  fontSize={config.fontSize.yAxis} \n                  textAnchor=\"end\" \n                  fill=\"var(--chart-color-text-secondary)\"\n                >\n                  {hours}h\n                </text>\n              </g>\n            );\n          })}\n\n          {/* Week separators for extended view */}\n          {isExtendedView && [7, 14].map(weekIndex => {\n            const x = config.padding.left + (weekIndex * dayWidth);\n            return (\n              <line \n                key={weekIndex}\n                x1={x} \n                y1={config.padding.top} \n                x2={x} \n                y2={config.height - config.padding.bottom} \n                stroke=\"#ccc\" \n                strokeWidth=\"2\" \n                strokeDasharray=\"5,5\"\n              />\n            );\n          })}\n          \n          {/* Line path */}\n          <path d={pathData} fill=\"none\" stroke=\"#007bff\" strokeWidth=\"3\" />\n          \n          {/* Data points */}\n          {chartData.map((day, index) => {\n            const x = getX(index);\n            const y = getY(day.hours);\n            const showLabel = isExtendedView ? index % 7 === 0 : true; // Show every 7th day for extended view\n            const dateStr = day.date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\n            \n            return (\n              <g key={index}>\n                <circle \n                  cx={x} \n                  cy={y} \n                  r=\"6\" \n                  fill={getQualityColor(day.quality)}\n                  stroke=\"#fff\"\n                  strokeWidth=\"2\"\n                />\n                <text x={x} y={y - 15} fontSize=\"10\" fill=\"#333\" textAnchor=\"middle\">\n                  {day.hours.toFixed(1)}h\n                </text>\n                {showLabel && (\n                  <>\n                    <text \n                      x={x} \n                      y={config.height - config.padding.bottom + 15} \n                      fontSize={config.fontSize.xAxis} \n                      textAnchor=\"middle\" \n                      className=\"x-axis-day-label\"\n                    >\n                      {day.day}\n                    </text>\n                    <text \n                      x={x} \n                      y={config.height - config.padding.bottom + 30} \n                      fontSize={config.fontSize.xAxis - 1} \n                      textAnchor=\"middle\" \n                      className=\"x-axis-date-label\"\n                      fill=\"var(--chart-color-text-secondary)\"\n                    >\n                      {dateStr}\n                    </text>\n                  </>\n                )}\n              </g>\n            );\n          })}\n        </svg>\n      </div>\n    );\n  };\n\n  return (\n      <div className=\"sleep-chart-content\">\n        <div className=\"sleep-header\">\n          <h3 className=\"chart-title\">Sleep Quality & Duration</h3>\n          <h4 className=\"chart-subtitle\">{nav.getFormattedDateRange()}</h4>\n          \n          {/* View Toggle */}\n          <div className=\"view-toggle\">\n            <button \n              className={`toggle-btn ${!useLineChart ? 'active' : ''}`}\n              onClick={() => setUseLineChart(false)}\n            >\n              Bar Chart\n            </button>\n            <button \n              className={`toggle-btn ${useLineChart ? 'active' : ''}`}\n              onClick={() => setUseLineChart(true)}\n            >\n              Line Chart\n            </button>\n          </div>\n        </div>\n        \n        {/* Conditional Chart Rendering */}\n        {useLineChart ? (\n          <SleepLineChart \n            data={weekData} \n            isExpanded={isExpanded} \n            extendedData={extendedChartData}\n          />\n        ) : (\n          <div className=\"sleep-chart\">\n            {/* Sleep Quality Indicators Row */}\n            <div className=\"sleep-quality-row\">\n              {weekData.map((day, index) => (\n                <div key={`quality-${index}`} className=\"sleep-quality-item\">\n                  <div \n                    className=\"sleep-quality-indicator\"\n                    style={{ backgroundColor: getQualityColor(day.quality) }}\n                  ></div>\n                </div>\n              ))}\n            </div>\n            \n            {/* Bed Icons Row */}\n            <div className=\"bed-icons-row\">\n              {weekData.map((day, index) => (\n                <div key={`bed-${index}`} className=\"bed-item\">\n                  <div className=\"bed-icon-wrapper\">\n                    <svg viewBox=\"0 0 486.5 225.1\" className=\"bed-icon\">\n                      <path d=\"M471.9,68.9c-8,0-14.5,6.5-14.5,14.5v68.6H26.1l-.6-139.3c0-7-5.8-12.7-12.8-12.7h0C5.7,0,0,5.7,0,12.8v199.6c0,7,5.7,12.8,12.7,12.8s12.8-5.7,12.8-12.8v-37h431.9v35.2c0,8,6.5,14.5,14.5,14.5s14.5-6.5,14.5-14.5v-127.1c0-8-6.5-14.5-14.5-14.5ZM483.7,210.6c0,6.5-5.3,11.8-11.8,11.8s-11.8-5.3-11.8-11.8v-38H22.7v39.7c0,5.5-4.5,10-10,10s-10-4.5-10-10V12.8C2.8,7.3,7.3,2.8,12.7,2.8h0c5.5,0,9.9,4.5,10,9.9l.6,142.1h436.8v-71.4c0-6.5,5.3-11.7,11.8-11.7s11.8,5.3,11.8,11.7v127.1Z\" fill=\"#D2B48C\"/>\n                      <path d=\"M29.9,94.2v54.5h425.4v-54.5H29.9ZM452.5,145.9H32.7v-48.9h419.8v48.9Z\" fill=\"#e0e0e0\"/>\n                      <rect x=\"32.7\" y=\"97\" width={`${(day.hours / 10) * 419.8}`} height=\"48.9\" fill=\"#FF4500\" className=\"sleep-fill-rect\" />\n                      <path d=\"M112.8,46.3h-55.4c-12.1,0-22,9.9-22,22s9.9,22,22,22h55.4c12.1,0,22-9.9,22-22s-9.9-22-22-22ZM112.8,87.5h-55.4c-10.6,0-19.2-8.6-19.2-19.2s8.6-19.2,19.2-19.2h55.4c10.6,0,19.2,8.6,19.2,19.2s-8.6,19.2-19.2,19.2Z\" fill=\"#FFFFFF\" stroke=\"#AAAAAA\" strokeWidth=\"1\"/>\n                    </svg>\n                  </div>\n                </div>\n              ))}\n            </div>\n            \n            {/* Sleep Information Row */}\n            <div className=\"sleep-info-row\">\n              {weekData.map((day, index) => (\n                <div key={`info-${index}`} className=\"sleep-info-item\">\n                  <div className=\"sleep-hours\">{day.hours.toFixed(1)}h</div>\n                  <div className=\"day-label\">{['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'][(() => {\n                    const date = new Date(day.date);\n                    return !isNaN(date.getTime()) ? date.getDay() : 0;\n                  })()]}</div>\n                  <div className=\"date-label\">{(() => {\n                    const date = new Date(day.date);\n                    return !isNaN(date.getTime()) ? date.getDate() : 'Invalid';\n                  })()}</div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n        \n        <Legend title=\"Sleep Quality\" items={legendItems} hide={screenshotMode} />\n\n        {/* Show summary for physician/unified view */}\n        {(viewMode === 'physician' || viewMode === 'unified') && weekSummary && (\n          <div className=\"summary-container\">\n            <div className=\"chart-summary\">\n              <h4>Week Summary</h4>\n              <div className=\"summary-stats\">\n                <div className=\"stat-item\">\n                  <span className=\"stat-label\">Average Sleep:</span>\n                  <span className=\"stat-value\">\n                    {weekSummary.avgHours} hours/night\n                  </span>\n                </div>\n                <div className=\"stat-item\">\n                  <span className=\"stat-label\">Total Sleep:</span>\n                  <span className=\"stat-value\">\n                    {weekSummary.totalHours} hours\n                  </span>\n                </div>\n                <div className=\"stat-item\">\n                  <span className=\"stat-label\">Sleep Consistency:</span>\n                  <span className=\"stat-value\">\n                    ±{weekSummary.avgVariation} hours variation\n                  </span>\n                </div>\n\n                <div className=\"stat-item\">\n                  <span className=\"stat-label\">Common Quality:</span>\n                  <span className=\"stat-value\">\n                    {weekSummary.mostCommonQuality} ({weekSummary.mostCommonQualityCount}x)\n                  </span>\n                </div>\n\n              </div>\n            </div>\n            \n            {showThreeMonthSummaries && threeMonthSummary && (\n              <div className=\"chart-summary\">\n                <h4>3-Month Summary</h4>\n                <div className=\"summary-stats\">\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">Average Sleep:</span>\n                    <span className=\"stat-value\">\n                      {threeMonthSummary.avgHours} hours/night\n                    </span>\n                  </div>\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">Total Sleep:</span>\n                    <span className=\"stat-value\">\n                      {threeMonthSummary.totalHours} hours\n                    </span>\n                  </div>\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">Sleep Consistency:</span>\n                    <span className=\"stat-value\">\n                      ±{threeMonthSummary.avgVariation} hours variation\n                    </span>\n                  </div>\n\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">Common Quality:</span>\n                    <span className=\"stat-value\">\n                      {threeMonthSummary.mostCommonQuality} ({threeMonthSummary.mostCommonQualityCount}x)\n                    </span>\n                  </div>\n\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n  );\n};\n\nexport default SleepChart;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAEA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,MAAM,KAAQ,OAAO,CAE/C,MAAO,CAAAC,cAAc,KAAM,4BAA4B,CACvD,MAAO,CAAAC,kBAAkB,KAAM,gCAAgC,CAC/D,MAAO,CAAAC,MAAM,KAAM,WAAW,CAC9B,MAAO,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAG1B,KAAM,CAAAC,UAAU,CAAGC,IAAA,EAAoI,IAAnI,CAAEC,SAAS,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,QAAQ,CAAG,SAAS,CAAEC,UAAU,CAAEC,cAAc,CAAG,KAAK,CAAEC,uBAAuB,CAAG,KAAM,CAAC,CAAAP,IAAA,CAChJ,KAAM,CAAEQ,SAAS,CAAEC,OAAO,CAAEC,KAAM,CAAC,CAAGpB,cAAc,CAACW,SAAS,CAAE,OAAO,CAAC,CACxE,KAAM,CAACU,YAAY,CAAEC,eAAe,CAAC,CAAGxB,QAAQ,CAAC,KAAK,CAAC,CAAE;AAEzD;AACA,KAAM,CAAAyB,qBAAqB,CAAG,CAACR,UAAU,CACzC,KAAM,CAAAS,kBAAkB,CAAGvB,kBAAkB,CAAC,OAAO,CAAC,CACtD,KAAM,CAAAwB,GAAG,CAAGV,UAAU,EAAIS,kBAAkB,CAE5C,KAAM,CAAEE,KAAK,CAAEC,WAAW,CAAEC,GAAG,CAAEC,SAAU,CAAC,CAAGJ,GAAG,CAACK,YAAY,CAAC,CAAC,CACjE,KAAM,CAAAC,QAAQ,CAAGb,SAAS,CAACc,MAAM,CAACC,CAAC,EAAIA,CAAC,CAACC,IAAI,EAAIP,WAAW,EAAIM,CAAC,CAACC,IAAI,EAAIL,SAAS,CAAC,CAEpF;AACA,KAAM,CAAAM,aAAa,CAAG,GAAI,CAAAC,IAAI,CAACT,WAAW,CAAC,CAC3CQ,aAAa,CAACE,OAAO,CAACF,aAAa,CAACG,OAAO,CAAC,CAAC,CAAG,CAAC,CAAC,CAClD,KAAM,CAAAC,WAAW,CAAG,GAAI,CAAAH,IAAI,CAACT,WAAW,CAAC,CACzCY,WAAW,CAACF,OAAO,CAACE,WAAW,CAACD,OAAO,CAAC,CAAC,CAAG,CAAC,CAAC,CAC9C,KAAM,CAAAE,YAAY,CAAGtB,SAAS,CAACc,MAAM,CAACC,CAAC,EAAIA,CAAC,CAACC,IAAI,EAAIC,aAAa,EAAIF,CAAC,CAACC,IAAI,EAAIK,WAAW,CAAC,CAE5F;AACA,KAAM,CAAAE,aAAa,CAAG,GAAI,CAAAL,IAAI,CAACP,SAAS,CAAC,CACzCY,aAAa,CAACJ,OAAO,CAACI,aAAa,CAACH,OAAO,CAAC,CAAC,CAAG,CAAC,CAAC,CAClD,KAAM,CAAAI,WAAW,CAAG,GAAI,CAAAN,IAAI,CAACK,aAAa,CAAC,CAC3CC,WAAW,CAACL,OAAO,CAACK,WAAW,CAACJ,OAAO,CAAC,CAAC,CAAG,CAAC,CAAC,CAC9C,KAAM,CAAAK,YAAY,CAAGzB,SAAS,CAACc,MAAM,CAACC,CAAC,EAAIA,CAAC,CAACC,IAAI,EAAIO,aAAa,EAAIR,CAAC,CAACC,IAAI,EAAIQ,WAAW,CAAC,CAE5F;AACA,KAAM,CAAEhB,KAAK,CAAEkB,kBAAkB,CAAEhB,GAAG,CAAEiB,gBAAiB,CAAC,CAAGpB,GAAG,CAACqB,kBAAkB,CAAC,CAAC,CACrF,KAAM,CAAAC,cAAc,CAAG7B,SAAS,CAACc,MAAM,CAACC,CAAC,EAAIA,CAAC,CAACC,IAAI,EAAIU,kBAAkB,EAAIX,CAAC,CAACC,IAAI,EAAIW,gBAAgB,CAAC,CAExG,KAAM,CAAAG,eAAe,CAAIC,IAAI,EAAK,CAChC,GAAI,CAACA,IAAI,EAAIA,IAAI,CAACC,MAAM,GAAK,CAAC,CAAE,MAAO,EAAE,CACzC,KAAM,CAAAC,SAAS,CAAG,GAAI,CAAAf,IAAI,CAACa,IAAI,CAAC,CAAC,CAAC,CAACf,IAAI,CAAC,CAACkB,kBAAkB,CAAC,OAAO,CAAE,CAAEC,KAAK,CAAE,OAAO,CAAEC,GAAG,CAAE,SAAU,CAAC,CAAC,CACxG,KAAM,CAAAC,OAAO,CAAG,GAAI,CAAAnB,IAAI,CAACa,IAAI,CAACA,IAAI,CAACC,MAAM,CAAG,CAAC,CAAC,CAAChB,IAAI,CAAC,CAACkB,kBAAkB,CAAC,OAAO,CAAE,CAAEC,KAAK,CAAE,OAAO,CAAEC,GAAG,CAAE,SAAU,CAAC,CAAC,CACpH,SAAAE,MAAA,CAAUL,SAAS,SAAAK,MAAA,CAAOD,OAAO,EACnC,CAAC,CAED,KAAM,CAAAE,aAAa,CAAG,CACpB,WAAW,CAAE,oCAAoC,CACjD,aAAa,CAAE,sCAAsC,CACrD,YAAY,CAAE,qCAAqC,CACnD,UAAU,CAAE,mCACd,CAAC,CAED,KAAM,CAAAC,eAAe,CAAIC,OAAO,EAAKF,aAAa,CAACE,OAAO,CAAC,EAAI,SAAS,CAExE,KAAM,CAAAC,WAAW,CAAGC,MAAM,CAACC,OAAO,CAACL,aAAa,CAAC,CAACM,GAAG,CAACC,KAAA,MAAC,CAACC,KAAK,CAAEC,KAAK,CAAC,CAAAF,KAAA,OAAM,CACzEC,KAAK,CACLC,KACF,CAAC,EAAC,CAAC,CAEH;AACA,GAAI,CAAAC,iBAAiB,CAAG,EAAE,CAC1B,GAAIvD,UAAU,CAAE,CAEd;AACA,KAAM,CAAAwD,YAAY,CAAG,CAAC,GAAG5B,YAAY,CAAE,GAAGT,QAAQ,CAAE,GAAGY,YAAY,CAAC,CAEpE;AACA,KAAM,CAAA0B,OAAO,CAAG,GAAI,CAAAC,GAAG,CAAC,CAAC,CACzBF,YAAY,CAACG,OAAO,CAACC,IAAI,EAAI,CAC3B,KAAM,CAAAC,OAAO,CAAGD,IAAI,CAACtC,IAAI,CAACwC,YAAY,CAAC,CAAC,CACxCL,OAAO,CAACM,GAAG,CAACF,OAAO,CAAED,IAAI,CAAC,CAC5B,CAAC,CAAC,CAEF;AACA,KAAM,CAAAvB,IAAI,CAAG,EAAE,CACf,KAAM,CAAA2B,UAAU,CAAG,CAAC,WAAW,CAAE,cAAc,CAAE,WAAW,CAAC,CAE7D,IAAK,GAAI,CAAAC,IAAI,CAAG,CAAC,CAAEA,IAAI,CAAG,CAAC,CAAEA,IAAI,EAAE,CAAE,CACnC,KAAM,CAAAC,SAAS,CAAGD,IAAI,GAAK,CAAC,CAAG1C,aAAa,CAAG0C,IAAI,GAAK,CAAC,CAAGlD,WAAW,CAAGc,aAAa,CAEvF,IAAK,GAAI,CAAAa,GAAG,CAAG,CAAC,CAAEA,GAAG,CAAG,CAAC,CAAEA,GAAG,EAAE,CAAE,CAChC,KAAM,CAAApB,IAAI,CAAG,GAAI,CAAAE,IAAI,CAAC0C,SAAS,CAAC,CAChC5C,IAAI,CAACG,OAAO,CAACH,IAAI,CAACI,OAAO,CAAC,CAAC,CAAGgB,GAAG,CAAC,CAClC,KAAM,CAAAmB,OAAO,CAAGvC,IAAI,CAACwC,YAAY,CAAC,CAAC,CACnC,KAAM,CAAAxD,SAAS,CAAGmD,OAAO,CAACU,GAAG,CAACN,OAAO,CAAC,EAAI,CAAEO,KAAK,CAAE,CAAC,CAAErB,OAAO,CAAE,UAAW,CAAC,CAE3EV,IAAI,CAACgC,IAAI,CAAC,CACR/C,IAAI,CACJoB,GAAG,CAAE,CAAC,KAAK,CAAE,KAAK,CAAE,KAAK,CAAE,KAAK,CAAE,KAAK,CAAE,KAAK,CAAE,KAAK,CAAC,CAACpB,IAAI,CAACgD,MAAM,CAAC,CAAC,CAAC,CACrEF,KAAK,CAAE9D,SAAS,CAAC8D,KAAK,CACtBrB,OAAO,CAAEzC,SAAS,CAACyC,OAAO,CAC1BO,KAAK,CAAER,eAAe,CAACxC,SAAS,CAACyC,OAAO,CAAC,CACzCkB,IAAI,CAAEA,IAAI,CACVM,SAAS,CAAEP,UAAU,CAACC,IAAI,CAC5B,CAAC,CAAC,CACJ,CACF,CAEAV,iBAAiB,CAAGlB,IAAI,CAC1B,CAEA;AACA,GAAI,CAAAmC,WAAW,CAAG,IAAI,CACtB,GAAIrD,QAAQ,EAAIA,QAAQ,CAACmB,MAAM,CAAG,CAAC,CAAE,CAEnC,KAAM,CAAAmC,UAAU,CAAGtD,QAAQ,CAACuD,MAAM,CAAC,CAACC,GAAG,CAAEjC,GAAG,GAAKiC,GAAG,CAAGjC,GAAG,CAAC0B,KAAK,CAAE,CAAC,CAAC,CACpE,KAAM,CAAAQ,QAAQ,CAAG,CAACH,UAAU,CAAGtD,QAAQ,CAACmB,MAAM,EAAEuC,OAAO,CAAC,CAAC,CAAC,CAE1D;AACA,KAAM,CAAAC,aAAa,CAAG,CAAC,CAAC,CACxB7B,MAAM,CAAC8B,IAAI,CAAClC,aAAa,CAAC,CAACc,OAAO,CAACZ,OAAO,EAAI,CAC5C+B,aAAa,CAAC/B,OAAO,CAAC,CAAG,CAAC,CAC5B,CAAC,CAAC,CAEF5B,QAAQ,CAACwC,OAAO,CAACjB,GAAG,EAAI,CACtB,GAAIoC,aAAa,CAACpC,GAAG,CAACK,OAAO,CAAC,GAAKiC,SAAS,CAAE,CAC5CF,aAAa,CAACpC,GAAG,CAACK,OAAO,CAAC,EAAE,CAC9B,CACF,CAAC,CAAC,CAEF;AACA,KAAM,CAAAkC,iBAAiB,CAAGhC,MAAM,CAACC,OAAO,CAAC4B,aAAa,CAAC,CACpDI,IAAI,CAAC,CAAAC,KAAA,CAAAC,KAAA,OAAC,EAAEC,CAAC,CAAC,CAAAF,KAAA,IAAE,EAAEG,CAAC,CAAC,CAAAF,KAAA,OAAK,CAAAE,CAAC,CAAGD,CAAC,GAAC,CAAC,CAAC,CAAC,CAEjC;AACA,KAAM,CAAAE,cAAc,CAAGpE,QAAQ,CAACgC,GAAG,CAACT,GAAG,EAAI8C,IAAI,CAACC,GAAG,CAAC/C,GAAG,CAAC0B,KAAK,CAAGsB,UAAU,CAACd,QAAQ,CAAC,CAAC,CAAC,CACtF,KAAM,CAAAe,YAAY,CAAG,CAACJ,cAAc,CAACb,MAAM,CAAC,CAACC,GAAG,CAAEiB,CAAC,GAAKjB,GAAG,CAAGiB,CAAC,CAAE,CAAC,CAAC,CAAGL,cAAc,CAACjD,MAAM,EAAEuC,OAAO,CAAC,CAAC,CAAC,CAEvG;AACA,KAAM,CAAAgB,aAAa,CAAG,CACpB,WAAW,CAAE,CAAC,CACd,aAAa,CAAE,CAAC,CAChB,YAAY,CAAE,CAAC,CACf,UAAU,CAAE,CACd,CAAC,CACD,KAAM,CAAAC,eAAe,CAAG3E,QAAQ,CAACuD,MAAM,CAAC,CAACC,GAAG,CAAEjC,GAAG,GAAKiC,GAAG,EAAIkB,aAAa,CAACnD,GAAG,CAACK,OAAO,CAAC,EAAI,CAAC,CAAC,CAAE,CAAC,CAAC,CAAG5B,QAAQ,CAACmB,MAAM,CACnH,KAAM,CAAAyD,iBAAiB,CAAGD,eAAe,EAAI,GAAG,CAAG,MAAM,CAAGA,eAAe,EAAI,GAAG,CAAG,MAAM,CAAG,MAAM,CAEpG;AACA,KAAM,CAAAE,mBAAmB,CAAG7E,QAAQ,CAACC,MAAM,CAACsB,GAAG,EAAIA,GAAG,CAAC0B,KAAK,EAAI,CAAC,CAAC,CAAC9B,MAAM,CAEzEkC,WAAW,CAAG,CACZC,UAAU,CAAEA,UAAU,CAACI,OAAO,CAAC,CAAC,CAAC,CACjCD,QAAQ,CACRK,iBAAiB,CAAEA,iBAAiB,CAAC,CAAC,CAAC,CACvCgB,sBAAsB,CAAEhB,iBAAiB,CAAC,CAAC,CAAC,CAC5CU,YAAY,CACZI,iBAAiB,CACjBC,mBAAmB,CACnBE,WAAW,CAAE/E,QAAQ,CAACmB,MACxB,CAAC,CACH,CAEA;AACA,GAAI,CAAA6D,iBAAiB,CAAG,IAAI,CAC5B,GAAIhE,cAAc,EAAIA,cAAc,CAACG,MAAM,CAAG,CAAC,CAAE,CAE/C,KAAM,CAAAmC,UAAU,CAAGtC,cAAc,CAACuC,MAAM,CAAC,CAACC,GAAG,CAAEjC,GAAG,GAAKiC,GAAG,CAAGjC,GAAG,CAAC0B,KAAK,CAAE,CAAC,CAAC,CAC1E,KAAM,CAAAQ,QAAQ,CAAG,CAACH,UAAU,CAAGtC,cAAc,CAACG,MAAM,EAAEuC,OAAO,CAAC,CAAC,CAAC,CAEhE;AACA,KAAM,CAAAC,aAAa,CAAG,CAAC,CAAC,CACxB7B,MAAM,CAAC8B,IAAI,CAAClC,aAAa,CAAC,CAACc,OAAO,CAACZ,OAAO,EAAI,CAC5C+B,aAAa,CAAC/B,OAAO,CAAC,CAAG,CAAC,CAC5B,CAAC,CAAC,CAEFZ,cAAc,CAACwB,OAAO,CAACjB,GAAG,EAAI,CAC5B,GAAIoC,aAAa,CAACpC,GAAG,CAACK,OAAO,CAAC,GAAKiC,SAAS,CAAE,CAC5CF,aAAa,CAACpC,GAAG,CAACK,OAAO,CAAC,EAAE,CAC9B,CACF,CAAC,CAAC,CAEF;AACA,KAAM,CAAAkC,iBAAiB,CAAGhC,MAAM,CAACC,OAAO,CAAC4B,aAAa,CAAC,CACpDI,IAAI,CAAC,CAAAkB,KAAA,CAAAC,KAAA,OAAC,EAAEhB,CAAC,CAAC,CAAAe,KAAA,IAAE,EAAEd,CAAC,CAAC,CAAAe,KAAA,OAAK,CAAAf,CAAC,CAAGD,CAAC,GAAC,CAAC,CAAC,CAAC,CAEjC;AACA,KAAM,CAAAE,cAAc,CAAGpD,cAAc,CAACgB,GAAG,CAACT,GAAG,EAAI8C,IAAI,CAACC,GAAG,CAAC/C,GAAG,CAAC0B,KAAK,CAAGsB,UAAU,CAACd,QAAQ,CAAC,CAAC,CAAC,CAC5F,KAAM,CAAAe,YAAY,CAAG,CAACJ,cAAc,CAACb,MAAM,CAAC,CAACC,GAAG,CAAEiB,CAAC,GAAKjB,GAAG,CAAGiB,CAAC,CAAE,CAAC,CAAC,CAAGL,cAAc,CAACjD,MAAM,EAAEuC,OAAO,CAAC,CAAC,CAAC,CAEvGsB,iBAAiB,CAAG,CAClB1B,UAAU,CAAEA,UAAU,CAACI,OAAO,CAAC,CAAC,CAAC,CACjCD,QAAQ,CACRK,iBAAiB,CAAEA,iBAAiB,CAAC,CAAC,CAAC,CACvCgB,sBAAsB,CAAEhB,iBAAiB,CAAC,CAAC,CAAC,CAC5CU,YAAY,CACZO,WAAW,CAAE/D,cAAc,CAACG,MAC9B,CAAC,CACH,CAEA;AACA,KAAM,CAAAgE,cAAc,CAAGC,KAAA,EAAwC,IAAvC,CAAElE,IAAI,CAAErC,UAAU,CAAEwG,YAAa,CAAC,CAAAD,KAAA,CACxD,KAAM,CAAAE,cAAc,CAAGzG,UAAU,EAAIwG,YAAY,EAAIA,YAAY,CAAClE,MAAM,CAAG,CAAC,CAC5E,KAAM,CAAAoE,SAAS,CAAGD,cAAc,CAAGD,YAAY,CAAGnE,IAAI,CAEtD,GAAI,CAACqE,SAAS,EAAIA,SAAS,CAACpE,MAAM,GAAK,CAAC,CAAE,MAAO,KAAI,CAErD,KAAM,CAAAqE,QAAQ,CAAGD,SAAS,CAACpE,MAAM,CAAG,CAAC,CAAGkD,IAAI,CAACoB,GAAG,CAAC,GAAGF,SAAS,CAACvD,GAAG,CAAC9B,CAAC,EAAIA,CAAC,CAAC+C,KAAK,CAAC,CAAC,CAAG,CAAC,CACpF,KAAM,CAAAyC,QAAQ,CAAG,CAAC,CAAE;AACpB,KAAM,CAAAC,KAAK,CAAGtB,IAAI,CAACoB,GAAG,CAACD,QAAQ,CAAGE,QAAQ,CAAE,CAAC,CAAC,CAAE;AAChD,KAAM,CAAAE,OAAO,CAAGvB,IAAI,CAACoB,GAAG,CAACE,KAAK,CAAG,GAAG,CAAE,GAAG,CAAC,CAAE;AAE5C,KAAM,CAAAE,MAAM,CAAG,CACbC,KAAK,CAAER,cAAc,CAAG,GAAG,CAAIzG,UAAU,CAAG,GAAG,CAAG,GAAI,CAAE;AACxDkH,MAAM,CAAElH,UAAU,CAAG,GAAG,CAAG,GAAG,CAAE;AAChC+G,OAAO,CAAE,CAAEI,GAAG,CAAE,EAAE,CAAEC,KAAK,CAAE,EAAE,CAAEC,MAAM,CAAE,EAAE,CAAEC,IAAI,CAAE,EAAG,CAAC,CAAE;AACvDC,QAAQ,CAAE,CACRC,KAAK,CAAExH,UAAU,CAAG,EAAE,CAAG,CAAC,CAC1ByH,KAAK,CAAEzH,UAAU,CAAG,EAAE,CAAG,CAC3B,CACF,CAAC,CAED,KAAM,CAAA0H,UAAU,CAAGV,MAAM,CAACC,KAAK,CAAGD,MAAM,CAACD,OAAO,CAACO,IAAI,CAAGN,MAAM,CAACD,OAAO,CAACK,KAAK,CAC5E,KAAM,CAAAO,WAAW,CAAGX,MAAM,CAACE,MAAM,CAAGF,MAAM,CAACD,OAAO,CAACI,GAAG,CAAGH,MAAM,CAACD,OAAO,CAACM,MAAM,CAC9E,KAAM,CAAAO,QAAQ,CAAGF,UAAU,EAAIhB,SAAS,CAACpE,MAAM,CAAG,CAAC,CAAC,CAAE;AAEtD,KAAM,CAAAuF,IAAI,CAAIC,KAAK,EAAKd,MAAM,CAACD,OAAO,CAACO,IAAI,CAAIQ,KAAK,CAAGF,QAAS,CAChE,KAAM,CAAAG,IAAI,CAAI3D,KAAK,EAAK4C,MAAM,CAACD,OAAO,CAACI,GAAG,CAAGQ,WAAW,CAAI,CAACvD,KAAK,CAAGyC,QAAQ,CAAGE,OAAO,GAAKD,KAAK,CAAG,CAAC,CAAGC,OAAO,CAAC,CAAIY,WAAW,CAE/H,KAAM,CAAAK,QAAQ,CAAGtB,SAAS,CAACvD,GAAG,CAAC,CAACT,GAAG,CAAEoF,KAAK,GAAK,CAC7C,KAAM,CAAAG,CAAC,CAAGJ,IAAI,CAACC,KAAK,CAAC,CACrB,KAAM,CAAAI,CAAC,CAAGH,IAAI,CAACrF,GAAG,CAAC0B,KAAK,CAAC,CACzB,SAAAxB,MAAA,CAAUkF,KAAK,GAAK,CAAC,CAAG,GAAG,CAAG,GAAG,MAAAlF,MAAA,CAAIqF,CAAC,MAAArF,MAAA,CAAIsF,CAAC,EAC7C,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,CAEZ,mBACE3I,IAAA,QAAK4I,SAAS,CAAC,kBAAkB,CAAAC,QAAA,cAC/B3I,KAAA,QAAKuH,KAAK,CAAC,MAAM,CAACC,MAAM,CAAC,MAAM,CAACoB,OAAO,QAAA1F,MAAA,CAASoE,MAAM,CAACC,KAAK,MAAArE,MAAA,CAAIoE,MAAM,CAACE,MAAM,CAAG,CAAAmB,QAAA,EAE7E,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,EAAE,CAAE,EAAE,CAAC,CAAClF,GAAG,CAACiB,KAAK,EAAI,CACpC,GAAIA,KAAK,CAAGuC,QAAQ,CAAGI,OAAO,CAAE,MAAO,KAAI,CAAE;AAC7C,KAAM,CAAAmB,CAAC,CAAGH,IAAI,CAAC3D,KAAK,CAAC,CACrB,mBACE1E,KAAA,MAAA2I,QAAA,eACE7I,IAAA,SACE+I,EAAE,CAAEvB,MAAM,CAACD,OAAO,CAACO,IAAK,CACxBkB,EAAE,CAAEN,CAAE,CACNO,EAAE,CAAEzB,MAAM,CAACC,KAAK,CAAGD,MAAM,CAACD,OAAO,CAACK,KAAM,CACxCsB,EAAE,CAAER,CAAE,CACNS,MAAM,CAAC,SAAS,CAChBC,WAAW,CAAC,GAAG,CACfC,eAAe,CAAC,KAAK,CACtB,CAAC,cACFnJ,KAAA,SACEuI,CAAC,CAAEjB,MAAM,CAACD,OAAO,CAACO,IAAI,CAAG,EAAG,CAC5BY,CAAC,CAAEA,CAAC,CAAG,CAAE,CACTX,QAAQ,CAAEP,MAAM,CAACO,QAAQ,CAACC,KAAM,CAChCsB,UAAU,CAAC,KAAK,CAChBC,IAAI,CAAC,mCAAmC,CAAAV,QAAA,EAEvCjE,KAAK,CAAC,GACT,EAAM,CAAC,GAlBDA,KAmBL,CAAC,CAER,CAAC,CAAC,CAGDqC,cAAc,EAAI,CAAC,CAAC,CAAE,EAAE,CAAC,CAACtD,GAAG,CAAC6F,SAAS,EAAI,CAC1C,KAAM,CAAAf,CAAC,CAAGjB,MAAM,CAACD,OAAO,CAACO,IAAI,CAAI0B,SAAS,CAAGpB,QAAS,CACtD,mBACEpI,IAAA,SAEE+I,EAAE,CAAEN,CAAE,CACNO,EAAE,CAAExB,MAAM,CAACD,OAAO,CAACI,GAAI,CACvBsB,EAAE,CAAER,CAAE,CACNS,EAAE,CAAE1B,MAAM,CAACE,MAAM,CAAGF,MAAM,CAACD,OAAO,CAACM,MAAO,CAC1CsB,MAAM,CAAC,MAAM,CACbC,WAAW,CAAC,GAAG,CACfC,eAAe,CAAC,KAAK,EAPhBG,SAQN,CAAC,CAEN,CAAC,CAAC,cAGFxJ,IAAA,SAAM6B,CAAC,CAAE2G,QAAS,CAACe,IAAI,CAAC,MAAM,CAACJ,MAAM,CAAC,SAAS,CAACC,WAAW,CAAC,GAAG,CAAE,CAAC,CAGjElC,SAAS,CAACvD,GAAG,CAAC,CAACT,GAAG,CAAEoF,KAAK,GAAK,CAC7B,KAAM,CAAAG,CAAC,CAAGJ,IAAI,CAACC,KAAK,CAAC,CACrB,KAAM,CAAAI,CAAC,CAAGH,IAAI,CAACrF,GAAG,CAAC0B,KAAK,CAAC,CACzB,KAAM,CAAA6E,SAAS,CAAGxC,cAAc,CAAGqB,KAAK,CAAG,CAAC,GAAK,CAAC,CAAG,IAAI,CAAE;AAC3D,KAAM,CAAAoB,OAAO,CAAGxG,GAAG,CAACpB,IAAI,CAACkB,kBAAkB,CAAC,OAAO,CAAE,CAAEC,KAAK,CAAE,OAAO,CAAEC,GAAG,CAAE,SAAU,CAAC,CAAC,CAExF,mBACEhD,KAAA,MAAA2I,QAAA,eACE7I,IAAA,WACE2J,EAAE,CAAElB,CAAE,CACNmB,EAAE,CAAElB,CAAE,CACNmB,CAAC,CAAC,GAAG,CACLN,IAAI,CAAEjG,eAAe,CAACJ,GAAG,CAACK,OAAO,CAAE,CACnC4F,MAAM,CAAC,MAAM,CACbC,WAAW,CAAC,GAAG,CAChB,CAAC,cACFlJ,KAAA,SAAMuI,CAAC,CAAEA,CAAE,CAACC,CAAC,CAAEA,CAAC,CAAG,EAAG,CAACX,QAAQ,CAAC,IAAI,CAACwB,IAAI,CAAC,MAAM,CAACD,UAAU,CAAC,QAAQ,CAAAT,QAAA,EACjE3F,GAAG,CAAC0B,KAAK,CAACS,OAAO,CAAC,CAAC,CAAC,CAAC,GACxB,EAAM,CAAC,CACNoE,SAAS,eACRvJ,KAAA,CAAAE,SAAA,EAAAyI,QAAA,eACE7I,IAAA,SACEyI,CAAC,CAAEA,CAAE,CACLC,CAAC,CAAElB,MAAM,CAACE,MAAM,CAAGF,MAAM,CAACD,OAAO,CAACM,MAAM,CAAG,EAAG,CAC9CE,QAAQ,CAAEP,MAAM,CAACO,QAAQ,CAACE,KAAM,CAChCqB,UAAU,CAAC,QAAQ,CACnBV,SAAS,CAAC,kBAAkB,CAAAC,QAAA,CAE3B3F,GAAG,CAACA,GAAG,CACJ,CAAC,cACPlD,IAAA,SACEyI,CAAC,CAAEA,CAAE,CACLC,CAAC,CAAElB,MAAM,CAACE,MAAM,CAAGF,MAAM,CAACD,OAAO,CAACM,MAAM,CAAG,EAAG,CAC9CE,QAAQ,CAAEP,MAAM,CAACO,QAAQ,CAACE,KAAK,CAAG,CAAE,CACpCqB,UAAU,CAAC,QAAQ,CACnBV,SAAS,CAAC,mBAAmB,CAC7BW,IAAI,CAAC,mCAAmC,CAAAV,QAAA,CAEvCa,OAAO,CACJ,CAAC,EACP,CACH,GAlCKpB,KAmCL,CAAC,CAER,CAAC,CAAC,EACC,CAAC,CACH,CAAC,CAEV,CAAC,CAED,mBACIpI,KAAA,QAAK0I,SAAS,CAAC,qBAAqB,CAAAC,QAAA,eAClC3I,KAAA,QAAK0I,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3B7I,IAAA,OAAI4I,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAC,0BAAwB,CAAI,CAAC,cACzD7I,IAAA,OAAI4I,SAAS,CAAC,gBAAgB,CAAAC,QAAA,CAAExH,GAAG,CAACyI,qBAAqB,CAAC,CAAC,CAAK,CAAC,cAGjE5J,KAAA,QAAK0I,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1B7I,IAAA,WACE4I,SAAS,eAAAxF,MAAA,CAAgB,CAACnC,YAAY,CAAG,QAAQ,CAAG,EAAE,CAAG,CACzD8I,OAAO,CAAEA,CAAA,GAAM7I,eAAe,CAAC,KAAK,CAAE,CAAA2H,QAAA,CACvC,WAED,CAAQ,CAAC,cACT7I,IAAA,WACE4I,SAAS,eAAAxF,MAAA,CAAgBnC,YAAY,CAAG,QAAQ,CAAG,EAAE,CAAG,CACxD8I,OAAO,CAAEA,CAAA,GAAM7I,eAAe,CAAC,IAAI,CAAE,CAAA2H,QAAA,CACtC,YAED,CAAQ,CAAC,EACN,CAAC,EACH,CAAC,CAGL5H,YAAY,cACXjB,IAAA,CAAC8G,cAAc,EACbjE,IAAI,CAAElB,QAAS,CACfnB,UAAU,CAAEA,UAAW,CACvBwG,YAAY,CAAEjD,iBAAkB,CACjC,CAAC,cAEF7D,KAAA,QAAK0I,SAAS,CAAC,aAAa,CAAAC,QAAA,eAE1B7I,IAAA,QAAK4I,SAAS,CAAC,mBAAmB,CAAAC,QAAA,CAC/BlH,QAAQ,CAACgC,GAAG,CAAC,CAACT,GAAG,CAAEoF,KAAK,gBACvBtI,IAAA,QAA8B4I,SAAS,CAAC,oBAAoB,CAAAC,QAAA,cAC1D7I,IAAA,QACE4I,SAAS,CAAC,yBAAyB,CACnCoB,KAAK,CAAE,CAAEC,eAAe,CAAE3G,eAAe,CAACJ,GAAG,CAACK,OAAO,CAAE,CAAE,CACrD,CAAC,aAAAH,MAAA,CAJYkF,KAAK,CAKrB,CACN,CAAC,CACC,CAAC,cAGNtI,IAAA,QAAK4I,SAAS,CAAC,eAAe,CAAAC,QAAA,CAC3BlH,QAAQ,CAACgC,GAAG,CAAC,CAACT,GAAG,CAAEoF,KAAK,gBACvBtI,IAAA,QAA0B4I,SAAS,CAAC,UAAU,CAAAC,QAAA,cAC5C7I,IAAA,QAAK4I,SAAS,CAAC,kBAAkB,CAAAC,QAAA,cAC/B3I,KAAA,QAAK4I,OAAO,CAAC,iBAAiB,CAACF,SAAS,CAAC,UAAU,CAAAC,QAAA,eACjD7I,IAAA,SAAM6B,CAAC,CAAC,kdAAkd,CAAC0H,IAAI,CAAC,SAAS,CAAC,CAAC,cAC3evJ,IAAA,SAAM6B,CAAC,CAAC,sEAAsE,CAAC0H,IAAI,CAAC,SAAS,CAAC,CAAC,cAC/FvJ,IAAA,SAAMyI,CAAC,CAAC,MAAM,CAACC,CAAC,CAAC,IAAI,CAACjB,KAAK,IAAArE,MAAA,CAAMF,GAAG,CAAC0B,KAAK,CAAG,EAAE,CAAI,KAAK,CAAG,CAAC8C,MAAM,CAAC,MAAM,CAAC6B,IAAI,CAAC,SAAS,CAACX,SAAS,CAAC,iBAAiB,CAAE,CAAC,cACvH5I,IAAA,SAAM6B,CAAC,CAAC,gNAAgN,CAAC0H,IAAI,CAAC,SAAS,CAACJ,MAAM,CAAC,SAAS,CAACC,WAAW,CAAC,GAAG,CAAC,CAAC,EACvQ,CAAC,CACH,CAAC,SAAAhG,MAAA,CARSkF,KAAK,CASjB,CACN,CAAC,CACC,CAAC,cAGNtI,IAAA,QAAK4I,SAAS,CAAC,gBAAgB,CAAAC,QAAA,CAC5BlH,QAAQ,CAACgC,GAAG,CAAC,CAACT,GAAG,CAAEoF,KAAK,gBACvBpI,KAAA,QAA2B0I,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eACpD3I,KAAA,QAAK0I,SAAS,CAAC,aAAa,CAAAC,QAAA,EAAE3F,GAAG,CAAC0B,KAAK,CAACS,OAAO,CAAC,CAAC,CAAC,CAAC,GAAC,EAAK,CAAC,cAC1DrF,IAAA,QAAK4I,SAAS,CAAC,WAAW,CAAAC,QAAA,CAAE,CAAC,KAAK,CAAE,KAAK,CAAE,KAAK,CAAE,KAAK,CAAE,KAAK,CAAE,KAAK,CAAE,KAAK,CAAC,CAAC,CAAC,IAAM,CACnF,KAAM,CAAA/G,IAAI,CAAG,GAAI,CAAAE,IAAI,CAACkB,GAAG,CAACpB,IAAI,CAAC,CAC/B,MAAO,CAACoI,KAAK,CAACpI,IAAI,CAACqI,OAAO,CAAC,CAAC,CAAC,CAAGrI,IAAI,CAACgD,MAAM,CAAC,CAAC,CAAG,CAAC,CACnD,CAAC,EAAE,CAAC,CAAC,CAAM,CAAC,cACZ9E,IAAA,QAAK4I,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAE,CAAC,IAAM,CAClC,KAAM,CAAA/G,IAAI,CAAG,GAAI,CAAAE,IAAI,CAACkB,GAAG,CAACpB,IAAI,CAAC,CAC/B,MAAO,CAACoI,KAAK,CAACpI,IAAI,CAACqI,OAAO,CAAC,CAAC,CAAC,CAAGrI,IAAI,CAACI,OAAO,CAAC,CAAC,CAAG,SAAS,CAC5D,CAAC,EAAE,CAAC,CAAM,CAAC,WAAAkB,MAAA,CATKkF,KAAK,CAUlB,CACN,CAAC,CACC,CAAC,EACH,CACN,cAEDtI,IAAA,CAACF,MAAM,EAACsK,KAAK,CAAC,eAAe,CAACC,KAAK,CAAE7G,WAAY,CAAC8G,IAAI,CAAE1J,cAAe,CAAE,CAAC,CAGzE,CAACF,QAAQ,GAAK,WAAW,EAAIA,QAAQ,GAAK,SAAS,GAAKsE,WAAW,eAClE9E,KAAA,QAAK0I,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAChC3I,KAAA,QAAK0I,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5B7I,IAAA,OAAA6I,QAAA,CAAI,cAAY,CAAI,CAAC,cACrB3I,KAAA,QAAK0I,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5B3I,KAAA,QAAK0I,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxB7I,IAAA,SAAM4I,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,gBAAc,CAAM,CAAC,cAClD3I,KAAA,SAAM0I,SAAS,CAAC,YAAY,CAAAC,QAAA,EACzB7D,WAAW,CAACI,QAAQ,CAAC,cACxB,EAAM,CAAC,EACJ,CAAC,cACNlF,KAAA,QAAK0I,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxB7I,IAAA,SAAM4I,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,cAAY,CAAM,CAAC,cAChD3I,KAAA,SAAM0I,SAAS,CAAC,YAAY,CAAAC,QAAA,EACzB7D,WAAW,CAACC,UAAU,CAAC,QAC1B,EAAM,CAAC,EACJ,CAAC,cACN/E,KAAA,QAAK0I,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxB7I,IAAA,SAAM4I,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,oBAAkB,CAAM,CAAC,cACtD3I,KAAA,SAAM0I,SAAS,CAAC,YAAY,CAAAC,QAAA,EAAC,MAC1B,CAAC7D,WAAW,CAACmB,YAAY,CAAC,kBAC7B,EAAM,CAAC,EACJ,CAAC,cAENjG,KAAA,QAAK0I,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxB7I,IAAA,SAAM4I,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,iBAAe,CAAM,CAAC,cACnD3I,KAAA,SAAM0I,SAAS,CAAC,YAAY,CAAAC,QAAA,EACzB7D,WAAW,CAACS,iBAAiB,CAAC,IAAE,CAACT,WAAW,CAACyB,sBAAsB,CAAC,IACvE,EAAM,CAAC,EACJ,CAAC,EAEH,CAAC,EACH,CAAC,CAEL5F,uBAAuB,EAAI8F,iBAAiB,eAC3CzG,KAAA,QAAK0I,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5B7I,IAAA,OAAA6I,QAAA,CAAI,iBAAe,CAAI,CAAC,cACxB3I,KAAA,QAAK0I,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5B3I,KAAA,QAAK0I,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxB7I,IAAA,SAAM4I,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,gBAAc,CAAM,CAAC,cAClD3I,KAAA,SAAM0I,SAAS,CAAC,YAAY,CAAAC,QAAA,EACzBlC,iBAAiB,CAACvB,QAAQ,CAAC,cAC9B,EAAM,CAAC,EACJ,CAAC,cACNlF,KAAA,QAAK0I,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxB7I,IAAA,SAAM4I,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,cAAY,CAAM,CAAC,cAChD3I,KAAA,SAAM0I,SAAS,CAAC,YAAY,CAAAC,QAAA,EACzBlC,iBAAiB,CAAC1B,UAAU,CAAC,QAChC,EAAM,CAAC,EACJ,CAAC,cACN/E,KAAA,QAAK0I,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxB7I,IAAA,SAAM4I,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,oBAAkB,CAAM,CAAC,cACtD3I,KAAA,SAAM0I,SAAS,CAAC,YAAY,CAAAC,QAAA,EAAC,MAC1B,CAAClC,iBAAiB,CAACR,YAAY,CAAC,kBACnC,EAAM,CAAC,EACJ,CAAC,cAENjG,KAAA,QAAK0I,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxB7I,IAAA,SAAM4I,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,iBAAe,CAAM,CAAC,cACnD3I,KAAA,SAAM0I,SAAS,CAAC,YAAY,CAAAC,QAAA,EACzBlC,iBAAiB,CAAClB,iBAAiB,CAAC,IAAE,CAACkB,iBAAiB,CAACF,sBAAsB,CAAC,IACnF,EAAM,CAAC,EACJ,CAAC,EAEH,CAAC,EACH,CACN,EACE,CACN,EACE,CAAC,CAEZ,CAAC,CAED,cAAe,CAAApG,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}