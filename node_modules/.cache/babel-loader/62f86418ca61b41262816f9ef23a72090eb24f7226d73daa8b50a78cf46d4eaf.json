{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matteo\\\\Working_Folder\\\\a. MCC Thesis Local\\\\MCC_digital_health_data_visualizations\\\\src\\\\components\\\\patient_charts\\\\PhysicianExerciseChart.js\",\n  _s = $RefreshSig$();\n/**\r\n * PhysicianExerciseChart.js - Physician-Specific Exercise Visualization\r\n * \r\n * This component provides a simplified exercise overview for physicians with three key categories:\r\n * - Aerobic: 150 minutes/week goal\r\n * - Strength: 2+ sessions/week (10+ minutes each) goal  \r\n * - Flexibility/Balance: 1+ session/week goal\r\n * \r\n * Features:\r\n * - Three-bar chart showing progress toward weekly goals\r\n * - Color-coded completion percentages\r\n * - Clear goal indicators and current progress\r\n * - Physician-focused summary statistics\r\n * \r\n * Architecture:\r\n * - Uses custom SVG for clean bar chart visualization\r\n * - Implements goal-based progress tracking\r\n * - Provides clinical summary for physician decision making\r\n * - Supports expandable views for detailed analysis\r\n */\n\nimport React, { useMemo } from 'react';\nimport usePatientData from '../../hooks/usePatientData';\nimport useChartNavigation from '../../hooks/useChartNavigation';\nimport { createChartConfig } from '../chart-utils/ChartConfigFactory';\nimport './PhysicianExerciseChart.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PhysicianExerciseChart = ({\n  patientId,\n  isExpanded = false,\n  onExpand,\n  viewMode = 'physician',\n  navigation\n}) => {\n  _s();\n  const {\n    exerciseData,\n    loading,\n    error\n  } = usePatientData(patientId, 'exercise');\n\n  // Use navigation from parent or fallback to internal navigation\n  const useInternalNavigation = !navigation;\n  const internalNavigation = useChartNavigation('exercise');\n  const nav = navigation || internalNavigation;\n  const config = createChartConfig('exercise', isExpanded);\n  const chartHeight = config.height - config.padding.top - config.padding.bottom;\n  const {\n    start: startOfWeek,\n    end: endOfWeek\n  } = nav.getDateRange();\n\n  // Filter data for current week\n  const weekData = exerciseData.filter(d => {\n    if (!d.date) return false;\n    const itemDate = new Date(d.date);\n    return itemDate >= startOfWeek && itemDate <= endOfWeek;\n  });\n\n  // Calculate exercise categories and progress\n  const exerciseProgress = useMemo(() => {\n    if (!weekData.length) {\n      return {\n        aerobic: {\n          minutes: 0,\n          goal: 150,\n          percentage: 0,\n          sessions: 0\n        },\n        strength: {\n          sessions: 0,\n          goal: 2,\n          percentage: 0,\n          totalMinutes: 0\n        },\n        flexibility: {\n          sessions: 0,\n          goal: 1,\n          percentage: 0,\n          totalMinutes: 0\n        }\n      };\n    }\n\n    // Calculate aerobic minutes (walking, swimming, running, biking)\n    const aerobicMinutes = weekData.reduce((total, day) => {\n      return total + (Number(day.walking) || 0) + (Number(day.swimming) || 0) + (Number(day.running) || 0) + (Number(day.biking) || 0);\n    }, 0);\n\n    // Calculate strength sessions (resistance/weights with 10+ minutes)\n    const strengthSessions = weekData.filter(day => (Number(day['resistance/weights']) || 0) >= 10).length;\n    const strengthMinutes = weekData.reduce((total, day) => total + (Number(day['resistance/weights']) || 0), 0);\n\n    // Calculate flexibility/balance sessions (balance/stretching with any duration)\n    const flexibilitySessions = weekData.filter(day => (Number(day['balance/stretching']) || 0) > 0).length;\n    const flexibilityMinutes = weekData.reduce((total, day) => total + (Number(day['balance/stretching']) || 0), 0);\n    return {\n      aerobic: {\n        minutes: aerobicMinutes,\n        goal: 150,\n        percentage: Math.min(100, Math.round(aerobicMinutes / 150 * 100)),\n        sessions: weekData.filter(day => (Number(day.walking) || 0) + (Number(day.swimming) || 0) + (Number(day.running) || 0) + (Number(day.biking) || 0) > 0).length\n      },\n      strength: {\n        sessions: strengthSessions,\n        goal: 2,\n        percentage: Math.min(100, Math.round(strengthSessions / 2 * 100)),\n        totalMinutes: strengthMinutes\n      },\n      flexibility: {\n        sessions: flexibilitySessions,\n        goal: 1,\n        percentage: Math.min(100, Math.round(flexibilitySessions / 1 * 100)),\n        totalMinutes: flexibilityMinutes\n      }\n    };\n  }, [weekData]);\n\n  // Define categories with colors and goals\n  const categories = [{\n    key: 'aerobic',\n    label: 'Aerobic Activity',\n    emoji: '🏃',\n    color: '#1f78b4',\n    // Blue\n    goal: '150 min/week',\n    current: `${exerciseProgress.aerobic.minutes} min`,\n    percentage: exerciseProgress.aerobic.percentage\n  }, {\n    key: 'strength',\n    label: 'Strength Training',\n    emoji: '🏋️',\n    color: '#d95f02',\n    // Orange\n    goal: '2+ sessions/week',\n    current: `${exerciseProgress.strength.sessions} sessions`,\n    percentage: exerciseProgress.strength.percentage\n  }, {\n    key: 'flexibility',\n    label: 'Flexibility/Balance',\n    emoji: '🧘',\n    color: '#1b9e77',\n    // Green\n    goal: '1+ session/week',\n    current: `${exerciseProgress.flexibility.sessions} sessions`,\n    percentage: exerciseProgress.flexibility.percentage\n  }];\n  const maxPercentage = 100;\n  const barWidth = 80;\n  const barSpacing = 40;\n  const startX = config.padding.left + 50;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `physician-exercise-chart-container ${isExpanded ? 'expanded' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"chart-title\",\n      children: \"Weekly Exercise Goals Progress\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"chart-subtitle\",\n      children: nav.getCurrentMonthYear()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: \"100%\",\n      viewBox: `0 0 ${config.width} ${config.height}`,\n      className: \"physician-exercise-svg\",\n      children: [/*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"y-axis\",\n        children: [/*#__PURE__*/_jsxDEV(\"line\", {\n          x1: config.padding.left,\n          y1: config.padding.top,\n          x2: config.padding.left,\n          y2: config.height - config.padding.bottom,\n          stroke: \"var(--chart-color-text-secondary)\",\n          strokeWidth: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), [0, 25, 50, 75, 100].map(value => {\n          const y = config.padding.top + chartHeight - value / maxPercentage * chartHeight;\n          return /*#__PURE__*/_jsxDEV(\"g\", {\n            className: \"y-axis-grid-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"line\", {\n              className: \"chart-grid-line-horizontal\",\n              x1: config.padding.left,\n              y1: y,\n              x2: config.width - config.padding.right,\n              y2: y\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n              x: config.padding.left - 10,\n              y: y + 3,\n              fontSize: config.fontSize.yAxis,\n              textAnchor: \"end\",\n              fill: \"var(--chart-color-text-secondary)\",\n              className: \"chart-tick-label\",\n              children: [value, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this)]\n          }, value, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: -(config.padding.top + chartHeight / 2),\n          y: config.padding.left / 2 - 5,\n          fontSize: config.fontSize.yAxisTitle,\n          textAnchor: \"middle\",\n          fill: \"var(--chart-color-text-primary)\",\n          transform: \"rotate(-90)\",\n          className: \"y-axis-title\",\n          children: \"Goal Completion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"x-axis\",\n        children: categories.map((category, index) => {\n          const x = startX + index * (barWidth + barSpacing);\n          return /*#__PURE__*/_jsxDEV(\"g\", {\n            className: \"x-axis-label-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"text\", {\n              x: x,\n              y: config.height - config.padding.bottom + 20,\n              textAnchor: \"middle\",\n              fontSize: config.fontSize.dayLabel,\n              fill: \"var(--chart-color-text-primary)\",\n              className: \"x-axis-category-label\",\n              children: category.emoji\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n              x: x,\n              y: config.height - config.padding.bottom + 35,\n              textAnchor: \"middle\",\n              fontSize: config.fontSize.dateLabel,\n              fill: \"var(--chart-color-text-primary)\",\n              className: \"x-axis-category-name\",\n              children: category.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 17\n            }, this)]\n          }, category.key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"data-bars\",\n        children: categories.map((category, index) => {\n          const x = startX + index * (barWidth + barSpacing);\n          const barHeight = category.percentage / maxPercentage * chartHeight;\n          const barY = config.height - config.padding.bottom - barHeight;\n\n          // Determine bar color based on completion\n          let barColor = category.color;\n          if (category.percentage >= 100) {\n            barColor = '#27ae60'; // Green for completed\n          } else if (category.percentage >= 75) {\n            barColor = '#f39c12'; // Orange for good progress\n          } else if (category.percentage >= 50) {\n            barColor = '#e67e22'; // Dark orange for moderate progress\n          } else {\n            barColor = '#e74c3c'; // Red for low progress\n          }\n          return /*#__PURE__*/_jsxDEV(\"g\", {\n            children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n              x: x - barWidth / 2,\n              y: config.padding.top,\n              width: barWidth,\n              height: chartHeight,\n              fill: \"var(--chart-color-background)\",\n              stroke: \"var(--chart-color-text-secondary)\",\n              strokeWidth: \"1\",\n              strokeDasharray: \"2,2\",\n              className: \"goal-background-bar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n              x: x - barWidth / 2,\n              y: barY,\n              width: barWidth,\n              height: barHeight,\n              fill: barColor,\n              className: \"progress-bar\",\n              children: /*#__PURE__*/_jsxDEV(\"title\", {\n                children: [category.label, \": \", category.percentage, \"% complete\", category.key === 'aerobic' && ` (${category.current} of ${category.goal})`, category.key === 'strength' && ` (${category.current} of ${category.goal})`, category.key === 'flexibility' && ` (${category.current} of ${category.goal})`]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n              x: x,\n              y: barY - 5,\n              textAnchor: \"middle\",\n              fontSize: isExpanded ? 12 : 10,\n              fill: \"var(--chart-color-text-primary)\",\n              className: \"percentage-label\",\n              fontWeight: \"bold\",\n              children: [category.percentage, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n              x: x,\n              y: config.height - config.padding.bottom + 50,\n              textAnchor: \"middle\",\n              fontSize: isExpanded ? 10 : 8,\n              fill: \"var(--chart-color-text-secondary)\",\n              className: \"current-value-label\",\n              children: category.current\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 17\n            }, this)]\n          }, category.key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"physician-exercise-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Exercise Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Aerobic Progress:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: [exerciseProgress.aerobic.minutes, \"/150 minutes (\", exerciseProgress.aerobic.percentage, \"%)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Strength Sessions:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: [exerciseProgress.strength.sessions, \"/2 sessions (\", exerciseProgress.strength.percentage, \"%)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Flexibility Sessions:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: [exerciseProgress.flexibility.sessions, \"/1 session (\", exerciseProgress.flexibility.percentage, \"%)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recommendations\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Recommendations:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [exerciseProgress.aerobic.percentage < 100 && /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Increase aerobic activity to reach 150 minutes/week goal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 15\n          }, this), exerciseProgress.strength.percentage < 100 && /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Add more strength training sessions (aim for 2+ per week)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 15\n          }, this), exerciseProgress.flexibility.percentage < 100 && /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Include flexibility/balance exercises at least once per week\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 15\n          }, this), exerciseProgress.aerobic.percentage >= 100 && exerciseProgress.strength.percentage >= 100 && exerciseProgress.flexibility.percentage >= 100 && /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Excellent! All exercise goals are being met.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n};\n_s(PhysicianExerciseChart, \"4elc6i0wJ7yLGIiGiWyNgsJGvpw=\", false, function () {\n  return [usePatientData, useChartNavigation];\n});\n_c = PhysicianExerciseChart;\nexport default PhysicianExerciseChart;\nvar _c;\n$RefreshReg$(_c, \"PhysicianExerciseChart\");","map":{"version":3,"names":["React","useMemo","usePatientData","useChartNavigation","createChartConfig","jsxDEV","_jsxDEV","PhysicianExerciseChart","patientId","isExpanded","onExpand","viewMode","navigation","_s","exerciseData","loading","error","useInternalNavigation","internalNavigation","nav","config","chartHeight","height","padding","top","bottom","start","startOfWeek","end","endOfWeek","getDateRange","weekData","filter","d","date","itemDate","Date","exerciseProgress","length","aerobic","minutes","goal","percentage","sessions","strength","totalMinutes","flexibility","aerobicMinutes","reduce","total","day","Number","walking","swimming","running","biking","strengthSessions","strengthMinutes","flexibilitySessions","flexibilityMinutes","Math","min","round","categories","key","label","emoji","color","current","maxPercentage","barWidth","barSpacing","startX","left","className","children","fileName","_jsxFileName","lineNumber","columnNumber","getCurrentMonthYear","width","viewBox","x1","y1","x2","y2","stroke","strokeWidth","map","value","y","right","x","fontSize","yAxis","textAnchor","fill","yAxisTitle","transform","category","index","dayLabel","dateLabel","barHeight","barY","barColor","strokeDasharray","fontWeight","_c","$RefreshReg$"],"sources":["C:/Users/Matteo/Working_Folder/a. MCC Thesis Local/MCC_digital_health_data_visualizations/src/components/patient_charts/PhysicianExerciseChart.js"],"sourcesContent":["/**\r\n * PhysicianExerciseChart.js - Physician-Specific Exercise Visualization\r\n * \r\n * This component provides a simplified exercise overview for physicians with three key categories:\r\n * - Aerobic: 150 minutes/week goal\r\n * - Strength: 2+ sessions/week (10+ minutes each) goal  \r\n * - Flexibility/Balance: 1+ session/week goal\r\n * \r\n * Features:\r\n * - Three-bar chart showing progress toward weekly goals\r\n * - Color-coded completion percentages\r\n * - Clear goal indicators and current progress\r\n * - Physician-focused summary statistics\r\n * \r\n * Architecture:\r\n * - Uses custom SVG for clean bar chart visualization\r\n * - Implements goal-based progress tracking\r\n * - Provides clinical summary for physician decision making\r\n * - Supports expandable views for detailed analysis\r\n */\r\n\r\nimport React, { useMemo } from 'react';\r\nimport usePatientData from '../../hooks/usePatientData';\r\nimport useChartNavigation from '../../hooks/useChartNavigation';\r\nimport { createChartConfig } from '../chart-utils/ChartConfigFactory';\r\nimport './PhysicianExerciseChart.css';\r\n\r\nconst PhysicianExerciseChart = ({ patientId, isExpanded = false, onExpand, viewMode = 'physician', navigation }) => {\r\n  const { exerciseData, loading, error } = usePatientData(patientId, 'exercise');\r\n  \r\n  // Use navigation from parent or fallback to internal navigation\r\n  const useInternalNavigation = !navigation;\r\n  const internalNavigation = useChartNavigation('exercise');\r\n  const nav = navigation || internalNavigation;\r\n\r\n  const config = createChartConfig('exercise', isExpanded);\r\n  const chartHeight = config.height - config.padding.top - config.padding.bottom;\r\n\r\n  const { start: startOfWeek, end: endOfWeek } = nav.getDateRange();\r\n\r\n  // Filter data for current week\r\n  const weekData = exerciseData.filter(d => {\r\n    if (!d.date) return false;\r\n    const itemDate = new Date(d.date);\r\n    return itemDate >= startOfWeek && itemDate <= endOfWeek;\r\n  });\r\n\r\n  // Calculate exercise categories and progress\r\n  const exerciseProgress = useMemo(() => {\r\n    if (!weekData.length) {\r\n      return {\r\n        aerobic: { minutes: 0, goal: 150, percentage: 0, sessions: 0 },\r\n        strength: { sessions: 0, goal: 2, percentage: 0, totalMinutes: 0 },\r\n        flexibility: { sessions: 0, goal: 1, percentage: 0, totalMinutes: 0 }\r\n      };\r\n    }\r\n\r\n    // Calculate aerobic minutes (walking, swimming, running, biking)\r\n    const aerobicMinutes = weekData.reduce((total, day) => {\r\n      return total + (Number(day.walking) || 0) + (Number(day.swimming) || 0) + \r\n             (Number(day.running) || 0) + (Number(day.biking) || 0);\r\n    }, 0);\r\n\r\n    // Calculate strength sessions (resistance/weights with 10+ minutes)\r\n    const strengthSessions = weekData.filter(day => \r\n      (Number(day['resistance/weights']) || 0) >= 10\r\n    ).length;\r\n    const strengthMinutes = weekData.reduce((total, day) => \r\n      total + (Number(day['resistance/weights']) || 0), 0\r\n    );\r\n\r\n    // Calculate flexibility/balance sessions (balance/stretching with any duration)\r\n    const flexibilitySessions = weekData.filter(day => \r\n      (Number(day['balance/stretching']) || 0) > 0\r\n    ).length;\r\n    const flexibilityMinutes = weekData.reduce((total, day) => \r\n      total + (Number(day['balance/stretching']) || 0), 0\r\n    );\r\n\r\n    return {\r\n      aerobic: {\r\n        minutes: aerobicMinutes,\r\n        goal: 150,\r\n        percentage: Math.min(100, Math.round((aerobicMinutes / 150) * 100)),\r\n        sessions: weekData.filter(day => \r\n          (Number(day.walking) || 0) + (Number(day.swimming) || 0) + \r\n          (Number(day.running) || 0) + (Number(day.biking) || 0) > 0\r\n        ).length\r\n      },\r\n      strength: {\r\n        sessions: strengthSessions,\r\n        goal: 2,\r\n        percentage: Math.min(100, Math.round((strengthSessions / 2) * 100)),\r\n        totalMinutes: strengthMinutes\r\n      },\r\n      flexibility: {\r\n        sessions: flexibilitySessions,\r\n        goal: 1,\r\n        percentage: Math.min(100, Math.round((flexibilitySessions / 1) * 100)),\r\n        totalMinutes: flexibilityMinutes\r\n      }\r\n    };\r\n  }, [weekData]);\r\n\r\n  // Define categories with colors and goals\r\n  const categories = [\r\n    {\r\n      key: 'aerobic',\r\n      label: 'Aerobic Activity',\r\n      emoji: '🏃',\r\n      color: '#1f78b4', // Blue\r\n      goal: '150 min/week',\r\n      current: `${exerciseProgress.aerobic.minutes} min`,\r\n      percentage: exerciseProgress.aerobic.percentage\r\n    },\r\n    {\r\n      key: 'strength',\r\n      label: 'Strength Training',\r\n      emoji: '🏋️',\r\n      color: '#d95f02', // Orange\r\n      goal: '2+ sessions/week',\r\n      current: `${exerciseProgress.strength.sessions} sessions`,\r\n      percentage: exerciseProgress.strength.percentage\r\n    },\r\n    {\r\n      key: 'flexibility',\r\n      label: 'Flexibility/Balance',\r\n      emoji: '🧘',\r\n      color: '#1b9e77', // Green\r\n      goal: '1+ session/week',\r\n      current: `${exerciseProgress.flexibility.sessions} sessions`,\r\n      percentage: exerciseProgress.flexibility.percentage\r\n    }\r\n  ];\r\n\r\n  const maxPercentage = 100;\r\n  const barWidth = 80;\r\n  const barSpacing = 40;\r\n  const startX = config.padding.left + 50;\r\n\r\n  return (\r\n    <div className={`physician-exercise-chart-container ${isExpanded ? 'expanded' : ''}`}>\r\n      <h3 className=\"chart-title\">Weekly Exercise Goals Progress</h3>\r\n      <h4 className=\"chart-subtitle\">{nav.getCurrentMonthYear()}</h4>\r\n      \r\n      <svg \r\n        width=\"100%\" \r\n        viewBox={`0 0 ${config.width} ${config.height}`}\r\n        className=\"physician-exercise-svg\"\r\n      >\r\n        {/* Y-axis */}\r\n        <g className=\"y-axis\">\r\n          <line \r\n            x1={config.padding.left} \r\n            y1={config.padding.top} \r\n            x2={config.padding.left} \r\n            y2={config.height - config.padding.bottom} \r\n            stroke=\"var(--chart-color-text-secondary)\" \r\n            strokeWidth=\"1\"\r\n          />\r\n          {[0, 25, 50, 75, 100].map(value => {\r\n            const y = config.padding.top + chartHeight - (value / maxPercentage) * chartHeight;\r\n            return (\r\n              <g key={value} className=\"y-axis-grid-group\">\r\n                <line \r\n                  className=\"chart-grid-line-horizontal\" \r\n                  x1={config.padding.left} \r\n                  y1={y} \r\n                  x2={config.width - config.padding.right} \r\n                  y2={y} \r\n                />\r\n                <text \r\n                  x={config.padding.left - 10} \r\n                  y={y + 3} \r\n                  fontSize={config.fontSize.yAxis} \r\n                  textAnchor=\"end\" \r\n                  fill=\"var(--chart-color-text-secondary)\" \r\n                  className=\"chart-tick-label\"\r\n                >\r\n                  {value}%\r\n                </text>\r\n              </g>\r\n            );\r\n          })}\r\n          <text \r\n            x={-(config.padding.top + chartHeight / 2)} \r\n            y={config.padding.left / 2 - 5} \r\n            fontSize={config.fontSize.yAxisTitle} \r\n            textAnchor=\"middle\" \r\n            fill=\"var(--chart-color-text-primary)\" \r\n            transform=\"rotate(-90)\" \r\n            className=\"y-axis-title\"\r\n          >\r\n            Goal Completion\r\n          </text>\r\n        </g>\r\n\r\n        {/* X-axis */}\r\n        <g className=\"x-axis\">\r\n          {categories.map((category, index) => {\r\n            const x = startX + index * (barWidth + barSpacing);\r\n            return (\r\n              <g key={category.key} className=\"x-axis-label-group\">\r\n                <text \r\n                  x={x} \r\n                  y={config.height - config.padding.bottom + 20} \r\n                  textAnchor=\"middle\" \r\n                  fontSize={config.fontSize.dayLabel} \r\n                  fill=\"var(--chart-color-text-primary)\" \r\n                  className=\"x-axis-category-label\"\r\n                >\r\n                  {category.emoji}\r\n                </text>\r\n                <text \r\n                  x={x} \r\n                  y={config.height - config.padding.bottom + 35} \r\n                  textAnchor=\"middle\" \r\n                  fontSize={config.fontSize.dateLabel} \r\n                  fill=\"var(--chart-color-text-primary)\" \r\n                  className=\"x-axis-category-name\"\r\n                >\r\n                  {category.label}\r\n                </text>\r\n              </g>\r\n            );\r\n          })}\r\n        </g>\r\n\r\n        {/* Data bars */}\r\n        <g className=\"data-bars\">\r\n          {categories.map((category, index) => {\r\n            const x = startX + index * (barWidth + barSpacing);\r\n            const barHeight = (category.percentage / maxPercentage) * chartHeight;\r\n            const barY = config.height - config.padding.bottom - barHeight;\r\n            \r\n            // Determine bar color based on completion\r\n            let barColor = category.color;\r\n            if (category.percentage >= 100) {\r\n              barColor = '#27ae60'; // Green for completed\r\n            } else if (category.percentage >= 75) {\r\n              barColor = '#f39c12'; // Orange for good progress\r\n            } else if (category.percentage >= 50) {\r\n              barColor = '#e67e22'; // Dark orange for moderate progress\r\n            } else {\r\n              barColor = '#e74c3c'; // Red for low progress\r\n            }\r\n\r\n            return (\r\n              <g key={category.key}>\r\n                {/* Background bar (goal line) */}\r\n                <rect\r\n                  x={x - barWidth / 2}\r\n                  y={config.padding.top}\r\n                  width={barWidth}\r\n                  height={chartHeight}\r\n                  fill=\"var(--chart-color-background)\"\r\n                  stroke=\"var(--chart-color-text-secondary)\"\r\n                  strokeWidth=\"1\"\r\n                  strokeDasharray=\"2,2\"\r\n                  className=\"goal-background-bar\"\r\n                />\r\n                \r\n                {/* Progress bar */}\r\n                <rect\r\n                  x={x - barWidth / 2}\r\n                  y={barY}\r\n                  width={barWidth}\r\n                  height={barHeight}\r\n                  fill={barColor}\r\n                  className=\"progress-bar\"\r\n                >\r\n                  <title>\r\n                    {category.label}: {category.percentage}% complete\r\n                    {category.key === 'aerobic' && ` (${category.current} of ${category.goal})`}\r\n                    {category.key === 'strength' && ` (${category.current} of ${category.goal})`}\r\n                    {category.key === 'flexibility' && ` (${category.current} of ${category.goal})`}\r\n                  </title>\r\n                </rect>\r\n\r\n                {/* Percentage label */}\r\n                <text\r\n                  x={x}\r\n                  y={barY - 5}\r\n                  textAnchor=\"middle\"\r\n                  fontSize={isExpanded ? 12 : 10}\r\n                  fill=\"var(--chart-color-text-primary)\"\r\n                  className=\"percentage-label\"\r\n                  fontWeight=\"bold\"\r\n                >\r\n                  {category.percentage}%\r\n                </text>\r\n\r\n                {/* Current value label */}\r\n                <text\r\n                  x={x}\r\n                  y={config.height - config.padding.bottom + 50}\r\n                  textAnchor=\"middle\"\r\n                  fontSize={isExpanded ? 10 : 8}\r\n                  fill=\"var(--chart-color-text-secondary)\"\r\n                  className=\"current-value-label\"\r\n                >\r\n                  {category.current}\r\n                </text>\r\n              </g>\r\n            );\r\n          })}\r\n        </g>\r\n      </svg>\r\n\r\n      {/* Summary for physician */}\r\n      <div className=\"physician-exercise-summary\">\r\n        <h4>Exercise Summary</h4>\r\n        <div className=\"summary-stats\">\r\n          <div className=\"stat-item\">\r\n            <span className=\"stat-label\">Aerobic Progress:</span>\r\n            <span className=\"stat-value\">\r\n              {exerciseProgress.aerobic.minutes}/150 minutes ({exerciseProgress.aerobic.percentage}%)\r\n            </span>\r\n          </div>\r\n          <div className=\"stat-item\">\r\n            <span className=\"stat-label\">Strength Sessions:</span>\r\n            <span className=\"stat-value\">\r\n              {exerciseProgress.strength.sessions}/2 sessions ({exerciseProgress.strength.percentage}%)\r\n            </span>\r\n          </div>\r\n          <div className=\"stat-item\">\r\n            <span className=\"stat-label\">Flexibility Sessions:</span>\r\n            <span className=\"stat-value\">\r\n              {exerciseProgress.flexibility.sessions}/1 session ({exerciseProgress.flexibility.percentage}%)\r\n            </span>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Recommendations */}\r\n        <div className=\"recommendations\">\r\n          <h5>Recommendations:</h5>\r\n          <ul>\r\n            {exerciseProgress.aerobic.percentage < 100 && (\r\n              <li>Increase aerobic activity to reach 150 minutes/week goal</li>\r\n            )}\r\n            {exerciseProgress.strength.percentage < 100 && (\r\n              <li>Add more strength training sessions (aim for 2+ per week)</li>\r\n            )}\r\n            {exerciseProgress.flexibility.percentage < 100 && (\r\n              <li>Include flexibility/balance exercises at least once per week</li>\r\n            )}\r\n            {exerciseProgress.aerobic.percentage >= 100 && \r\n             exerciseProgress.strength.percentage >= 100 && \r\n             exerciseProgress.flexibility.percentage >= 100 && (\r\n              <li>Excellent! All exercise goals are being met.</li>\r\n            )}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PhysicianExerciseChart;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,OAAO,QAAQ,OAAO;AACtC,OAAOC,cAAc,MAAM,4BAA4B;AACvD,OAAOC,kBAAkB,MAAM,gCAAgC;AAC/D,SAASC,iBAAiB,QAAQ,mCAAmC;AACrE,OAAO,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,sBAAsB,GAAGA,CAAC;EAAEC,SAAS;EAAEC,UAAU,GAAG,KAAK;EAAEC,QAAQ;EAAEC,QAAQ,GAAG,WAAW;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAClH,MAAM;IAAEC,YAAY;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGd,cAAc,CAACM,SAAS,EAAE,UAAU,CAAC;;EAE9E;EACA,MAAMS,qBAAqB,GAAG,CAACL,UAAU;EACzC,MAAMM,kBAAkB,GAAGf,kBAAkB,CAAC,UAAU,CAAC;EACzD,MAAMgB,GAAG,GAAGP,UAAU,IAAIM,kBAAkB;EAE5C,MAAME,MAAM,GAAGhB,iBAAiB,CAAC,UAAU,EAAEK,UAAU,CAAC;EACxD,MAAMY,WAAW,GAAGD,MAAM,CAACE,MAAM,GAAGF,MAAM,CAACG,OAAO,CAACC,GAAG,GAAGJ,MAAM,CAACG,OAAO,CAACE,MAAM;EAE9E,MAAM;IAAEC,KAAK,EAAEC,WAAW;IAAEC,GAAG,EAAEC;EAAU,CAAC,GAAGV,GAAG,CAACW,YAAY,CAAC,CAAC;;EAEjE;EACA,MAAMC,QAAQ,GAAGjB,YAAY,CAACkB,MAAM,CAACC,CAAC,IAAI;IACxC,IAAI,CAACA,CAAC,CAACC,IAAI,EAAE,OAAO,KAAK;IACzB,MAAMC,QAAQ,GAAG,IAAIC,IAAI,CAACH,CAAC,CAACC,IAAI,CAAC;IACjC,OAAOC,QAAQ,IAAIR,WAAW,IAAIQ,QAAQ,IAAIN,SAAS;EACzD,CAAC,CAAC;;EAEF;EACA,MAAMQ,gBAAgB,GAAGpC,OAAO,CAAC,MAAM;IACrC,IAAI,CAAC8B,QAAQ,CAACO,MAAM,EAAE;MACpB,OAAO;QACLC,OAAO,EAAE;UAAEC,OAAO,EAAE,CAAC;UAAEC,IAAI,EAAE,GAAG;UAAEC,UAAU,EAAE,CAAC;UAAEC,QAAQ,EAAE;QAAE,CAAC;QAC9DC,QAAQ,EAAE;UAAED,QAAQ,EAAE,CAAC;UAAEF,IAAI,EAAE,CAAC;UAAEC,UAAU,EAAE,CAAC;UAAEG,YAAY,EAAE;QAAE,CAAC;QAClEC,WAAW,EAAE;UAAEH,QAAQ,EAAE,CAAC;UAAEF,IAAI,EAAE,CAAC;UAAEC,UAAU,EAAE,CAAC;UAAEG,YAAY,EAAE;QAAE;MACtE,CAAC;IACH;;IAEA;IACA,MAAME,cAAc,GAAGhB,QAAQ,CAACiB,MAAM,CAAC,CAACC,KAAK,EAAEC,GAAG,KAAK;MACrD,OAAOD,KAAK,IAAIE,MAAM,CAACD,GAAG,CAACE,OAAO,CAAC,IAAI,CAAC,CAAC,IAAID,MAAM,CAACD,GAAG,CAACG,QAAQ,CAAC,IAAI,CAAC,CAAC,IAC/DF,MAAM,CAACD,GAAG,CAACI,OAAO,CAAC,IAAI,CAAC,CAAC,IAAIH,MAAM,CAACD,GAAG,CAACK,MAAM,CAAC,IAAI,CAAC,CAAC;IAC/D,CAAC,EAAE,CAAC,CAAC;;IAEL;IACA,MAAMC,gBAAgB,GAAGzB,QAAQ,CAACC,MAAM,CAACkB,GAAG,IAC1C,CAACC,MAAM,CAACD,GAAG,CAAC,oBAAoB,CAAC,CAAC,IAAI,CAAC,KAAK,EAC9C,CAAC,CAACZ,MAAM;IACR,MAAMmB,eAAe,GAAG1B,QAAQ,CAACiB,MAAM,CAAC,CAACC,KAAK,EAAEC,GAAG,KACjDD,KAAK,IAAIE,MAAM,CAACD,GAAG,CAAC,oBAAoB,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CACpD,CAAC;;IAED;IACA,MAAMQ,mBAAmB,GAAG3B,QAAQ,CAACC,MAAM,CAACkB,GAAG,IAC7C,CAACC,MAAM,CAACD,GAAG,CAAC,oBAAoB,CAAC,CAAC,IAAI,CAAC,IAAI,CAC7C,CAAC,CAACZ,MAAM;IACR,MAAMqB,kBAAkB,GAAG5B,QAAQ,CAACiB,MAAM,CAAC,CAACC,KAAK,EAAEC,GAAG,KACpDD,KAAK,IAAIE,MAAM,CAACD,GAAG,CAAC,oBAAoB,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CACpD,CAAC;IAED,OAAO;MACLX,OAAO,EAAE;QACPC,OAAO,EAAEO,cAAc;QACvBN,IAAI,EAAE,GAAG;QACTC,UAAU,EAAEkB,IAAI,CAACC,GAAG,CAAC,GAAG,EAAED,IAAI,CAACE,KAAK,CAAEf,cAAc,GAAG,GAAG,GAAI,GAAG,CAAC,CAAC;QACnEJ,QAAQ,EAAEZ,QAAQ,CAACC,MAAM,CAACkB,GAAG,IAC3B,CAACC,MAAM,CAACD,GAAG,CAACE,OAAO,CAAC,IAAI,CAAC,KAAKD,MAAM,CAACD,GAAG,CAACG,QAAQ,CAAC,IAAI,CAAC,CAAC,IACvDF,MAAM,CAACD,GAAG,CAACI,OAAO,CAAC,IAAI,CAAC,CAAC,IAAIH,MAAM,CAACD,GAAG,CAACK,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,CAC3D,CAAC,CAACjB;MACJ,CAAC;MACDM,QAAQ,EAAE;QACRD,QAAQ,EAAEa,gBAAgB;QAC1Bf,IAAI,EAAE,CAAC;QACPC,UAAU,EAAEkB,IAAI,CAACC,GAAG,CAAC,GAAG,EAAED,IAAI,CAACE,KAAK,CAAEN,gBAAgB,GAAG,CAAC,GAAI,GAAG,CAAC,CAAC;QACnEX,YAAY,EAAEY;MAChB,CAAC;MACDX,WAAW,EAAE;QACXH,QAAQ,EAAEe,mBAAmB;QAC7BjB,IAAI,EAAE,CAAC;QACPC,UAAU,EAAEkB,IAAI,CAACC,GAAG,CAAC,GAAG,EAAED,IAAI,CAACE,KAAK,CAAEJ,mBAAmB,GAAG,CAAC,GAAI,GAAG,CAAC,CAAC;QACtEb,YAAY,EAAEc;MAChB;IACF,CAAC;EACH,CAAC,EAAE,CAAC5B,QAAQ,CAAC,CAAC;;EAEd;EACA,MAAMgC,UAAU,GAAG,CACjB;IACEC,GAAG,EAAE,SAAS;IACdC,KAAK,EAAE,kBAAkB;IACzBC,KAAK,EAAE,IAAI;IACXC,KAAK,EAAE,SAAS;IAAE;IAClB1B,IAAI,EAAE,cAAc;IACpB2B,OAAO,EAAE,GAAG/B,gBAAgB,CAACE,OAAO,CAACC,OAAO,MAAM;IAClDE,UAAU,EAAEL,gBAAgB,CAACE,OAAO,CAACG;EACvC,CAAC,EACD;IACEsB,GAAG,EAAE,UAAU;IACfC,KAAK,EAAE,mBAAmB;IAC1BC,KAAK,EAAE,KAAK;IACZC,KAAK,EAAE,SAAS;IAAE;IAClB1B,IAAI,EAAE,kBAAkB;IACxB2B,OAAO,EAAE,GAAG/B,gBAAgB,CAACO,QAAQ,CAACD,QAAQ,WAAW;IACzDD,UAAU,EAAEL,gBAAgB,CAACO,QAAQ,CAACF;EACxC,CAAC,EACD;IACEsB,GAAG,EAAE,aAAa;IAClBC,KAAK,EAAE,qBAAqB;IAC5BC,KAAK,EAAE,IAAI;IACXC,KAAK,EAAE,SAAS;IAAE;IAClB1B,IAAI,EAAE,iBAAiB;IACvB2B,OAAO,EAAE,GAAG/B,gBAAgB,CAACS,WAAW,CAACH,QAAQ,WAAW;IAC5DD,UAAU,EAAEL,gBAAgB,CAACS,WAAW,CAACJ;EAC3C,CAAC,CACF;EAED,MAAM2B,aAAa,GAAG,GAAG;EACzB,MAAMC,QAAQ,GAAG,EAAE;EACnB,MAAMC,UAAU,GAAG,EAAE;EACrB,MAAMC,MAAM,GAAGpD,MAAM,CAACG,OAAO,CAACkD,IAAI,GAAG,EAAE;EAEvC,oBACEnE,OAAA;IAAKoE,SAAS,EAAE,sCAAsCjE,UAAU,GAAG,UAAU,GAAG,EAAE,EAAG;IAAAkE,QAAA,gBACnFrE,OAAA;MAAIoE,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAC;IAA8B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/DzE,OAAA;MAAIoE,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAAExD,GAAG,CAAC6D,mBAAmB,CAAC;IAAC;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAE/DzE,OAAA;MACE2E,KAAK,EAAC,MAAM;MACZC,OAAO,EAAE,OAAO9D,MAAM,CAAC6D,KAAK,IAAI7D,MAAM,CAACE,MAAM,EAAG;MAChDoD,SAAS,EAAC,wBAAwB;MAAAC,QAAA,gBAGlCrE,OAAA;QAAGoE,SAAS,EAAC,QAAQ;QAAAC,QAAA,gBACnBrE,OAAA;UACE6E,EAAE,EAAE/D,MAAM,CAACG,OAAO,CAACkD,IAAK;UACxBW,EAAE,EAAEhE,MAAM,CAACG,OAAO,CAACC,GAAI;UACvB6D,EAAE,EAAEjE,MAAM,CAACG,OAAO,CAACkD,IAAK;UACxBa,EAAE,EAAElE,MAAM,CAACE,MAAM,GAAGF,MAAM,CAACG,OAAO,CAACE,MAAO;UAC1C8D,MAAM,EAAC,mCAAmC;UAC1CC,WAAW,EAAC;QAAG;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChB,CAAC,EACD,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,CAACU,GAAG,CAACC,KAAK,IAAI;UACjC,MAAMC,CAAC,GAAGvE,MAAM,CAACG,OAAO,CAACC,GAAG,GAAGH,WAAW,GAAIqE,KAAK,GAAGrB,aAAa,GAAIhD,WAAW;UAClF,oBACEf,OAAA;YAAeoE,SAAS,EAAC,mBAAmB;YAAAC,QAAA,gBAC1CrE,OAAA;cACEoE,SAAS,EAAC,4BAA4B;cACtCS,EAAE,EAAE/D,MAAM,CAACG,OAAO,CAACkD,IAAK;cACxBW,EAAE,EAAEO,CAAE;cACNN,EAAE,EAAEjE,MAAM,CAAC6D,KAAK,GAAG7D,MAAM,CAACG,OAAO,CAACqE,KAAM;cACxCN,EAAE,EAAEK;YAAE;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACP,CAAC,eACFzE,OAAA;cACEuF,CAAC,EAAEzE,MAAM,CAACG,OAAO,CAACkD,IAAI,GAAG,EAAG;cAC5BkB,CAAC,EAAEA,CAAC,GAAG,CAAE;cACTG,QAAQ,EAAE1E,MAAM,CAAC0E,QAAQ,CAACC,KAAM;cAChCC,UAAU,EAAC,KAAK;cAChBC,IAAI,EAAC,mCAAmC;cACxCvB,SAAS,EAAC,kBAAkB;cAAAC,QAAA,GAE3Be,KAAK,EAAC,GACT;YAAA;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA,GAjBDW,KAAK;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAkBV,CAAC;QAER,CAAC,CAAC,eACFzE,OAAA;UACEuF,CAAC,EAAE,EAAEzE,MAAM,CAACG,OAAO,CAACC,GAAG,GAAGH,WAAW,GAAG,CAAC,CAAE;UAC3CsE,CAAC,EAAEvE,MAAM,CAACG,OAAO,CAACkD,IAAI,GAAG,CAAC,GAAG,CAAE;UAC/BqB,QAAQ,EAAE1E,MAAM,CAAC0E,QAAQ,CAACI,UAAW;UACrCF,UAAU,EAAC,QAAQ;UACnBC,IAAI,EAAC,iCAAiC;UACtCE,SAAS,EAAC,aAAa;UACvBzB,SAAS,EAAC,cAAc;UAAAC,QAAA,EACzB;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAGJzE,OAAA;QAAGoE,SAAS,EAAC,QAAQ;QAAAC,QAAA,EAClBZ,UAAU,CAAC0B,GAAG,CAAC,CAACW,QAAQ,EAAEC,KAAK,KAAK;UACnC,MAAMR,CAAC,GAAGrB,MAAM,GAAG6B,KAAK,IAAI/B,QAAQ,GAAGC,UAAU,CAAC;UAClD,oBACEjE,OAAA;YAAsBoE,SAAS,EAAC,oBAAoB;YAAAC,QAAA,gBAClDrE,OAAA;cACEuF,CAAC,EAAEA,CAAE;cACLF,CAAC,EAAEvE,MAAM,CAACE,MAAM,GAAGF,MAAM,CAACG,OAAO,CAACE,MAAM,GAAG,EAAG;cAC9CuE,UAAU,EAAC,QAAQ;cACnBF,QAAQ,EAAE1E,MAAM,CAAC0E,QAAQ,CAACQ,QAAS;cACnCL,IAAI,EAAC,iCAAiC;cACtCvB,SAAS,EAAC,uBAAuB;cAAAC,QAAA,EAEhCyB,QAAQ,CAAClC;YAAK;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACX,CAAC,eACPzE,OAAA;cACEuF,CAAC,EAAEA,CAAE;cACLF,CAAC,EAAEvE,MAAM,CAACE,MAAM,GAAGF,MAAM,CAACG,OAAO,CAACE,MAAM,GAAG,EAAG;cAC9CuE,UAAU,EAAC,QAAQ;cACnBF,QAAQ,EAAE1E,MAAM,CAAC0E,QAAQ,CAACS,SAAU;cACpCN,IAAI,EAAC,iCAAiC;cACtCvB,SAAS,EAAC,sBAAsB;cAAAC,QAAA,EAE/ByB,QAAQ,CAACnC;YAAK;cAAAW,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACX,CAAC;UAAA,GApBDqB,QAAQ,CAACpC,GAAG;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAqBjB,CAAC;QAER,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAGJzE,OAAA;QAAGoE,SAAS,EAAC,WAAW;QAAAC,QAAA,EACrBZ,UAAU,CAAC0B,GAAG,CAAC,CAACW,QAAQ,EAAEC,KAAK,KAAK;UACnC,MAAMR,CAAC,GAAGrB,MAAM,GAAG6B,KAAK,IAAI/B,QAAQ,GAAGC,UAAU,CAAC;UAClD,MAAMiC,SAAS,GAAIJ,QAAQ,CAAC1D,UAAU,GAAG2B,aAAa,GAAIhD,WAAW;UACrE,MAAMoF,IAAI,GAAGrF,MAAM,CAACE,MAAM,GAAGF,MAAM,CAACG,OAAO,CAACE,MAAM,GAAG+E,SAAS;;UAE9D;UACA,IAAIE,QAAQ,GAAGN,QAAQ,CAACjC,KAAK;UAC7B,IAAIiC,QAAQ,CAAC1D,UAAU,IAAI,GAAG,EAAE;YAC9BgE,QAAQ,GAAG,SAAS,CAAC,CAAC;UACxB,CAAC,MAAM,IAAIN,QAAQ,CAAC1D,UAAU,IAAI,EAAE,EAAE;YACpCgE,QAAQ,GAAG,SAAS,CAAC,CAAC;UACxB,CAAC,MAAM,IAAIN,QAAQ,CAAC1D,UAAU,IAAI,EAAE,EAAE;YACpCgE,QAAQ,GAAG,SAAS,CAAC,CAAC;UACxB,CAAC,MAAM;YACLA,QAAQ,GAAG,SAAS,CAAC,CAAC;UACxB;UAEA,oBACEpG,OAAA;YAAAqE,QAAA,gBAEErE,OAAA;cACEuF,CAAC,EAAEA,CAAC,GAAGvB,QAAQ,GAAG,CAAE;cACpBqB,CAAC,EAAEvE,MAAM,CAACG,OAAO,CAACC,GAAI;cACtByD,KAAK,EAAEX,QAAS;cAChBhD,MAAM,EAAED,WAAY;cACpB4E,IAAI,EAAC,+BAA+B;cACpCV,MAAM,EAAC,mCAAmC;cAC1CC,WAAW,EAAC,GAAG;cACfmB,eAAe,EAAC,KAAK;cACrBjC,SAAS,EAAC;YAAqB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChC,CAAC,eAGFzE,OAAA;cACEuF,CAAC,EAAEA,CAAC,GAAGvB,QAAQ,GAAG,CAAE;cACpBqB,CAAC,EAAEc,IAAK;cACRxB,KAAK,EAAEX,QAAS;cAChBhD,MAAM,EAAEkF,SAAU;cAClBP,IAAI,EAAES,QAAS;cACfhC,SAAS,EAAC,cAAc;cAAAC,QAAA,eAExBrE,OAAA;gBAAAqE,QAAA,GACGyB,QAAQ,CAACnC,KAAK,EAAC,IAAE,EAACmC,QAAQ,CAAC1D,UAAU,EAAC,YACvC,EAAC0D,QAAQ,CAACpC,GAAG,KAAK,SAAS,IAAI,KAAKoC,QAAQ,CAAChC,OAAO,OAAOgC,QAAQ,CAAC3D,IAAI,GAAG,EAC1E2D,QAAQ,CAACpC,GAAG,KAAK,UAAU,IAAI,KAAKoC,QAAQ,CAAChC,OAAO,OAAOgC,QAAQ,CAAC3D,IAAI,GAAG,EAC3E2D,QAAQ,CAACpC,GAAG,KAAK,aAAa,IAAI,KAAKoC,QAAQ,CAAChC,OAAO,OAAOgC,QAAQ,CAAC3D,IAAI,GAAG;cAAA;gBAAAmC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC1E;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ,CAAC,eAGPzE,OAAA;cACEuF,CAAC,EAAEA,CAAE;cACLF,CAAC,EAAEc,IAAI,GAAG,CAAE;cACZT,UAAU,EAAC,QAAQ;cACnBF,QAAQ,EAAErF,UAAU,GAAG,EAAE,GAAG,EAAG;cAC/BwF,IAAI,EAAC,iCAAiC;cACtCvB,SAAS,EAAC,kBAAkB;cAC5BkC,UAAU,EAAC,MAAM;cAAAjC,QAAA,GAEhByB,QAAQ,CAAC1D,UAAU,EAAC,GACvB;YAAA;cAAAkC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAGPzE,OAAA;cACEuF,CAAC,EAAEA,CAAE;cACLF,CAAC,EAAEvE,MAAM,CAACE,MAAM,GAAGF,MAAM,CAACG,OAAO,CAACE,MAAM,GAAG,EAAG;cAC9CuE,UAAU,EAAC,QAAQ;cACnBF,QAAQ,EAAErF,UAAU,GAAG,EAAE,GAAG,CAAE;cAC9BwF,IAAI,EAAC,mCAAmC;cACxCvB,SAAS,EAAC,qBAAqB;cAAAC,QAAA,EAE9ByB,QAAQ,CAAChC;YAAO;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACb,CAAC;UAAA,GAtDDqB,QAAQ,CAACpC,GAAG;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAuDjB,CAAC;QAER,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eAGNzE,OAAA;MAAKoE,SAAS,EAAC,4BAA4B;MAAAC,QAAA,gBACzCrE,OAAA;QAAAqE,QAAA,EAAI;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzBzE,OAAA;QAAKoE,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5BrE,OAAA;UAAKoE,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxBrE,OAAA;YAAMoE,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAC;UAAiB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACrDzE,OAAA;YAAMoE,SAAS,EAAC,YAAY;YAAAC,QAAA,GACzBtC,gBAAgB,CAACE,OAAO,CAACC,OAAO,EAAC,gBAAc,EAACH,gBAAgB,CAACE,OAAO,CAACG,UAAU,EAAC,IACvF;UAAA;YAAAkC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eACNzE,OAAA;UAAKoE,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxBrE,OAAA;YAAMoE,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAC;UAAkB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACtDzE,OAAA;YAAMoE,SAAS,EAAC,YAAY;YAAAC,QAAA,GACzBtC,gBAAgB,CAACO,QAAQ,CAACD,QAAQ,EAAC,eAAa,EAACN,gBAAgB,CAACO,QAAQ,CAACF,UAAU,EAAC,IACzF;UAAA;YAAAkC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eACNzE,OAAA;UAAKoE,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxBrE,OAAA;YAAMoE,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAC;UAAqB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACzDzE,OAAA;YAAMoE,SAAS,EAAC,YAAY;YAAAC,QAAA,GACzBtC,gBAAgB,CAACS,WAAW,CAACH,QAAQ,EAAC,cAAY,EAACN,gBAAgB,CAACS,WAAW,CAACJ,UAAU,EAAC,IAC9F;UAAA;YAAAkC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAGNzE,OAAA;QAAKoE,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC9BrE,OAAA;UAAAqE,QAAA,EAAI;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzBzE,OAAA;UAAAqE,QAAA,GACGtC,gBAAgB,CAACE,OAAO,CAACG,UAAU,GAAG,GAAG,iBACxCpC,OAAA;YAAAqE,QAAA,EAAI;UAAwD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CACjE,EACA1C,gBAAgB,CAACO,QAAQ,CAACF,UAAU,GAAG,GAAG,iBACzCpC,OAAA;YAAAqE,QAAA,EAAI;UAAyD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAClE,EACA1C,gBAAgB,CAACS,WAAW,CAACJ,UAAU,GAAG,GAAG,iBAC5CpC,OAAA;YAAAqE,QAAA,EAAI;UAA4D;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CACrE,EACA1C,gBAAgB,CAACE,OAAO,CAACG,UAAU,IAAI,GAAG,IAC1CL,gBAAgB,CAACO,QAAQ,CAACF,UAAU,IAAI,GAAG,IAC3CL,gBAAgB,CAACS,WAAW,CAACJ,UAAU,IAAI,GAAG,iBAC7CpC,OAAA;YAAAqE,QAAA,EAAI;UAA4C;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CACrD;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClE,EAAA,CAzUIN,sBAAsB;EAAA,QACeL,cAAc,EAI5BC,kBAAkB;AAAA;AAAA0G,EAAA,GALzCtG,sBAAsB;AA2U5B,eAAeA,sBAAsB;AAAC,IAAAsG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}