{"ast":null,"code":"/**\n * App.js - Main Health Dashboard Application Component\n * \n * This is the root component that provides the main application structure.\n * \n * FEATURES:\n * - Role toggle between Patient and Physician views\n * - Patient selection from 100 synthetic patients\n * - Unified dashboard routing with lazy loading\n * - Error boundary and loading state management\n * - Header with application title and controls\n * \n * ARCHITECTURE:\n * - Uses React 18 with functional components and hooks\n * - Implements lazy loading for performance optimization\n * - Provides error boundaries for robust error handling\n * - Uses Suspense for loading states\n * \n * COMPONENT STRUCTURE:\n * - Header: Contains title, role toggle, and patient selector\n * - Main: Contains the dashboard with error boundary and loading states\n * - Dashboard: Renders either PatientDashboard or PhysicianDashboard based on role\n * \n * STATE MANAGEMENT:\n * - selectedPatient: Currently selected patient ID\n * - currentRole: Current view mode ('patient' or 'physician')\n * \n * This component serves as the entry point for the entire health dashboard application.\n */import React,{useState,Suspense}from'react';import PatientSelector from'./PatientSelector';import LoadingSpinner from'./components/ui/LoadingSpinner';import ErrorBoundary from'./components/ErrorBoundary';import Switch from'./components/ui/Switch';import{PATIENTS}from'./constants/index';import'./App.css';// Lazy load the unified dashboard component for better performance\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Dashboard=/*#__PURE__*/React.lazy(()=>import('./components/Dashboard'));/**\n * Main Health Dashboard Application\n * Features both Patient and Physician views with role toggle\n */function App(){const[selectedPatient,setSelectedPatient]=useState('Patient_001');const[currentRole,setCurrentRole]=useState('patient');// 'patient' or 'physician'\nconst toggleRole=()=>{setCurrentRole(prev=>prev==='patient'?'physician':'patient');};return/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsx(\"header\",{className:\"app-header\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"header-content\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Health Dashboard\"}),/*#__PURE__*/_jsx(\"div\",{className:\"role-toggle\",children:/*#__PURE__*/_jsx(Switch,{checked:currentRole==='physician',onChange:toggleRole,leftLabel:\"Patient View\",rightLabel:\"Physician View\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"patient-selector\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"patient-select\",children:\"Select Patient:\"}),/*#__PURE__*/_jsx(PatientSelector,{id:\"patient-select\",patients:PATIENTS,value:selectedPatient,onChange:setSelectedPatient})]})]})}),/*#__PURE__*/_jsx(\"main\",{className:\"app-main\",children:/*#__PURE__*/_jsx(ErrorBoundary,{children:/*#__PURE__*/_jsx(Suspense,{fallback:/*#__PURE__*/_jsx(LoadingSpinner,{message:\"Loading dashboard...\"}),children:/*#__PURE__*/_jsx(Dashboard,{patientId:selectedPatient,viewMode:currentRole})})})})]});}export default App;","map":{"version":3,"names":["React","useState","Suspense","PatientSelector","LoadingSpinner","ErrorBoundary","Switch","PATIENTS","jsx","_jsx","jsxs","_jsxs","Dashboard","lazy","App","selectedPatient","setSelectedPatient","currentRole","setCurrentRole","toggleRole","prev","className","children","checked","onChange","leftLabel","rightLabel","htmlFor","id","patients","value","fallback","message","patientId","viewMode"],"sources":["C:/Users/Matteo/Working_Folder/a. MCC Thesis Local/MCC_digital_health_data_visualizations/src/App.js"],"sourcesContent":["/**\n * App.js - Main Health Dashboard Application Component\n * \n * This is the root component that provides the main application structure.\n * \n * FEATURES:\n * - Role toggle between Patient and Physician views\n * - Patient selection from 100 synthetic patients\n * - Unified dashboard routing with lazy loading\n * - Error boundary and loading state management\n * - Header with application title and controls\n * \n * ARCHITECTURE:\n * - Uses React 18 with functional components and hooks\n * - Implements lazy loading for performance optimization\n * - Provides error boundaries for robust error handling\n * - Uses Suspense for loading states\n * \n * COMPONENT STRUCTURE:\n * - Header: Contains title, role toggle, and patient selector\n * - Main: Contains the dashboard with error boundary and loading states\n * - Dashboard: Renders either PatientDashboard or PhysicianDashboard based on role\n * \n * STATE MANAGEMENT:\n * - selectedPatient: Currently selected patient ID\n * - currentRole: Current view mode ('patient' or 'physician')\n * \n * This component serves as the entry point for the entire health dashboard application.\n */\n\nimport React, { useState, Suspense } from 'react';\nimport PatientSelector from './PatientSelector';\nimport LoadingSpinner from './components/ui/LoadingSpinner';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport Switch from './components/ui/Switch';\nimport { PATIENTS } from './constants/index';\nimport './App.css';\n\n// Lazy load the unified dashboard component for better performance\nconst Dashboard = React.lazy(() => import('./components/Dashboard'));\n\n/**\n * Main Health Dashboard Application\n * Features both Patient and Physician views with role toggle\n */\nfunction App() {\n  const [selectedPatient, setSelectedPatient] = useState('Patient_001');\n  const [currentRole, setCurrentRole] = useState('patient'); // 'patient' or 'physician'\n\n  const toggleRole = () => {\n    setCurrentRole(prev => prev === 'patient' ? 'physician' : 'patient');\n  };\n\n  return (\n    <div className=\"app\">\n      <header className=\"app-header\">\n        <div className=\"header-content\">\n          <h1>Health Dashboard</h1>\n          \n          {/* Role Toggle */}\n          <div className=\"role-toggle\">\n            <Switch\n              checked={currentRole === 'physician'}\n              onChange={toggleRole}\n              leftLabel=\"Patient View\"\n              rightLabel=\"Physician View\"\n            />\n          </div>\n\n          {/* Patient Selector */}\n          <div className=\"patient-selector\">\n            <label htmlFor=\"patient-select\">Select Patient:</label>\n            <PatientSelector\n              id=\"patient-select\"\n              patients={PATIENTS}\n              value={selectedPatient}\n              onChange={setSelectedPatient}\n            />\n          </div>\n        </div>\n      </header>\n\n      <main className=\"app-main\">\n        <ErrorBoundary>\n          <Suspense fallback={<LoadingSpinner message=\"Loading dashboard...\" />}>\n            <Dashboard \n              patientId={selectedPatient} \n              viewMode={currentRole}\n            />\n          </Suspense>\n        </ErrorBoundary>\n      </main>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAEA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,QAAQ,KAAQ,OAAO,CACjD,MAAO,CAAAC,eAAe,KAAM,mBAAmB,CAC/C,MAAO,CAAAC,cAAc,KAAM,gCAAgC,CAC3D,MAAO,CAAAC,aAAa,KAAM,4BAA4B,CACtD,MAAO,CAAAC,MAAM,KAAM,wBAAwB,CAC3C,OAASC,QAAQ,KAAQ,mBAAmB,CAC5C,MAAO,WAAW,CAElB;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBACA,KAAM,CAAAC,SAAS,cAAGZ,KAAK,CAACa,IAAI,CAAC,IAAM,MAAM,CAAC,wBAAwB,CAAC,CAAC,CAEpE;AACA;AACA;AACA,GACA,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,eAAe,CAAEC,kBAAkB,CAAC,CAAGf,QAAQ,CAAC,aAAa,CAAC,CACrE,KAAM,CAACgB,WAAW,CAAEC,cAAc,CAAC,CAAGjB,QAAQ,CAAC,SAAS,CAAC,CAAE;AAE3D,KAAM,CAAAkB,UAAU,CAAGA,CAAA,GAAM,CACvBD,cAAc,CAACE,IAAI,EAAIA,IAAI,GAAK,SAAS,CAAG,WAAW,CAAG,SAAS,CAAC,CACtE,CAAC,CAED,mBACET,KAAA,QAAKU,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClBb,IAAA,WAAQY,SAAS,CAAC,YAAY,CAAAC,QAAA,cAC5BX,KAAA,QAAKU,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7Bb,IAAA,OAAAa,QAAA,CAAI,kBAAgB,CAAI,CAAC,cAGzBb,IAAA,QAAKY,SAAS,CAAC,aAAa,CAAAC,QAAA,cAC1Bb,IAAA,CAACH,MAAM,EACLiB,OAAO,CAAEN,WAAW,GAAK,WAAY,CACrCO,QAAQ,CAAEL,UAAW,CACrBM,SAAS,CAAC,cAAc,CACxBC,UAAU,CAAC,gBAAgB,CAC5B,CAAC,CACC,CAAC,cAGNf,KAAA,QAAKU,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/Bb,IAAA,UAAOkB,OAAO,CAAC,gBAAgB,CAAAL,QAAA,CAAC,iBAAe,CAAO,CAAC,cACvDb,IAAA,CAACN,eAAe,EACdyB,EAAE,CAAC,gBAAgB,CACnBC,QAAQ,CAAEtB,QAAS,CACnBuB,KAAK,CAAEf,eAAgB,CACvBS,QAAQ,CAAER,kBAAmB,CAC9B,CAAC,EACC,CAAC,EACH,CAAC,CACA,CAAC,cAETP,IAAA,SAAMY,SAAS,CAAC,UAAU,CAAAC,QAAA,cACxBb,IAAA,CAACJ,aAAa,EAAAiB,QAAA,cACZb,IAAA,CAACP,QAAQ,EAAC6B,QAAQ,cAAEtB,IAAA,CAACL,cAAc,EAAC4B,OAAO,CAAC,sBAAsB,CAAE,CAAE,CAAAV,QAAA,cACpEb,IAAA,CAACG,SAAS,EACRqB,SAAS,CAAElB,eAAgB,CAC3BmB,QAAQ,CAAEjB,WAAY,CACvB,CAAC,CACM,CAAC,CACE,CAAC,CACZ,CAAC,EACJ,CAAC,CAEV,CAEA,cAAe,CAAAH,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}