{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matteo\\\\Working_Folder\\\\a. MCC Thesis Local\\\\MCC_digital_health_data_visualizations\\\\src\\\\components\\\\patient_charts\\\\MealContentsChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport ChartContainer from '../ChartContainer';\nimport Legend from '../Legend';\nimport usePatientData from '../../hooks/usePatientData';\nimport { createChartConfig } from '../chart-utils/ChartConfigFactory';\nimport './MealContentsChart.css';\nimport '../ChartStyles.css';\n\n// --- Constants ---\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DAYS_OF_WEEK = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\nconst MEAL_TYPES = ['Breakfast', 'Lunch', 'Dinner'];\nconst FOOD_CATEGORIES = ['Protein', 'Carbohydrates', 'Vegetables', 'Fruit', 'Alcohol'];\nconst SUGAR_CATEGORIES = ['', '1-20g', '20-40g', '40-60g', '60g+'];\nconst DEFAULT_WEEK = new Date(2025, 4, 1);\n\n// Emoji mappings for food categories\nconst CATEGORY_EMOJIS = {\n  'Protein': '🥩',\n  'Carbohydrates': '🍞',\n  'Vegetables': '🥦',\n  'Fruit': '🍎',\n  'Alcohol': '🍷'\n};\nconst SUGAR_EMOJIS = {\n  '': '',\n  // No sugar\n  '1-20g': '🍭',\n  // Lollipop\n  '20-40g': '🍫',\n  // Chocolate bar\n  '40-60g': '🍩',\n  // Donut\n  '60g+': '🎂' // Cake\n};\n\n// --- Helper Functions ---\nconst getWeekStart = date => {\n  const d = new Date(date);\n  const day = d.getDay();\n  const diff = d.getDate() - day;\n  return new Date(d.setDate(diff));\n};\nconst formatDayLabel = date => {\n  const dayNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n  return dayNames[date.getDay()];\n};\nconst formatDateLabel = date => date.toLocaleDateString('en-US', {\n  month: 'short',\n  day: 'numeric'\n});\nconst getMealTime = (data, mealType) => {\n  const timeKey = `${mealType}_Time`;\n  return data[timeKey] || '';\n};\nconst getMealData = (data, mealType) => {\n  const mealData = {};\n  FOOD_CATEGORIES.forEach(category => {\n    const key = `${mealType}_${category}`;\n    mealData[category] = data[key] === 1 || data[key] === '1';\n  });\n  const sugarKey = `${mealType}_Added_Sugar`;\n  mealData['Added Sugar'] = data[sugarKey] || '';\n  return mealData;\n};\n\n// --- Chart Sub-components ---\n\nconst XAxis = ({\n  config,\n  weekDays\n}) => /*#__PURE__*/_jsxDEV(\"g\", {\n  className: \"x-axis\",\n  children: [weekDays.map((day, dayIndex) => {\n    const x = config.padding.left + dayIndex * config.dayWidth + config.dayWidth / 2;\n    return /*#__PURE__*/_jsxDEV(\"g\", {\n      children: [/*#__PURE__*/_jsxDEV(\"text\", {\n        x: x,\n        y: config.height - config.padding.bottom + 30,\n        fontSize: config.fontSize.dayLabel,\n        textAnchor: \"middle\",\n        className: \"x-axis-day-label\",\n        children: formatDayLabel(day)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: x,\n        y: config.height - config.padding.bottom + 45,\n        fontSize: config.fontSize.dateLabel,\n        textAnchor: \"middle\",\n        className: \"x-axis-date-label\",\n        children: day.getDate()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n        className: \"chart-grid-line-vertical\",\n        x1: config.padding.left + dayIndex * config.dayWidth,\n        y1: config.padding.top,\n        x2: config.padding.left + dayIndex * config.dayWidth,\n        y2: config.height - config.padding.bottom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, dayIndex, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this);\n  }), /*#__PURE__*/_jsxDEV(\"line\", {\n    className: \"chart-grid-line-vertical\",\n    x1: config.padding.left + 7 * config.dayWidth,\n    y1: config.padding.top,\n    x2: config.padding.left + 7 * config.dayWidth,\n    y2: config.height - config.padding.bottom\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 71,\n  columnNumber: 3\n}, this);\n_c = XAxis;\nconst YAxis = ({\n  config\n}) => {\n  const mealTimes = {\n    'Breakfast': '6-10am',\n    'Lunch': '11-2pm',\n    'Dinner': '5-9pm'\n  };\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    className: \"y-axis\",\n    children: [MEAL_TYPES.map((meal, mealIndex) => {\n      const y = config.padding.top + mealIndex * config.mealHeight + config.mealHeight / 2;\n      return /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"text\", {\n          x: config.padding.left - 25,\n          y: y - 5,\n          fontSize: config.fontSize.mealLabel,\n          textAnchor: \"end\",\n          className: \"y-axis-title\",\n          children: meal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: config.padding.left - 25,\n          y: y + 10,\n          fontSize: config.fontSize.timeLabel,\n          textAnchor: \"end\",\n          className: \"chart-tick-label\",\n          children: mealTimes[meal]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n          className: \"chart-grid-line-horizontal\",\n          x1: config.padding.left,\n          y1: config.padding.top + mealIndex * config.mealHeight,\n          x2: config.padding.left + 7 * config.dayWidth,\n          y2: config.padding.top + mealIndex * config.mealHeight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this)]\n      }, meal, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"line\", {\n      className: \"chart-grid-line-horizontal\",\n      x1: config.padding.left,\n      y1: config.padding.top + 3 * config.mealHeight,\n      x2: config.padding.left + 7 * config.dayWidth,\n      y2: config.padding.top + 3 * config.mealHeight\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n_c2 = YAxis;\nconst MealCell = ({\n  config,\n  dayIndex,\n  mealIndex,\n  mealData,\n  mealTime,\n  isExpanded\n}) => {\n  const x = config.padding.left + dayIndex * config.dayWidth + 5;\n  const y = config.padding.top + mealIndex * config.mealHeight + 5;\n  const cellWidth = config.dayWidth - 10;\n  const cellHeight = config.mealHeight - 10;\n\n  // Calculate grid layout for 6 circles (2x3 grid)\n  const circlesPerRow = 3;\n  const circleWidth = cellWidth / circlesPerRow;\n  const circleHeight = (cellHeight - 20) / 2; // Reserve space for time\n\n  // Calculate responsive circle radius and emoji size based on cell dimensions\n  const minDimension = Math.min(circleWidth, circleHeight);\n  const circleRadius = Math.max(8, Math.min(16, minDimension * 0.35)); // Min 8px, max 16px, 35% of min dimension\n  const emojiFontSize = Math.max(8, Math.min(16, minDimension * 0.4)); // Min 8px, max 16px, 40% of min dimension for better visibility\n\n  // Apply expanded view scaling\n  const expandedCircleRadius = isExpanded ? circleRadius * 1.3 : circleRadius;\n  const expandedEmojiFontSize = isExpanded ? emojiFontSize * 1.4 : emojiFontSize;\n\n  // Define the 6 food categories in order (5 main + 1 sugar)\n  const allCategories = [...FOOD_CATEGORIES, 'Added Sugar'];\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    className: \"meal-cell\",\n    children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n      x: x,\n      y: y,\n      width: cellWidth,\n      height: cellHeight,\n      fill: \"#f9f9f9\",\n      stroke: \"#ddd\",\n      strokeWidth: \"1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      x: x + cellWidth / 2,\n      y: y + 12,\n      fontSize: config.fontSize.timeLabel,\n      textAnchor: \"middle\",\n      className: \"time-label\",\n      children: mealTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), allCategories.map((category, index) => {\n      const row = Math.floor(index / circlesPerRow);\n      const col = index % circlesPerRow;\n      const circleX = x + col * circleWidth + circleWidth / 2;\n      const circleY = y + 20 + row * circleHeight + circleHeight / 2;\n\n      // Check if category is present\n      let hasCategory = false;\n      let emoji = '';\n      if (category === 'Added Sugar') {\n        hasCategory = mealData[category] && SUGAR_EMOJIS[mealData[category]];\n        emoji = SUGAR_EMOJIS[mealData[category]] || '';\n      } else {\n        hasCategory = mealData[category];\n        emoji = CATEGORY_EMOJIS[category] || '';\n      }\n      return /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: circleX,\n          cy: circleY,\n          r: expandedCircleRadius,\n          fill: \"#f5f5f5\",\n          stroke: \"#ddd\",\n          strokeWidth: \"1\",\n          opacity: 0.3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this), hasCategory && emoji && /*#__PURE__*/_jsxDEV(\"text\", {\n          x: circleX,\n          y: circleY,\n          fontSize: expandedEmojiFontSize,\n          textAnchor: \"middle\",\n          dominantBaseline: \"central\",\n          style: {\n            fontFamily: 'Apple Color Emoji, Segoe UI Emoji, Noto Color Emoji, sans-serif'\n          },\n          children: emoji\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 15\n        }, this)]\n      }, category, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 5\n  }, this);\n};\n_c3 = MealCell;\nconst MealGrid = ({\n  config,\n  weekDays,\n  patientData,\n  isExpanded\n}) => {\n  if (!patientData || patientData.length === 0) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    className: \"meal-grid\",\n    children: weekDays.map((day, dayIndex) => {\n      const dayData = patientData.find(d => {\n        const dataDate = new Date(d.Date);\n        return dataDate.toDateString() === day.toDateString();\n      });\n      if (!dayData) return null;\n      return MEAL_TYPES.map((meal, mealIndex) => {\n        const mealData = getMealData(dayData, meal);\n        const mealTime = getMealTime(dayData, meal);\n        return /*#__PURE__*/_jsxDEV(MealCell, {\n          config: config,\n          dayIndex: dayIndex,\n          mealIndex: mealIndex,\n          mealData: mealData,\n          mealTime: mealTime,\n          isExpanded: isExpanded\n        }, `${dayIndex}-${mealIndex}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this);\n      });\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 270,\n    columnNumber: 5\n  }, this);\n};\n\n// --- Main Component ---\n_c4 = MealGrid;\nconst MealContentsChart = ({\n  patientId,\n  isExpanded = false,\n  onExpand,\n  viewMode = 'patient'\n}) => {\n  _s();\n  const {\n    mealData: patientData,\n    loading,\n    error\n  } = usePatientData(patientId);\n  const [currentWeek, setCurrentWeek] = useState(new Date(2025, 4, 1));\n  const containerRef = useRef(null);\n  const [containerWidth, setContainerWidth] = useState(500);\n  const config = getChartConfig(isExpanded, containerWidth);\n\n  // Measure container width for responsive sizing\n  useEffect(() => {\n    const updateContainerWidth = () => {\n      if (containerRef.current) {\n        const width = containerRef.current.offsetWidth;\n        setContainerWidth(width);\n      }\n    };\n    updateContainerWidth();\n    window.addEventListener('resize', updateContainerWidth);\n    return () => window.removeEventListener('resize', updateContainerWidth);\n  }, [isExpanded]);\n  const weekStart = getWeekStart(currentWeek);\n  const weekDays = Array.from({\n    length: 7\n  }, (_, i) => {\n    const day = new Date(weekStart);\n    day.setDate(weekStart.getDate() + i);\n    return day;\n  });\n  const handlePrevWeek = () => setCurrentWeek(prev => new Date(new Date(prev).setDate(prev.getDate() - 7)));\n  const handleNextWeek = () => setCurrentWeek(prev => new Date(new Date(prev).setDate(prev.getDate() + 7)));\n  const startOfWeek = new Date(weekStart);\n  const endOfWeek = new Date(startOfWeek);\n  endOfWeek.setDate(endOfWeek.getDate() + 6);\n  const formatDateRange = (start, end) => {\n    const startStr = start.toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric'\n    });\n    const endStr = end.toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric'\n    });\n    return `${startStr} to ${endStr}`;\n  };\n\n  // Calculate summary statistics for physician view\n  const weekSummary = useState(() => {\n    if (!patientData || patientData.length === 0) return null;\n    const weekData = patientData.filter(d => {\n      const dataDate = new Date(d.Date);\n      return dataDate >= startOfWeek && dataDate <= endOfWeek;\n    });\n    if (weekData.length === 0) return null;\n\n    // Count food categories across all meals\n    const categoryStats = {};\n    FOOD_CATEGORIES.forEach(category => {\n      categoryStats[category] = 0;\n    });\n\n    // Count sugar levels\n    const sugarStats = {};\n    SUGAR_CATEGORIES.filter(s => s !== '').forEach(sugar => {\n      sugarStats[sugar] = 0;\n    });\n    let totalMealsLogged = 0;\n    let daysWithMeals = new Set();\n    weekData.forEach(dayData => {\n      daysWithMeals.add(dayData.Date);\n      MEAL_TYPES.forEach(meal => {\n        const mealData = getMealData(dayData, meal);\n        const hasAnyFood = FOOD_CATEGORIES.some(category => mealData[category]);\n        if (hasAnyFood) {\n          totalMealsLogged++;\n\n          // Count each food category\n          FOOD_CATEGORIES.forEach(category => {\n            if (mealData[category]) {\n              categoryStats[category]++;\n            }\n          });\n\n          // Count sugar levels\n          if (mealData['Added Sugar'] && mealData['Added Sugar'] !== '') {\n            sugarStats[mealData['Added Sugar']]++;\n          }\n        }\n      });\n    });\n\n    // Find most common food category\n    const mostCommonFood = Object.entries(categoryStats).sort(([, a], [, b]) => b - a)[0];\n\n    // Calculate sugar frequency\n    const totalSugarMeals = Object.values(sugarStats).reduce((sum, count) => sum + count, 0);\n    const sugarPercentage = totalMealsLogged > 0 ? (totalSugarMeals / totalMealsLogged * 100).toFixed(0) : 0;\n    return {\n      totalMealsLogged,\n      daysWithMeals: daysWithMeals.size,\n      mostCommonFood: mostCommonFood[0],\n      mostCommonFoodCount: mostCommonFood[1],\n      categoryStats,\n      sugarPercentage,\n      totalSugarMeals\n    };\n  }, [patientData, startOfWeek, endOfWeek]);\n  return /*#__PURE__*/_jsxDEV(ChartContainer, {\n    title: \"Meal Contents\",\n    icon: \"\\uD83C\\uDF7D\\uFE0F\",\n    isLoading: loading,\n    error: error,\n    noData: !loading && !error && (!patientData || patientData.length === 0),\n    isExpanded: isExpanded,\n    onExpand: onExpand,\n    onPrev: handlePrevWeek,\n    onNext: handleNextWeek,\n    navigationLabel: formatDateRange(startOfWeek, endOfWeek),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meal-contents-chart-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meal-contents-legends-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(Legend, {\n          title: \"Food Categories\",\n          items: FOOD_CATEGORIES.map(category => ({\n            label: `${CATEGORY_EMOJIS[category]} ${category}`,\n            color: null\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {\n          title: \"Sugar Levels\",\n          items: SUGAR_CATEGORIES.filter(sugar => sugar !== '').map(sugar => ({\n            label: `${SUGAR_EMOJIS[sugar]} ${sugar}`,\n            color: null\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `meal-chart-wrapper ${isExpanded ? 'expanded' : ''}`,\n        ref: containerRef,\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          width: config.width,\n          height: config.height,\n          viewBox: `0 0 ${config.width} ${config.height}`,\n          className: \"meal-chart\",\n          style: {\n            maxWidth: '100%',\n            height: 'auto'\n          },\n          children: [/*#__PURE__*/_jsxDEV(XAxis, {\n            config: config,\n            weekDays: weekDays\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            config: config\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MealGrid, {\n            config: config,\n            weekDays: weekDays,\n            patientData: patientData,\n            isExpanded: isExpanded\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 9\n      }, this), viewMode === 'physician' && weekSummary && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meal-summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Week Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Meals Logged:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [weekSummary.totalMealsLogged, \"/21 possible\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Days with Meals:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [weekSummary.daysWithMeals, \"/7 days\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Most Common Food:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [CATEGORY_EMOJIS[weekSummary.mostCommonFood], \" \", weekSummary.mostCommonFood, \" (\", weekSummary.mostCommonFoodCount, \"x)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Added Sugar:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [weekSummary.sugarPercentage, \"% of meals (\", weekSummary.totalSugarMeals, \"/\", weekSummary.totalMealsLogged, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Food Balance:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: Object.entries(weekSummary.categoryStats).sort(([, a], [, b]) => b - a).slice(0, 3).map(([cat, count]) => `${CATEGORY_EMOJIS[cat]}${count}`).join(' ')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 418,\n    columnNumber: 5\n  }, this);\n};\n_s(MealContentsChart, \"7kVvkIdEyIN6+zk3/BCaHRz/0xY=\", false, function () {\n  return [usePatientData];\n});\n_c5 = MealContentsChart;\nexport default MealContentsChart;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"XAxis\");\n$RefreshReg$(_c2, \"YAxis\");\n$RefreshReg$(_c3, \"MealCell\");\n$RefreshReg$(_c4, \"MealGrid\");\n$RefreshReg$(_c5, \"MealContentsChart\");","map":{"version":3,"names":["React","useState","useEffect","useRef","ChartContainer","Legend","usePatientData","createChartConfig","jsxDEV","_jsxDEV","DAYS_OF_WEEK","MEAL_TYPES","FOOD_CATEGORIES","SUGAR_CATEGORIES","DEFAULT_WEEK","Date","CATEGORY_EMOJIS","SUGAR_EMOJIS","getWeekStart","date","d","day","getDay","diff","getDate","setDate","formatDayLabel","dayNames","formatDateLabel","toLocaleDateString","month","getMealTime","data","mealType","timeKey","getMealData","mealData","forEach","category","key","sugarKey","XAxis","config","weekDays","className","children","map","dayIndex","x","padding","left","dayWidth","y","height","bottom","fontSize","dayLabel","textAnchor","fileName","_jsxFileName","lineNumber","columnNumber","dateLabel","x1","y1","top","x2","y2","_c","YAxis","mealTimes","meal","mealIndex","mealHeight","mealLabel","timeLabel","_c2","MealCell","mealTime","isExpanded","cellWidth","cellHeight","circlesPerRow","circleWidth","circleHeight","minDimension","Math","min","circleRadius","max","emojiFontSize","expandedCircleRadius","expandedEmojiFontSize","allCategories","width","fill","stroke","strokeWidth","index","row","floor","col","circleX","circleY","hasCategory","emoji","cx","cy","r","opacity","dominantBaseline","style","fontFamily","_c3","MealGrid","patientData","length","dayData","find","dataDate","toDateString","_c4","MealContentsChart","patientId","onExpand","viewMode","_s","loading","error","currentWeek","setCurrentWeek","containerRef","containerWidth","setContainerWidth","getChartConfig","updateContainerWidth","current","offsetWidth","window","addEventListener","removeEventListener","weekStart","Array","from","_","i","handlePrevWeek","prev","handleNextWeek","startOfWeek","endOfWeek","formatDateRange","start","end","startStr","endStr","weekSummary","weekData","filter","categoryStats","sugarStats","s","sugar","totalMealsLogged","daysWithMeals","Set","add","hasAnyFood","some","mostCommonFood","Object","entries","sort","a","b","totalSugarMeals","values","reduce","sum","count","sugarPercentage","toFixed","size","mostCommonFoodCount","title","icon","isLoading","noData","onPrev","onNext","navigationLabel","items","label","color","ref","viewBox","maxWidth","slice","cat","join","_c5","$RefreshReg$"],"sources":["C:/Users/Matteo/Working_Folder/a. MCC Thesis Local/MCC_digital_health_data_visualizations/src/components/patient_charts/MealContentsChart.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport ChartContainer from '../ChartContainer';\nimport Legend from '../Legend';\nimport usePatientData from '../../hooks/usePatientData';\nimport { createChartConfig } from '../chart-utils/ChartConfigFactory';\n\nimport './MealContentsChart.css';\nimport '../ChartStyles.css';\n\n// --- Constants ---\nconst DAYS_OF_WEEK = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\nconst MEAL_TYPES = ['Breakfast', 'Lunch', 'Dinner'];\nconst FOOD_CATEGORIES = ['Protein', 'Carbohydrates', 'Vegetables', 'Fruit', 'Alcohol'];\nconst SUGAR_CATEGORIES = ['', '1-20g', '20-40g', '40-60g', '60g+'];\nconst DEFAULT_WEEK = new Date(2025, 4, 1);\n\n// Emoji mappings for food categories\nconst CATEGORY_EMOJIS = {\n  'Protein': '🥩',\n  'Carbohydrates': '🍞',\n  'Vegetables': '🥦',\n  'Fruit': '🍎',\n  'Alcohol': '🍷'\n};\n\nconst SUGAR_EMOJIS = {\n  '': '',              // No sugar\n  '1-20g': '🍭',       // Lollipop\n  '20-40g': '🍫',      // Chocolate bar\n  '40-60g': '🍩',      // Donut\n  '60g+': '🎂'         // Cake\n};\n\n\n\n// --- Helper Functions ---\nconst getWeekStart = (date) => {\n  const d = new Date(date);\n  const day = d.getDay();\n  const diff = d.getDate() - day;\n  return new Date(d.setDate(diff));\n};\n\nconst formatDayLabel = (date) => {\n  const dayNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n  return dayNames[date.getDay()];\n};\nconst formatDateLabel = (date) => date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\n\nconst getMealTime = (data, mealType) => {\n  const timeKey = `${mealType}_Time`;\n  return data[timeKey] || '';\n};\n\nconst getMealData = (data, mealType) => {\n  const mealData = {};\n  FOOD_CATEGORIES.forEach(category => {\n    const key = `${mealType}_${category}`;\n    mealData[category] = data[key] === 1 || data[key] === '1';\n  });\n  \n  const sugarKey = `${mealType}_Added_Sugar`;\n  mealData['Added Sugar'] = data[sugarKey] || '';\n  \n  return mealData;\n};\n\n// --- Chart Sub-components ---\n\nconst XAxis = ({ config, weekDays }) => (\n  <g className=\"x-axis\">\n    {weekDays.map((day, dayIndex) => {\n      const x = config.padding.left + dayIndex * config.dayWidth + config.dayWidth / 2;\n      return (\n        <g key={dayIndex}>\n          <text\n            x={x}\n            y={config.height - config.padding.bottom + 30}\n            fontSize={config.fontSize.dayLabel}\n            textAnchor=\"middle\"\n            className=\"x-axis-day-label\"\n          >\n            {formatDayLabel(day)}\n          </text>\n          <text\n            x={x}\n            y={config.height - config.padding.bottom + 45}\n            fontSize={config.fontSize.dateLabel}\n            textAnchor=\"middle\"\n            className=\"x-axis-date-label\"\n          >\n            {day.getDate()}\n          </text>\n          <line\n            className=\"chart-grid-line-vertical\"\n            x1={config.padding.left + dayIndex * config.dayWidth}\n            y1={config.padding.top}\n            x2={config.padding.left + dayIndex * config.dayWidth}\n            y2={config.height - config.padding.bottom}\n          />\n        </g>\n      );\n    })}\n    <line\n      className=\"chart-grid-line-vertical\"\n      x1={config.padding.left + 7 * config.dayWidth}\n      y1={config.padding.top}\n      x2={config.padding.left + 7 * config.dayWidth}\n      y2={config.height - config.padding.bottom}\n    />\n  </g>\n);\n\nconst YAxis = ({ config }) => {\n  const mealTimes = {\n    'Breakfast': '6-10am',\n    'Lunch': '11-2pm', \n    'Dinner': '5-9pm'\n  };\n\n  return (\n    <g className=\"y-axis\">\n      {MEAL_TYPES.map((meal, mealIndex) => {\n        const y = config.padding.top + mealIndex * config.mealHeight + config.mealHeight / 2;\n        return (\n          <g key={meal}>\n            <text\n              x={config.padding.left - 25}\n              y={y - 5}\n              fontSize={config.fontSize.mealLabel}\n              textAnchor=\"end\"\n              className=\"y-axis-title\"\n            >\n              {meal}\n            </text>\n            <text\n              x={config.padding.left - 25}\n              y={y + 10}\n              fontSize={config.fontSize.timeLabel}\n              textAnchor=\"end\"\n              className=\"chart-tick-label\"\n            >\n              {mealTimes[meal]}\n            </text>\n            <line\n              className=\"chart-grid-line-horizontal\"\n              x1={config.padding.left}\n              y1={config.padding.top + mealIndex * config.mealHeight}\n              x2={config.padding.left + 7 * config.dayWidth}\n              y2={config.padding.top + mealIndex * config.mealHeight}\n            />\n          </g>\n        );\n      })}\n      <line\n        className=\"chart-grid-line-horizontal\"\n        x1={config.padding.left}\n        y1={config.padding.top + 3 * config.mealHeight}\n        x2={config.padding.left + 7 * config.dayWidth}\n        y2={config.padding.top + 3 * config.mealHeight}\n      />\n    </g>\n  );\n};\n\nconst MealCell = ({ config, dayIndex, mealIndex, mealData, mealTime, isExpanded }) => {\n  const x = config.padding.left + dayIndex * config.dayWidth + 5;\n  const y = config.padding.top + mealIndex * config.mealHeight + 5;\n  const cellWidth = config.dayWidth - 10;\n  const cellHeight = config.mealHeight - 10;\n  \n  // Calculate grid layout for 6 circles (2x3 grid)\n  const circlesPerRow = 3;\n  const circleWidth = cellWidth / circlesPerRow;\n  const circleHeight = (cellHeight - 20) / 2; // Reserve space for time\n  \n  // Calculate responsive circle radius and emoji size based on cell dimensions\n  const minDimension = Math.min(circleWidth, circleHeight);\n  const circleRadius = Math.max(8, Math.min(16, minDimension * 0.35)); // Min 8px, max 16px, 35% of min dimension\n  const emojiFontSize = Math.max(8, Math.min(16, minDimension * 0.4)); // Min 8px, max 16px, 40% of min dimension for better visibility\n  \n  // Apply expanded view scaling\n  const expandedCircleRadius = isExpanded ? circleRadius * 1.3 : circleRadius;\n  const expandedEmojiFontSize = isExpanded ? emojiFontSize * 1.4 : emojiFontSize;\n  \n  // Define the 6 food categories in order (5 main + 1 sugar)\n  const allCategories = [...FOOD_CATEGORIES, 'Added Sugar'];\n  \n  return (\n    <g className=\"meal-cell\">\n      {/* Background */}\n      <rect\n        x={x}\n        y={y}\n        width={cellWidth}\n        height={cellHeight}\n        fill=\"#f9f9f9\"\n        stroke=\"#ddd\"\n        strokeWidth=\"1\"\n      />\n      \n      {/* Meal time at the top */}\n      <text\n        x={x + cellWidth / 2}\n        y={y + 12}\n        fontSize={config.fontSize.timeLabel}\n        textAnchor=\"middle\"\n        className=\"time-label\"\n      >\n        {mealTime}\n      </text>\n      \n      {/* 6 placeholder circles with food category emojis */}\n      {allCategories.map((category, index) => {\n        const row = Math.floor(index / circlesPerRow);\n        const col = index % circlesPerRow;\n        const circleX = x + col * circleWidth + circleWidth / 2;\n        const circleY = y + 20 + row * circleHeight + circleHeight / 2;\n        \n        // Check if category is present\n        let hasCategory = false;\n        let emoji = '';\n        \n        if (category === 'Added Sugar') {\n          hasCategory = mealData[category] && SUGAR_EMOJIS[mealData[category]];\n          emoji = SUGAR_EMOJIS[mealData[category]] || '';\n        } else {\n          hasCategory = mealData[category];\n          emoji = CATEGORY_EMOJIS[category] || '';\n        }\n        \n        return (\n          <g key={category}>\n            {/* Placeholder circle - always grey */}\n            <circle\n              cx={circleX}\n              cy={circleY}\n              r={expandedCircleRadius}\n              fill=\"#f5f5f5\"\n              stroke=\"#ddd\"\n              strokeWidth=\"1\"\n              opacity={0.3}\n            />\n            {/* Emoji if category is present */}\n            {hasCategory && emoji && (\n              <text\n                x={circleX}\n                y={circleY}\n                fontSize={expandedEmojiFontSize}\n                textAnchor=\"middle\"\n                dominantBaseline=\"central\"\n                style={{ fontFamily: 'Apple Color Emoji, Segoe UI Emoji, Noto Color Emoji, sans-serif' }}\n              >\n                {emoji}\n              </text>\n            )}\n          </g>\n        );\n      })}\n    </g>\n  );\n};\n\nconst MealGrid = ({ config, weekDays, patientData, isExpanded }) => {\n  if (!patientData || patientData.length === 0) {\n    return null;\n  }\n\n  return (\n    <g className=\"meal-grid\">\n      {weekDays.map((day, dayIndex) => {\n        const dayData = patientData.find(d => {\n          const dataDate = new Date(d.Date);\n          return dataDate.toDateString() === day.toDateString();\n        });\n\n        if (!dayData) return null;\n\n        return MEAL_TYPES.map((meal, mealIndex) => {\n          const mealData = getMealData(dayData, meal);\n          const mealTime = getMealTime(dayData, meal);\n          \n          return (\n            <MealCell\n              key={`${dayIndex}-${mealIndex}`}\n              config={config}\n              dayIndex={dayIndex}\n              mealIndex={mealIndex}\n              mealData={mealData}\n              mealTime={mealTime}\n              isExpanded={isExpanded}\n            />\n          );\n        });\n      })}\n    </g>\n  );\n};\n\n\n// --- Main Component ---\nconst MealContentsChart = ({ patientId, isExpanded = false, onExpand, viewMode = 'patient' }) => {\n  const { mealData: patientData, loading, error } = usePatientData(patientId);\n  const [currentWeek, setCurrentWeek] = useState(new Date(2025, 4, 1));\n  const containerRef = useRef(null);\n  const [containerWidth, setContainerWidth] = useState(500);\n\n  const config = getChartConfig(isExpanded, containerWidth);\n  \n  // Measure container width for responsive sizing\n  useEffect(() => {\n    const updateContainerWidth = () => {\n      if (containerRef.current) {\n        const width = containerRef.current.offsetWidth;\n        setContainerWidth(width);\n      }\n    };\n\n    updateContainerWidth();\n    window.addEventListener('resize', updateContainerWidth);\n    return () => window.removeEventListener('resize', updateContainerWidth);\n  }, [isExpanded]);\n\n  const weekStart = getWeekStart(currentWeek);\n  const weekDays = Array.from({ length: 7 }, (_, i) => {\n    const day = new Date(weekStart);\n    day.setDate(weekStart.getDate() + i);\n    return day;\n  });\n\n  const handlePrevWeek = () => setCurrentWeek(prev => new Date(new Date(prev).setDate(prev.getDate() - 7)));\n  const handleNextWeek = () => setCurrentWeek(prev => new Date(new Date(prev).setDate(prev.getDate() + 7)));\n\n  const startOfWeek = new Date(weekStart);\n  const endOfWeek = new Date(startOfWeek);\n  endOfWeek.setDate(endOfWeek.getDate() + 6);\n\n  const formatDateRange = (start, end) => {\n    const startStr = start.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\n    const endStr = end.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\n    return `${startStr} to ${endStr}`;\n  };\n\n  // Calculate summary statistics for physician view\n  const weekSummary = useState(() => {\n    if (!patientData || patientData.length === 0) return null;\n\n    const weekData = patientData.filter(d => {\n      const dataDate = new Date(d.Date);\n      return dataDate >= startOfWeek && dataDate <= endOfWeek;\n    });\n\n    if (weekData.length === 0) return null;\n\n    // Count food categories across all meals\n    const categoryStats = {};\n    FOOD_CATEGORIES.forEach(category => {\n      categoryStats[category] = 0;\n    });\n\n    // Count sugar levels\n    const sugarStats = {};\n    SUGAR_CATEGORIES.filter(s => s !== '').forEach(sugar => {\n      sugarStats[sugar] = 0;\n    });\n\n    let totalMealsLogged = 0;\n    let daysWithMeals = new Set();\n\n    weekData.forEach(dayData => {\n      daysWithMeals.add(dayData.Date);\n      \n      MEAL_TYPES.forEach(meal => {\n        const mealData = getMealData(dayData, meal);\n        const hasAnyFood = FOOD_CATEGORIES.some(category => mealData[category]);\n        \n        if (hasAnyFood) {\n          totalMealsLogged++;\n          \n          // Count each food category\n          FOOD_CATEGORIES.forEach(category => {\n            if (mealData[category]) {\n              categoryStats[category]++;\n            }\n          });\n\n          // Count sugar levels\n          if (mealData['Added Sugar'] && mealData['Added Sugar'] !== '') {\n            sugarStats[mealData['Added Sugar']]++;\n          }\n        }\n      });\n    });\n\n    // Find most common food category\n    const mostCommonFood = Object.entries(categoryStats)\n      .sort(([,a], [,b]) => b - a)[0];\n\n    // Calculate sugar frequency\n    const totalSugarMeals = Object.values(sugarStats).reduce((sum, count) => sum + count, 0);\n    const sugarPercentage = totalMealsLogged > 0 ? \n      ((totalSugarMeals / totalMealsLogged) * 100).toFixed(0) : 0;\n\n    return {\n      totalMealsLogged,\n      daysWithMeals: daysWithMeals.size,\n      mostCommonFood: mostCommonFood[0],\n      mostCommonFoodCount: mostCommonFood[1],\n      categoryStats,\n      sugarPercentage,\n      totalSugarMeals\n    };\n  }, [patientData, startOfWeek, endOfWeek]);\n\n\n  \n  return (\n    <ChartContainer\n      title=\"Meal Contents\"\n      icon=\"🍽️\"\n      isLoading={loading}\n      error={error}\n      noData={!loading && !error && (!patientData || patientData.length === 0)}\n      isExpanded={isExpanded}\n      onExpand={onExpand}\n      onPrev={handlePrevWeek}\n      onNext={handleNextWeek}\n      navigationLabel={formatDateRange(startOfWeek, endOfWeek)}\n    >\n      <div className=\"meal-contents-chart-container\">\n        <div className=\"meal-contents-legends-wrapper\">\n            <Legend \n              title=\"Food Categories\" \n              items={FOOD_CATEGORIES.map(category => ({\n                label: `${CATEGORY_EMOJIS[category]} ${category}`,\n                color: null\n              }))}\n            />\n            <Legend \n              title=\"Sugar Levels\" \n              items={SUGAR_CATEGORIES.filter(sugar => sugar !== '').map(sugar => ({\n                label: `${SUGAR_EMOJIS[sugar]} ${sugar}`,\n                color: null\n              }))}\n            />\n        </div>\n        <div className={`meal-chart-wrapper ${isExpanded ? 'expanded' : ''}`} ref={containerRef}>\n          <svg \n            width={config.width} \n            height={config.height} \n            viewBox={`0 0 ${config.width} ${config.height}`} \n            className=\"meal-chart\"\n            style={{ maxWidth: '100%', height: 'auto' }}\n          >\n            <XAxis config={config} weekDays={weekDays} />\n            <YAxis config={config} />\n            <MealGrid \n              config={config} \n              weekDays={weekDays} \n              patientData={patientData} \n              isExpanded={isExpanded}\n            />\n          </svg>\n        </div>\n\n        {/* Show summary for physician view only */}\n        {viewMode === 'physician' && weekSummary && (\n          <div className=\"meal-summary\">\n            <h4>Week Summary</h4>\n            <div className=\"summary-stats\">\n              <div className=\"stat-item\">\n                <span className=\"stat-label\">Meals Logged:</span>\n                <span className=\"stat-value\">\n                  {weekSummary.totalMealsLogged}/21 possible\n                </span>\n              </div>\n              <div className=\"stat-item\">\n                <span className=\"stat-label\">Days with Meals:</span>\n                <span className=\"stat-value\">\n                  {weekSummary.daysWithMeals}/7 days\n                </span>\n              </div>\n              <div className=\"stat-item\">\n                <span className=\"stat-label\">Most Common Food:</span>\n                <span className=\"stat-value\">\n                  {CATEGORY_EMOJIS[weekSummary.mostCommonFood]} {weekSummary.mostCommonFood} ({weekSummary.mostCommonFoodCount}x)\n                </span>\n              </div>\n              <div className=\"stat-item\">\n                <span className=\"stat-label\">Added Sugar:</span>\n                <span className=\"stat-value\">\n                  {weekSummary.sugarPercentage}% of meals ({weekSummary.totalSugarMeals}/{weekSummary.totalMealsLogged})\n                </span>\n              </div>\n              <div className=\"stat-item\">\n                <span className=\"stat-label\">Food Balance:</span>\n                <span className=\"stat-value\">\n                  {Object.entries(weekSummary.categoryStats)\n                    .sort(([,a], [,b]) => b - a)\n                    .slice(0, 3)\n                    .map(([cat, count]) => `${CATEGORY_EMOJIS[cat]}${count}`)\n                    .join(' ')}\n                </span>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </ChartContainer>\n  );\n};\n\nexport default MealContentsChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}