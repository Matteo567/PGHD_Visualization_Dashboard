{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matteo\\\\Working_Folder\\\\a. MCC Thesis Local\\\\MCC_digital_health_data_visualizations\\\\src\\\\components\\\\Legend.js\";\nimport React from 'react';\nimport './ChartStyles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Legend = ({\n  title,\n  items,\n  orientation = 'horizontal',\n  // horizontal | vertical\n  size = 'medium',\n  // small | medium | large\n  containerWidth = null // New prop for matching parent container width\n}) => {\n  if (!items || items.length === 0) {\n    return null;\n  }\n\n  // Apply container width if provided, otherwise use default styling\n  const containerStyle = containerWidth ? {\n    width: containerWidth,\n    maxWidth: containerWidth\n  } : {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `legend-container legend-${orientation} legend-${size}`,\n    style: containerStyle,\n    children: [title && /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"legend-title\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"legend-items\",\n      children: items.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"legend-item\",\n        style: item.style,\n        title: item.description || item.label,\n        children: [item.color && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"legend-color-indicator\",\n          style: {\n            backgroundColor: item.color\n          },\n          \"aria-label\": `Color indicator for ${item.label}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this), item.icon && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"legend-icon\",\n          \"aria-label\": `Icon for ${item.label}`,\n          children: item.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this), item.shape && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `legend-shape legend-shape-${item.shape}`,\n          style: item.shapeStyle,\n          \"aria-label\": `${item.shape} indicator for ${item.label}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"legend-label\",\n          children: item.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_c = Legend;\nexport default Legend;\nvar _c;\n$RefreshReg$(_c, \"Legend\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Legend","title","items","orientation","size","containerWidth","length","containerStyle","width","maxWidth","className","style","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","description","label","color","backgroundColor","icon","shape","shapeStyle","_c","$RefreshReg$"],"sources":["C:/Users/Matteo/Working_Folder/a. MCC Thesis Local/MCC_digital_health_data_visualizations/src/components/Legend.js"],"sourcesContent":["import React from 'react';\r\nimport './ChartStyles.css';\r\n\r\nconst Legend = ({ \r\n  title, \r\n  items, \r\n  orientation = 'horizontal', // horizontal | vertical\r\n  size = 'medium', // small | medium | large\r\n  containerWidth = null // New prop for matching parent container width\r\n}) => {\r\n  if (!items || items.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  // Apply container width if provided, otherwise use default styling\r\n  const containerStyle = containerWidth ? { width: containerWidth, maxWidth: containerWidth } : {};\r\n\r\n  return (\r\n    <div \r\n      className={`legend-container legend-${orientation} legend-${size}`}\r\n      style={containerStyle}\r\n    >\r\n      {title && <h4 className=\"legend-title\">{title}</h4>}\r\n      <div className=\"legend-items\">\r\n        {items.map((item, index) => (\r\n          <div \r\n            key={index} \r\n            className=\"legend-item\" \r\n            style={item.style}\r\n            title={item.description || item.label}\r\n          >\r\n            {/* Color indicator */}\r\n            {item.color && (\r\n              <span \r\n                className=\"legend-color-indicator\" \r\n                style={{ backgroundColor: item.color }}\r\n                aria-label={`Color indicator for ${item.label}`}\r\n              />\r\n            )}\r\n            \r\n            {/* Icon/emoji indicator */}\r\n            {item.icon && (\r\n              <span \r\n                className=\"legend-icon\"\r\n                aria-label={`Icon for ${item.label}`}\r\n              >\r\n                {item.icon}\r\n              </span>\r\n            )}\r\n            \r\n            {/* Shape indicator for special cases */}\r\n            {item.shape && (\r\n              <span \r\n                className={`legend-shape legend-shape-${item.shape}`}\r\n                style={item.shapeStyle}\r\n                aria-label={`${item.shape} indicator for ${item.label}`}\r\n              />\r\n            )}\r\n            \r\n            {/* Label */}\r\n            <span className=\"legend-label\">{item.label}</span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Legend;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,MAAM,GAAGA,CAAC;EACdC,KAAK;EACLC,KAAK;EACLC,WAAW,GAAG,YAAY;EAAE;EAC5BC,IAAI,GAAG,QAAQ;EAAE;EACjBC,cAAc,GAAG,IAAI,CAAC;AACxB,CAAC,KAAK;EACJ,IAAI,CAACH,KAAK,IAAIA,KAAK,CAACI,MAAM,KAAK,CAAC,EAAE;IAChC,OAAO,IAAI;EACb;;EAEA;EACA,MAAMC,cAAc,GAAGF,cAAc,GAAG;IAAEG,KAAK,EAAEH,cAAc;IAAEI,QAAQ,EAAEJ;EAAe,CAAC,GAAG,CAAC,CAAC;EAEhG,oBACEN,OAAA;IACEW,SAAS,EAAE,2BAA2BP,WAAW,WAAWC,IAAI,EAAG;IACnEO,KAAK,EAAEJ,cAAe;IAAAK,QAAA,GAErBX,KAAK,iBAAIF,OAAA;MAAIW,SAAS,EAAC,cAAc;MAAAE,QAAA,EAAEX;IAAK;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACnDjB,OAAA;MAAKW,SAAS,EAAC,cAAc;MAAAE,QAAA,EAC1BV,KAAK,CAACe,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrBpB,OAAA;QAEEW,SAAS,EAAC,aAAa;QACvBC,KAAK,EAAEO,IAAI,CAACP,KAAM;QAClBV,KAAK,EAAEiB,IAAI,CAACE,WAAW,IAAIF,IAAI,CAACG,KAAM;QAAAT,QAAA,GAGrCM,IAAI,CAACI,KAAK,iBACTvB,OAAA;UACEW,SAAS,EAAC,wBAAwB;UAClCC,KAAK,EAAE;YAAEY,eAAe,EAAEL,IAAI,CAACI;UAAM,CAAE;UACvC,cAAY,uBAAuBJ,IAAI,CAACG,KAAK;QAAG;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjD,CACF,EAGAE,IAAI,CAACM,IAAI,iBACRzB,OAAA;UACEW,SAAS,EAAC,aAAa;UACvB,cAAY,YAAYQ,IAAI,CAACG,KAAK,EAAG;UAAAT,QAAA,EAEpCM,IAAI,CAACM;QAAI;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CACP,EAGAE,IAAI,CAACO,KAAK,iBACT1B,OAAA;UACEW,SAAS,EAAE,6BAA6BQ,IAAI,CAACO,KAAK,EAAG;UACrDd,KAAK,EAAEO,IAAI,CAACQ,UAAW;UACvB,cAAY,GAAGR,IAAI,CAACO,KAAK,kBAAkBP,IAAI,CAACG,KAAK;QAAG;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzD,CACF,eAGDjB,OAAA;UAAMW,SAAS,EAAC,cAAc;UAAAE,QAAA,EAAEM,IAAI,CAACG;QAAK;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA,GAlC7CG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAmCP,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACW,EAAA,GA/DI3B,MAAM;AAiEZ,eAAeA,MAAM;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}