{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matteo\\\\Working_Folder\\\\a. MCC Thesis Local Experimental\\\\PGHD_Visualization_Dashboard\\\\src\\\\components\\\\patient_charts\\\\SleepChart.js\",\n  _s = $RefreshSig$();\n/*\n SleepChart.js - Sleep Pattern Monitoring Visualization\n \n This component provides comprehensive sleep tracking:\n - Sleep duration and quality rating visualization\n - Weekly sleep pattern analysis\n - Color-coded sleep quality indicators\n - Interactive tooltips with sleep details\n - Navigation controls for time periods\n - Integration with patient data and chart navigation\n \n Architecture:\n - Uses custom SVG for bar chart visualization\n - Implements sleep quality categorization system\n - Provides color-coded quality indicators for easy interpretation\n - Supports expandable views\n - Implements time-based navigation and data filtering\n \n Visualizatoin Features:\n - Bar chart showing daily sleep duration\n - Color-coded quality indicators (Very good, Fairly good, Fairly bad, Very bad)\n - Interactive tooltips with detailed sleep information\n - Design adapting to container size\n - Dynamic Y-axis scaling based on sleep duration range\n \n Sleep Quality Categories:\n - Very good: Optimal sleep quality (green)\n - Fairly good: Good sleep quality (blue)\n - Fairly bad: Poor sleep quality (light green)\n - Very bad: Very poor sleep quality (dark green)\n \n Clinical Features:\n - Sleep duration tracking with recommended ranges\n - Quality assessment based on subjective ratings\n - Sleep consistency analysis\n - Summary statistics for physician view\n - Trend analysis over time periods\n \n Component Structure:\n - Chart Container: Main SVG container with sizing\n - Y-Axis: Duration scale with hour-based labeling\n - X-Axis: Day-of-week labels with date information\n - Data Bars: Sleep duration bars with quality color coding\n - Legend: Sleep quality explanations\n - Tooltip: Detailed sleep information on hover\n \n Essential for sleep hygiene monitoring and sleep disorder assessment.\n */\n\nimport React, { useState, useRef } from 'react';\nimport usePatientData from '../../hooks/usePatientData';\nimport useChartNavigation from '../../hooks/useChartNavigation';\nimport Legend from '../Legend';\nimport './SleepChart.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SleepChart = ({\n  patientId,\n  isExpanded,\n  onExpand,\n  viewMode = 'patient',\n  accessType = 'Admin',\n  navigation,\n  screenshotMode = false,\n  showThreeMonthSummaries = false\n}) => {\n  _s();\n  const {\n    sleepData,\n    loading,\n    error\n  } = usePatientData(patientId, 'sleep');\n  // For Patient access, force Bar Chart (remove Line Chart access).\n  // For Physician access, force Line Chart (remove Bar Chart access).\n  // Admin can toggle between both.\n  const shouldForceBarChart = accessType === 'Patient';\n  const shouldForceLineChart = accessType === 'Physician';\n  const [useLineChart, setUseLineChart] = useState(shouldForceBarChart ? false : shouldForceLineChart ? true : false); // Toggle state for chart view\n\n  // Use navigation from parent or fallback to internal navigation\n  const internalNavigation = useChartNavigation('sleep');\n  const nav = navigation || internalNavigation;\n  const {\n    start: startOfWeek,\n    end: endOfWeek\n  } = nav.getDateRange();\n  const weekData = sleepData.filter(d => d.date >= startOfWeek && d.date <= endOfWeek);\n\n  // Get previous week data\n  const prevWeekStart = new Date(startOfWeek);\n  prevWeekStart.setDate(prevWeekStart.getDate() - 7);\n  const prevWeekEnd = new Date(startOfWeek);\n  prevWeekEnd.setDate(prevWeekEnd.getDate() - 1);\n  const prevWeekData = sleepData.filter(d => d.date >= prevWeekStart && d.date <= prevWeekEnd);\n\n  // Get next week data\n  const nextWeekStart = new Date(endOfWeek);\n  nextWeekStart.setDate(nextWeekStart.getDate() + 1);\n  const nextWeekEnd = new Date(nextWeekStart);\n  nextWeekEnd.setDate(nextWeekEnd.getDate() + 6);\n  const nextWeekData = sleepData.filter(d => d.date >= nextWeekStart && d.date <= nextWeekEnd);\n\n  // Get 3-month data\n  const {\n    start: startOfThreeMonths,\n    end: endOfThreeMonths\n  } = nav.getThreeMonthRange();\n  const threeMonthData = sleepData.filter(d => d.date >= startOfThreeMonths && d.date <= endOfThreeMonths);\n  const formatDateRange = data => {\n    if (!data || data.length === 0) return '';\n    const startDate = new Date(data[0].date).toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric'\n    });\n    const endDate = new Date(data[data.length - 1].date).toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric'\n    });\n    return `${startDate} to ${endDate}`;\n  };\n  const qualityLevels = {\n    'Very good': 'var(--chart-color-sleep-very-good)',\n    'Fairly good': 'var(--chart-color-sleep-fairly-good)',\n    'Fairly bad': 'var(--chart-color-sleep-fairly-bad)',\n    'Very bad': 'var(--chart-color-sleep-very-bad)'\n  };\n  const getQualityColor = quality => qualityLevels[quality] || '#D3D3D3';\n  const legendItems = Object.entries(qualityLevels).map(([label, color]) => ({\n    label,\n    color\n  }));\n\n  // Process data for extended chart (3 weeks)\n  let extendedChartData = [];\n  if (isExpanded) {\n    // Combine all three weeks of data\n    const allWeeksData = [...prevWeekData, ...weekData, ...nextWeekData];\n\n    // Create a map of dates to sleep data for all 3 weeks\n    const dateMap = new Map();\n    allWeeksData.forEach(item => {\n      const dateKey = item.date.toDateString();\n      dateMap.set(dateKey, item);\n    });\n\n    // Generate chart data for all 21 days (3 weeks)\n    const data = [];\n    const weekLabels = ['Prev Week', 'Current Week', 'Next Week'];\n    for (let week = 0; week < 3; week++) {\n      const weekStart = week === 0 ? prevWeekStart : week === 1 ? startOfWeek : nextWeekStart;\n      for (let day = 0; day < 7; day++) {\n        const date = new Date(weekStart);\n        date.setDate(date.getDate() + day);\n        const dateKey = date.toDateString();\n        const sleepData = dateMap.get(dateKey) || {\n          hours: 0,\n          quality: 'Very bad'\n        };\n        data.push({\n          date,\n          day: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'][date.getDay()],\n          hours: sleepData.hours,\n          quality: sleepData.quality,\n          color: getQualityColor(sleepData.quality),\n          week: week,\n          weekLabel: weekLabels[week]\n        });\n      }\n    }\n    extendedChartData = data;\n  }\n\n  // Calculate summary statistics for physician view\n  let weekSummary = null;\n  if (weekData && weekData.length > 0) {\n    const totalHours = weekData.reduce((sum, day) => sum + day.hours, 0);\n    const avgHours = (totalHours / weekData.length).toFixed(1);\n\n    // Count quality levels\n    const qualityCounts = {};\n    Object.keys(qualityLevels).forEach(quality => {\n      qualityCounts[quality] = 0;\n    });\n    weekData.forEach(day => {\n      if (qualityCounts[day.quality] !== undefined) {\n        qualityCounts[day.quality]++;\n      }\n    });\n\n    // Find most common quality\n    const mostCommonQuality = Object.entries(qualityCounts).sort(([, a], [, b]) => b - a)[0];\n\n    // Calculate sleep consistency (how much variation in sleep hours)\n    const hourVariations = weekData.map(day => Math.abs(day.hours - parseFloat(avgHours)));\n    const avgVariation = (hourVariations.reduce((sum, v) => sum + v, 0) / hourVariations.length).toFixed(1);\n\n    // Sleep quality score (Very good=4, Fairly good=3, Fairly bad=2, Very bad=1)\n    const qualityScores = {\n      'Very good': 4,\n      'Fairly good': 3,\n      'Fairly bad': 2,\n      'Very bad': 1\n    };\n    const avgQualityScore = weekData.reduce((sum, day) => sum + (qualityScores[day.quality] || 0), 0) / weekData.length;\n    const qualityAssessment = avgQualityScore >= 3.5 ? 'Good' : avgQualityScore >= 2.5 ? 'Fair' : 'Poor';\n\n    // Count nights with adequate sleep (7+ hours)\n    const adequateSleepNights = weekData.filter(day => day.hours >= 7).length;\n    weekSummary = {\n      totalHours: totalHours.toFixed(1),\n      avgHours,\n      mostCommonQuality: mostCommonQuality[0],\n      mostCommonQualityCount: mostCommonQuality[1],\n      avgVariation,\n      qualityAssessment,\n      adequateSleepNights,\n      daysTracked: weekData.length\n    };\n  }\n\n  // Calculate 3-month summary statistics for physician view\n  let threeMonthSummary = null;\n  if (threeMonthData && threeMonthData.length > 0) {\n    const totalHours = threeMonthData.reduce((sum, day) => sum + day.hours, 0);\n    const avgHours = (totalHours / threeMonthData.length).toFixed(1);\n\n    // Count quality levels\n    const qualityCounts = {};\n    Object.keys(qualityLevels).forEach(quality => {\n      qualityCounts[quality] = 0;\n    });\n    threeMonthData.forEach(day => {\n      if (qualityCounts[day.quality] !== undefined) {\n        qualityCounts[day.quality]++;\n      }\n    });\n\n    // Find most common quality\n    const mostCommonQuality = Object.entries(qualityCounts).sort(([, a], [, b]) => b - a)[0];\n\n    // Calculate sleep consistency (how much variation in sleep hours)\n    const hourVariations = threeMonthData.map(day => Math.abs(day.hours - parseFloat(avgHours)));\n    const avgVariation = (hourVariations.reduce((sum, v) => sum + v, 0) / hourVariations.length).toFixed(1);\n    threeMonthSummary = {\n      totalHours: totalHours.toFixed(1),\n      avgHours,\n      mostCommonQuality: mostCommonQuality[0],\n      mostCommonQualityCount: mostCommonQuality[1],\n      avgVariation,\n      daysTracked: threeMonthData.length\n    };\n  }\n\n  // Line Chart Component for Sleep Duration\n  const SleepLineChart = ({\n    data,\n    isExpanded,\n    extendedData\n  }) => {\n    const isExtendedView = isExpanded && extendedData && extendedData.length > 0;\n    const chartData = isExtendedView ? extendedData : data;\n    if (!chartData || chartData.length === 0) return null;\n    const maxHours = chartData.length > 0 ? Math.max(...chartData.map(d => d.hours)) : 0;\n    const minHours = 0; // Always start Y-axis at 0\n    const range = Math.max(maxHours - minHours, 1); // Ensure minimum range of 1\n    const padding = Math.max(range * 0.1, 0.5); // 10% padding, minimum 0.5\n\n    const config = {\n      width: isExtendedView ? 900 : isExpanded ? 600 : 400,\n      // Wider for 3-week view\n      height: isExpanded ? 220 : 150,\n      // Reduced height since we removed week labels\n      padding: {\n        top: 20,\n        right: 30,\n        bottom: 50,\n        left: 50\n      },\n      // Reduced bottom padding\n      fontSize: {\n        yAxis: isExpanded ? 10 : 8,\n        xAxis: isExpanded ? 10 : 8\n      }\n    };\n    const chartWidth = config.width - config.padding.left - config.padding.right;\n    const chartHeight = config.height - config.padding.top - config.padding.bottom;\n    const dayWidth = chartWidth / (chartData.length - 1); // Dynamic based on data length\n\n    const getX = index => config.padding.left + index * dayWidth;\n    const getY = hours => config.padding.top + chartHeight - (hours - minHours + padding) / (range + 2 * padding) * chartHeight;\n    const pathData = chartData.map((day, index) => {\n      const x = getX(index);\n      const y = getY(day.hours);\n      return `${index === 0 ? 'M' : 'L'} ${x} ${y}`;\n    }).join(' ');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sleep-line-chart\",\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        width: \"100%\",\n        height: \"100%\",\n        viewBox: `0 0 ${config.width} ${config.height}`,\n        children: [[0, 2, 4, 6, 8, 10, 12].map(hours => {\n          if (hours > maxHours + padding) return null; // Don't show grid lines above data range\n          const y = getY(hours);\n          return /*#__PURE__*/_jsxDEV(\"g\", {\n            children: [/*#__PURE__*/_jsxDEV(\"line\", {\n              x1: config.padding.left,\n              y1: y,\n              x2: config.width - config.padding.right,\n              y2: y,\n              stroke: \"#e0e0e0\",\n              strokeWidth: \"1\",\n              strokeDasharray: \"2,2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n              x: config.padding.left - 10,\n              y: y + 3,\n              fontSize: config.fontSize.yAxis,\n              textAnchor: \"end\",\n              fill: \"var(--chart-color-text-secondary)\",\n              children: [hours, \"h\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 17\n            }, this)]\n          }, hours, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 15\n          }, this);\n        }), isExtendedView && [7, 14].map(weekIndex => {\n          const x = config.padding.left + weekIndex * dayWidth;\n          return /*#__PURE__*/_jsxDEV(\"line\", {\n            x1: x,\n            y1: config.padding.top,\n            x2: x,\n            y2: config.height - config.padding.bottom,\n            stroke: \"#ccc\",\n            strokeWidth: \"2\",\n            strokeDasharray: \"5,5\"\n          }, weekIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"path\", {\n          d: pathData,\n          fill: \"none\",\n          stroke: \"#cccccc\",\n          strokeWidth: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this), chartData.map((day, index) => {\n          const x = getX(index);\n          const y = getY(day.hours);\n          const dateNum = day.date.getDate();\n          const dayAbbr = day.day || ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'][day.date.getDay()];\n          return /*#__PURE__*/_jsxDEV(\"g\", {\n            children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n              cx: x,\n              cy: y,\n              r: \"6\",\n              fill: getQualityColor(day.quality),\n              stroke: \"#fff\",\n              strokeWidth: \"2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n              x: x,\n              y: y - 15,\n              fontSize: \"10\",\n              fill: \"#333\",\n              textAnchor: \"middle\",\n              children: [day.hours.toFixed(1), \"h\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n              x: x,\n              y: config.height - config.padding.bottom + 15,\n              fontSize: config.fontSize.xAxis,\n              textAnchor: \"middle\",\n              className: \"x-axis-day-label\",\n              children: dayAbbr\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n              x: x,\n              y: config.height - config.padding.bottom + 30,\n              fontSize: config.fontSize.xAxis - 1,\n              textAnchor: \"middle\",\n              className: \"x-axis-date-label\",\n              fill: \"var(--chart-color-text-secondary)\",\n              children: dateNum\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sleep-chart-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sleep-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"chart-title\",\n        children: \"Sleep Quality & Duration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"chart-subtitle\",\n        children: nav.getFormattedDateRange()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 11\n      }, this), accessType === 'Admin' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view-toggle\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `toggle-btn ${!useLineChart ? 'active' : ''}`,\n          onClick: () => setUseLineChart(false),\n          children: \"Bar Chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `toggle-btn ${useLineChart ? 'active' : ''}`,\n          onClick: () => setUseLineChart(true),\n          children: \"Line Chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 9\n    }, this), useLineChart ? /*#__PURE__*/_jsxDEV(SleepLineChart, {\n      data: weekData,\n      isExpanded: isExpanded,\n      extendedData: extendedChartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sleep-chart\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sleep-quality-row\",\n        children: weekData.map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sleep-quality-item\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sleep-quality-indicator\",\n            style: {\n              backgroundColor: getQualityColor(day.quality)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 19\n          }, this)\n        }, `quality-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bed-icons-row\",\n        children: weekData.map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bed-item\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bed-icon-wrapper\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              viewBox: \"0 0 486.5 225.1\",\n              className: \"bed-icon\",\n              children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M471.9,68.9c-8,0-14.5,6.5-14.5,14.5v68.6H26.1l-.6-139.3c0-7-5.8-12.7-12.8-12.7h0C5.7,0,0,5.7,0,12.8v199.6c0,7,5.7,12.8,12.7,12.8s12.8-5.7,12.8-12.8v-37h431.9v35.2c0,8,6.5,14.5,14.5,14.5s14.5-6.5,14.5-14.5v-127.1c0-8-6.5-14.5-14.5-14.5ZM483.7,210.6c0,6.5-5.3,11.8-11.8,11.8s-11.8-5.3-11.8-11.8v-38H22.7v39.7c0,5.5-4.5,10-10,10s-10-4.5-10-10V12.8C2.8,7.3,7.3,2.8,12.7,2.8h0c5.5,0,9.9,4.5,10,9.9l.6,142.1h436.8v-71.4c0-6.5,5.3-11.7,11.8-11.7s11.8,5.3,11.8,11.7v127.1Z\",\n                fill: \"#D2B48C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M29.9,94.2v54.5h425.4v-54.5H29.9ZM452.5,145.9H32.7v-48.9h419.8v48.9Z\",\n                fill: \"#e0e0e0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n                x: \"32.7\",\n                y: \"97\",\n                width: `${day.hours / 10 * 419.8}`,\n                height: \"48.9\",\n                fill: \"#FF4500\",\n                className: \"sleep-fill-rect\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M112.8,46.3h-55.4c-12.1,0-22,9.9-22,22s9.9,22,22,22h55.4c12.1,0,22-9.9,22-22s-9.9-22-22-22ZM112.8,87.5h-55.4c-10.6,0-19.2-8.6-19.2-19.2s8.6-19.2,19.2-19.2h55.4c10.6,0,19.2,8.6,19.2,19.2s-8.6,19.2-19.2,19.2Z\",\n                fill: \"#FFFFFF\",\n                stroke: \"#AAAAAA\",\n                strokeWidth: \"1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 19\n          }, this)\n        }, `bed-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sleep-info-row\",\n        children: weekData.map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sleep-info-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sleep-hours\",\n            children: [day.hours.toFixed(1), \"h\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"day-label\",\n            children: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'][(() => {\n              const date = new Date(day.date);\n              return !isNaN(date.getTime()) ? date.getDay() : 0;\n            })()]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date-label\",\n            children: (() => {\n              const date = new Date(day.date);\n              return !isNaN(date.getTime()) ? date.getDate() : 'Invalid';\n            })()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 19\n          }, this)]\n        }, `info-${index}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Legend, {\n      title: \"Sleep Quality\",\n      items: legendItems,\n      hide: screenshotMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 9\n    }, this), (viewMode === 'physician' || viewMode === 'unified') && weekSummary && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"summary-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Week Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Average Sleep:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [weekSummary.avgHours, \" hours/night\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Total Sleep:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [weekSummary.totalHours, \" hours\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Sleep Consistency:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [\"\\xB1\", weekSummary.avgVariation, \" hours variation\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Common Quality:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [weekSummary.mostCommonQuality, \" (\", weekSummary.mostCommonQualityCount, \"x)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 13\n      }, this), showThreeMonthSummaries && threeMonthSummary && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"3-Month Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Average Sleep:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [threeMonthSummary.avgHours, \" hours/night\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Total Sleep:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [threeMonthSummary.totalHours, \" hours\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Sleep Consistency:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [\"\\xB1\", threeMonthSummary.avgVariation, \" hours variation\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Common Quality:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [threeMonthSummary.mostCommonQuality, \" (\", threeMonthSummary.mostCommonQualityCount, \"x)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 380,\n    columnNumber: 7\n  }, this);\n};\n_s(SleepChart, \"d1gH6fxnIneeWSJ4zaRIoCLMxMk=\", false, function () {\n  return [usePatientData, useChartNavigation];\n});\n_c = SleepChart;\nexport default SleepChart;\nvar _c;\n$RefreshReg$(_c, \"SleepChart\");","map":{"version":3,"names":["React","useState","useRef","usePatientData","useChartNavigation","Legend","jsxDEV","_jsxDEV","SleepChart","patientId","isExpanded","onExpand","viewMode","accessType","navigation","screenshotMode","showThreeMonthSummaries","_s","sleepData","loading","error","shouldForceBarChart","shouldForceLineChart","useLineChart","setUseLineChart","internalNavigation","nav","start","startOfWeek","end","endOfWeek","getDateRange","weekData","filter","d","date","prevWeekStart","Date","setDate","getDate","prevWeekEnd","prevWeekData","nextWeekStart","nextWeekEnd","nextWeekData","startOfThreeMonths","endOfThreeMonths","getThreeMonthRange","threeMonthData","formatDateRange","data","length","startDate","toLocaleDateString","month","day","endDate","qualityLevels","getQualityColor","quality","legendItems","Object","entries","map","label","color","extendedChartData","allWeeksData","dateMap","Map","forEach","item","dateKey","toDateString","set","weekLabels","week","weekStart","get","hours","push","getDay","weekLabel","weekSummary","totalHours","reduce","sum","avgHours","toFixed","qualityCounts","keys","undefined","mostCommonQuality","sort","a","b","hourVariations","Math","abs","parseFloat","avgVariation","v","qualityScores","avgQualityScore","qualityAssessment","adequateSleepNights","mostCommonQualityCount","daysTracked","threeMonthSummary","SleepLineChart","extendedData","isExtendedView","chartData","maxHours","max","minHours","range","padding","config","width","height","top","right","bottom","left","fontSize","yAxis","xAxis","chartWidth","chartHeight","dayWidth","getX","index","getY","pathData","x","y","join","className","children","viewBox","x1","y1","x2","y2","stroke","strokeWidth","strokeDasharray","fileName","_jsxFileName","lineNumber","columnNumber","textAnchor","fill","weekIndex","dateNum","dayAbbr","cx","cy","r","getFormattedDateRange","onClick","style","backgroundColor","isNaN","getTime","title","items","hide","_c","$RefreshReg$"],"sources":["C:/Users/Matteo/Working_Folder/a. MCC Thesis Local Experimental/PGHD_Visualization_Dashboard/src/components/patient_charts/SleepChart.js"],"sourcesContent":["/*\n SleepChart.js - Sleep Pattern Monitoring Visualization\n \n This component provides comprehensive sleep tracking:\n - Sleep duration and quality rating visualization\n - Weekly sleep pattern analysis\n - Color-coded sleep quality indicators\n - Interactive tooltips with sleep details\n - Navigation controls for time periods\n - Integration with patient data and chart navigation\n \n Architecture:\n - Uses custom SVG for bar chart visualization\n - Implements sleep quality categorization system\n - Provides color-coded quality indicators for easy interpretation\n - Supports expandable views\n - Implements time-based navigation and data filtering\n \n Visualizatoin Features:\n - Bar chart showing daily sleep duration\n - Color-coded quality indicators (Very good, Fairly good, Fairly bad, Very bad)\n - Interactive tooltips with detailed sleep information\n - Design adapting to container size\n - Dynamic Y-axis scaling based on sleep duration range\n \n Sleep Quality Categories:\n - Very good: Optimal sleep quality (green)\n - Fairly good: Good sleep quality (blue)\n - Fairly bad: Poor sleep quality (light green)\n - Very bad: Very poor sleep quality (dark green)\n \n Clinical Features:\n - Sleep duration tracking with recommended ranges\n - Quality assessment based on subjective ratings\n - Sleep consistency analysis\n - Summary statistics for physician view\n - Trend analysis over time periods\n \n Component Structure:\n - Chart Container: Main SVG container with sizing\n - Y-Axis: Duration scale with hour-based labeling\n - X-Axis: Day-of-week labels with date information\n - Data Bars: Sleep duration bars with quality color coding\n - Legend: Sleep quality explanations\n - Tooltip: Detailed sleep information on hover\n \n Essential for sleep hygiene monitoring and sleep disorder assessment.\n */\n\nimport React, { useState, useRef } from 'react';\n\nimport usePatientData from '../../hooks/usePatientData';\nimport useChartNavigation from '../../hooks/useChartNavigation';\nimport Legend from '../Legend';\nimport './SleepChart.css';\n\n\nconst SleepChart = ({ patientId, isExpanded, onExpand, viewMode = 'patient', accessType = 'Admin', navigation, screenshotMode = false, showThreeMonthSummaries = false }) => {\n  const { sleepData, loading, error } = usePatientData(patientId, 'sleep');\n  // For Patient access, force Bar Chart (remove Line Chart access).\n  // For Physician access, force Line Chart (remove Bar Chart access).\n  // Admin can toggle between both.\n  const shouldForceBarChart = accessType === 'Patient';\n  const shouldForceLineChart = accessType === 'Physician';\n  const [useLineChart, setUseLineChart] = useState(\n    shouldForceBarChart ? false : (shouldForceLineChart ? true : false)\n  ); // Toggle state for chart view\n  \n  // Use navigation from parent or fallback to internal navigation\n  const internalNavigation = useChartNavigation('sleep');\n  const nav = navigation || internalNavigation;\n\n  const { start: startOfWeek, end: endOfWeek } = nav.getDateRange();\n  const weekData = sleepData.filter(d => d.date >= startOfWeek && d.date <= endOfWeek);\n\n  // Get previous week data\n  const prevWeekStart = new Date(startOfWeek);\n  prevWeekStart.setDate(prevWeekStart.getDate() - 7);\n  const prevWeekEnd = new Date(startOfWeek);\n  prevWeekEnd.setDate(prevWeekEnd.getDate() - 1);\n  const prevWeekData = sleepData.filter(d => d.date >= prevWeekStart && d.date <= prevWeekEnd);\n\n  // Get next week data\n  const nextWeekStart = new Date(endOfWeek);\n  nextWeekStart.setDate(nextWeekStart.getDate() + 1);\n  const nextWeekEnd = new Date(nextWeekStart);\n  nextWeekEnd.setDate(nextWeekEnd.getDate() + 6);\n  const nextWeekData = sleepData.filter(d => d.date >= nextWeekStart && d.date <= nextWeekEnd);\n\n  // Get 3-month data\n  const { start: startOfThreeMonths, end: endOfThreeMonths } = nav.getThreeMonthRange();\n  const threeMonthData = sleepData.filter(d => d.date >= startOfThreeMonths && d.date <= endOfThreeMonths);\n\n  const formatDateRange = (data) => {\n    if (!data || data.length === 0) return '';\n    const startDate = new Date(data[0].date).toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\n    const endDate = new Date(data[data.length - 1].date).toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\n    return `${startDate} to ${endDate}`;\n  };\n\n  const qualityLevels = {\n    'Very good': 'var(--chart-color-sleep-very-good)',\n    'Fairly good': 'var(--chart-color-sleep-fairly-good)',\n    'Fairly bad': 'var(--chart-color-sleep-fairly-bad)',\n    'Very bad': 'var(--chart-color-sleep-very-bad)',\n  };\n\n  const getQualityColor = (quality) => qualityLevels[quality] || '#D3D3D3';\n\n  const legendItems = Object.entries(qualityLevels).map(([label, color]) => ({\n    label,\n    color,\n  }));\n\n  // Process data for extended chart (3 weeks)\n  let extendedChartData = [];\n  if (isExpanded) {\n\n    // Combine all three weeks of data\n    const allWeeksData = [...prevWeekData, ...weekData, ...nextWeekData];\n    \n    // Create a map of dates to sleep data for all 3 weeks\n    const dateMap = new Map();\n    allWeeksData.forEach(item => {\n      const dateKey = item.date.toDateString();\n      dateMap.set(dateKey, item);\n    });\n\n    // Generate chart data for all 21 days (3 weeks)\n    const data = [];\n    const weekLabels = ['Prev Week', 'Current Week', 'Next Week'];\n    \n    for (let week = 0; week < 3; week++) {\n      const weekStart = week === 0 ? prevWeekStart : week === 1 ? startOfWeek : nextWeekStart;\n      \n      for (let day = 0; day < 7; day++) {\n        const date = new Date(weekStart);\n        date.setDate(date.getDate() + day);\n        const dateKey = date.toDateString();\n        const sleepData = dateMap.get(dateKey) || { hours: 0, quality: 'Very bad' };\n        \n        data.push({\n          date,\n          day: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'][date.getDay()],\n          hours: sleepData.hours,\n          quality: sleepData.quality,\n          color: getQualityColor(sleepData.quality),\n          week: week,\n          weekLabel: weekLabels[week]\n        });\n      }\n    }\n\n    extendedChartData = data;\n  }\n\n  // Calculate summary statistics for physician view\n  let weekSummary = null;\n  if (weekData && weekData.length > 0) {\n\n    const totalHours = weekData.reduce((sum, day) => sum + day.hours, 0);\n    const avgHours = (totalHours / weekData.length).toFixed(1);\n\n    // Count quality levels\n    const qualityCounts = {};\n    Object.keys(qualityLevels).forEach(quality => {\n      qualityCounts[quality] = 0;\n    });\n\n    weekData.forEach(day => {\n      if (qualityCounts[day.quality] !== undefined) {\n        qualityCounts[day.quality]++;\n      }\n    });\n\n    // Find most common quality\n    const mostCommonQuality = Object.entries(qualityCounts)\n      .sort(([,a], [,b]) => b - a)[0];\n\n    // Calculate sleep consistency (how much variation in sleep hours)\n    const hourVariations = weekData.map(day => Math.abs(day.hours - parseFloat(avgHours)));\n    const avgVariation = (hourVariations.reduce((sum, v) => sum + v, 0) / hourVariations.length).toFixed(1);\n\n    // Sleep quality score (Very good=4, Fairly good=3, Fairly bad=2, Very bad=1)\n    const qualityScores = {\n      'Very good': 4,\n      'Fairly good': 3,\n      'Fairly bad': 2,\n      'Very bad': 1\n    };\n    const avgQualityScore = weekData.reduce((sum, day) => sum + (qualityScores[day.quality] || 0), 0) / weekData.length;\n    const qualityAssessment = avgQualityScore >= 3.5 ? 'Good' : avgQualityScore >= 2.5 ? 'Fair' : 'Poor';\n\n    // Count nights with adequate sleep (7+ hours)\n    const adequateSleepNights = weekData.filter(day => day.hours >= 7).length;\n\n    weekSummary = {\n      totalHours: totalHours.toFixed(1),\n      avgHours,\n      mostCommonQuality: mostCommonQuality[0],\n      mostCommonQualityCount: mostCommonQuality[1],\n      avgVariation,\n      qualityAssessment,\n      adequateSleepNights,\n      daysTracked: weekData.length\n    };\n  }\n\n  // Calculate 3-month summary statistics for physician view\n  let threeMonthSummary = null;\n  if (threeMonthData && threeMonthData.length > 0) {\n\n    const totalHours = threeMonthData.reduce((sum, day) => sum + day.hours, 0);\n    const avgHours = (totalHours / threeMonthData.length).toFixed(1);\n\n    // Count quality levels\n    const qualityCounts = {};\n    Object.keys(qualityLevels).forEach(quality => {\n      qualityCounts[quality] = 0;\n    });\n\n    threeMonthData.forEach(day => {\n      if (qualityCounts[day.quality] !== undefined) {\n        qualityCounts[day.quality]++;\n      }\n    });\n\n    // Find most common quality\n    const mostCommonQuality = Object.entries(qualityCounts)\n      .sort(([,a], [,b]) => b - a)[0];\n\n    // Calculate sleep consistency (how much variation in sleep hours)\n    const hourVariations = threeMonthData.map(day => Math.abs(day.hours - parseFloat(avgHours)));\n    const avgVariation = (hourVariations.reduce((sum, v) => sum + v, 0) / hourVariations.length).toFixed(1);\n\n    threeMonthSummary = {\n      totalHours: totalHours.toFixed(1),\n      avgHours,\n      mostCommonQuality: mostCommonQuality[0],\n      mostCommonQualityCount: mostCommonQuality[1],\n      avgVariation,\n      daysTracked: threeMonthData.length\n    };\n  }\n\n  // Line Chart Component for Sleep Duration\n  const SleepLineChart = ({ data, isExpanded, extendedData }) => {\n    const isExtendedView = isExpanded && extendedData && extendedData.length > 0;\n    const chartData = isExtendedView ? extendedData : data;\n    \n    if (!chartData || chartData.length === 0) return null;\n\n    const maxHours = chartData.length > 0 ? Math.max(...chartData.map(d => d.hours)) : 0;\n    const minHours = 0; // Always start Y-axis at 0\n    const range = Math.max(maxHours - minHours, 1); // Ensure minimum range of 1\n    const padding = Math.max(range * 0.1, 0.5); // 10% padding, minimum 0.5\n    \n    const config = {\n      width: isExtendedView ? 900 : (isExpanded ? 600 : 400), // Wider for 3-week view\n      height: isExpanded ? 220 : 150, // Reduced height since we removed week labels\n      padding: { top: 20, right: 30, bottom: 50, left: 50 }, // Reduced bottom padding\n      fontSize: {\n        yAxis: isExpanded ? 10 : 8,\n        xAxis: isExpanded ? 10 : 8,\n      }\n    };\n\n    const chartWidth = config.width - config.padding.left - config.padding.right;\n    const chartHeight = config.height - config.padding.top - config.padding.bottom;\n    const dayWidth = chartWidth / (chartData.length - 1); // Dynamic based on data length\n\n    const getX = (index) => config.padding.left + (index * dayWidth);\n    const getY = (hours) => config.padding.top + chartHeight - ((hours - minHours + padding) / (range + 2 * padding)) * chartHeight;\n\n    const pathData = chartData.map((day, index) => {\n      const x = getX(index);\n      const y = getY(day.hours);\n      return `${index === 0 ? 'M' : 'L'} ${x} ${y}`;\n    }).join(' ');\n\n    return (\n      <div className=\"sleep-line-chart\">\n        <svg width=\"100%\" height=\"100%\" viewBox={`0 0 ${config.width} ${config.height}`}>\n          {/* Grid lines */}\n          {[0, 2, 4, 6, 8, 10, 12].map(hours => {\n            if (hours > maxHours + padding) return null; // Don't show grid lines above data range\n            const y = getY(hours);\n            return (\n              <g key={hours}>\n                <line \n                  x1={config.padding.left} \n                  y1={y} \n                  x2={config.width - config.padding.right} \n                  y2={y} \n                  stroke=\"#e0e0e0\" \n                  strokeWidth=\"1\" \n                  strokeDasharray=\"2,2\"\n                />\n                <text \n                  x={config.padding.left - 10} \n                  y={y + 3} \n                  fontSize={config.fontSize.yAxis} \n                  textAnchor=\"end\" \n                  fill=\"var(--chart-color-text-secondary)\"\n                >\n                  {hours}h\n                </text>\n              </g>\n            );\n          })}\n\n          {/* Week separators for extended view */}\n          {isExtendedView && [7, 14].map(weekIndex => {\n            const x = config.padding.left + (weekIndex * dayWidth);\n            return (\n              <line \n                key={weekIndex}\n                x1={x} \n                y1={config.padding.top} \n                x2={x} \n                y2={config.height - config.padding.bottom} \n                stroke=\"#ccc\" \n                strokeWidth=\"2\" \n                strokeDasharray=\"5,5\"\n              />\n            );\n          })}\n          \n          {/* Line path */}\n          <path d={pathData} fill=\"none\" stroke=\"#cccccc\" strokeWidth=\"3\" />\n          \n          {/* Data points */}\n          {chartData.map((day, index) => {\n            const x = getX(index);\n            const y = getY(day.hours);\n            const dateNum = day.date.getDate();\n            const dayAbbr = day.day || ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'][day.date.getDay()];\n            \n            return (\n              <g key={index}>\n                <circle \n                  cx={x} \n                  cy={y} \n                  r=\"6\" \n                  fill={getQualityColor(day.quality)}\n                  stroke=\"#fff\"\n                  strokeWidth=\"2\"\n                />\n                <text x={x} y={y - 15} fontSize=\"10\" fill=\"#333\" textAnchor=\"middle\">\n                  {day.hours.toFixed(1)}h\n                </text>\n                <text \n                  x={x} \n                  y={config.height - config.padding.bottom + 15} \n                  fontSize={config.fontSize.xAxis} \n                  textAnchor=\"middle\" \n                  className=\"x-axis-day-label\"\n                >\n                  {dayAbbr}\n                </text>\n                <text \n                  x={x} \n                  y={config.height - config.padding.bottom + 30} \n                  fontSize={config.fontSize.xAxis - 1} \n                  textAnchor=\"middle\" \n                  className=\"x-axis-date-label\"\n                  fill=\"var(--chart-color-text-secondary)\"\n                >\n                  {dateNum}\n                </text>\n              </g>\n            );\n          })}\n        </svg>\n      </div>\n    );\n  };\n\n  return (\n      <div className=\"sleep-chart-content\">\n        <div className=\"sleep-header\">\n          <h3 className=\"chart-title\">Sleep Quality & Duration</h3>\n          <h4 className=\"chart-subtitle\">{nav.getFormattedDateRange()}</h4>\n          \n          {/* View Toggle - Hide for Patient and Physician, show both for Admin */}\n          {accessType === 'Admin' && (\n            <div className=\"view-toggle\">\n              <button \n                className={`toggle-btn ${!useLineChart ? 'active' : ''}`}\n                onClick={() => setUseLineChart(false)}\n              >\n                Bar Chart\n              </button>\n              <button \n                className={`toggle-btn ${useLineChart ? 'active' : ''}`}\n                onClick={() => setUseLineChart(true)}\n              >\n                Line Chart\n              </button>\n            </div>\n          )}\n        </div>\n        \n        {/* Conditional Chart Rendering */}\n        {useLineChart ? (\n          <SleepLineChart \n            data={weekData} \n            isExpanded={isExpanded} \n            extendedData={extendedChartData}\n          />\n        ) : (\n          <div className=\"sleep-chart\">\n            {/* Sleep Quality Indicators Row */}\n            <div className=\"sleep-quality-row\">\n              {weekData.map((day, index) => (\n                <div key={`quality-${index}`} className=\"sleep-quality-item\">\n                  <div \n                    className=\"sleep-quality-indicator\"\n                    style={{ backgroundColor: getQualityColor(day.quality) }}\n                  ></div>\n                </div>\n              ))}\n            </div>\n            \n            {/* Bed Icons Row */}\n            <div className=\"bed-icons-row\">\n              {weekData.map((day, index) => (\n                <div key={`bed-${index}`} className=\"bed-item\">\n                  <div className=\"bed-icon-wrapper\">\n                    <svg viewBox=\"0 0 486.5 225.1\" className=\"bed-icon\">\n                      <path d=\"M471.9,68.9c-8,0-14.5,6.5-14.5,14.5v68.6H26.1l-.6-139.3c0-7-5.8-12.7-12.8-12.7h0C5.7,0,0,5.7,0,12.8v199.6c0,7,5.7,12.8,12.7,12.8s12.8-5.7,12.8-12.8v-37h431.9v35.2c0,8,6.5,14.5,14.5,14.5s14.5-6.5,14.5-14.5v-127.1c0-8-6.5-14.5-14.5-14.5ZM483.7,210.6c0,6.5-5.3,11.8-11.8,11.8s-11.8-5.3-11.8-11.8v-38H22.7v39.7c0,5.5-4.5,10-10,10s-10-4.5-10-10V12.8C2.8,7.3,7.3,2.8,12.7,2.8h0c5.5,0,9.9,4.5,10,9.9l.6,142.1h436.8v-71.4c0-6.5,5.3-11.7,11.8-11.7s11.8,5.3,11.8,11.7v127.1Z\" fill=\"#D2B48C\"/>\n                      <path d=\"M29.9,94.2v54.5h425.4v-54.5H29.9ZM452.5,145.9H32.7v-48.9h419.8v48.9Z\" fill=\"#e0e0e0\"/>\n                      <rect x=\"32.7\" y=\"97\" width={`${(day.hours / 10) * 419.8}`} height=\"48.9\" fill=\"#FF4500\" className=\"sleep-fill-rect\" />\n                      <path d=\"M112.8,46.3h-55.4c-12.1,0-22,9.9-22,22s9.9,22,22,22h55.4c12.1,0,22-9.9,22-22s-9.9-22-22-22ZM112.8,87.5h-55.4c-10.6,0-19.2-8.6-19.2-19.2s8.6-19.2,19.2-19.2h55.4c10.6,0,19.2,8.6,19.2,19.2s-8.6,19.2-19.2,19.2Z\" fill=\"#FFFFFF\" stroke=\"#AAAAAA\" strokeWidth=\"1\"/>\n                    </svg>\n                  </div>\n                </div>\n              ))}\n            </div>\n            \n            {/* Sleep Information Row */}\n            <div className=\"sleep-info-row\">\n              {weekData.map((day, index) => (\n                <div key={`info-${index}`} className=\"sleep-info-item\">\n                  <div className=\"sleep-hours\">{day.hours.toFixed(1)}h</div>\n                  <div className=\"day-label\">{['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'][(() => {\n                    const date = new Date(day.date);\n                    return !isNaN(date.getTime()) ? date.getDay() : 0;\n                  })()]}</div>\n                  <div className=\"date-label\">{(() => {\n                    const date = new Date(day.date);\n                    return !isNaN(date.getTime()) ? date.getDate() : 'Invalid';\n                  })()}</div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n        \n        <Legend title=\"Sleep Quality\" items={legendItems} hide={screenshotMode} />\n\n        {/* Show summary for physician/unified view */}\n        {(viewMode === 'physician' || viewMode === 'unified') && weekSummary && (\n          <div className=\"summary-container\">\n            <div className=\"chart-summary\">\n              <h4>Week Summary</h4>\n              <div className=\"summary-stats\">\n                <div className=\"stat-item\">\n                  <span className=\"stat-label\">Average Sleep:</span>\n                  <span className=\"stat-value\">\n                    {weekSummary.avgHours} hours/night\n                  </span>\n                </div>\n                <div className=\"stat-item\">\n                  <span className=\"stat-label\">Total Sleep:</span>\n                  <span className=\"stat-value\">\n                    {weekSummary.totalHours} hours\n                  </span>\n                </div>\n                <div className=\"stat-item\">\n                  <span className=\"stat-label\">Sleep Consistency:</span>\n                  <span className=\"stat-value\">\n                    ±{weekSummary.avgVariation} hours variation\n                  </span>\n                </div>\n\n                <div className=\"stat-item\">\n                  <span className=\"stat-label\">Common Quality:</span>\n                  <span className=\"stat-value\">\n                    {weekSummary.mostCommonQuality} ({weekSummary.mostCommonQualityCount}x)\n                  </span>\n                </div>\n\n              </div>\n            </div>\n            \n            {showThreeMonthSummaries && threeMonthSummary && (\n              <div className=\"chart-summary\">\n                <h4>3-Month Summary</h4>\n                <div className=\"summary-stats\">\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">Average Sleep:</span>\n                    <span className=\"stat-value\">\n                      {threeMonthSummary.avgHours} hours/night\n                    </span>\n                  </div>\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">Total Sleep:</span>\n                    <span className=\"stat-value\">\n                      {threeMonthSummary.totalHours} hours\n                    </span>\n                  </div>\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">Sleep Consistency:</span>\n                    <span className=\"stat-value\">\n                      ±{threeMonthSummary.avgVariation} hours variation\n                    </span>\n                  </div>\n\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">Common Quality:</span>\n                    <span className=\"stat-value\">\n                      {threeMonthSummary.mostCommonQuality} ({threeMonthSummary.mostCommonQualityCount}x)\n                    </span>\n                  </div>\n\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n  );\n};\n\nexport default SleepChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}