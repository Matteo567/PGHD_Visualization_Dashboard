{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matteo\\\\Working_Folder\\\\a. MCC Thesis Local\\\\MCC_digital_health_data_visualizations\\\\src\\\\components\\\\ui\\\\ErrorMessage.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Card from './Card';\nimport './ErrorMessage.css';\n\n/**\r\n * Error message component with retry functionality\r\n * \r\n * @param {Object} props\r\n * @param {string} props.title - Error title\r\n * @param {string} props.message - Detailed error message\r\n * @param {Function} props.onRetry - Optional retry function\r\n * @param {string} props.type - Error type: 'error', 'warning', 'info'\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ErrorMessage({\n  title = 'Something went wrong',\n  message,\n  onRetry = null,\n  type = 'error'\n}) {\n  // Get appropriate icon for error type\n  const getIcon = () => {\n    switch (type) {\n      case 'warning':\n        return '‚ö†Ô∏è';\n      case 'info':\n        return '‚ÑπÔ∏è';\n      default:\n        return '‚ùå';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: `error-message ${type}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-icon\",\n        children: getIcon()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-text\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"error-title\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-details\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), onRetry && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onRetry,\n        className: \"retry-button\",\n        \"aria-label\": \"Retry loading data\",\n        children: \"\\uD83D\\uDD04 Try Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_c = ErrorMessage;\nErrorMessage.propTypes = {\n  title: PropTypes.string,\n  message: PropTypes.string,\n  onRetry: PropTypes.func,\n  type: PropTypes.oneOf(['error', 'warning', 'info'])\n};\nexport default ErrorMessage;\nvar _c;\n$RefreshReg$(_c, \"ErrorMessage\");","map":{"version":3,"names":["React","PropTypes","Card","jsxDEV","_jsxDEV","ErrorMessage","title","message","onRetry","type","getIcon","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","propTypes","string","func","oneOf","$RefreshReg$"],"sources":["C:/Users/Matteo/Working_Folder/a. MCC Thesis Local/MCC_digital_health_data_visualizations/src/components/ui/ErrorMessage.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Card from './Card';\r\nimport './ErrorMessage.css';\r\n\r\n/**\r\n * Error message component with retry functionality\r\n * \r\n * @param {Object} props\r\n * @param {string} props.title - Error title\r\n * @param {string} props.message - Detailed error message\r\n * @param {Function} props.onRetry - Optional retry function\r\n * @param {string} props.type - Error type: 'error', 'warning', 'info'\r\n */\r\nfunction ErrorMessage({ \r\n  title = 'Something went wrong', \r\n  message, \r\n  onRetry = null,\r\n  type = 'error'\r\n}) {\r\n  // Get appropriate icon for error type\r\n  const getIcon = () => {\r\n    switch (type) {\r\n      case 'warning': return '‚ö†Ô∏è';\r\n      case 'info': return '‚ÑπÔ∏è';\r\n      default: return '‚ùå';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card className={`error-message ${type}`}>\r\n      <div className=\"error-content\">\r\n        <div className=\"error-icon\">\r\n          {getIcon()}\r\n        </div>\r\n        <div className=\"error-text\">\r\n          <h4 className=\"error-title\">{title}</h4>\r\n          {message && (\r\n            <p className=\"error-details\">{message}</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n      \r\n      {onRetry && (\r\n        <div className=\"error-actions\">\r\n          <button \r\n            onClick={onRetry}\r\n            className=\"retry-button\"\r\n            aria-label=\"Retry loading data\"\r\n          >\r\n            üîÑ Try Again\r\n          </button>\r\n        </div>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n\r\nErrorMessage.propTypes = {\r\n  title: PropTypes.string,\r\n  message: PropTypes.string,\r\n  onRetry: PropTypes.func,\r\n  type: PropTypes.oneOf(['error', 'warning', 'info'])\r\n};\r\n\r\nexport default ErrorMessage;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAO,oBAAoB;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA,SAAAC,MAAA,IAAAC,OAAA;AASA,SAASC,YAAYA,CAAC;EACpBC,KAAK,GAAG,sBAAsB;EAC9BC,OAAO;EACPC,OAAO,GAAG,IAAI;EACdC,IAAI,GAAG;AACT,CAAC,EAAE;EACD;EACA,MAAMC,OAAO,GAAGA,CAAA,KAAM;IACpB,QAAQD,IAAI;MACV,KAAK,SAAS;QAAE,OAAO,IAAI;MAC3B,KAAK,MAAM;QAAE,OAAO,IAAI;MACxB;QAAS,OAAO,GAAG;IACrB;EACF,CAAC;EAED,oBACEL,OAAA,CAACF,IAAI;IAACS,SAAS,EAAE,iBAAiBF,IAAI,EAAG;IAAAG,QAAA,gBACvCR,OAAA;MAAKO,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BR,OAAA;QAAKO,SAAS,EAAC,YAAY;QAAAC,QAAA,EACxBF,OAAO,CAAC;MAAC;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC,eACNZ,OAAA;QAAKO,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzBR,OAAA;UAAIO,SAAS,EAAC,aAAa;UAAAC,QAAA,EAAEN;QAAK;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EACvCT,OAAO,iBACNH,OAAA;UAAGO,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAEL;QAAO;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAC1C;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAELR,OAAO,iBACNJ,OAAA;MAAKO,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC5BR,OAAA;QACEa,OAAO,EAAET,OAAQ;QACjBG,SAAS,EAAC,cAAc;QACxB,cAAW,oBAAoB;QAAAC,QAAA,EAChC;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEX;AAACE,EAAA,GA1CQb,YAAY;AA4CrBA,YAAY,CAACc,SAAS,GAAG;EACvBb,KAAK,EAAEL,SAAS,CAACmB,MAAM;EACvBb,OAAO,EAAEN,SAAS,CAACmB,MAAM;EACzBZ,OAAO,EAAEP,SAAS,CAACoB,IAAI;EACvBZ,IAAI,EAAER,SAAS,CAACqB,KAAK,CAAC,CAAC,OAAO,EAAE,SAAS,EAAE,MAAM,CAAC;AACpD,CAAC;AAED,eAAejB,YAAY;AAAC,IAAAa,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}