{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matteo\\\\Working_Folder\\\\a. MCC Thesis Local Experimental\\\\PGHD_Visualization_Dashboard\\\\src\\\\HealthDashboard.js\",\n  _s = $RefreshSig$();\n/*\r\n HealthDashboard.js - Unified Health Dashboard Component\r\n \r\n This component provides a unified health dashboard that combines the best features\r\n from both patient and physician dashboards. It's designed to be used by both\r\n patients and healthcare providers with a clean, accessible interface.\r\n \r\n Features:\r\n - Patient information display with QR code access\r\n - Week summaries always visible for better health tracking\r\n - Toggle for 3-month summaries for long-term trend analysis\r\n - Exercise visualization with both activity breakdown and weekly goals\r\n - Clean, patient-friendly design with professional functionality\r\n - Screenshot mode support for documentation\r\n \r\n Architecture:\r\n - Uses custom hooks for data management, visualization handling, and navigation\r\n - Implements expandable chart views\r\n - Provides educational information for patients\r\n - Handles loading and error states gracefully\r\n - Includes summary statistics for comprehensive health monitoring\r\n \r\n Custom Hooks Used:\r\n - usePatientData: Manages patient data fetching and caching\r\n - useVisualizations: Handles visualization configuration and availability\r\n - useChartNavigation: Manages time-based navigation for each chart type\r\n \r\n Component Structure:\r\n - PatientInfoCard: Displays patient demographics and medication information\r\n - QR Code Section: Provides access to patient dashboard\r\n - Summary Toggle: Controls visibility of 3-month summaries\r\n - DashboardGrid: Renders the chart grid with navigation and expansion controls\r\n - Individual chart components for each health metric\r\n \r\n State Management:\r\n - Uses custom hooks for centralized state management\r\n - Handles chart expansion state\r\n - Manages navigation state for each chart type independently\r\n - Controls summary visibility with toggle state\r\n */\n\nimport React from 'react';\nimport usePatientData from './hooks/usePatientData';\nimport useVisualizations from './hooks/useVisualizations';\nimport useChartNavigation from './hooks/useChartNavigation';\nimport useDashboardState from './hooks/useDashboardState';\nimport PatientInfoCard from './components/PatientInfoCard';\nimport DashboardGrid from './components/DashboardGrid';\nimport Placeholder from './components/ui/Placeholder';\nimport Switch from './components/ui/Switch';\nimport './HealthDashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HealthDashboard = ({\n  patientId,\n  accessType = 'Admin',\n  screenshotMode = false\n}) => {\n  _s();\n  const {\n    data,\n    loading,\n    error\n  } = usePatientData(patientId);\n  const {\n    allVisualizations,\n    availableVisualizations: allAvailableVisualizations,\n    selectedVisualizations\n  } = useVisualizations('patient', data);\n\n  // Filter visualizations based on access type\n  let availableVisualizations = {\n    ...allAvailableVisualizations\n  };\n  if (accessType === 'Physician') {\n    // Physicians don't see meal contents chart\n    const {\n      mealContents,\n      ...rest\n    } = availableVisualizations;\n    availableVisualizations = rest;\n  }\n\n  // Use dashboard state for chart expansion and summary toggles\n  const {\n    expandedChart,\n    showThreeMonthSummaries,\n    toggleChart,\n    toggleThreeMonthSummaries\n  } = useDashboardState();\n\n  // Create shared navigation for all charts (all use week navigation except mood uses month)\n  const sharedNavigation = useChartNavigation('glucose');\n  const chartNavigation = {\n    glucose: sharedNavigation,\n    bloodPressure: sharedNavigation,\n    exercise: sharedNavigation,\n    sleep: sharedNavigation,\n    pain: sharedNavigation,\n    mood: sharedNavigation,\n    mealContents: sharedNavigation\n  };\n\n  // Render visualization with unified view mode\n  const renderVisualizationWithMode = (visualizationType, boxId) => {\n    if (!patientId) {\n      return /*#__PURE__*/_jsxDEV(Placeholder, {\n        message: \"Please select a patient to view data.\",\n        type: \"select-patient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 14\n      }, this);\n    }\n    const viz = allVisualizations[visualizationType];\n    if (!viz) {\n      return /*#__PURE__*/_jsxDEV(Placeholder, {\n        message: \"Invalid visualization\",\n        type: \"error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 14\n      }, this);\n    }\n    const Component = viz.component;\n    const isExpanded = expandedChart === boxId;\n    const navigation = chartNavigation[visualizationType];\n    return /*#__PURE__*/_jsxDEV(Component, {\n      patientId: patientId,\n      isExpanded: isExpanded,\n      onExpand: () => toggleChart(boxId),\n      viewMode: \"unified\" // New unified view mode\n      ,\n      accessType: accessType,\n      navigation: navigation,\n      screenshotMode: screenshotMode,\n      showThreeMonthSummaries: showThreeMonthSummaries // Pass summary toggle state\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 12\n    }, this);\n  };\n  const patientInfo = data === null || data === void 0 ? void 0 : data.patientInfo;\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading-screen\",\n    children: \"Loading patient data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error-screen\",\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"health-dashboard\",\n    children: [!screenshotMode && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(PatientInfoCard, {\n        patientInfo: patientInfo,\n        loading: loading,\n        error: error,\n        variant: \"unified\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"qr-code-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Access Health Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Scan QR code for quick access\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `${process.env.PUBLIC_URL}/Public_dashboard_QR_code.png`,\n            alt: \"QR Code for PGHD Dashboard\",\n            className: \"qr-code-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-toggle-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Summary Options\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Switch, {\n            checked: showThreeMonthSummaries,\n            onChange: toggleThreeMonthSummaries,\n            leftLabel: \"Week Only\",\n            rightLabel: \"Include 3-Month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"toggle-description\",\n            children: showThreeMonthSummaries ? \"Showing both week and 3-month summaries for comprehensive health tracking\" : \"Showing week summaries only for focused current health monitoring\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DashboardGrid, {\n      viewMode: \"unified\",\n      availableVisualizations: availableVisualizations,\n      allVisualizations: allVisualizations,\n      onExpand: toggleChart,\n      expandedItem: expandedChart,\n      renderVisualization: renderVisualizationWithMode,\n      chartNavigation: chartNavigation,\n      screenshotMode: screenshotMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n_s(HealthDashboard, \"QUYYZqmocqvtGp6ME812Krkwbn0=\", false, function () {\n  return [usePatientData, useVisualizations, useDashboardState, useChartNavigation];\n});\n_c = HealthDashboard;\nexport default HealthDashboard;\nvar _c;\n$RefreshReg$(_c, \"HealthDashboard\");","map":{"version":3,"names":["React","usePatientData","useVisualizations","useChartNavigation","useDashboardState","PatientInfoCard","DashboardGrid","Placeholder","Switch","jsxDEV","_jsxDEV","HealthDashboard","patientId","accessType","screenshotMode","_s","data","loading","error","allVisualizations","availableVisualizations","allAvailableVisualizations","selectedVisualizations","mealContents","rest","expandedChart","showThreeMonthSummaries","toggleChart","toggleThreeMonthSummaries","sharedNavigation","chartNavigation","glucose","bloodPressure","exercise","sleep","pain","mood","renderVisualizationWithMode","visualizationType","boxId","message","type","fileName","_jsxFileName","lineNumber","columnNumber","viz","Component","component","isExpanded","navigation","onExpand","viewMode","patientInfo","className","children","variant","src","process","env","PUBLIC_URL","alt","checked","onChange","leftLabel","rightLabel","expandedItem","renderVisualization","_c","$RefreshReg$"],"sources":["C:/Users/Matteo/Working_Folder/a. MCC Thesis Local Experimental/PGHD_Visualization_Dashboard/src/HealthDashboard.js"],"sourcesContent":["/*\r\n HealthDashboard.js - Unified Health Dashboard Component\r\n \r\n This component provides a unified health dashboard that combines the best features\r\n from both patient and physician dashboards. It's designed to be used by both\r\n patients and healthcare providers with a clean, accessible interface.\r\n \r\n Features:\r\n - Patient information display with QR code access\r\n - Week summaries always visible for better health tracking\r\n - Toggle for 3-month summaries for long-term trend analysis\r\n - Exercise visualization with both activity breakdown and weekly goals\r\n - Clean, patient-friendly design with professional functionality\r\n - Screenshot mode support for documentation\r\n \r\n Architecture:\r\n - Uses custom hooks for data management, visualization handling, and navigation\r\n - Implements expandable chart views\r\n - Provides educational information for patients\r\n - Handles loading and error states gracefully\r\n - Includes summary statistics for comprehensive health monitoring\r\n \r\n Custom Hooks Used:\r\n - usePatientData: Manages patient data fetching and caching\r\n - useVisualizations: Handles visualization configuration and availability\r\n - useChartNavigation: Manages time-based navigation for each chart type\r\n \r\n Component Structure:\r\n - PatientInfoCard: Displays patient demographics and medication information\r\n - QR Code Section: Provides access to patient dashboard\r\n - Summary Toggle: Controls visibility of 3-month summaries\r\n - DashboardGrid: Renders the chart grid with navigation and expansion controls\r\n - Individual chart components for each health metric\r\n \r\n State Management:\r\n - Uses custom hooks for centralized state management\r\n - Handles chart expansion state\r\n - Manages navigation state for each chart type independently\r\n - Controls summary visibility with toggle state\r\n */\r\n\r\nimport React from 'react';\r\nimport usePatientData from './hooks/usePatientData';\r\nimport useVisualizations from './hooks/useVisualizations';\r\nimport useChartNavigation from './hooks/useChartNavigation';\r\nimport useDashboardState from './hooks/useDashboardState';\r\nimport PatientInfoCard from './components/PatientInfoCard';\r\nimport DashboardGrid from './components/DashboardGrid';\r\nimport Placeholder from './components/ui/Placeholder';\r\nimport Switch from './components/ui/Switch';\r\nimport './HealthDashboard.css';\r\n\r\nconst HealthDashboard = ({ patientId, accessType = 'Admin', screenshotMode = false }) => {\r\n  const { data, loading, error } = usePatientData(patientId);\r\n  const { \r\n    allVisualizations, \r\n    availableVisualizations: allAvailableVisualizations, \r\n    selectedVisualizations\r\n  } = useVisualizations('patient', data);\r\n  \r\n  // Filter visualizations based on access type\r\n  let availableVisualizations = { ...allAvailableVisualizations };\r\n  if (accessType === 'Physician') {\r\n    // Physicians don't see meal contents chart\r\n    const { mealContents, ...rest } = availableVisualizations;\r\n    availableVisualizations = rest;\r\n  }\r\n  \r\n  // Use dashboard state for chart expansion and summary toggles\r\n  const {\r\n    expandedChart,\r\n    showThreeMonthSummaries,\r\n    toggleChart,\r\n    toggleThreeMonthSummaries\r\n  } = useDashboardState();\r\n\r\n  // Create shared navigation for all charts (all use week navigation except mood uses month)\r\n  const sharedNavigation = useChartNavigation('glucose');\r\n  const chartNavigation = {\r\n    glucose: sharedNavigation,\r\n    bloodPressure: sharedNavigation,\r\n    exercise: sharedNavigation,\r\n    sleep: sharedNavigation,\r\n    pain: sharedNavigation,\r\n    mood: sharedNavigation,\r\n    mealContents: sharedNavigation\r\n  };\r\n\r\n  // Render visualization with unified view mode\r\n  const renderVisualizationWithMode = (visualizationType, boxId) => {\r\n    if (!patientId) {\r\n      return <Placeholder message=\"Please select a patient to view data.\" type=\"select-patient\" />;\r\n    }\r\n    \r\n    const viz = allVisualizations[visualizationType];\r\n    if (!viz) {\r\n      return <Placeholder message=\"Invalid visualization\" type=\"error\" />;\r\n    }\r\n\r\n    const Component = viz.component;\r\n    const isExpanded = expandedChart === boxId;\r\n    const navigation = chartNavigation[visualizationType];\r\n    \r\n    return <Component \r\n      patientId={patientId} \r\n      isExpanded={isExpanded} \r\n      onExpand={() => toggleChart(boxId)}\r\n      viewMode=\"unified\" // New unified view mode\r\n      accessType={accessType}\r\n      navigation={navigation}\r\n      screenshotMode={screenshotMode}\r\n      showThreeMonthSummaries={showThreeMonthSummaries} // Pass summary toggle state\r\n    />;\r\n  };\r\n\r\n  const patientInfo = data?.patientInfo;\r\n\r\n  if (loading) return <div className=\"loading-screen\">Loading patient data...</div>;\r\n  if (error) return <div className=\"error-screen\">Error: {error}</div>;\r\n\r\n  return (\r\n    <div className=\"health-dashboard\">\r\n      {!screenshotMode && (\r\n        <div className=\"dashboard-header\">\r\n          <PatientInfoCard \r\n            patientInfo={patientInfo}\r\n            loading={loading}\r\n            error={error}\r\n            variant=\"unified\"\r\n          />\r\n          \r\n          <div className=\"dashboard-controls\">\r\n            <div className=\"qr-code-section\">\r\n              <h3>Access Health Dashboard</h3>\r\n              <p>Scan QR code for quick access</p>\r\n              <img \r\n                src={`${process.env.PUBLIC_URL}/Public_dashboard_QR_code.png`}\r\n                alt=\"QR Code for PGHD Dashboard\"\r\n                className=\"qr-code-image\"\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"summary-toggle-section\">\r\n              <h3>Summary Options</h3>\r\n              <Switch\r\n                checked={showThreeMonthSummaries}\r\n                onChange={toggleThreeMonthSummaries}\r\n                leftLabel=\"Week Only\"\r\n                rightLabel=\"Include 3-Month\"\r\n              />\r\n              <p className=\"toggle-description\">\r\n                {showThreeMonthSummaries \r\n                  ? \"Showing both week and 3-month summaries for comprehensive health tracking\"\r\n                  : \"Showing week summaries only for focused current health monitoring\"\r\n                }\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n          <DashboardGrid\r\n            viewMode=\"unified\"\r\n            availableVisualizations={availableVisualizations}\r\n            allVisualizations={allVisualizations}\r\n            onExpand={toggleChart}\r\n            expandedItem={expandedChart}\r\n            renderVisualization={renderVisualizationWithMode}\r\n            chartNavigation={chartNavigation}\r\n            screenshotMode={screenshotMode}\r\n          />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HealthDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}