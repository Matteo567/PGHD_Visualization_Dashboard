{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\n\n/**\r\n * Hook for consistent container width measurement across all chart components\r\n * Provides responsive width updates and handles resize events\r\n */\nconst useContainerWidth = (isExpanded = false) => {\n  _s();\n  const containerRef = useRef(null);\n  const [containerWidth, setContainerWidth] = useState(400);\n  useEffect(() => {\n    const updateContainerWidth = () => {\n      if (containerRef.current) {\n        const width = containerRef.current.offsetWidth;\n        setContainerWidth(width);\n      }\n    };\n    updateContainerWidth();\n    window.addEventListener('resize', updateContainerWidth);\n    return () => window.removeEventListener('resize', updateContainerWidth);\n  }, [isExpanded]);\n  return {\n    containerRef,\n    containerWidth\n  };\n};\n_s(useContainerWidth, \"NkG2C9SPg1YdQFew1nopswxbeHo=\");\nexport default useContainerWidth;","map":{"version":3,"names":["useState","useEffect","useRef","useContainerWidth","isExpanded","_s","containerRef","containerWidth","setContainerWidth","updateContainerWidth","current","width","offsetWidth","window","addEventListener","removeEventListener"],"sources":["C:/Users/Matteo/Working_Folder/a. MCC Thesis Local/MCC_digital_health_data_visualizations/src/hooks/useContainerWidth.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\r\n\r\n/**\r\n * Hook for consistent container width measurement across all chart components\r\n * Provides responsive width updates and handles resize events\r\n */\r\nconst useContainerWidth = (isExpanded = false) => {\r\n  const containerRef = useRef(null);\r\n  const [containerWidth, setContainerWidth] = useState(400);\r\n\r\n  useEffect(() => {\r\n    const updateContainerWidth = () => {\r\n      if (containerRef.current) {\r\n        const width = containerRef.current.offsetWidth;\r\n        setContainerWidth(width);\r\n      }\r\n    };\r\n\r\n    updateContainerWidth();\r\n    window.addEventListener('resize', updateContainerWidth);\r\n    return () => window.removeEventListener('resize', updateContainerWidth);\r\n  }, [isExpanded]);\r\n\r\n  return { containerRef, containerWidth };\r\n};\r\n\r\nexport default useContainerWidth;\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;;AAEnD;AACA;AACA;AACA;AACA,MAAMC,iBAAiB,GAAGA,CAACC,UAAU,GAAG,KAAK,KAAK;EAAAC,EAAA;EAChD,MAAMC,YAAY,GAAGJ,MAAM,CAAC,IAAI,CAAC;EACjC,MAAM,CAACK,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,GAAG,CAAC;EAEzDC,SAAS,CAAC,MAAM;IACd,MAAMQ,oBAAoB,GAAGA,CAAA,KAAM;MACjC,IAAIH,YAAY,CAACI,OAAO,EAAE;QACxB,MAAMC,KAAK,GAAGL,YAAY,CAACI,OAAO,CAACE,WAAW;QAC9CJ,iBAAiB,CAACG,KAAK,CAAC;MAC1B;IACF,CAAC;IAEDF,oBAAoB,CAAC,CAAC;IACtBI,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAEL,oBAAoB,CAAC;IACvD,OAAO,MAAMI,MAAM,CAACE,mBAAmB,CAAC,QAAQ,EAAEN,oBAAoB,CAAC;EACzE,CAAC,EAAE,CAACL,UAAU,CAAC,CAAC;EAEhB,OAAO;IAAEE,YAAY;IAAEC;EAAe,CAAC;AACzC,CAAC;AAACF,EAAA,CAlBIF,iBAAiB;AAoBvB,eAAeA,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}