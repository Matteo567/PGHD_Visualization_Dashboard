{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matteo\\\\Working_Folder\\\\a. MCC Thesis Local\\\\MCC_digital_health_data_visualizations\\\\src\\\\components\\\\patient_charts\\\\MealContentsChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo } from 'react';\nimport usePatientData from '../../hooks/usePatientData';\nimport ChartContainer from '../ChartContainer';\nimport Legend from '../Legend';\nimport './MealContentsChart.css';\nimport '../ChartStyles.css';\n\n// --- Constants ---\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DAYS_OF_WEEK = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\nconst MEAL_TYPES = ['Breakfast', 'Lunch', 'Dinner'];\nconst FOOD_CATEGORIES = ['Protein', 'Carbohydrates', 'Vegetables', 'Fruit', 'Alcohol'];\nconst SUGAR_CATEGORIES = ['', '1-20g', '20-40g', '40-60g', '60g+'];\nconst DEFAULT_WEEK = new Date(2025, 4, 1);\n\n// Emoji mappings for food categories\nconst CATEGORY_EMOJIS = {\n  'Protein': '🥩',\n  'Carbohydrates': '🍞',\n  'Vegetables': '🥦',\n  'Fruit': '🍎',\n  'Alcohol': '🍷'\n};\nconst SUGAR_EMOJIS = {\n  '': '',\n  // No sugar\n  '1-20g': '🍭',\n  // Lollipop\n  '20-40g': '🍫',\n  // Chocolate bar\n  '40-60g': '🍩',\n  // Donut\n  '60g+': '🎂' // Cake\n};\nconst getChartConfig = (isExpanded, containerWidth = 500) => {\n  // Calculate responsive dimensions based on container width\n  const maxWidth = Math.min(containerWidth - 40, isExpanded ? 700 : 500); // Account for padding\n  const maxHeight = isExpanded ? 400 : 300;\n\n  // Calculate day width based on available space\n  const availableWidth = maxWidth - 140; // Account for left padding (110) + right padding (30)\n  const dayWidth = Math.max(50, Math.min(85, availableWidth / 7)); // Min 50px, max 85px per day\n\n  // Recalculate total width based on actual day width\n  const totalWidth = 140 + dayWidth * 7;\n  return {\n    width: totalWidth,\n    height: maxHeight,\n    padding: {\n      top: 40,\n      right: 30,\n      bottom: 80,\n      left: 110\n    },\n    dayWidth: dayWidth,\n    mealHeight: isExpanded ? 80 : 60,\n    fontSize: {\n      dayLabel: isExpanded ? 10 : 8,\n      dateLabel: isExpanded ? 8 : 6,\n      mealLabel: isExpanded ? 8 : 6,\n      timeLabel: isExpanded ? 6 : 5\n    }\n  };\n};\n\n// --- Helper Functions ---\nconst getWeekStart = date => {\n  const d = new Date(date);\n  const day = d.getDay();\n  const diff = d.getDate() - day;\n  return new Date(d.setDate(diff));\n};\nconst formatDayLabel = date => date.toLocaleDateString('en-US', {\n  weekday: 'short'\n});\nconst formatDateLabel = date => date.toLocaleDateString('en-US', {\n  month: 'short',\n  day: 'numeric'\n});\nconst getMealTime = (data, mealType) => {\n  const timeKey = `${mealType}_Time`;\n  return data[timeKey] || '';\n};\nconst getMealData = (data, mealType) => {\n  const mealData = {};\n  FOOD_CATEGORIES.forEach(category => {\n    const key = `${mealType}_${category}`;\n    mealData[category] = data[key] === 1 || data[key] === '1';\n  });\n  const sugarKey = `${mealType}_Added_Sugar`;\n  mealData['Added Sugar'] = data[sugarKey] || '';\n  return mealData;\n};\n\n// --- Chart Sub-components ---\n\nconst XAxis = ({\n  config,\n  weekDays\n}) => /*#__PURE__*/_jsxDEV(\"g\", {\n  className: \"x-axis\",\n  children: [weekDays.map((day, dayIndex) => {\n    const x = config.padding.left + dayIndex * config.dayWidth + config.dayWidth / 2;\n    return /*#__PURE__*/_jsxDEV(\"g\", {\n      children: [/*#__PURE__*/_jsxDEV(\"text\", {\n        x: x,\n        y: config.height - config.padding.bottom + 30,\n        fontSize: config.fontSize.dayLabel,\n        textAnchor: \"middle\",\n        fill: \"#333\",\n        fontWeight: \"600\",\n        children: DAYS_OF_WEEK[day.getDay()]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: x,\n        y: config.height - config.padding.bottom + 45,\n        fontSize: config.fontSize.dateLabel,\n        textAnchor: \"middle\",\n        fill: \"#666\",\n        children: day.getDate()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n        className: \"chart-grid-line-vertical\",\n        x1: config.padding.left + dayIndex * config.dayWidth,\n        y1: config.padding.top,\n        x2: config.padding.left + dayIndex * config.dayWidth,\n        y2: config.height - config.padding.bottom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)]\n    }, dayIndex, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this);\n  }), /*#__PURE__*/_jsxDEV(\"line\", {\n    className: \"chart-grid-line-vertical\",\n    x1: config.padding.left + 7 * config.dayWidth,\n    y1: config.padding.top,\n    x2: config.padding.left + 7 * config.dayWidth,\n    y2: config.height - config.padding.bottom\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 91,\n  columnNumber: 3\n}, this);\n_c = XAxis;\nconst YAxis = ({\n  config\n}) => {\n  const mealTimes = {\n    'Breakfast': '6-10am',\n    'Lunch': '11-2pm',\n    'Dinner': '5-9pm'\n  };\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    className: \"y-axis\",\n    children: [MEAL_TYPES.map((meal, mealIndex) => {\n      const y = config.padding.top + mealIndex * config.mealHeight + config.mealHeight / 2;\n      return /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"text\", {\n          x: config.padding.left - 25,\n          y: y - 5,\n          fontSize: config.fontSize.mealLabel,\n          textAnchor: \"end\",\n          fill: \"#333\",\n          fontWeight: \"600\",\n          children: meal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: config.padding.left - 25,\n          y: y + 10,\n          fontSize: config.fontSize.timeLabel,\n          textAnchor: \"end\",\n          fill: \"#666\",\n          children: mealTimes[meal]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n          className: \"chart-grid-line-horizontal\",\n          x1: config.padding.left,\n          y1: config.padding.top + mealIndex * config.mealHeight,\n          x2: config.padding.left + 7 * config.dayWidth,\n          y2: config.padding.top + mealIndex * config.mealHeight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this)]\n      }, meal, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"line\", {\n      className: \"chart-grid-line-horizontal\",\n      x1: config.padding.left,\n      y1: config.padding.top + 3 * config.mealHeight,\n      x2: config.padding.left + 7 * config.dayWidth,\n      y2: config.padding.top + 3 * config.mealHeight\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n};\n_c2 = YAxis;\nconst MealCell = ({\n  config,\n  dayIndex,\n  mealIndex,\n  mealData,\n  mealTime\n}) => {\n  const x = config.padding.left + dayIndex * config.dayWidth + 5;\n  const y = config.padding.top + mealIndex * config.mealHeight + 5;\n  const cellWidth = config.dayWidth - 10;\n  const cellHeight = config.mealHeight - 10;\n\n  // Calculate grid layout for food categories (2x3 grid)\n  const categoriesPerRow = 3;\n  const categoryWidth = cellWidth / categoriesPerRow;\n  const categoryHeight = (cellHeight - 20) / 2; // Reserve space for time and sugar\n\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    className: \"meal-cell\",\n    children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n      x: x,\n      y: y,\n      width: cellWidth,\n      height: cellHeight,\n      fill: \"#f9f9f9\",\n      stroke: \"#ddd\",\n      strokeWidth: \"1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      x: x + cellWidth / 2,\n      y: y + 12,\n      fontSize: config.fontSize.timeLabel,\n      textAnchor: \"middle\",\n      fill: \"#666\",\n      children: mealTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), FOOD_CATEGORIES.map((category, index) => {\n      const row = Math.floor(index / categoriesPerRow);\n      const col = index % categoriesPerRow;\n      const categoryX = x + col * categoryWidth + categoryWidth / 2;\n      const categoryY = y + 20 + row * categoryHeight + categoryHeight / 2;\n      const hasCategory = mealData[category];\n      return /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: categoryX,\n          cy: categoryY,\n          r: \"12\",\n          fill: hasCategory ? \"#f0f8ff\" : \"#f5f5f5\",\n          stroke: \"#ddd\",\n          strokeWidth: \"1\",\n          opacity: hasCategory ? 1 : 0.3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this), hasCategory && /*#__PURE__*/_jsxDEV(\"text\", {\n          x: categoryX,\n          y: categoryY,\n          fontSize: \"10\",\n          textAnchor: \"middle\",\n          dominantBaseline: \"central\",\n          style: {\n            fontFamily: 'Apple Color Emoji, Segoe UI Emoji, Noto Color Emoji, sans-serif'\n          },\n          children: CATEGORY_EMOJIS[category]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 15\n        }, this)]\n      }, category, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this);\n    }), (() => {\n      const sugarRow = 1; // Second row\n      const sugarCol = 2; // Third column (next to alcohol which is at col 1 in row 1)\n      const sugarX = x + sugarCol * categoryWidth + categoryWidth / 2;\n      const sugarY = y + 20 + sugarRow * categoryHeight + categoryHeight / 2;\n      const hasSugar = mealData['Added Sugar'] && SUGAR_EMOJIS[mealData['Added Sugar']];\n      return /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: sugarX,\n          cy: sugarY,\n          r: \"12\",\n          fill: hasSugar ? \"#fff0f5\" : \"#f5f5f5\",\n          stroke: \"#ddd\",\n          strokeWidth: \"1\",\n          opacity: hasSugar ? 1 : 0.3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this), hasSugar && /*#__PURE__*/_jsxDEV(\"text\", {\n          x: sugarX,\n          y: sugarY,\n          fontSize: \"10\",\n          textAnchor: \"middle\",\n          dominantBaseline: \"central\",\n          style: {\n            fontFamily: 'Apple Color Emoji, Segoe UI Emoji, Noto Color Emoji, sans-serif'\n          },\n          children: SUGAR_EMOJIS[mealData['Added Sugar']]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 15\n        }, this)]\n      }, \"sugar\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 11\n      }, this);\n    })()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 5\n  }, this);\n};\n_c3 = MealCell;\nconst MealGrid = ({\n  config,\n  weekDays,\n  patientData\n}) => {\n  if (!patientData || patientData.length === 0) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    className: \"meal-grid\",\n    children: weekDays.map((day, dayIndex) => {\n      const dayData = patientData.find(d => {\n        const dataDate = new Date(d.Date);\n        return dataDate.toDateString() === day.toDateString();\n      });\n      if (!dayData) return null;\n      return MEAL_TYPES.map((meal, mealIndex) => {\n        const mealData = getMealData(dayData, meal);\n        const mealTime = getMealTime(dayData, meal);\n        return /*#__PURE__*/_jsxDEV(MealCell, {\n          config: config,\n          dayIndex: dayIndex,\n          mealIndex: mealIndex,\n          mealData: mealData,\n          mealTime: mealTime\n        }, `${dayIndex}-${mealIndex}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }, this);\n      });\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 306,\n    columnNumber: 5\n  }, this);\n};\n\n// --- Main Component ---\n_c4 = MealGrid;\nconst MealContentsChart = ({\n  patientId = 'Patient_001',\n  isExpanded,\n  onExpand,\n  isPhysicianView = false\n}) => {\n  _s();\n  const [selectedWeek, setSelectedWeek] = useState(DEFAULT_WEEK);\n  const [containerWidth, setContainerWidth] = useState(500);\n  const {\n    mealData: patientData,\n    loading,\n    error\n  } = usePatientData(patientId);\n  const containerRef = React.useRef(null);\n  const config = getChartConfig(isExpanded, containerWidth);\n  const weekStart = getWeekStart(selectedWeek);\n  const weekDays = Array.from({\n    length: 7\n  }, (_, i) => {\n    const day = new Date(weekStart);\n    day.setDate(weekStart.getDate() + i);\n    return day;\n  });\n  const handlePrevWeek = () => setSelectedWeek(prev => new Date(new Date(prev).setDate(prev.getDate() - 7)));\n  const handleNextWeek = () => setSelectedWeek(prev => new Date(new Date(prev).setDate(prev.getDate() + 7)));\n  const startOfWeek = new Date(weekStart);\n  const endOfWeek = new Date(startOfWeek);\n  endOfWeek.setDate(endOfWeek.getDate() + 6);\n  const formatDateRange = (start, end) => {\n    const startStr = start.toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric'\n    });\n    const endStr = end.toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric'\n    });\n    return `${startStr} to ${endStr}`;\n  };\n\n  // Calculate summary statistics for physician view\n  const weekSummary = useMemo(() => {\n    if (!patientData || patientData.length === 0) return null;\n    const weekData = patientData.filter(d => {\n      const dataDate = new Date(d.Date);\n      return dataDate >= startOfWeek && dataDate <= endOfWeek;\n    });\n    if (weekData.length === 0) return null;\n\n    // Count food categories across all meals\n    const categoryStats = {};\n    FOOD_CATEGORIES.forEach(category => {\n      categoryStats[category] = 0;\n    });\n\n    // Count sugar levels\n    const sugarStats = {};\n    SUGAR_CATEGORIES.filter(s => s !== '').forEach(sugar => {\n      sugarStats[sugar] = 0;\n    });\n    let totalMealsLogged = 0;\n    let daysWithMeals = new Set();\n    weekData.forEach(dayData => {\n      daysWithMeals.add(dayData.Date);\n      MEAL_TYPES.forEach(meal => {\n        const mealData = getMealData(dayData, meal);\n        const hasAnyFood = FOOD_CATEGORIES.some(category => mealData[category]);\n        if (hasAnyFood) {\n          totalMealsLogged++;\n\n          // Count each food category\n          FOOD_CATEGORIES.forEach(category => {\n            if (mealData[category]) {\n              categoryStats[category]++;\n            }\n          });\n\n          // Count sugar levels\n          if (mealData['Added Sugar'] && mealData['Added Sugar'] !== '') {\n            sugarStats[mealData['Added Sugar']]++;\n          }\n        }\n      });\n    });\n\n    // Find most common food category\n    const mostCommonFood = Object.entries(categoryStats).sort(([, a], [, b]) => b - a)[0];\n\n    // Calculate sugar frequency\n    const totalSugarMeals = Object.values(sugarStats).reduce((sum, count) => sum + count, 0);\n    const sugarPercentage = totalMealsLogged > 0 ? (totalSugarMeals / totalMealsLogged * 100).toFixed(0) : 0;\n    return {\n      totalMealsLogged,\n      daysWithMeals: daysWithMeals.size,\n      mostCommonFood: mostCommonFood[0],\n      mostCommonFoodCount: mostCommonFood[1],\n      categoryStats,\n      sugarPercentage,\n      totalSugarMeals\n    };\n  }, [patientData, startOfWeek, endOfWeek]);\n  return /*#__PURE__*/_jsxDEV(ChartContainer, {\n    title: \"Meal Contents\",\n    icon: \"\\uD83C\\uDF7D\\uFE0F\",\n    isLoading: loading,\n    error: error,\n    noData: !loading && !error && (!patientData || patientData.length === 0),\n    isExpanded: isExpanded,\n    onExpand: onExpand,\n    onPrev: handlePrevWeek,\n    onNext: handleNextWeek,\n    navigationLabel: formatDateRange(startOfWeek, endOfWeek),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meal-contents-chart-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meal-contents-legends-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(Legend, {\n          title: \"Food Categories\",\n          items: FOOD_CATEGORIES.map(category => ({\n            label: `${CATEGORY_EMOJIS[category]} ${category}`,\n            color: null\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {\n          title: \"Sugar Levels\",\n          items: SUGAR_CATEGORIES.filter(sugar => sugar !== '').map(sugar => ({\n            label: `${SUGAR_EMOJIS[sugar]} ${sugar}`,\n            color: null\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `meal-chart-wrapper ${isExpanded ? 'expanded' : ''}`,\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"100%\",\n          height: \"100%\",\n          viewBox: `0 0 ${config.width} ${config.height}`,\n          className: \"meal-chart\",\n          children: [/*#__PURE__*/_jsxDEV(XAxis, {\n            config: config,\n            weekDays: weekDays\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            config: config\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MealGrid, {\n            config: config,\n            weekDays: weekDays,\n            patientData: patientData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 9\n      }, this), isPhysicianView && weekSummary && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meal-summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Week Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Meals Logged:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [weekSummary.totalMealsLogged, \"/21 possible\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Days with Meals:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [weekSummary.daysWithMeals, \"/7 days\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Most Common Food:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [CATEGORY_EMOJIS[weekSummary.mostCommonFood], \" \", weekSummary.mostCommonFood, \" (\", weekSummary.mostCommonFoodCount, \"x)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Added Sugar:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [weekSummary.sugarPercentage, \"% of meals (\", weekSummary.totalSugarMeals, \"/\", weekSummary.totalMealsLogged, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Food Balance:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: Object.entries(weekSummary.categoryStats).sort(([, a], [, b]) => b - a).slice(0, 3).map(([cat, count]) => `${CATEGORY_EMOJIS[cat]}${count}`).join(' ')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 510,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 438,\n    columnNumber: 5\n  }, this);\n};\n_s(MealContentsChart, \"PVBYX698qljWmz9RMpfZwUvit3o=\", false, function () {\n  return [usePatientData];\n});\n_c5 = MealContentsChart;\nexport default MealContentsChart;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"XAxis\");\n$RefreshReg$(_c2, \"YAxis\");\n$RefreshReg$(_c3, \"MealCell\");\n$RefreshReg$(_c4, \"MealGrid\");\n$RefreshReg$(_c5, \"MealContentsChart\");","map":{"version":3,"names":["React","useState","useMemo","usePatientData","ChartContainer","Legend","jsxDEV","_jsxDEV","DAYS_OF_WEEK","MEAL_TYPES","FOOD_CATEGORIES","SUGAR_CATEGORIES","DEFAULT_WEEK","Date","CATEGORY_EMOJIS","SUGAR_EMOJIS","getChartConfig","isExpanded","containerWidth","maxWidth","Math","min","maxHeight","availableWidth","dayWidth","max","totalWidth","width","height","padding","top","right","bottom","left","mealHeight","fontSize","dayLabel","dateLabel","mealLabel","timeLabel","getWeekStart","date","d","day","getDay","diff","getDate","setDate","formatDayLabel","toLocaleDateString","weekday","formatDateLabel","month","getMealTime","data","mealType","timeKey","getMealData","mealData","forEach","category","key","sugarKey","XAxis","config","weekDays","className","children","map","dayIndex","x","y","textAnchor","fill","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","x1","y1","x2","y2","_c","YAxis","mealTimes","meal","mealIndex","_c2","MealCell","mealTime","cellWidth","cellHeight","categoriesPerRow","categoryWidth","categoryHeight","stroke","strokeWidth","index","row","floor","col","categoryX","categoryY","hasCategory","cx","cy","r","opacity","dominantBaseline","style","fontFamily","sugarRow","sugarCol","sugarX","sugarY","hasSugar","_c3","MealGrid","patientData","length","dayData","find","dataDate","toDateString","_c4","MealContentsChart","patientId","onExpand","isPhysicianView","_s","selectedWeek","setSelectedWeek","setContainerWidth","loading","error","containerRef","useRef","weekStart","Array","from","_","i","handlePrevWeek","prev","handleNextWeek","startOfWeek","endOfWeek","formatDateRange","start","end","startStr","endStr","weekSummary","weekData","filter","categoryStats","sugarStats","s","sugar","totalMealsLogged","daysWithMeals","Set","add","hasAnyFood","some","mostCommonFood","Object","entries","sort","a","b","totalSugarMeals","values","reduce","sum","count","sugarPercentage","toFixed","size","mostCommonFoodCount","title","icon","isLoading","noData","onPrev","onNext","navigationLabel","items","label","color","viewBox","slice","cat","join","_c5","$RefreshReg$"],"sources":["C:/Users/Matteo/Working_Folder/a. MCC Thesis Local/MCC_digital_health_data_visualizations/src/components/patient_charts/MealContentsChart.js"],"sourcesContent":["import React, { useState, useMemo } from 'react';\nimport usePatientData from '../../hooks/usePatientData';\nimport ChartContainer from '../ChartContainer';\nimport Legend from '../Legend';\nimport './MealContentsChart.css';\nimport '../ChartStyles.css';\n\n// --- Constants ---\nconst DAYS_OF_WEEK = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\nconst MEAL_TYPES = ['Breakfast', 'Lunch', 'Dinner'];\nconst FOOD_CATEGORIES = ['Protein', 'Carbohydrates', 'Vegetables', 'Fruit', 'Alcohol'];\nconst SUGAR_CATEGORIES = ['', '1-20g', '20-40g', '40-60g', '60g+'];\nconst DEFAULT_WEEK = new Date(2025, 4, 1);\n\n// Emoji mappings for food categories\nconst CATEGORY_EMOJIS = {\n  'Protein': '🥩',\n  'Carbohydrates': '🍞',\n  'Vegetables': '🥦',\n  'Fruit': '🍎',\n  'Alcohol': '🍷'\n};\n\nconst SUGAR_EMOJIS = {\n  '': '',              // No sugar\n  '1-20g': '🍭',       // Lollipop\n  '20-40g': '🍫',      // Chocolate bar\n  '40-60g': '🍩',      // Donut\n  '60g+': '🎂'         // Cake\n};\n\nconst getChartConfig = (isExpanded, containerWidth = 500) => {\n  // Calculate responsive dimensions based on container width\n  const maxWidth = Math.min(containerWidth - 40, isExpanded ? 700 : 500); // Account for padding\n  const maxHeight = isExpanded ? 400 : 300;\n  \n  // Calculate day width based on available space\n  const availableWidth = maxWidth - 140; // Account for left padding (110) + right padding (30)\n  const dayWidth = Math.max(50, Math.min(85, availableWidth / 7)); // Min 50px, max 85px per day\n  \n  // Recalculate total width based on actual day width\n  const totalWidth = 140 + (dayWidth * 7);\n  \n  return {\n    width: totalWidth,\n    height: maxHeight,\n    padding: { top: 40, right: 30, bottom: 80, left: 110 },\n    dayWidth: dayWidth,\n    mealHeight: isExpanded ? 80 : 60,\n    fontSize: {\n      dayLabel: isExpanded ? 10 : 8,\n      dateLabel: isExpanded ? 8 : 6,\n      mealLabel: isExpanded ? 8 : 6,\n      timeLabel: isExpanded ? 6 : 5,\n    },\n  };\n};\n\n// --- Helper Functions ---\nconst getWeekStart = (date) => {\n  const d = new Date(date);\n  const day = d.getDay();\n  const diff = d.getDate() - day;\n  return new Date(d.setDate(diff));\n};\n\nconst formatDayLabel = (date) => date.toLocaleDateString('en-US', { weekday: 'short' });\nconst formatDateLabel = (date) => date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\n\nconst getMealTime = (data, mealType) => {\n  const timeKey = `${mealType}_Time`;\n  return data[timeKey] || '';\n};\n\nconst getMealData = (data, mealType) => {\n  const mealData = {};\n  FOOD_CATEGORIES.forEach(category => {\n    const key = `${mealType}_${category}`;\n    mealData[category] = data[key] === 1 || data[key] === '1';\n  });\n  \n  const sugarKey = `${mealType}_Added_Sugar`;\n  mealData['Added Sugar'] = data[sugarKey] || '';\n  \n  return mealData;\n};\n\n// --- Chart Sub-components ---\n\nconst XAxis = ({ config, weekDays }) => (\n  <g className=\"x-axis\">\n    {weekDays.map((day, dayIndex) => {\n      const x = config.padding.left + dayIndex * config.dayWidth + config.dayWidth / 2;\n      return (\n        <g key={dayIndex}>\n          <text\n            x={x}\n            y={config.height - config.padding.bottom + 30}\n            fontSize={config.fontSize.dayLabel}\n            textAnchor=\"middle\"\n            fill=\"#333\"\n            fontWeight=\"600\"\n          >\n            {DAYS_OF_WEEK[day.getDay()]}\n          </text>\n          <text\n            x={x}\n            y={config.height - config.padding.bottom + 45}\n            fontSize={config.fontSize.dateLabel}\n            textAnchor=\"middle\"\n            fill=\"#666\"\n          >\n            {day.getDate()}\n          </text>\n          <line\n            className=\"chart-grid-line-vertical\"\n            x1={config.padding.left + dayIndex * config.dayWidth}\n            y1={config.padding.top}\n            x2={config.padding.left + dayIndex * config.dayWidth}\n            y2={config.height - config.padding.bottom}\n          />\n        </g>\n      );\n    })}\n    <line\n      className=\"chart-grid-line-vertical\"\n      x1={config.padding.left + 7 * config.dayWidth}\n      y1={config.padding.top}\n      x2={config.padding.left + 7 * config.dayWidth}\n      y2={config.height - config.padding.bottom}\n    />\n  </g>\n);\n\nconst YAxis = ({ config }) => {\n  const mealTimes = {\n    'Breakfast': '6-10am',\n    'Lunch': '11-2pm', \n    'Dinner': '5-9pm'\n  };\n\n  return (\n    <g className=\"y-axis\">\n      {MEAL_TYPES.map((meal, mealIndex) => {\n        const y = config.padding.top + mealIndex * config.mealHeight + config.mealHeight / 2;\n        return (\n          <g key={meal}>\n            <text\n              x={config.padding.left - 25}\n              y={y - 5}\n              fontSize={config.fontSize.mealLabel}\n              textAnchor=\"end\"\n              fill=\"#333\"\n              fontWeight=\"600\"\n            >\n              {meal}\n            </text>\n            <text\n              x={config.padding.left - 25}\n              y={y + 10}\n              fontSize={config.fontSize.timeLabel}\n              textAnchor=\"end\"\n              fill=\"#666\"\n            >\n              {mealTimes[meal]}\n            </text>\n            <line\n              className=\"chart-grid-line-horizontal\"\n              x1={config.padding.left}\n              y1={config.padding.top + mealIndex * config.mealHeight}\n              x2={config.padding.left + 7 * config.dayWidth}\n              y2={config.padding.top + mealIndex * config.mealHeight}\n            />\n          </g>\n        );\n      })}\n      <line\n        className=\"chart-grid-line-horizontal\"\n        x1={config.padding.left}\n        y1={config.padding.top + 3 * config.mealHeight}\n        x2={config.padding.left + 7 * config.dayWidth}\n        y2={config.padding.top + 3 * config.mealHeight}\n      />\n    </g>\n  );\n};\n\nconst MealCell = ({ config, dayIndex, mealIndex, mealData, mealTime }) => {\n  const x = config.padding.left + dayIndex * config.dayWidth + 5;\n  const y = config.padding.top + mealIndex * config.mealHeight + 5;\n  const cellWidth = config.dayWidth - 10;\n  const cellHeight = config.mealHeight - 10;\n  \n  // Calculate grid layout for food categories (2x3 grid)\n  const categoriesPerRow = 3;\n  const categoryWidth = cellWidth / categoriesPerRow;\n  const categoryHeight = (cellHeight - 20) / 2; // Reserve space for time and sugar\n  \n  return (\n    <g className=\"meal-cell\">\n      {/* Background */}\n      <rect\n        x={x}\n        y={y}\n        width={cellWidth}\n        height={cellHeight}\n        fill=\"#f9f9f9\"\n        stroke=\"#ddd\"\n        strokeWidth=\"1\"\n      />\n      \n      {/* Meal time */}\n      <text\n        x={x + cellWidth / 2}\n        y={y + 12}\n        fontSize={config.fontSize.timeLabel}\n        textAnchor=\"middle\"\n        fill=\"#666\"\n      >\n        {mealTime}\n      </text>\n      \n      {/* Food category emojis and sugar emoji in 6-circle grid */}\n      {FOOD_CATEGORIES.map((category, index) => {\n        const row = Math.floor(index / categoriesPerRow);\n        const col = index % categoriesPerRow;\n        const categoryX = x + col * categoryWidth + categoryWidth / 2;\n        const categoryY = y + 20 + row * categoryHeight + categoryHeight / 2;\n        const hasCategory = mealData[category];\n        \n        return (\n          <g key={category}>\n            {/* Background circle for visibility */}\n            <circle\n              cx={categoryX}\n              cy={categoryY}\n              r=\"12\"\n              fill={hasCategory ? \"#f0f8ff\" : \"#f5f5f5\"}\n              stroke=\"#ddd\"\n              strokeWidth=\"1\"\n              opacity={hasCategory ? 1 : 0.3}\n            />\n            {/* Emoji */}\n            {hasCategory && (\n              <text\n                x={categoryX}\n                y={categoryY}\n                fontSize=\"10\"\n                textAnchor=\"middle\"\n                dominantBaseline=\"central\"\n                style={{ fontFamily: 'Apple Color Emoji, Segoe UI Emoji, Noto Color Emoji, sans-serif' }}\n              >\n                {CATEGORY_EMOJIS[category]}\n              </text>\n            )}\n          </g>\n        );\n      })}\n      \n      {/* Sugar emoji in 6th position (next to alcohol) */}\n      {(() => {\n        const sugarRow = 1; // Second row\n        const sugarCol = 2; // Third column (next to alcohol which is at col 1 in row 1)\n        const sugarX = x + sugarCol * categoryWidth + categoryWidth / 2;\n        const sugarY = y + 20 + sugarRow * categoryHeight + categoryHeight / 2;\n        const hasSugar = mealData['Added Sugar'] && SUGAR_EMOJIS[mealData['Added Sugar']];\n        \n        return (\n          <g key=\"sugar\">\n            {/* Background circle for sugar emoji */}\n            <circle\n              cx={sugarX}\n              cy={sugarY}\n              r=\"12\"\n              fill={hasSugar ? \"#fff0f5\" : \"#f5f5f5\"}\n              stroke=\"#ddd\"\n              strokeWidth=\"1\"\n              opacity={hasSugar ? 1 : 0.3}\n            />\n            {/* Sugar emoji */}\n            {hasSugar && (\n              <text\n                x={sugarX}\n                y={sugarY}\n                fontSize=\"10\"\n                textAnchor=\"middle\"\n                dominantBaseline=\"central\"\n                style={{ fontFamily: 'Apple Color Emoji, Segoe UI Emoji, Noto Color Emoji, sans-serif' }}\n              >\n                {SUGAR_EMOJIS[mealData['Added Sugar']]}\n              </text>\n            )}\n          </g>\n        );\n      })()}\n    </g>\n  );\n};\n\nconst MealGrid = ({ config, weekDays, patientData }) => {\n  if (!patientData || patientData.length === 0) {\n    return null;\n  }\n\n  return (\n    <g className=\"meal-grid\">\n      {weekDays.map((day, dayIndex) => {\n        const dayData = patientData.find(d => {\n          const dataDate = new Date(d.Date);\n          return dataDate.toDateString() === day.toDateString();\n        });\n\n        if (!dayData) return null;\n\n        return MEAL_TYPES.map((meal, mealIndex) => {\n          const mealData = getMealData(dayData, meal);\n          const mealTime = getMealTime(dayData, meal);\n          \n          return (\n            <MealCell\n              key={`${dayIndex}-${mealIndex}`}\n              config={config}\n              dayIndex={dayIndex}\n              mealIndex={mealIndex}\n              mealData={mealData}\n              mealTime={mealTime}\n            />\n          );\n        });\n      })}\n    </g>\n  );\n};\n\n\n// --- Main Component ---\nconst MealContentsChart = ({ patientId = 'Patient_001', isExpanded, onExpand, isPhysicianView = false }) => {\n  const [selectedWeek, setSelectedWeek] = useState(DEFAULT_WEEK);\n  const [containerWidth, setContainerWidth] = useState(500);\n  const { mealData: patientData, loading, error } = usePatientData(patientId);\n  const containerRef = React.useRef(null);\n\n  const config = getChartConfig(isExpanded, containerWidth);\n  const weekStart = getWeekStart(selectedWeek);\n  const weekDays = Array.from({ length: 7 }, (_, i) => {\n    const day = new Date(weekStart);\n    day.setDate(weekStart.getDate() + i);\n    return day;\n  });\n\n  const handlePrevWeek = () => setSelectedWeek(prev => new Date(new Date(prev).setDate(prev.getDate() - 7)));\n  const handleNextWeek = () => setSelectedWeek(prev => new Date(new Date(prev).setDate(prev.getDate() + 7)));\n\n  const startOfWeek = new Date(weekStart);\n  const endOfWeek = new Date(startOfWeek);\n  endOfWeek.setDate(endOfWeek.getDate() + 6);\n\n  const formatDateRange = (start, end) => {\n    const startStr = start.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\n    const endStr = end.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\n    return `${startStr} to ${endStr}`;\n  };\n\n  // Calculate summary statistics for physician view\n  const weekSummary = useMemo(() => {\n    if (!patientData || patientData.length === 0) return null;\n\n    const weekData = patientData.filter(d => {\n      const dataDate = new Date(d.Date);\n      return dataDate >= startOfWeek && dataDate <= endOfWeek;\n    });\n\n    if (weekData.length === 0) return null;\n\n    // Count food categories across all meals\n    const categoryStats = {};\n    FOOD_CATEGORIES.forEach(category => {\n      categoryStats[category] = 0;\n    });\n\n    // Count sugar levels\n    const sugarStats = {};\n    SUGAR_CATEGORIES.filter(s => s !== '').forEach(sugar => {\n      sugarStats[sugar] = 0;\n    });\n\n    let totalMealsLogged = 0;\n    let daysWithMeals = new Set();\n\n    weekData.forEach(dayData => {\n      daysWithMeals.add(dayData.Date);\n      \n      MEAL_TYPES.forEach(meal => {\n        const mealData = getMealData(dayData, meal);\n        const hasAnyFood = FOOD_CATEGORIES.some(category => mealData[category]);\n        \n        if (hasAnyFood) {\n          totalMealsLogged++;\n          \n          // Count each food category\n          FOOD_CATEGORIES.forEach(category => {\n            if (mealData[category]) {\n              categoryStats[category]++;\n            }\n          });\n\n          // Count sugar levels\n          if (mealData['Added Sugar'] && mealData['Added Sugar'] !== '') {\n            sugarStats[mealData['Added Sugar']]++;\n          }\n        }\n      });\n    });\n\n    // Find most common food category\n    const mostCommonFood = Object.entries(categoryStats)\n      .sort(([,a], [,b]) => b - a)[0];\n\n    // Calculate sugar frequency\n    const totalSugarMeals = Object.values(sugarStats).reduce((sum, count) => sum + count, 0);\n    const sugarPercentage = totalMealsLogged > 0 ? \n      ((totalSugarMeals / totalMealsLogged) * 100).toFixed(0) : 0;\n\n    return {\n      totalMealsLogged,\n      daysWithMeals: daysWithMeals.size,\n      mostCommonFood: mostCommonFood[0],\n      mostCommonFoodCount: mostCommonFood[1],\n      categoryStats,\n      sugarPercentage,\n      totalSugarMeals\n    };\n  }, [patientData, startOfWeek, endOfWeek]);\n\n\n  \n  return (\n    <ChartContainer\n      title=\"Meal Contents\"\n      icon=\"🍽️\"\n      isLoading={loading}\n      error={error}\n      noData={!loading && !error && (!patientData || patientData.length === 0)}\n      isExpanded={isExpanded}\n      onExpand={onExpand}\n      onPrev={handlePrevWeek}\n      onNext={handleNextWeek}\n      navigationLabel={formatDateRange(startOfWeek, endOfWeek)}\n    >\n      <div className=\"meal-contents-chart-container\">\n        <div className=\"meal-contents-legends-wrapper\">\n            <Legend \n              title=\"Food Categories\" \n              items={FOOD_CATEGORIES.map(category => ({\n                label: `${CATEGORY_EMOJIS[category]} ${category}`,\n                color: null\n              }))}\n            />\n            <Legend \n              title=\"Sugar Levels\" \n              items={SUGAR_CATEGORIES.filter(sugar => sugar !== '').map(sugar => ({\n                label: `${SUGAR_EMOJIS[sugar]} ${sugar}`,\n                color: null\n              }))}\n            />\n        </div>\n        <div className={`meal-chart-wrapper ${isExpanded ? 'expanded' : ''}`}>\n          <svg width=\"100%\" height=\"100%\" viewBox={`0 0 ${config.width} ${config.height}`} className=\"meal-chart\">\n            <XAxis config={config} weekDays={weekDays} />\n            <YAxis config={config} />\n            <MealGrid \n              config={config} \n              weekDays={weekDays} \n              patientData={patientData} \n            />\n          </svg>\n        </div>\n\n        {/* Show summary for physician view only */}\n        {isPhysicianView && weekSummary && (\n          <div className=\"meal-summary\">\n            <h4>Week Summary</h4>\n            <div className=\"summary-stats\">\n              <div className=\"stat-item\">\n                <span className=\"stat-label\">Meals Logged:</span>\n                <span className=\"stat-value\">\n                  {weekSummary.totalMealsLogged}/21 possible\n                </span>\n              </div>\n              <div className=\"stat-item\">\n                <span className=\"stat-label\">Days with Meals:</span>\n                <span className=\"stat-value\">\n                  {weekSummary.daysWithMeals}/7 days\n                </span>\n              </div>\n              <div className=\"stat-item\">\n                <span className=\"stat-label\">Most Common Food:</span>\n                <span className=\"stat-value\">\n                  {CATEGORY_EMOJIS[weekSummary.mostCommonFood]} {weekSummary.mostCommonFood} ({weekSummary.mostCommonFoodCount}x)\n                </span>\n              </div>\n              <div className=\"stat-item\">\n                <span className=\"stat-label\">Added Sugar:</span>\n                <span className=\"stat-value\">\n                  {weekSummary.sugarPercentage}% of meals ({weekSummary.totalSugarMeals}/{weekSummary.totalMealsLogged})\n                </span>\n              </div>\n              <div className=\"stat-item\">\n                <span className=\"stat-label\">Food Balance:</span>\n                <span className=\"stat-value\">\n                  {Object.entries(weekSummary.categoryStats)\n                    .sort(([,a], [,b]) => b - a)\n                    .slice(0, 3)\n                    .map(([cat, count]) => `${CATEGORY_EMOJIS[cat]}${count}`)\n                    .join(' ')}\n                </span>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </ChartContainer>\n  );\n};\n\nexport default MealContentsChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}