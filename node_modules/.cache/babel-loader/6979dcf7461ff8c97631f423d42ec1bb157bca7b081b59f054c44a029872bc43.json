{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matteo\\\\Working_Folder\\\\a. MCC Thesis Local\\\\MCC_digital_health_data_visualizations\\\\src\\\\components\\\\patient_charts\\\\MealContentsChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useMemo } from 'react';\nimport Legend from '../Legend';\nimport usePatientData from '../../hooks/usePatientData';\nimport useChartNavigation from '../../hooks/useChartNavigation';\nimport useContainerWidth from '../../hooks/useContainerWidth';\nimport { createChartConfig } from '../chart-utils/ChartConfigFactory';\nimport './MealContentsChart.css';\nimport '../ChartStyles.css';\n\n// --- Constants ---\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DAYS_OF_WEEK = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\nconst MEAL_TYPES = ['Breakfast', 'Lunch', 'Dinner', 'Late Night Snack'];\nconst FOOD_CATEGORIES = ['Protein', 'Carbohydrates', 'Vegetables', 'Fruit', 'Alcohol'];\nconst SUGAR_CATEGORIES = ['', '1-20g', '20-40g', '40-60g', '60g+'];\nconst DEFAULT_WEEK = new Date(2025, 4, 1);\n\n// Emoji mappings for food categories\nconst CATEGORY_EMOJIS = {\n  'Protein': '🥩',\n  'Carbohydrates': '🍞',\n  'Vegetables': '🥦',\n  'Fruit': '🍎',\n  'Alcohol': '🍷'\n};\nconst SUGAR_EMOJIS = {\n  '': '',\n  // No sugar\n  '1-20g': '🍭',\n  // Lollipop\n  '20-40g': '🍫',\n  // Chocolate bar\n  '40-60g': '🍩',\n  // Donut\n  '60g+': '🎂' // Cake\n};\n\n// --- Helper Functions ---\nconst getWeekStart = date => {\n  const d = new Date(date);\n  const day = d.getDay();\n  const diff = d.getDate() - day;\n  return new Date(d.setDate(diff));\n};\nconst formatDayLabel = date => {\n  const dayNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n  return dayNames[date.getDay()];\n};\nconst formatDateLabel = date => date.toLocaleDateString('en-US', {\n  month: 'short',\n  day: 'numeric'\n});\nconst getMealTime = (data, mealType) => {\n  // Convert meal type to the correct column name format (with underscores)\n  const columnPrefix = mealType.replace(/\\s+/g, '_');\n  const timeKey = `${columnPrefix}_Time`;\n  return data[timeKey] || '';\n};\nconst getMealData = (data, mealType) => {\n  const mealData = {};\n\n  // Convert meal type to the correct column name format (with underscores)\n  const columnPrefix = mealType.replace(/\\s+/g, '_');\n  FOOD_CATEGORIES.forEach(category => {\n    const key = `${columnPrefix}_${category}`;\n    // Handle both numeric (1, 0) and string ('1', '0') values\n    mealData[category] = data[key] === 1 || data[key] === '1';\n  });\n  const sugarKey = `${columnPrefix}_Added_Sugar`;\n  mealData['Added Sugar'] = data[sugarKey] || '';\n  return mealData;\n};\n\n// --- Chart Sub-components ---\n\nconst XAxis = ({\n  config,\n  weekDays\n}) => /*#__PURE__*/_jsxDEV(\"g\", {\n  className: \"x-axis\",\n  children: [weekDays.map((day, dayIndex) => {\n    const x = config.padding.left + dayIndex * config.dayWidth + config.dayWidth / 2;\n    return /*#__PURE__*/_jsxDEV(\"g\", {\n      children: [/*#__PURE__*/_jsxDEV(\"text\", {\n        x: x,\n        y: config.height - config.padding.bottom + 30,\n        fontSize: config.fontSize.dayLabel,\n        textAnchor: \"middle\",\n        className: \"x-axis-day-label\",\n        children: formatDayLabel(day)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: x,\n        y: config.height - config.padding.bottom + 45,\n        fontSize: config.fontSize.dateLabel,\n        textAnchor: \"middle\",\n        className: \"x-axis-date-label\",\n        children: day.getDate()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n        className: \"chart-grid-line-vertical\",\n        x1: config.padding.left + dayIndex * config.dayWidth,\n        y1: config.padding.top,\n        x2: config.padding.left + dayIndex * config.dayWidth,\n        y2: config.height - config.padding.bottom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, dayIndex, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this);\n  }), /*#__PURE__*/_jsxDEV(\"line\", {\n    className: \"chart-grid-line-vertical\",\n    x1: config.padding.left + 7 * config.dayWidth,\n    y1: config.padding.top,\n    x2: config.padding.left + 7 * config.dayWidth,\n    y2: config.height - config.padding.bottom\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 79,\n  columnNumber: 3\n}, this);\n_c = XAxis;\nconst YAxis = ({\n  config\n}) => {\n  // Calculate dynamic text positioning based on available space\n  const getTextX = textLength => {\n    // Base offset from the chart area\n    const baseOffset = 10;\n    // Calculate position to ensure text doesn't get cut off\n    // For longer text like \"Late Night Snack\", position it closer to the chart\n    const dynamicOffset = textLength > 10 ? 5 : 25;\n    return Math.max(baseOffset, config.padding.left - dynamicOffset);\n  };\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    className: \"y-axis\",\n    children: [MEAL_TYPES.map((meal, mealIndex) => {\n      const y = config.padding.top + mealIndex * config.mealHeight + config.mealHeight / 2;\n      const textX = getTextX(meal.length);\n      return /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"text\", {\n          x: textX,\n          y: y,\n          fontSize: config.fontSize.mealLabel,\n          textAnchor: \"end\",\n          className: \"y-axis-title\",\n          children: meal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n          className: \"chart-grid-line-horizontal\",\n          x1: config.padding.left,\n          y1: config.padding.top + mealIndex * config.mealHeight,\n          x2: config.padding.left + 7 * config.dayWidth,\n          y2: config.padding.top + mealIndex * config.mealHeight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this)]\n      }, meal, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"line\", {\n      className: \"chart-grid-line-horizontal\",\n      x1: config.padding.left,\n      y1: config.padding.top + 4 * config.mealHeight,\n      x2: config.padding.left + 7 * config.dayWidth,\n      y2: config.padding.top + 4 * config.mealHeight\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n};\n_c2 = YAxis;\nconst MealCell = ({\n  config,\n  dayIndex,\n  mealIndex,\n  mealData,\n  mealTime,\n  isExpanded\n}) => {\n  const x = config.padding.left + dayIndex * config.dayWidth + 5;\n  const y = config.padding.top + mealIndex * config.mealHeight + 5;\n  const cellWidth = config.dayWidth - 10;\n  const cellHeight = config.mealHeight - 10;\n\n  // Calculate grid layout for 6 circles (2x3 grid)\n  const circlesPerRow = 3;\n  const circleWidth = cellWidth / circlesPerRow;\n  const circleHeight = (cellHeight - 20) / 2; // Reserve space for time\n\n  // Calculate responsive circle radius and emoji size based on cell dimensions\n  const minDimension = Math.min(circleWidth, circleHeight);\n  const circleRadius = Math.max(8, Math.min(16, minDimension * 0.35)); // Min 8px, max 16px, 35% of min dimension\n  const emojiFontSize = Math.max(8, Math.min(16, minDimension * 0.4)); // Min 8px, max 16px, 40% of min dimension for better visibility\n\n  // Apply expanded view scaling\n  const expandedCircleRadius = isExpanded ? circleRadius * 1.3 : circleRadius;\n  const expandedEmojiFontSize = isExpanded ? emojiFontSize * 1.4 : emojiFontSize;\n\n  // Define the 6 food categories in order (5 main + 1 sugar)\n  const allCategories = [...FOOD_CATEGORIES, 'Added Sugar'];\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    className: \"meal-cell\",\n    children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n      x: x,\n      y: y,\n      width: cellWidth,\n      height: cellHeight,\n      fill: \"#f9f9f9\",\n      stroke: \"#ddd\",\n      strokeWidth: \"1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      x: x + cellWidth / 2,\n      y: y + 12,\n      fontSize: config.fontSize.timeLabel,\n      textAnchor: \"middle\",\n      className: \"time-label\",\n      children: mealTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), allCategories.map((category, index) => {\n      const row = Math.floor(index / circlesPerRow);\n      const col = index % circlesPerRow;\n      const circleX = x + col * circleWidth + circleWidth / 2;\n      const circleY = y + 20 + row * circleHeight + circleHeight / 2;\n\n      // Check if category is present\n      let hasCategory = false;\n      let emoji = '';\n      if (category === 'Added Sugar') {\n        hasCategory = mealData[category] && SUGAR_EMOJIS[mealData[category]];\n        emoji = SUGAR_EMOJIS[mealData[category]] || '';\n      } else {\n        hasCategory = mealData[category];\n        emoji = CATEGORY_EMOJIS[category] || '';\n      }\n      return /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: circleX,\n          cy: circleY,\n          r: expandedCircleRadius,\n          fill: \"#f5f5f5\",\n          stroke: \"#ddd\",\n          strokeWidth: \"1\",\n          opacity: 0.3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this), hasCategory && emoji && /*#__PURE__*/_jsxDEV(\"text\", {\n          x: circleX,\n          y: circleY,\n          fontSize: expandedEmojiFontSize,\n          textAnchor: \"middle\",\n          dominantBaseline: \"central\",\n          style: {\n            fontFamily: 'Apple Color Emoji, Segoe UI Emoji, Noto Color Emoji, sans-serif'\n          },\n          children: emoji\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 15\n        }, this)]\n      }, category, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 5\n  }, this);\n};\n_c3 = MealCell;\nconst MealGrid = ({\n  config,\n  weekDays,\n  patientData,\n  isExpanded\n}) => {\n  if (!patientData || patientData.length === 0) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    className: \"meal-grid\",\n    children: weekDays.map((day, dayIndex) => {\n      const dayData = patientData.find(d => {\n        const dataDate = new Date(d.Date);\n        return dataDate.toDateString() === day.toDateString();\n      });\n      if (!dayData) {\n        return null;\n      }\n      return MEAL_TYPES.map((meal, mealIndex) => {\n        const mealData = getMealData(dayData, meal);\n        const mealTime = getMealTime(dayData, meal);\n\n        // Debug logging removed for production\n\n        return /*#__PURE__*/_jsxDEV(MealCell, {\n          config: config,\n          dayIndex: dayIndex,\n          mealIndex: mealIndex,\n          mealData: mealData,\n          mealTime: mealTime,\n          isExpanded: isExpanded\n        }, `${dayIndex}-${mealIndex}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this);\n      });\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 275,\n    columnNumber: 5\n  }, this);\n};\n\n// --- Main Component ---\n_c4 = MealGrid;\nconst MealContentsChart = ({\n  patientId,\n  isExpanded = false,\n  onExpand,\n  viewMode = 'patient',\n  navigation\n}) => {\n  _s();\n  const {\n    mealData: patientData,\n    loading,\n    error\n  } = usePatientData(patientId);\n\n  // Use navigation from parent or fallback to internal navigation\n  const useInternalNavigation = !navigation;\n  const internalNavigation = useChartNavigation('mealContents');\n  const nav = navigation || internalNavigation;\n\n  // Use our new consistent container width hook\n  const {\n    containerRef,\n    containerWidth\n  } = useContainerWidth(isExpanded);\n  const config = createChartConfig('mealContents', isExpanded, containerWidth);\n\n  // Measure container width for responsive sizing\n  useEffect(() => {\n    const updateContainerWidth = () => {\n      if (containerRef.current) {\n        const width = containerRef.current.offsetWidth;\n        setContainerWidth(width);\n      }\n    };\n    updateContainerWidth();\n    window.addEventListener('resize', updateContainerWidth);\n    return () => window.removeEventListener('resize', updateContainerWidth);\n  }, [isExpanded]);\n  const {\n    start: startOfWeek,\n    end: endOfWeek\n  } = nav.getDateRange();\n  const weekDays = Array.from({\n    length: 7\n  }, (_, i) => {\n    const day = new Date(startOfWeek);\n    day.setDate(startOfWeek.getDate() + i);\n    return day;\n  });\n  const formatDateRange = (start, end) => {\n    const startStr = start.toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric'\n    });\n    const endStr = end.toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric'\n    });\n    return `${startStr} to ${endStr}`;\n  };\n\n  // Calculate summary statistics for physician view\n  const weekSummary = React.useMemo(() => {\n    if (!patientData || patientData.length === 0) return null;\n    const weekData = patientData.filter(d => {\n      const dataDate = new Date(d.Date);\n      return dataDate >= startOfWeek && dataDate <= endOfWeek;\n    });\n    if (weekData.length === 0) return null;\n\n    // Count food categories across all meals\n    const categoryStats = {};\n    FOOD_CATEGORIES.forEach(category => {\n      categoryStats[category] = 0;\n    });\n\n    // Count sugar levels\n    const sugarStats = {};\n    SUGAR_CATEGORIES.filter(s => s !== '').forEach(sugar => {\n      sugarStats[sugar] = 0;\n    });\n    let totalMealsLogged = 0;\n    let daysWithMeals = new Set();\n    weekData.forEach(dayData => {\n      daysWithMeals.add(dayData.Date);\n      MEAL_TYPES.forEach(meal => {\n        const mealData = getMealData(dayData, meal);\n        const hasAnyFood = FOOD_CATEGORIES.some(category => mealData[category]);\n        if (hasAnyFood) {\n          totalMealsLogged++;\n\n          // Count each food category\n          FOOD_CATEGORIES.forEach(category => {\n            if (mealData[category]) {\n              categoryStats[category]++;\n            }\n          });\n\n          // Count sugar levels\n          if (mealData['Added Sugar'] && mealData['Added Sugar'] !== '') {\n            sugarStats[mealData['Added Sugar']]++;\n          }\n        }\n      });\n    });\n\n    // Find most common food category\n    const mostCommonFood = Object.entries(categoryStats).sort(([, a], [, b]) => b - a)[0];\n\n    // Calculate sugar frequency\n    const totalSugarMeals = Object.values(sugarStats).reduce((sum, count) => sum + count, 0);\n    const sugarPercentage = totalMealsLogged > 0 ? (totalSugarMeals / totalMealsLogged * 100).toFixed(0) : 0;\n    return {\n      totalMealsLogged,\n      daysWithMeals: daysWithMeals.size,\n      mostCommonFood: mostCommonFood[0],\n      mostCommonFoodCount: mostCommonFood[1],\n      categoryStats,\n      sugarPercentage,\n      totalSugarMeals\n    };\n  }, [patientData, startOfWeek, endOfWeek]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"meal-contents-chart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"chart-title\",\n      children: \"Meal Contents\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"chart-subtitle\",\n      children: nav.getCurrentMonthYear()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `meal-chart-wrapper ${isExpanded ? 'expanded' : ''}`,\n      ref: containerRef,\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        width: config.width,\n        height: config.height,\n        viewBox: `0 0 ${config.width} ${config.height}`,\n        className: \"meal-chart\",\n        style: {\n          maxWidth: '100%',\n          height: 'auto'\n        },\n        children: [/*#__PURE__*/_jsxDEV(XAxis, {\n          config: config,\n          weekDays: weekDays\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          config: config\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MealGrid, {\n          config: config,\n          weekDays: weekDays,\n          patientData: patientData,\n          isExpanded: isExpanded\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meal-contents-legends-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(Legend, {\n        title: \"Food Categories\",\n        items: FOOD_CATEGORIES.map(category => ({\n          label: `${CATEGORY_EMOJIS[category]} ${category}`,\n          color: null\n        })),\n        isExpanded: isExpanded\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {\n        title: \"Sugar Levels\",\n        items: SUGAR_CATEGORIES.filter(sugar => sugar !== '').map(sugar => ({\n          label: `${SUGAR_EMOJIS[sugar]} ${sugar}`,\n          color: null\n        })),\n        isExpanded: isExpanded\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 9\n    }, this), viewMode === 'physician' && weekSummary && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meal-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Week Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Meals Logged:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: [weekSummary.totalMealsLogged, \"/28 possible\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Days with Meals:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: [weekSummary.daysWithMeals, \"/7 days\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Most Common Food:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: [weekSummary.mostCommonFood && CATEGORY_EMOJIS[weekSummary.mostCommonFood], \" \", weekSummary.mostCommonFood, \" (\", weekSummary.mostCommonFoodCount || 0, \"x)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Added Sugar:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: [weekSummary.sugarPercentage, \"% of meals (\", weekSummary.totalSugarMeals, \"/\", weekSummary.totalMealsLogged, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Food Balance:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: weekSummary.categoryStats && Object.entries(weekSummary.categoryStats).sort(([, a], [, b]) => b - a).slice(0, 3).map(([cat, count]) => `${CATEGORY_EMOJIS[cat]}${count}`).join(' ')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 425,\n    columnNumber: 7\n  }, this);\n};\n_s(MealContentsChart, \"PffQf4/YRzGRKoR1MofQmGr9WOY=\", false, function () {\n  return [usePatientData, useChartNavigation, useContainerWidth];\n});\n_c5 = MealContentsChart;\nexport default MealContentsChart;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"XAxis\");\n$RefreshReg$(_c2, \"YAxis\");\n$RefreshReg$(_c3, \"MealCell\");\n$RefreshReg$(_c4, \"MealGrid\");\n$RefreshReg$(_c5, \"MealContentsChart\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useMemo","Legend","usePatientData","useChartNavigation","useContainerWidth","createChartConfig","jsxDEV","_jsxDEV","DAYS_OF_WEEK","MEAL_TYPES","FOOD_CATEGORIES","SUGAR_CATEGORIES","DEFAULT_WEEK","Date","CATEGORY_EMOJIS","SUGAR_EMOJIS","getWeekStart","date","d","day","getDay","diff","getDate","setDate","formatDayLabel","dayNames","formatDateLabel","toLocaleDateString","month","getMealTime","data","mealType","columnPrefix","replace","timeKey","getMealData","mealData","forEach","category","key","sugarKey","XAxis","config","weekDays","className","children","map","dayIndex","x","padding","left","dayWidth","y","height","bottom","fontSize","dayLabel","textAnchor","fileName","_jsxFileName","lineNumber","columnNumber","dateLabel","x1","y1","top","x2","y2","_c","YAxis","getTextX","textLength","baseOffset","dynamicOffset","Math","max","meal","mealIndex","mealHeight","textX","length","mealLabel","_c2","MealCell","mealTime","isExpanded","cellWidth","cellHeight","circlesPerRow","circleWidth","circleHeight","minDimension","min","circleRadius","emojiFontSize","expandedCircleRadius","expandedEmojiFontSize","allCategories","width","fill","stroke","strokeWidth","timeLabel","index","row","floor","col","circleX","circleY","hasCategory","emoji","cx","cy","r","opacity","dominantBaseline","style","fontFamily","_c3","MealGrid","patientData","dayData","find","dataDate","toDateString","_c4","MealContentsChart","patientId","onExpand","viewMode","navigation","_s","loading","error","useInternalNavigation","internalNavigation","nav","containerRef","containerWidth","updateContainerWidth","current","offsetWidth","setContainerWidth","window","addEventListener","removeEventListener","start","startOfWeek","end","endOfWeek","getDateRange","Array","from","_","i","formatDateRange","startStr","endStr","weekSummary","weekData","filter","categoryStats","sugarStats","s","sugar","totalMealsLogged","daysWithMeals","Set","add","hasAnyFood","some","mostCommonFood","Object","entries","sort","a","b","totalSugarMeals","values","reduce","sum","count","sugarPercentage","toFixed","size","mostCommonFoodCount","getCurrentMonthYear","ref","viewBox","maxWidth","title","items","label","color","slice","cat","join","_c5","$RefreshReg$"],"sources":["C:/Users/Matteo/Working_Folder/a. MCC Thesis Local/MCC_digital_health_data_visualizations/src/components/patient_charts/MealContentsChart.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useMemo } from 'react';\nimport Legend from '../Legend';\nimport usePatientData from '../../hooks/usePatientData';\nimport useChartNavigation from '../../hooks/useChartNavigation';\nimport useContainerWidth from '../../hooks/useContainerWidth';\nimport { createChartConfig } from '../chart-utils/ChartConfigFactory';\n\nimport './MealContentsChart.css';\nimport '../ChartStyles.css';\n\n// --- Constants ---\nconst DAYS_OF_WEEK = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\nconst MEAL_TYPES = ['Breakfast', 'Lunch', 'Dinner', 'Late Night Snack'];\nconst FOOD_CATEGORIES = ['Protein', 'Carbohydrates', 'Vegetables', 'Fruit', 'Alcohol'];\nconst SUGAR_CATEGORIES = ['', '1-20g', '20-40g', '40-60g', '60g+'];\nconst DEFAULT_WEEK = new Date(2025, 4, 1);\n\n// Emoji mappings for food categories\nconst CATEGORY_EMOJIS = {\n  'Protein': '🥩',\n  'Carbohydrates': '🍞',\n  'Vegetables': '🥦',\n  'Fruit': '🍎',\n  'Alcohol': '🍷'\n};\n\nconst SUGAR_EMOJIS = {\n  '': '',              // No sugar\n  '1-20g': '🍭',       // Lollipop\n  '20-40g': '🍫',      // Chocolate bar\n  '40-60g': '🍩',      // Donut\n  '60g+': '🎂'         // Cake\n};\n\n\n\n// --- Helper Functions ---\nconst getWeekStart = (date) => {\n  const d = new Date(date);\n  const day = d.getDay();\n  const diff = d.getDate() - day;\n  return new Date(d.setDate(diff));\n};\n\nconst formatDayLabel = (date) => {\n  const dayNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n  return dayNames[date.getDay()];\n};\nconst formatDateLabel = (date) => date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\n\nconst getMealTime = (data, mealType) => {\n  // Convert meal type to the correct column name format (with underscores)\n  const columnPrefix = mealType.replace(/\\s+/g, '_');\n  const timeKey = `${columnPrefix}_Time`;\n  return data[timeKey] || '';\n};\n\nconst getMealData = (data, mealType) => {\n  const mealData = {};\n  \n  // Convert meal type to the correct column name format (with underscores)\n  const columnPrefix = mealType.replace(/\\s+/g, '_');\n  \n  FOOD_CATEGORIES.forEach(category => {\n    const key = `${columnPrefix}_${category}`;\n    // Handle both numeric (1, 0) and string ('1', '0') values\n    mealData[category] = data[key] === 1 || data[key] === '1';\n  });\n  \n  const sugarKey = `${columnPrefix}_Added_Sugar`;\n  mealData['Added Sugar'] = data[sugarKey] || '';\n  \n  return mealData;\n};\n\n// --- Chart Sub-components ---\n\nconst XAxis = ({ config, weekDays }) => (\n  <g className=\"x-axis\">\n    {weekDays.map((day, dayIndex) => {\n      const x = config.padding.left + dayIndex * config.dayWidth + config.dayWidth / 2;\n      return (\n        <g key={dayIndex}>\n          <text\n            x={x}\n            y={config.height - config.padding.bottom + 30}\n            fontSize={config.fontSize.dayLabel}\n            textAnchor=\"middle\"\n            className=\"x-axis-day-label\"\n          >\n            {formatDayLabel(day)}\n          </text>\n          <text\n            x={x}\n            y={config.height - config.padding.bottom + 45}\n            fontSize={config.fontSize.dateLabel}\n            textAnchor=\"middle\"\n            className=\"x-axis-date-label\"\n          >\n            {day.getDate()}\n          </text>\n          <line\n            className=\"chart-grid-line-vertical\"\n            x1={config.padding.left + dayIndex * config.dayWidth}\n            y1={config.padding.top}\n            x2={config.padding.left + dayIndex * config.dayWidth}\n            y2={config.height - config.padding.bottom}\n          />\n        </g>\n      );\n    })}\n    <line\n      className=\"chart-grid-line-vertical\"\n      x1={config.padding.left + 7 * config.dayWidth}\n      y1={config.padding.top}\n      x2={config.padding.left + 7 * config.dayWidth}\n      y2={config.height - config.padding.bottom}\n    />\n  </g>\n);\n\nconst YAxis = ({ config }) => {\n  // Calculate dynamic text positioning based on available space\n  const getTextX = (textLength) => {\n    // Base offset from the chart area\n    const baseOffset = 10;\n    // Calculate position to ensure text doesn't get cut off\n    // For longer text like \"Late Night Snack\", position it closer to the chart\n    const dynamicOffset = textLength > 10 ? 5 : 25;\n    return Math.max(baseOffset, config.padding.left - dynamicOffset);\n  };\n\n  return (\n    <g className=\"y-axis\">\n      {MEAL_TYPES.map((meal, mealIndex) => {\n        const y = config.padding.top + mealIndex * config.mealHeight + config.mealHeight / 2;\n        const textX = getTextX(meal.length);\n        \n        return (\n          <g key={meal}>\n            <text\n              x={textX}\n              y={y}\n              fontSize={config.fontSize.mealLabel}\n              textAnchor=\"end\"\n              className=\"y-axis-title\"\n            >\n              {meal}\n            </text>\n            <line\n              className=\"chart-grid-line-horizontal\"\n              x1={config.padding.left}\n              y1={config.padding.top + mealIndex * config.mealHeight}\n              x2={config.padding.left + 7 * config.dayWidth}\n              y2={config.padding.top + mealIndex * config.mealHeight}\n            />\n          </g>\n        );\n      })}\n      <line\n        className=\"chart-grid-line-horizontal\"\n        x1={config.padding.left}\n        y1={config.padding.top + 4 * config.mealHeight}\n        x2={config.padding.left + 7 * config.dayWidth}\n        y2={config.padding.top + 4 * config.mealHeight}\n      />\n    </g>\n  );\n};\n\nconst MealCell = ({ config, dayIndex, mealIndex, mealData, mealTime, isExpanded }) => {\n  const x = config.padding.left + dayIndex * config.dayWidth + 5;\n  const y = config.padding.top + mealIndex * config.mealHeight + 5;\n  const cellWidth = config.dayWidth - 10;\n  const cellHeight = config.mealHeight - 10;\n  \n  // Calculate grid layout for 6 circles (2x3 grid)\n  const circlesPerRow = 3;\n  const circleWidth = cellWidth / circlesPerRow;\n  const circleHeight = (cellHeight - 20) / 2; // Reserve space for time\n  \n  // Calculate responsive circle radius and emoji size based on cell dimensions\n  const minDimension = Math.min(circleWidth, circleHeight);\n  const circleRadius = Math.max(8, Math.min(16, minDimension * 0.35)); // Min 8px, max 16px, 35% of min dimension\n  const emojiFontSize = Math.max(8, Math.min(16, minDimension * 0.4)); // Min 8px, max 16px, 40% of min dimension for better visibility\n  \n  // Apply expanded view scaling\n  const expandedCircleRadius = isExpanded ? circleRadius * 1.3 : circleRadius;\n  const expandedEmojiFontSize = isExpanded ? emojiFontSize * 1.4 : emojiFontSize;\n  \n  // Define the 6 food categories in order (5 main + 1 sugar)\n  const allCategories = [...FOOD_CATEGORIES, 'Added Sugar'];\n  \n  return (\n    <g className=\"meal-cell\">\n      {/* Background */}\n      <rect\n        x={x}\n        y={y}\n        width={cellWidth}\n        height={cellHeight}\n        fill=\"#f9f9f9\"\n        stroke=\"#ddd\"\n        strokeWidth=\"1\"\n      />\n      \n      {/* Meal time at the top */}\n      <text\n        x={x + cellWidth / 2}\n        y={y + 12}\n        fontSize={config.fontSize.timeLabel}\n        textAnchor=\"middle\"\n        className=\"time-label\"\n      >\n        {mealTime}\n      </text>\n      \n      {/* 6 placeholder circles with food category emojis */}\n      {allCategories.map((category, index) => {\n        const row = Math.floor(index / circlesPerRow);\n        const col = index % circlesPerRow;\n        const circleX = x + col * circleWidth + circleWidth / 2;\n        const circleY = y + 20 + row * circleHeight + circleHeight / 2;\n        \n        // Check if category is present\n        let hasCategory = false;\n        let emoji = '';\n        \n        if (category === 'Added Sugar') {\n          hasCategory = mealData[category] && SUGAR_EMOJIS[mealData[category]];\n          emoji = SUGAR_EMOJIS[mealData[category]] || '';\n        } else {\n          hasCategory = mealData[category];\n          emoji = CATEGORY_EMOJIS[category] || '';\n        }\n        \n        return (\n          <g key={category}>\n            {/* Placeholder circle - always grey */}\n            <circle\n              cx={circleX}\n              cy={circleY}\n              r={expandedCircleRadius}\n              fill=\"#f5f5f5\"\n              stroke=\"#ddd\"\n              strokeWidth=\"1\"\n              opacity={0.3}\n            />\n            {/* Emoji if category is present */}\n            {hasCategory && emoji && (\n              <text\n                x={circleX}\n                y={circleY}\n                fontSize={expandedEmojiFontSize}\n                textAnchor=\"middle\"\n                dominantBaseline=\"central\"\n                style={{ fontFamily: 'Apple Color Emoji, Segoe UI Emoji, Noto Color Emoji, sans-serif' }}\n              >\n                {emoji}\n              </text>\n            )}\n          </g>\n        );\n      })}\n    </g>\n  );\n};\n\nconst MealGrid = ({ config, weekDays, patientData, isExpanded }) => {\n  if (!patientData || patientData.length === 0) {\n    return null;\n  }\n\n  return (\n    <g className=\"meal-grid\">\n      {weekDays.map((day, dayIndex) => {\n        const dayData = patientData.find(d => {\n          const dataDate = new Date(d.Date);\n          return dataDate.toDateString() === day.toDateString();\n        });\n\n        if (!dayData) {\n          return null;\n        }\n\n        return MEAL_TYPES.map((meal, mealIndex) => {\n          const mealData = getMealData(dayData, meal);\n          const mealTime = getMealTime(dayData, meal);\n          \n          // Debug logging removed for production\n          \n          return (\n            <MealCell\n              key={`${dayIndex}-${mealIndex}`}\n              config={config}\n              dayIndex={dayIndex}\n              mealIndex={mealIndex}\n              mealData={mealData}\n              mealTime={mealTime}\n              isExpanded={isExpanded}\n            />\n          );\n        });\n      })}\n    </g>\n  );\n};\n\n\n// --- Main Component ---\nconst MealContentsChart = ({ patientId, isExpanded = false, onExpand, viewMode = 'patient', navigation }) => {\n  const { mealData: patientData, loading, error } = usePatientData(patientId);\n  \n  // Use navigation from parent or fallback to internal navigation\n  const useInternalNavigation = !navigation;\n  const internalNavigation = useChartNavigation('mealContents');\n  const nav = navigation || internalNavigation;\n  \n  // Use our new consistent container width hook\n  const { containerRef, containerWidth } = useContainerWidth(isExpanded);\n\n  const config = createChartConfig('mealContents', isExpanded, containerWidth);\n  \n  // Measure container width for responsive sizing\n  useEffect(() => {\n    const updateContainerWidth = () => {\n      if (containerRef.current) {\n        const width = containerRef.current.offsetWidth;\n        setContainerWidth(width);\n      }\n    };\n\n    updateContainerWidth();\n    window.addEventListener('resize', updateContainerWidth);\n    return () => window.removeEventListener('resize', updateContainerWidth);\n  }, [isExpanded]);\n\n  const { start: startOfWeek, end: endOfWeek } = nav.getDateRange();\n  const weekDays = Array.from({ length: 7 }, (_, i) => {\n    const day = new Date(startOfWeek);\n    day.setDate(startOfWeek.getDate() + i);\n    return day;\n  });\n\n  const formatDateRange = (start, end) => {\n    const startStr = start.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\n    const endStr = end.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\n    return `${startStr} to ${endStr}`;\n  };\n\n  // Calculate summary statistics for physician view\n  const weekSummary = React.useMemo(() => {\n    if (!patientData || patientData.length === 0) return null;\n\n    const weekData = patientData.filter(d => {\n      const dataDate = new Date(d.Date);\n      return dataDate >= startOfWeek && dataDate <= endOfWeek;\n    });\n\n    if (weekData.length === 0) return null;\n\n    // Count food categories across all meals\n    const categoryStats = {};\n    FOOD_CATEGORIES.forEach(category => {\n      categoryStats[category] = 0;\n    });\n\n    // Count sugar levels\n    const sugarStats = {};\n    SUGAR_CATEGORIES.filter(s => s !== '').forEach(sugar => {\n      sugarStats[sugar] = 0;\n    });\n\n    let totalMealsLogged = 0;\n    let daysWithMeals = new Set();\n\n    weekData.forEach(dayData => {\n      daysWithMeals.add(dayData.Date);\n      \n      MEAL_TYPES.forEach(meal => {\n        const mealData = getMealData(dayData, meal);\n        const hasAnyFood = FOOD_CATEGORIES.some(category => mealData[category]);\n        \n        if (hasAnyFood) {\n          totalMealsLogged++;\n          \n          // Count each food category\n          FOOD_CATEGORIES.forEach(category => {\n            if (mealData[category]) {\n              categoryStats[category]++;\n            }\n          });\n\n          // Count sugar levels\n          if (mealData['Added Sugar'] && mealData['Added Sugar'] !== '') {\n            sugarStats[mealData['Added Sugar']]++;\n          }\n        }\n      });\n    });\n\n    // Find most common food category\n    const mostCommonFood = Object.entries(categoryStats)\n      .sort(([,a], [,b]) => b - a)[0];\n\n    // Calculate sugar frequency\n    const totalSugarMeals = Object.values(sugarStats).reduce((sum, count) => sum + count, 0);\n    const sugarPercentage = totalMealsLogged > 0 ? \n      ((totalSugarMeals / totalMealsLogged) * 100).toFixed(0) : 0;\n\n    return {\n      totalMealsLogged,\n      daysWithMeals: daysWithMeals.size,\n      mostCommonFood: mostCommonFood[0],\n      mostCommonFoodCount: mostCommonFood[1],\n      categoryStats,\n      sugarPercentage,\n      totalSugarMeals\n    };\n  }, [patientData, startOfWeek, endOfWeek]);\n\n\n  \n  return (\n      <div className=\"meal-contents-chart-container\">\n        <h3 className=\"chart-title\">Meal Contents</h3>\n        <h4 className=\"chart-subtitle\">{nav.getCurrentMonthYear()}</h4>\n        <div className={`meal-chart-wrapper ${isExpanded ? 'expanded' : ''}`} ref={containerRef}>\n          <svg \n            width={config.width} \n            height={config.height} \n            viewBox={`0 0 ${config.width} ${config.height}`} \n            className=\"meal-chart\"\n            style={{ maxWidth: '100%', height: 'auto' }}\n          >\n            <XAxis config={config} weekDays={weekDays} />\n            <YAxis config={config} />\n            <MealGrid \n              config={config} \n              weekDays={weekDays} \n              patientData={patientData} \n              isExpanded={isExpanded}\n            />\n          </svg>\n        </div>\n        \n        <div className=\"meal-contents-legends-wrapper\">\n            <Legend \n              title=\"Food Categories\" \n              items={FOOD_CATEGORIES.map(category => ({\n                label: `${CATEGORY_EMOJIS[category]} ${category}`,\n                color: null\n              }))}\n              isExpanded={isExpanded}\n            />\n            <Legend \n              title=\"Sugar Levels\" \n              items={SUGAR_CATEGORIES.filter(sugar => sugar !== '').map(sugar => ({\n                label: `${SUGAR_EMOJIS[sugar]} ${sugar}`,\n                color: null\n              }))}\n              isExpanded={isExpanded}\n            />\n        </div>\n\n        {/* Show summary for physician view only */}\n        {viewMode === 'physician' && weekSummary && (\n          <div className=\"meal-summary\">\n            <h4>Week Summary</h4>\n            <div className=\"summary-stats\">\n              <div className=\"stat-item\">\n                <span className=\"stat-label\">Meals Logged:</span>\n                <span className=\"stat-value\">\n                  {weekSummary.totalMealsLogged}/28 possible\n                </span>\n              </div>\n              <div className=\"stat-item\">\n                <span className=\"stat-label\">Days with Meals:</span>\n                <span className=\"stat-value\">\n                  {weekSummary.daysWithMeals}/7 days\n                </span>\n              </div>\n              <div className=\"stat-item\">\n                <span className=\"stat-label\">Most Common Food:</span>\n                <span className=\"stat-value\">\n                  {weekSummary.mostCommonFood && CATEGORY_EMOJIS[weekSummary.mostCommonFood]} {weekSummary.mostCommonFood} ({weekSummary.mostCommonFoodCount || 0}x)\n                </span>\n              </div>\n              <div className=\"stat-item\">\n                <span className=\"stat-label\">Added Sugar:</span>\n                <span className=\"stat-value\">\n                  {weekSummary.sugarPercentage}% of meals ({weekSummary.totalSugarMeals}/{weekSummary.totalMealsLogged})\n                </span>\n              </div>\n              <div className=\"stat-item\">\n                <span className=\"stat-label\">Food Balance:</span>\n                <span className=\"stat-value\">\n                  {weekSummary.categoryStats && Object.entries(weekSummary.categoryStats)\n                    .sort(([,a], [,b]) => b - a)\n                    .slice(0, 3)\n                    .map(([cat, count]) => `${CATEGORY_EMOJIS[cat]}${count}`)\n                    .join(' ')}\n                </span>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n  );\n};\n\nexport default MealContentsChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}