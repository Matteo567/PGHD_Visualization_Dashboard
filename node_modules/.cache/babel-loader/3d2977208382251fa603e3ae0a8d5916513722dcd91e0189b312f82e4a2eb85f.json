{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matteo\\\\Working_Folder\\\\a. MCC Thesis Local\\\\MCC_digital_health_data_visualizations\\\\src\\\\components\\\\Legend.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport './ChartStyles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Legend = ({\n  title,\n  items,\n  orientation = 'horizontal',\n  // horizontal | vertical\n  size = 'medium',\n  // small | medium | large\n  containerWidth = null // Keep for backward compatibility, but will be overridden by auto-sizing\n}) => {\n  _s();\n  const legendRef = useRef(null);\n  const [parentWidth, setParentWidth] = useState(null);\n  useEffect(() => {\n    const updateWidth = () => {\n      if (legendRef.current) {\n        // Find the parent visualization container\n        const parentContainer = legendRef.current.closest('.visualization-content, .chart-section, .bp-chart-content, .glucose-chart-wrapper, .exercise-chart-content, .sleep-chart-content, .pain-chart-container, .meal-contents-chart-container, .mood-calendar-container');\n        if (parentContainer) {\n          const width = parentContainer.offsetWidth;\n          setParentWidth(width);\n        }\n      }\n    };\n    updateWidth();\n\n    // Update on resize\n    const resizeObserver = new ResizeObserver(updateWidth);\n    if (legendRef.current) {\n      resizeObserver.observe(legendRef.current);\n    }\n\n    // Also listen for window resize as fallback\n    window.addEventListener('resize', updateWidth);\n    return () => {\n      resizeObserver.disconnect();\n      window.removeEventListener('resize', updateWidth);\n    };\n  }, []);\n  if (!items || items.length === 0) {\n    return null;\n  }\n\n  // Use parent width if available, otherwise fall back to containerWidth prop or default\n  const finalWidth = parentWidth || containerWidth;\n  const containerStyle = finalWidth ? {\n    width: finalWidth,\n    maxWidth: finalWidth\n  } : {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: legendRef,\n    className: `legend-container legend-${orientation} legend-${size}`,\n    style: containerStyle,\n    children: [title && /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"legend-title\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"legend-items\",\n      children: items.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"legend-item\",\n        style: item.style,\n        title: item.description || item.label,\n        children: [item.color && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"legend-color-indicator\",\n          style: {\n            backgroundColor: item.color\n          },\n          \"aria-label\": `Color indicator for ${item.label}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this), item.icon && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"legend-icon\",\n          \"aria-label\": `Icon for ${item.label}`,\n          children: item.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this), item.shape && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `legend-shape legend-shape-${item.shape}`,\n          style: item.shapeStyle,\n          \"aria-label\": `${item.shape} indicator for ${item.label}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"legend-label\",\n          children: item.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(Legend, \"rpWups8cgYpTmICj+CkEJ27JoIk=\");\n_c = Legend;\nexport default Legend;\nvar _c;\n$RefreshReg$(_c, \"Legend\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","Legend","title","items","orientation","size","containerWidth","_s","legendRef","parentWidth","setParentWidth","updateWidth","current","parentContainer","closest","width","offsetWidth","resizeObserver","ResizeObserver","observe","window","addEventListener","disconnect","removeEventListener","length","finalWidth","containerStyle","maxWidth","ref","className","style","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","description","label","color","backgroundColor","icon","shape","shapeStyle","_c","$RefreshReg$"],"sources":["C:/Users/Matteo/Working_Folder/a. MCC Thesis Local/MCC_digital_health_data_visualizations/src/components/Legend.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport './ChartStyles.css';\r\n\r\nconst Legend = ({ \r\n  title, \r\n  items, \r\n  orientation = 'horizontal', // horizontal | vertical\r\n  size = 'medium', // small | medium | large\r\n  containerWidth = null // Keep for backward compatibility, but will be overridden by auto-sizing\r\n}) => {\r\n  const legendRef = useRef(null);\r\n  const [parentWidth, setParentWidth] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const updateWidth = () => {\r\n      if (legendRef.current) {\r\n        // Find the parent visualization container\r\n        const parentContainer = legendRef.current.closest('.visualization-content, .chart-section, .bp-chart-content, .glucose-chart-wrapper, .exercise-chart-content, .sleep-chart-content, .pain-chart-container, .meal-contents-chart-container, .mood-calendar-container');\r\n        \r\n        if (parentContainer) {\r\n          const width = parentContainer.offsetWidth;\r\n          setParentWidth(width);\r\n        }\r\n      }\r\n    };\r\n\r\n    updateWidth();\r\n    \r\n    // Update on resize\r\n    const resizeObserver = new ResizeObserver(updateWidth);\r\n    if (legendRef.current) {\r\n      resizeObserver.observe(legendRef.current);\r\n    }\r\n\r\n    // Also listen for window resize as fallback\r\n    window.addEventListener('resize', updateWidth);\r\n    \r\n    return () => {\r\n      resizeObserver.disconnect();\r\n      window.removeEventListener('resize', updateWidth);\r\n    };\r\n  }, []);\r\n\r\n  if (!items || items.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  // Use parent width if available, otherwise fall back to containerWidth prop or default\r\n  const finalWidth = parentWidth || containerWidth;\r\n  const containerStyle = finalWidth ? { width: finalWidth, maxWidth: finalWidth } : {};\r\n\r\n  return (\r\n    <div \r\n      ref={legendRef}\r\n      className={`legend-container legend-${orientation} legend-${size}`}\r\n      style={containerStyle}\r\n    >\r\n      {title && <h4 className=\"legend-title\">{title}</h4>}\r\n      <div className=\"legend-items\">\r\n        {items.map((item, index) => (\r\n          <div \r\n            key={index} \r\n            className=\"legend-item\" \r\n            style={item.style}\r\n            title={item.description || item.label}\r\n          >\r\n            {/* Color indicator */}\r\n            {item.color && (\r\n              <span \r\n                className=\"legend-color-indicator\" \r\n                style={{ backgroundColor: item.color }}\r\n                aria-label={`Color indicator for ${item.label}`}\r\n              />\r\n            )}\r\n            \r\n            {/* Icon/emoji indicator */}\r\n            {item.icon && (\r\n              <span \r\n                className=\"legend-icon\"\r\n                aria-label={`Icon for ${item.label}`}\r\n              >\r\n                {item.icon}\r\n              </span>\r\n            )}\r\n            \r\n            {/* Shape indicator for special cases */}\r\n            {item.shape && (\r\n              <span \r\n                className={`legend-shape legend-shape-${item.shape}`}\r\n                style={item.shapeStyle}\r\n                aria-label={`${item.shape} indicator for ${item.label}`}\r\n              />\r\n            )}\r\n            \r\n            {/* Label */}\r\n            <span className=\"legend-label\">{item.label}</span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Legend;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}