{"ast":null,"code":"import React from'react';/**\r\n * Shared hook for common visualization helper functions\r\n * Extracts duplicate logic from PatientDashboard and PhysicianDashboard\r\n */import{jsx as _jsx}from\"react/jsx-runtime\";const useVisualizationHelpers=(patientId,allVisualizations,selectedVisualizations)=>{const[expandedItem,setExpandedItem]=React.useState(null);const handleExpand=React.useCallback(itemId=>{setExpandedItem(prev=>prev===itemId?null:itemId);},[]);const renderVisualization=React.useCallback((visualizationType,itemId)=>{if(!patientId){return/*#__PURE__*/_jsx(\"div\",{className:\"chart-placeholder\",children:\"Please select a patient to view data.\"});}const viz=allVisualizations[visualizationType];if(!viz)return/*#__PURE__*/_jsx(\"div\",{className:\"chart-placeholder\",children:\"Invalid visualization\"});const Component=viz.component;const isExpanded=expandedItem===itemId;return/*#__PURE__*/_jsx(Component,{patientId:patientId,isExpanded:isExpanded,onExpand:()=>handleExpand(itemId),viewMode:\"patient\"// This will be overridden by the calling component\n});},[patientId,allVisualizations,expandedItem,handleExpand]);return{expandedItem,handleExpand,renderVisualization};};export default useVisualizationHelpers;","map":{"version":3,"names":["React","jsx","_jsx","useVisualizationHelpers","patientId","allVisualizations","selectedVisualizations","expandedItem","setExpandedItem","useState","handleExpand","useCallback","itemId","prev","renderVisualization","visualizationType","className","children","viz","Component","component","isExpanded","onExpand","viewMode"],"sources":["C:/Users/Matteo/Working_Folder/a. MCC Thesis Local/MCC_digital_health_data_visualizations/src/hooks/useVisualizationHelpers.js"],"sourcesContent":["import React from 'react';\r\n\r\n/**\r\n * Shared hook for common visualization helper functions\r\n * Extracts duplicate logic from PatientDashboard and PhysicianDashboard\r\n */\r\nconst useVisualizationHelpers = (patientId, allVisualizations, selectedVisualizations) => {\r\n  const [expandedItem, setExpandedItem] = React.useState(null);\r\n\r\n  const handleExpand = React.useCallback((itemId) => {\r\n    setExpandedItem(prev => (prev === itemId ? null : itemId));\r\n  }, []);\r\n\r\n  const renderVisualization = React.useCallback((visualizationType, itemId) => {\r\n    if (!patientId) {\r\n      return <div className=\"chart-placeholder\">Please select a patient to view data.</div>;\r\n    }\r\n    \r\n    const viz = allVisualizations[visualizationType];\r\n    if (!viz) return <div className=\"chart-placeholder\">Invalid visualization</div>;\r\n\r\n    const Component = viz.component;\r\n    const isExpanded = expandedItem === itemId;\r\n    return <Component \r\n      patientId={patientId} \r\n      isExpanded={isExpanded} \r\n      onExpand={() => handleExpand(itemId)}\r\n      viewMode=\"patient\" // This will be overridden by the calling component\r\n    />;\r\n  }, [patientId, allVisualizations, expandedItem, handleExpand]);\r\n\r\n  return {\r\n    expandedItem,\r\n    handleExpand,\r\n    renderVisualization\r\n  };\r\n};\r\n\r\nexport default useVisualizationHelpers;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB;AACA;AACA;AACA,GAHA,OAAAC,GAAA,IAAAC,IAAA,yBAIA,KAAM,CAAAC,uBAAuB,CAAGA,CAACC,SAAS,CAAEC,iBAAiB,CAAEC,sBAAsB,GAAK,CACxF,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAC,CAAGR,KAAK,CAACS,QAAQ,CAAC,IAAI,CAAC,CAE5D,KAAM,CAAAC,YAAY,CAAGV,KAAK,CAACW,WAAW,CAAEC,MAAM,EAAK,CACjDJ,eAAe,CAACK,IAAI,EAAKA,IAAI,GAAKD,MAAM,CAAG,IAAI,CAAGA,MAAO,CAAC,CAC5D,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAE,mBAAmB,CAAGd,KAAK,CAACW,WAAW,CAAC,CAACI,iBAAiB,CAAEH,MAAM,GAAK,CAC3E,GAAI,CAACR,SAAS,CAAE,CACd,mBAAOF,IAAA,QAAKc,SAAS,CAAC,mBAAmB,CAAAC,QAAA,CAAC,uCAAqC,CAAK,CAAC,CACvF,CAEA,KAAM,CAAAC,GAAG,CAAGb,iBAAiB,CAACU,iBAAiB,CAAC,CAChD,GAAI,CAACG,GAAG,CAAE,mBAAOhB,IAAA,QAAKc,SAAS,CAAC,mBAAmB,CAAAC,QAAA,CAAC,uBAAqB,CAAK,CAAC,CAE/E,KAAM,CAAAE,SAAS,CAAGD,GAAG,CAACE,SAAS,CAC/B,KAAM,CAAAC,UAAU,CAAGd,YAAY,GAAKK,MAAM,CAC1C,mBAAOV,IAAA,CAACiB,SAAS,EACff,SAAS,CAAEA,SAAU,CACrBiB,UAAU,CAAEA,UAAW,CACvBC,QAAQ,CAAEA,CAAA,GAAMZ,YAAY,CAACE,MAAM,CAAE,CACrCW,QAAQ,CAAC,SAAU;AAAA,CACpB,CAAC,CACJ,CAAC,CAAE,CAACnB,SAAS,CAAEC,iBAAiB,CAAEE,YAAY,CAAEG,YAAY,CAAC,CAAC,CAE9D,MAAO,CACLH,YAAY,CACZG,YAAY,CACZI,mBACF,CAAC,CACH,CAAC,CAED,cAAe,CAAAX,uBAAuB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}