{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matteo\\\\Working_Folder\\\\a. MCC Thesis Local\\\\MCC_digital_health_data_visualizations\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, useNavigate, useParams } from 'react-router-dom';\nimport WelcomeScreen from './WelcomeScreen';\nimport PatientDashboard from './PatientDashboard';\nimport PhysicianDashboard from './PhysicianDashboard';\nimport PatientSelector from './PatientSelector';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport DataService from './services/dataService';\nimport './App.css';\n\n// Constants\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PATIENT_COUNT = 100;\nconst PATIENTS = Array.from({\n  length: PATIENT_COUNT\n}, (_, i) => `Patient_${(i + 1).toString().padStart(3, '0')}`);\n\n// Dummy patient data for demonstration\nconst PATIENT_DATA = {\n  Patient_001: {\n    name: 'John Smith',\n    age: 45,\n    diseases: ['Diabetes', 'Hypertension'],\n    medications: {\n      scheduled: ['Metformin', 'Lisinopril'],\n      asNeeded: ['Ibuprofen']\n    }\n  }\n  // ...add more patients as needed\n};\n\n// Default patient info when data is not available\nconst getDefaultPatientInfo = patientId => ({\n  name: patientId,\n  age: 'N/A',\n  diseases: [],\n  medications: {\n    scheduled: [],\n    asNeeded: []\n  }\n});\nfunction App() {\n  _s();\n  useEffect(() => {\n    DataService.clearCache();\n    console.log('Application cache cleared on startup.');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(WelcomeScreen, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/patient\",\n          element: /*#__PURE__*/_jsxDEV(PatientEntry, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/patient/:patientId\",\n          element: /*#__PURE__*/_jsxDEV(PatientDashboardWrapper, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 54\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/physician\",\n          element: /*#__PURE__*/_jsxDEV(PhysicianDashboardWrapper, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nfunction PatientEntry() {\n  _s2();\n  const [selectedPatient, setSelectedPatient] = useState('');\n  const navigate = useNavigate();\n  const handleGoToDashboard = () => {\n    if (selectedPatient) {\n      navigate(`/patient/${selectedPatient}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      marginTop: 80\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Please select your patient ID #.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PatientSelector, {\n      patients: PATIENTS,\n      value: selectedPatient,\n      onChange: setSelectedPatient\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        fontSize: 20,\n        marginTop: 24,\n        padding: '10px 30px'\n      },\n      onClick: handleGoToDashboard,\n      disabled: !selectedPatient,\n      children: \"Go to Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s2(PatientEntry, \"i8BaJ1PBThKvqhVbquXKzyLfxio=\", false, function () {\n  return [useNavigate];\n});\n_c2 = PatientEntry;\nfunction PatientDashboardWrapper() {\n  _s3();\n  const {\n    patientId\n  } = useParams();\n  const info = PATIENT_DATA[patientId] || getDefaultPatientInfo(patientId);\n  return /*#__PURE__*/_jsxDEV(PatientDashboard, {\n    patientId: patientId,\n    patientInfo: {\n      name: info.name,\n      age: info.age,\n      diseases: info.diseases\n    },\n    medicationInfo: info.medications\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n_s3(PatientDashboardWrapper, \"IUZCPG9Xp8cU7prdZd8FEJBhrRY=\", false, function () {\n  return [useParams];\n});\n_c3 = PatientDashboardWrapper;\nfunction PhysicianDashboardWrapper() {\n  return /*#__PURE__*/_jsxDEV(PhysicianDashboard, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n_c4 = PhysicianDashboardWrapper;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"PatientEntry\");\n$RefreshReg$(_c3, \"PatientDashboardWrapper\");\n$RefreshReg$(_c4, \"PhysicianDashboardWrapper\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","useNavigate","useParams","WelcomeScreen","PatientDashboard","PhysicianDashboard","PatientSelector","ErrorBoundary","DataService","jsxDEV","_jsxDEV","PATIENT_COUNT","PATIENTS","Array","from","length","_","i","toString","padStart","PATIENT_DATA","Patient_001","name","age","diseases","medications","scheduled","asNeeded","getDefaultPatientInfo","patientId","App","_s","clearCache","console","log","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","PatientEntry","PatientDashboardWrapper","PhysicianDashboardWrapper","_c","_s2","selectedPatient","setSelectedPatient","navigate","handleGoToDashboard","style","display","flexDirection","alignItems","marginTop","patients","value","onChange","fontSize","padding","onClick","disabled","_c2","_s3","info","patientInfo","medicationInfo","_c3","_c4","$RefreshReg$"],"sources":["C:/Users/Matteo/Working_Folder/a. MCC Thesis Local/MCC_digital_health_data_visualizations/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, useNavigate, useParams } from 'react-router-dom';\nimport WelcomeScreen from './WelcomeScreen';\nimport PatientDashboard from './PatientDashboard';\nimport PhysicianDashboard from './PhysicianDashboard';\nimport PatientSelector from './PatientSelector';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport DataService from './services/dataService';\nimport './App.css';\n\n// Constants\nconst PATIENT_COUNT = 100;\nconst PATIENTS = Array.from({ length: PATIENT_COUNT }, (_, i) => `Patient_${(i+1).toString().padStart(3, '0')}`);\n\n// Dummy patient data for demonstration\nconst PATIENT_DATA = {\n  Patient_001: {\n    name: 'John Smith',\n    age: 45,\n    diseases: ['Diabetes', 'Hypertension'],\n    medications: {\n      scheduled: ['Metformin', 'Lisinopril'],\n      asNeeded: ['Ibuprofen']\n    }\n  },\n  // ...add more patients as needed\n};\n\n// Default patient info when data is not available\nconst getDefaultPatientInfo = (patientId) => ({\n  name: patientId,\n  age: 'N/A',\n  diseases: [],\n  medications: { scheduled: [], asNeeded: [] }\n});\n\nfunction App() {\n  useEffect(() => {\n    DataService.clearCache();\n    console.log('Application cache cleared on startup.');\n  }, []);\n\n  return (\n    <ErrorBoundary>\n      <Router>\n        <Routes>\n          <Route path=\"/\" element={<WelcomeScreen />} />\n          <Route path=\"/patient\" element={<PatientEntry />} />\n          <Route path=\"/patient/:patientId\" element={<PatientDashboardWrapper />} />\n          <Route path=\"/physician\" element={<PhysicianDashboardWrapper />} />\n        </Routes>\n      </Router>\n    </ErrorBoundary>\n  );\n}\n\nfunction PatientEntry() {\n  const [selectedPatient, setSelectedPatient] = useState('');\n  const navigate = useNavigate();\n  \n  const handleGoToDashboard = () => {\n    if (selectedPatient) {\n      navigate(`/patient/${selectedPatient}`);\n    }\n  };\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', marginTop: 80 }}>\n      <h2>Please select your patient ID #.</h2>\n      <PatientSelector\n        patients={PATIENTS}\n        value={selectedPatient}\n        onChange={setSelectedPatient}\n      />\n      <button\n        style={{ fontSize: 20, marginTop: 24, padding: '10px 30px' }}\n        onClick={handleGoToDashboard}\n        disabled={!selectedPatient}\n      >\n        Go to Dashboard\n      </button>\n    </div>\n  );\n}\n\nfunction PatientDashboardWrapper() {\n  const { patientId } = useParams();\n  const info = PATIENT_DATA[patientId] || getDefaultPatientInfo(patientId);\n  \n  return (\n    <PatientDashboard\n      patientId={patientId}\n      patientInfo={{ name: info.name, age: info.age, diseases: info.diseases }}\n      medicationInfo={info.medications}\n    />\n  );\n}\n\nfunction PhysicianDashboardWrapper() {\n  return (\n    <PhysicianDashboard />\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}