{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matteo\\\\Working_Folder\\\\a. MCC Thesis Local\\\\MCC_digital_health_data_visualizations\\\\src\\\\components\\\\DashboardGrid.js\";\nimport React from 'react';\nimport VisualizationWrapper from './VisualizationWrapper';\nimport './DashboardGrid.css';\n\n/**\r\n * Shared component for rendering dashboard grids with visualization wrappers\r\n * Handles the repetitive VisualizationWrapper rendering logic\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardGrid = ({\n  viewMode,\n  // 'patient' or 'physician'\n  selectedVisualizations,\n  availableVisualizations,\n  allVisualizations,\n  onVisualizationChange,\n  onExpand,\n  expandedItem,\n  renderVisualization,\n  disabled = false,\n  placeholderText = \"No data available for this patient.\"\n}) => {\n  // Configuration for different view modes\n  const gridConfig = {\n    patient: {\n      className: 'dashboard-grid',\n      chartIds: ['box1', 'box2', 'box3'],\n      chartClassNames: ['visualization-box', 'visualization-box-1', 'visualization-box-2', 'visualization-box-3']\n    },\n    physician: {\n      className: 'physician-charts-grid',\n      chartIds: ['window1', 'window2', 'window3', 'window4', 'window5', 'window6'],\n      chartClassNames: ['physician-chart-container', 'window-1', 'window-2', 'window-3', 'window-4', 'window-5', 'window-6']\n    }\n  };\n  const config = gridConfig[viewMode];\n\n  // If there's an expanded item, show only that\n  if (expandedItem) {\n    return /*#__PURE__*/_jsxDEV(VisualizationWrapper, {\n      id: expandedItem,\n      className: `${config.chartClassNames[0]} expanded-view`,\n      selectedViz: selectedVisualizations[expandedItem],\n      availableVisualizations: availableVisualizations,\n      allVisualizations: allVisualizations,\n      onVisualizationChange: onVisualizationChange,\n      onExpand: onExpand,\n      isExpanded: true,\n      renderVisualization: renderVisualization,\n      disabled: disabled,\n      placeholderText: placeholderText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Render the grid of visualization wrappers\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: config.className,\n    children: config.chartIds.map((chartId, index) => /*#__PURE__*/_jsxDEV(VisualizationWrapper, {\n      id: chartId,\n      className: `${config.chartClassNames[0]} ${config.chartClassNames[index + 1] || ''}`,\n      selectedViz: selectedVisualizations[chartId],\n      availableVisualizations: availableVisualizations,\n      allVisualizations: allVisualizations,\n      onVisualizationChange: onVisualizationChange,\n      onExpand: onExpand,\n      isExpanded: expandedItem === chartId,\n      renderVisualization: renderVisualization,\n      disabled: disabled,\n      placeholderText: placeholderText\n    }, chartId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_c = DashboardGrid;\nexport default DashboardGrid;\nvar _c;\n$RefreshReg$(_c, \"DashboardGrid\");","map":{"version":3,"names":["React","VisualizationWrapper","jsxDEV","_jsxDEV","DashboardGrid","viewMode","selectedVisualizations","availableVisualizations","allVisualizations","onVisualizationChange","onExpand","expandedItem","renderVisualization","disabled","placeholderText","gridConfig","patient","className","chartIds","chartClassNames","physician","config","id","selectedViz","isExpanded","fileName","_jsxFileName","lineNumber","columnNumber","children","map","chartId","index","_c","$RefreshReg$"],"sources":["C:/Users/Matteo/Working_Folder/a. MCC Thesis Local/MCC_digital_health_data_visualizations/src/components/DashboardGrid.js"],"sourcesContent":["import React from 'react';\r\nimport VisualizationWrapper from './VisualizationWrapper';\r\nimport './DashboardGrid.css';\r\n\r\n/**\r\n * Shared component for rendering dashboard grids with visualization wrappers\r\n * Handles the repetitive VisualizationWrapper rendering logic\r\n */\r\nconst DashboardGrid = ({\r\n  viewMode, // 'patient' or 'physician'\r\n  selectedVisualizations,\r\n  availableVisualizations,\r\n  allVisualizations,\r\n  onVisualizationChange,\r\n  onExpand,\r\n  expandedItem,\r\n  renderVisualization,\r\n  disabled = false,\r\n  placeholderText = \"No data available for this patient.\"\r\n}) => {\r\n  // Configuration for different view modes\r\n  const gridConfig = {\r\n    patient: {\r\n      className: 'dashboard-grid',\r\n      chartIds: ['box1', 'box2', 'box3'],\r\n      chartClassNames: ['visualization-box', 'visualization-box-1', 'visualization-box-2', 'visualization-box-3']\r\n    },\r\n    physician: {\r\n      className: 'physician-charts-grid',\r\n      chartIds: ['window1', 'window2', 'window3', 'window4', 'window5', 'window6'],\r\n      chartClassNames: ['physician-chart-container', 'window-1', 'window-2', 'window-3', 'window-4', 'window-5', 'window-6']\r\n    }\r\n  };\r\n\r\n  const config = gridConfig[viewMode];\r\n\r\n  // If there's an expanded item, show only that\r\n  if (expandedItem) {\r\n    return (\r\n      <VisualizationWrapper\r\n        id={expandedItem}\r\n        className={`${config.chartClassNames[0]} expanded-view`}\r\n        selectedViz={selectedVisualizations[expandedItem]}\r\n        availableVisualizations={availableVisualizations}\r\n        allVisualizations={allVisualizations}\r\n        onVisualizationChange={onVisualizationChange}\r\n        onExpand={onExpand}\r\n        isExpanded={true}\r\n        renderVisualization={renderVisualization}\r\n        disabled={disabled}\r\n        placeholderText={placeholderText}\r\n      />\r\n    );\r\n  }\r\n\r\n  // Render the grid of visualization wrappers\r\n  return (\r\n    <div className={config.className}>\r\n      {config.chartIds.map((chartId, index) => (\r\n        <VisualizationWrapper\r\n          key={chartId}\r\n          id={chartId}\r\n          className={`${config.chartClassNames[0]} ${config.chartClassNames[index + 1] || ''}`}\r\n          selectedViz={selectedVisualizations[chartId]}\r\n          availableVisualizations={availableVisualizations}\r\n          allVisualizations={allVisualizations}\r\n          onVisualizationChange={onVisualizationChange}\r\n          onExpand={onExpand}\r\n          isExpanded={expandedItem === chartId}\r\n          renderVisualization={renderVisualization}\r\n          disabled={disabled}\r\n          placeholderText={placeholderText}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardGrid;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}