{"ast":null,"code":"import React,{useState,useMemo}from'react';import usePatientData from'../../hooks/usePatientData';import ChartContainer from'../ChartContainer';import Legend from'../Legend';import'./MealContentsChart.css';import'../ChartStyles.css';// --- Constants ---\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DAYS_OF_WEEK=['Sun','Mon','Tue','Wed','Thu','Fri','Sat'];const MEAL_TYPES=['Breakfast','Lunch','Dinner'];const FOOD_CATEGORIES=['Protein','Carbohydrates','Vegetables','Fruit','Alcohol'];const SUGAR_CATEGORIES=['','1-20g','20-40g','40-60g','60g+'];const DEFAULT_WEEK=new Date(2025,4,1);// Emoji mappings for food categories\nconst CATEGORY_EMOJIS={'Protein':'🥩','Carbohydrates':'🍞','Vegetables':'🥦','Fruit':'🍎','Alcohol':'🍷'};const SUGAR_EMOJIS={'':'',// No sugar\n'1-20g':'🍭',// Lollipop\n'20-40g':'🍫',// Chocolate bar\n'40-60g':'🍩',// Donut\n'60g+':'🎂'// Cake\n};const getChartConfig=isExpanded=>({width:isExpanded?700:500,height:isExpanded?400:300,padding:{top:40,right:30,bottom:80,left:110},dayWidth:isExpanded?85:60,mealHeight:isExpanded?80:60,fontSize:{dayLabel:isExpanded?10:8,dateLabel:isExpanded?8:6,mealLabel:isExpanded?8:6,timeLabel:isExpanded?6:5}});// --- Helper Functions ---\nconst getWeekStart=date=>{const d=new Date(date);const day=d.getDay();const diff=d.getDate()-day;return new Date(d.setDate(diff));};const formatDayLabel=date=>date.toLocaleDateString('en-US',{weekday:'short'});const formatDateLabel=date=>date.toLocaleDateString('en-US',{month:'short',day:'numeric'});const getMealTime=(data,mealType)=>{const timeKey=\"\".concat(mealType,\"_Time\");return data[timeKey]||'';};const getMealData=(data,mealType)=>{const mealData={};FOOD_CATEGORIES.forEach(category=>{const key=\"\".concat(mealType,\"_\").concat(category);mealData[category]=data[key]===1||data[key]==='1';});const sugarKey=\"\".concat(mealType,\"_Added_Sugar\");mealData['Added Sugar']=data[sugarKey]||'';return mealData;};// --- Chart Sub-components ---\nconst XAxis=_ref=>{let{config,weekDays}=_ref;return/*#__PURE__*/_jsxs(\"g\",{className:\"x-axis\",children:[weekDays.map((day,dayIndex)=>{const x=config.padding.left+dayIndex*config.dayWidth+config.dayWidth/2;return/*#__PURE__*/_jsxs(\"g\",{children:[/*#__PURE__*/_jsx(\"text\",{x:x,y:config.height-config.padding.bottom+30,fontSize:config.fontSize.dayLabel,textAnchor:\"middle\",fill:\"#333\",fontWeight:\"600\",children:DAYS_OF_WEEK[day.getDay()]}),/*#__PURE__*/_jsx(\"text\",{x:x,y:config.height-config.padding.bottom+45,fontSize:config.fontSize.dateLabel,textAnchor:\"middle\",fill:\"#666\",children:day.getDate()}),/*#__PURE__*/_jsx(\"line\",{className:\"chart-grid-line-vertical\",x1:config.padding.left+dayIndex*config.dayWidth,y1:config.padding.top,x2:config.padding.left+dayIndex*config.dayWidth,y2:config.height-config.padding.bottom})]},dayIndex);}),/*#__PURE__*/_jsx(\"line\",{className:\"chart-grid-line-vertical\",x1:config.padding.left+7*config.dayWidth,y1:config.padding.top,x2:config.padding.left+7*config.dayWidth,y2:config.height-config.padding.bottom})]});};const YAxis=_ref2=>{let{config}=_ref2;const mealTimes={'Breakfast':'6-10am','Lunch':'11-2pm','Dinner':'5-9pm'};return/*#__PURE__*/_jsxs(\"g\",{className:\"y-axis\",children:[MEAL_TYPES.map((meal,mealIndex)=>{const y=config.padding.top+mealIndex*config.mealHeight+config.mealHeight/2;return/*#__PURE__*/_jsxs(\"g\",{children:[/*#__PURE__*/_jsx(\"text\",{x:config.padding.left-25,y:y-5,fontSize:config.fontSize.mealLabel,textAnchor:\"end\",fill:\"#333\",fontWeight:\"600\",children:meal}),/*#__PURE__*/_jsx(\"text\",{x:config.padding.left-25,y:y+10,fontSize:config.fontSize.timeLabel,textAnchor:\"end\",fill:\"#666\",children:mealTimes[meal]}),/*#__PURE__*/_jsx(\"line\",{className:\"chart-grid-line-horizontal\",x1:config.padding.left,y1:config.padding.top+mealIndex*config.mealHeight,x2:config.padding.left+7*config.dayWidth,y2:config.padding.top+mealIndex*config.mealHeight})]},meal);}),/*#__PURE__*/_jsx(\"line\",{className:\"chart-grid-line-horizontal\",x1:config.padding.left,y1:config.padding.top+3*config.mealHeight,x2:config.padding.left+7*config.dayWidth,y2:config.padding.top+3*config.mealHeight})]});};const MealCell=_ref3=>{let{config,dayIndex,mealIndex,mealData,mealTime}=_ref3;const x=config.padding.left+dayIndex*config.dayWidth+5;const y=config.padding.top+mealIndex*config.mealHeight+5;const cellWidth=config.dayWidth-10;const cellHeight=config.mealHeight-10;// Calculate grid layout for food categories (2x3 grid)\nconst categoriesPerRow=3;const categoryWidth=cellWidth/categoriesPerRow;const categoryHeight=(cellHeight-20)/2;// Reserve space for time and sugar\nreturn/*#__PURE__*/_jsxs(\"g\",{className:\"meal-cell\",children:[/*#__PURE__*/_jsx(\"rect\",{x:x,y:y,width:cellWidth,height:cellHeight,fill:\"#f9f9f9\",stroke:\"#ddd\",strokeWidth:\"1\"}),/*#__PURE__*/_jsx(\"text\",{x:x+cellWidth/2,y:y+12,fontSize:config.fontSize.timeLabel,textAnchor:\"middle\",fill:\"#666\",children:mealTime}),FOOD_CATEGORIES.map((category,index)=>{const row=Math.floor(index/categoriesPerRow);const col=index%categoriesPerRow;const categoryX=x+col*categoryWidth+categoryWidth/2;const categoryY=y+20+row*categoryHeight+categoryHeight/2;const hasCategory=mealData[category];return/*#__PURE__*/_jsxs(\"g\",{children:[/*#__PURE__*/_jsx(\"circle\",{cx:categoryX,cy:categoryY,r:\"12\",fill:hasCategory?\"#f0f8ff\":\"#f5f5f5\",stroke:\"#ddd\",strokeWidth:\"1\",opacity:hasCategory?1:0.3}),hasCategory&&/*#__PURE__*/_jsx(\"text\",{x:categoryX,y:categoryY,fontSize:\"10\",textAnchor:\"middle\",dominantBaseline:\"central\",style:{fontFamily:'Apple Color Emoji, Segoe UI Emoji, Noto Color Emoji, sans-serif'},children:CATEGORY_EMOJIS[category]})]},category);}),(()=>{const sugarRow=1;// Second row\nconst sugarCol=2;// Third column (next to alcohol which is at col 1 in row 1)\nconst sugarX=x+sugarCol*categoryWidth+categoryWidth/2;const sugarY=y+20+sugarRow*categoryHeight+categoryHeight/2;const hasSugar=mealData['Added Sugar']&&SUGAR_EMOJIS[mealData['Added Sugar']];return/*#__PURE__*/_jsxs(\"g\",{children:[/*#__PURE__*/_jsx(\"circle\",{cx:sugarX,cy:sugarY,r:\"12\",fill:hasSugar?\"#fff0f5\":\"#f5f5f5\",stroke:\"#ddd\",strokeWidth:\"1\",opacity:hasSugar?1:0.3}),hasSugar&&/*#__PURE__*/_jsx(\"text\",{x:sugarX,y:sugarY,fontSize:\"10\",textAnchor:\"middle\",dominantBaseline:\"central\",style:{fontFamily:'Apple Color Emoji, Segoe UI Emoji, Noto Color Emoji, sans-serif'},children:SUGAR_EMOJIS[mealData['Added Sugar']]})]},\"sugar\");})()]});};const MealGrid=_ref4=>{let{config,weekDays,patientData}=_ref4;if(!patientData||patientData.length===0){return null;}return/*#__PURE__*/_jsx(\"g\",{className:\"meal-grid\",children:weekDays.map((day,dayIndex)=>{const dayData=patientData.find(d=>{const dataDate=new Date(d.Date);return dataDate.toDateString()===day.toDateString();});if(!dayData)return null;return MEAL_TYPES.map((meal,mealIndex)=>{const mealData=getMealData(dayData,meal);const mealTime=getMealTime(dayData,meal);return/*#__PURE__*/_jsx(MealCell,{config:config,dayIndex:dayIndex,mealIndex:mealIndex,mealData:mealData,mealTime:mealTime},\"\".concat(dayIndex,\"-\").concat(mealIndex));});})});};// --- Main Component ---\nconst MealContentsChart=_ref5=>{let{patientId='Patient_001',isExpanded,onExpand,isPhysicianView=false}=_ref5;const[selectedWeek,setSelectedWeek]=useState(DEFAULT_WEEK);const{mealData:patientData,loading,error}=usePatientData(patientId);const config=getChartConfig(isExpanded);const weekStart=getWeekStart(selectedWeek);const weekDays=Array.from({length:7},(_,i)=>{const day=new Date(weekStart);day.setDate(weekStart.getDate()+i);return day;});const handlePrevWeek=()=>setSelectedWeek(prev=>new Date(new Date(prev).setDate(prev.getDate()-7)));const handleNextWeek=()=>setSelectedWeek(prev=>new Date(new Date(prev).setDate(prev.getDate()+7)));const startOfWeek=new Date(weekStart);const endOfWeek=new Date(startOfWeek);endOfWeek.setDate(endOfWeek.getDate()+6);const formatDateRange=(start,end)=>{const startStr=start.toLocaleDateString('en-US',{month:'short',day:'numeric'});const endStr=end.toLocaleDateString('en-US',{month:'short',day:'numeric'});return\"\".concat(startStr,\" to \").concat(endStr);};// Calculate summary statistics for physician view\nconst weekSummary=useMemo(()=>{if(!patientData||patientData.length===0)return null;const weekData=patientData.filter(d=>{const dataDate=new Date(d.Date);return dataDate>=startOfWeek&&dataDate<=endOfWeek;});if(weekData.length===0)return null;// Count food categories across all meals\nconst categoryStats={};FOOD_CATEGORIES.forEach(category=>{categoryStats[category]=0;});// Count sugar levels\nconst sugarStats={};SUGAR_CATEGORIES.filter(s=>s!=='').forEach(sugar=>{sugarStats[sugar]=0;});let totalMealsLogged=0;let daysWithMeals=new Set();weekData.forEach(dayData=>{daysWithMeals.add(dayData.Date);MEAL_TYPES.forEach(meal=>{const mealData=getMealData(dayData,meal);const hasAnyFood=FOOD_CATEGORIES.some(category=>mealData[category]);if(hasAnyFood){totalMealsLogged++;// Count each food category\nFOOD_CATEGORIES.forEach(category=>{if(mealData[category]){categoryStats[category]++;}});// Count sugar levels\nif(mealData['Added Sugar']&&mealData['Added Sugar']!==''){sugarStats[mealData['Added Sugar']]++;}}});});// Find most common food category\nconst mostCommonFood=Object.entries(categoryStats).sort((_ref6,_ref7)=>{let[,a]=_ref6;let[,b]=_ref7;return b-a;})[0];// Calculate sugar frequency\nconst totalSugarMeals=Object.values(sugarStats).reduce((sum,count)=>sum+count,0);const sugarPercentage=totalMealsLogged>0?(totalSugarMeals/totalMealsLogged*100).toFixed(0):0;return{totalMealsLogged,daysWithMeals:daysWithMeals.size,mostCommonFood:mostCommonFood[0],mostCommonFoodCount:mostCommonFood[1],categoryStats,sugarPercentage,totalSugarMeals};},[patientData,startOfWeek,endOfWeek]);return/*#__PURE__*/_jsx(ChartContainer,{title:\"Meal Contents\",icon:\"\\uD83C\\uDF7D\\uFE0F\",isLoading:loading,error:error,noData:!loading&&!error&&(!patientData||patientData.length===0),isExpanded:isExpanded,onExpand:onExpand,onPrev:handlePrevWeek,onNext:handleNextWeek,navigationLabel:formatDateRange(startOfWeek,endOfWeek),children:/*#__PURE__*/_jsxs(\"div\",{className:\"meal-contents-chart-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"meal-contents-legends-wrapper\",children:[/*#__PURE__*/_jsx(Legend,{title:\"Food Categories\",items:FOOD_CATEGORIES.map(category=>({label:\"\".concat(CATEGORY_EMOJIS[category],\" \").concat(category),color:null}))}),/*#__PURE__*/_jsx(Legend,{title:\"Sugar Levels\",items:SUGAR_CATEGORIES.filter(sugar=>sugar!=='').map(sugar=>({label:\"\".concat(SUGAR_EMOJIS[sugar],\" \").concat(sugar),color:null}))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"meal-chart-wrapper \".concat(isExpanded?'expanded':''),children:/*#__PURE__*/_jsxs(\"svg\",{width:\"100%\",height:\"100%\",viewBox:\"0 0 \".concat(config.width,\" \").concat(config.height),className:\"meal-chart\",children:[/*#__PURE__*/_jsx(XAxis,{config:config,weekDays:weekDays}),/*#__PURE__*/_jsx(YAxis,{config:config}),/*#__PURE__*/_jsx(MealGrid,{config:config,weekDays:weekDays,patientData:patientData})]})}),isPhysicianView&&weekSummary&&/*#__PURE__*/_jsxs(\"div\",{className:\"meal-summary\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Week Summary\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-stats\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Meals Logged:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"stat-value\",children:[weekSummary.totalMealsLogged,\"/21 possible\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Days with Meals:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"stat-value\",children:[weekSummary.daysWithMeals,\"/7 days\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Most Common Food:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"stat-value\",children:[CATEGORY_EMOJIS[weekSummary.mostCommonFood],\" \",weekSummary.mostCommonFood,\" (\",weekSummary.mostCommonFoodCount,\"x)\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Added Sugar:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"stat-value\",children:[weekSummary.sugarPercentage,\"% of meals (\",weekSummary.totalSugarMeals,\"/\",weekSummary.totalMealsLogged,\")\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Food Balance:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-value\",children:Object.entries(weekSummary.categoryStats).sort((_ref8,_ref9)=>{let[,a]=_ref8;let[,b]=_ref9;return b-a;}).slice(0,3).map(_ref0=>{let[cat,count]=_ref0;return\"\".concat(CATEGORY_EMOJIS[cat]).concat(count);}).join(' ')})]})]})]})]})});};export default MealContentsChart;","map":{"version":3,"names":["React","useState","useMemo","usePatientData","ChartContainer","Legend","jsx","_jsx","jsxs","_jsxs","DAYS_OF_WEEK","MEAL_TYPES","FOOD_CATEGORIES","SUGAR_CATEGORIES","DEFAULT_WEEK","Date","CATEGORY_EMOJIS","SUGAR_EMOJIS","getChartConfig","isExpanded","width","height","padding","top","right","bottom","left","dayWidth","mealHeight","fontSize","dayLabel","dateLabel","mealLabel","timeLabel","getWeekStart","date","d","day","getDay","diff","getDate","setDate","formatDayLabel","toLocaleDateString","weekday","formatDateLabel","month","getMealTime","data","mealType","timeKey","concat","getMealData","mealData","forEach","category","key","sugarKey","XAxis","_ref","config","weekDays","className","children","map","dayIndex","x","y","textAnchor","fill","fontWeight","x1","y1","x2","y2","YAxis","_ref2","mealTimes","meal","mealIndex","MealCell","_ref3","mealTime","cellWidth","cellHeight","categoriesPerRow","categoryWidth","categoryHeight","stroke","strokeWidth","index","row","Math","floor","col","categoryX","categoryY","hasCategory","cx","cy","r","opacity","dominantBaseline","style","fontFamily","sugarRow","sugarCol","sugarX","sugarY","hasSugar","MealGrid","_ref4","patientData","length","dayData","find","dataDate","toDateString","MealContentsChart","_ref5","patientId","onExpand","isPhysicianView","selectedWeek","setSelectedWeek","loading","error","weekStart","Array","from","_","i","handlePrevWeek","prev","handleNextWeek","startOfWeek","endOfWeek","formatDateRange","start","end","startStr","endStr","weekSummary","weekData","filter","categoryStats","sugarStats","s","sugar","totalMealsLogged","daysWithMeals","Set","add","hasAnyFood","some","mostCommonFood","Object","entries","sort","_ref6","_ref7","a","b","totalSugarMeals","values","reduce","sum","count","sugarPercentage","toFixed","size","mostCommonFoodCount","title","icon","isLoading","noData","onPrev","onNext","navigationLabel","items","label","color","viewBox","_ref8","_ref9","slice","_ref0","cat","join"],"sources":["C:/Users/Matteo/Working_Folder/a. MCC Thesis Local/MCC_digital_health_data_visualizations/src/components/patient_charts/MealContentsChart.js"],"sourcesContent":["import React, { useState, useMemo } from 'react';\nimport usePatientData from '../../hooks/usePatientData';\nimport ChartContainer from '../ChartContainer';\nimport Legend from '../Legend';\nimport './MealContentsChart.css';\nimport '../ChartStyles.css';\n\n// --- Constants ---\nconst DAYS_OF_WEEK = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\nconst MEAL_TYPES = ['Breakfast', 'Lunch', 'Dinner'];\nconst FOOD_CATEGORIES = ['Protein', 'Carbohydrates', 'Vegetables', 'Fruit', 'Alcohol'];\nconst SUGAR_CATEGORIES = ['', '1-20g', '20-40g', '40-60g', '60g+'];\nconst DEFAULT_WEEK = new Date(2025, 4, 1);\n\n// Emoji mappings for food categories\nconst CATEGORY_EMOJIS = {\n  'Protein': '🥩',\n  'Carbohydrates': '🍞',\n  'Vegetables': '🥦',\n  'Fruit': '🍎',\n  'Alcohol': '🍷'\n};\n\nconst SUGAR_EMOJIS = {\n  '': '',              // No sugar\n  '1-20g': '🍭',       // Lollipop\n  '20-40g': '🍫',      // Chocolate bar\n  '40-60g': '🍩',      // Donut\n  '60g+': '🎂'         // Cake\n};\n\nconst getChartConfig = (isExpanded) => ({\n  width: isExpanded ? 700 : 500,\n  height: isExpanded ? 400 : 300,\n  padding: { top: 40, right: 30, bottom: 80, left: 110 },\n  dayWidth: isExpanded ? 85 : 60,\n  mealHeight: isExpanded ? 80 : 60,\n  fontSize: {\n    dayLabel: isExpanded ? 10 : 8,\n    dateLabel: isExpanded ? 8 : 6,\n    mealLabel: isExpanded ? 8 : 6,\n    timeLabel: isExpanded ? 6 : 5,\n  },\n});\n\n// --- Helper Functions ---\nconst getWeekStart = (date) => {\n  const d = new Date(date);\n  const day = d.getDay();\n  const diff = d.getDate() - day;\n  return new Date(d.setDate(diff));\n};\n\nconst formatDayLabel = (date) => date.toLocaleDateString('en-US', { weekday: 'short' });\nconst formatDateLabel = (date) => date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\n\nconst getMealTime = (data, mealType) => {\n  const timeKey = `${mealType}_Time`;\n  return data[timeKey] || '';\n};\n\nconst getMealData = (data, mealType) => {\n  const mealData = {};\n  FOOD_CATEGORIES.forEach(category => {\n    const key = `${mealType}_${category}`;\n    mealData[category] = data[key] === 1 || data[key] === '1';\n  });\n  \n  const sugarKey = `${mealType}_Added_Sugar`;\n  mealData['Added Sugar'] = data[sugarKey] || '';\n  \n  return mealData;\n};\n\n// --- Chart Sub-components ---\n\nconst XAxis = ({ config, weekDays }) => (\n  <g className=\"x-axis\">\n    {weekDays.map((day, dayIndex) => {\n      const x = config.padding.left + dayIndex * config.dayWidth + config.dayWidth / 2;\n      return (\n        <g key={dayIndex}>\n          <text\n            x={x}\n            y={config.height - config.padding.bottom + 30}\n            fontSize={config.fontSize.dayLabel}\n            textAnchor=\"middle\"\n            fill=\"#333\"\n            fontWeight=\"600\"\n          >\n            {DAYS_OF_WEEK[day.getDay()]}\n          </text>\n          <text\n            x={x}\n            y={config.height - config.padding.bottom + 45}\n            fontSize={config.fontSize.dateLabel}\n            textAnchor=\"middle\"\n            fill=\"#666\"\n          >\n            {day.getDate()}\n          </text>\n          <line\n            className=\"chart-grid-line-vertical\"\n            x1={config.padding.left + dayIndex * config.dayWidth}\n            y1={config.padding.top}\n            x2={config.padding.left + dayIndex * config.dayWidth}\n            y2={config.height - config.padding.bottom}\n          />\n        </g>\n      );\n    })}\n    <line\n      className=\"chart-grid-line-vertical\"\n      x1={config.padding.left + 7 * config.dayWidth}\n      y1={config.padding.top}\n      x2={config.padding.left + 7 * config.dayWidth}\n      y2={config.height - config.padding.bottom}\n    />\n  </g>\n);\n\nconst YAxis = ({ config }) => {\n  const mealTimes = {\n    'Breakfast': '6-10am',\n    'Lunch': '11-2pm', \n    'Dinner': '5-9pm'\n  };\n\n  return (\n    <g className=\"y-axis\">\n      {MEAL_TYPES.map((meal, mealIndex) => {\n        const y = config.padding.top + mealIndex * config.mealHeight + config.mealHeight / 2;\n        return (\n          <g key={meal}>\n            <text\n              x={config.padding.left - 25}\n              y={y - 5}\n              fontSize={config.fontSize.mealLabel}\n              textAnchor=\"end\"\n              fill=\"#333\"\n              fontWeight=\"600\"\n            >\n              {meal}\n            </text>\n            <text\n              x={config.padding.left - 25}\n              y={y + 10}\n              fontSize={config.fontSize.timeLabel}\n              textAnchor=\"end\"\n              fill=\"#666\"\n            >\n              {mealTimes[meal]}\n            </text>\n            <line\n              className=\"chart-grid-line-horizontal\"\n              x1={config.padding.left}\n              y1={config.padding.top + mealIndex * config.mealHeight}\n              x2={config.padding.left + 7 * config.dayWidth}\n              y2={config.padding.top + mealIndex * config.mealHeight}\n            />\n          </g>\n        );\n      })}\n      <line\n        className=\"chart-grid-line-horizontal\"\n        x1={config.padding.left}\n        y1={config.padding.top + 3 * config.mealHeight}\n        x2={config.padding.left + 7 * config.dayWidth}\n        y2={config.padding.top + 3 * config.mealHeight}\n      />\n    </g>\n  );\n};\n\nconst MealCell = ({ config, dayIndex, mealIndex, mealData, mealTime }) => {\n  const x = config.padding.left + dayIndex * config.dayWidth + 5;\n  const y = config.padding.top + mealIndex * config.mealHeight + 5;\n  const cellWidth = config.dayWidth - 10;\n  const cellHeight = config.mealHeight - 10;\n  \n  // Calculate grid layout for food categories (2x3 grid)\n  const categoriesPerRow = 3;\n  const categoryWidth = cellWidth / categoriesPerRow;\n  const categoryHeight = (cellHeight - 20) / 2; // Reserve space for time and sugar\n  \n  return (\n    <g className=\"meal-cell\">\n      {/* Background */}\n      <rect\n        x={x}\n        y={y}\n        width={cellWidth}\n        height={cellHeight}\n        fill=\"#f9f9f9\"\n        stroke=\"#ddd\"\n        strokeWidth=\"1\"\n      />\n      \n      {/* Meal time */}\n      <text\n        x={x + cellWidth / 2}\n        y={y + 12}\n        fontSize={config.fontSize.timeLabel}\n        textAnchor=\"middle\"\n        fill=\"#666\"\n      >\n        {mealTime}\n      </text>\n      \n      {/* Food category emojis and sugar emoji in 6-circle grid */}\n      {FOOD_CATEGORIES.map((category, index) => {\n        const row = Math.floor(index / categoriesPerRow);\n        const col = index % categoriesPerRow;\n        const categoryX = x + col * categoryWidth + categoryWidth / 2;\n        const categoryY = y + 20 + row * categoryHeight + categoryHeight / 2;\n        const hasCategory = mealData[category];\n        \n        return (\n          <g key={category}>\n            {/* Background circle for visibility */}\n            <circle\n              cx={categoryX}\n              cy={categoryY}\n              r=\"12\"\n              fill={hasCategory ? \"#f0f8ff\" : \"#f5f5f5\"}\n              stroke=\"#ddd\"\n              strokeWidth=\"1\"\n              opacity={hasCategory ? 1 : 0.3}\n            />\n            {/* Emoji */}\n            {hasCategory && (\n              <text\n                x={categoryX}\n                y={categoryY}\n                fontSize=\"10\"\n                textAnchor=\"middle\"\n                dominantBaseline=\"central\"\n                style={{ fontFamily: 'Apple Color Emoji, Segoe UI Emoji, Noto Color Emoji, sans-serif' }}\n              >\n                {CATEGORY_EMOJIS[category]}\n              </text>\n            )}\n          </g>\n        );\n      })}\n      \n      {/* Sugar emoji in 6th position (next to alcohol) */}\n      {(() => {\n        const sugarRow = 1; // Second row\n        const sugarCol = 2; // Third column (next to alcohol which is at col 1 in row 1)\n        const sugarX = x + sugarCol * categoryWidth + categoryWidth / 2;\n        const sugarY = y + 20 + sugarRow * categoryHeight + categoryHeight / 2;\n        const hasSugar = mealData['Added Sugar'] && SUGAR_EMOJIS[mealData['Added Sugar']];\n        \n        return (\n          <g key=\"sugar\">\n            {/* Background circle for sugar emoji */}\n            <circle\n              cx={sugarX}\n              cy={sugarY}\n              r=\"12\"\n              fill={hasSugar ? \"#fff0f5\" : \"#f5f5f5\"}\n              stroke=\"#ddd\"\n              strokeWidth=\"1\"\n              opacity={hasSugar ? 1 : 0.3}\n            />\n            {/* Sugar emoji */}\n            {hasSugar && (\n              <text\n                x={sugarX}\n                y={sugarY}\n                fontSize=\"10\"\n                textAnchor=\"middle\"\n                dominantBaseline=\"central\"\n                style={{ fontFamily: 'Apple Color Emoji, Segoe UI Emoji, Noto Color Emoji, sans-serif' }}\n              >\n                {SUGAR_EMOJIS[mealData['Added Sugar']]}\n              </text>\n            )}\n          </g>\n        );\n      })()}\n    </g>\n  );\n};\n\nconst MealGrid = ({ config, weekDays, patientData }) => {\n  if (!patientData || patientData.length === 0) {\n    return null;\n  }\n\n  return (\n    <g className=\"meal-grid\">\n      {weekDays.map((day, dayIndex) => {\n        const dayData = patientData.find(d => {\n          const dataDate = new Date(d.Date);\n          return dataDate.toDateString() === day.toDateString();\n        });\n\n        if (!dayData) return null;\n\n        return MEAL_TYPES.map((meal, mealIndex) => {\n          const mealData = getMealData(dayData, meal);\n          const mealTime = getMealTime(dayData, meal);\n          \n          return (\n            <MealCell\n              key={`${dayIndex}-${mealIndex}`}\n              config={config}\n              dayIndex={dayIndex}\n              mealIndex={mealIndex}\n              mealData={mealData}\n              mealTime={mealTime}\n            />\n          );\n        });\n      })}\n    </g>\n  );\n};\n\n\n// --- Main Component ---\nconst MealContentsChart = ({ patientId = 'Patient_001', isExpanded, onExpand, isPhysicianView = false }) => {\n  const [selectedWeek, setSelectedWeek] = useState(DEFAULT_WEEK);\n  const { mealData: patientData, loading, error } = usePatientData(patientId);\n\n  const config = getChartConfig(isExpanded);\n  const weekStart = getWeekStart(selectedWeek);\n  const weekDays = Array.from({ length: 7 }, (_, i) => {\n    const day = new Date(weekStart);\n    day.setDate(weekStart.getDate() + i);\n    return day;\n  });\n\n  const handlePrevWeek = () => setSelectedWeek(prev => new Date(new Date(prev).setDate(prev.getDate() - 7)));\n  const handleNextWeek = () => setSelectedWeek(prev => new Date(new Date(prev).setDate(prev.getDate() + 7)));\n\n  const startOfWeek = new Date(weekStart);\n  const endOfWeek = new Date(startOfWeek);\n  endOfWeek.setDate(endOfWeek.getDate() + 6);\n\n  const formatDateRange = (start, end) => {\n    const startStr = start.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\n    const endStr = end.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\n    return `${startStr} to ${endStr}`;\n  };\n\n  // Calculate summary statistics for physician view\n  const weekSummary = useMemo(() => {\n    if (!patientData || patientData.length === 0) return null;\n\n    const weekData = patientData.filter(d => {\n      const dataDate = new Date(d.Date);\n      return dataDate >= startOfWeek && dataDate <= endOfWeek;\n    });\n\n    if (weekData.length === 0) return null;\n\n    // Count food categories across all meals\n    const categoryStats = {};\n    FOOD_CATEGORIES.forEach(category => {\n      categoryStats[category] = 0;\n    });\n\n    // Count sugar levels\n    const sugarStats = {};\n    SUGAR_CATEGORIES.filter(s => s !== '').forEach(sugar => {\n      sugarStats[sugar] = 0;\n    });\n\n    let totalMealsLogged = 0;\n    let daysWithMeals = new Set();\n\n    weekData.forEach(dayData => {\n      daysWithMeals.add(dayData.Date);\n      \n      MEAL_TYPES.forEach(meal => {\n        const mealData = getMealData(dayData, meal);\n        const hasAnyFood = FOOD_CATEGORIES.some(category => mealData[category]);\n        \n        if (hasAnyFood) {\n          totalMealsLogged++;\n          \n          // Count each food category\n          FOOD_CATEGORIES.forEach(category => {\n            if (mealData[category]) {\n              categoryStats[category]++;\n            }\n          });\n\n          // Count sugar levels\n          if (mealData['Added Sugar'] && mealData['Added Sugar'] !== '') {\n            sugarStats[mealData['Added Sugar']]++;\n          }\n        }\n      });\n    });\n\n    // Find most common food category\n    const mostCommonFood = Object.entries(categoryStats)\n      .sort(([,a], [,b]) => b - a)[0];\n\n    // Calculate sugar frequency\n    const totalSugarMeals = Object.values(sugarStats).reduce((sum, count) => sum + count, 0);\n    const sugarPercentage = totalMealsLogged > 0 ? \n      ((totalSugarMeals / totalMealsLogged) * 100).toFixed(0) : 0;\n\n    return {\n      totalMealsLogged,\n      daysWithMeals: daysWithMeals.size,\n      mostCommonFood: mostCommonFood[0],\n      mostCommonFoodCount: mostCommonFood[1],\n      categoryStats,\n      sugarPercentage,\n      totalSugarMeals\n    };\n  }, [patientData, startOfWeek, endOfWeek]);\n\n\n  \n  return (\n    <ChartContainer\n      title=\"Meal Contents\"\n      icon=\"🍽️\"\n      isLoading={loading}\n      error={error}\n      noData={!loading && !error && (!patientData || patientData.length === 0)}\n      isExpanded={isExpanded}\n      onExpand={onExpand}\n      onPrev={handlePrevWeek}\n      onNext={handleNextWeek}\n      navigationLabel={formatDateRange(startOfWeek, endOfWeek)}\n    >\n      <div className=\"meal-contents-chart-container\">\n        <div className=\"meal-contents-legends-wrapper\">\n            <Legend \n              title=\"Food Categories\" \n              items={FOOD_CATEGORIES.map(category => ({\n                label: `${CATEGORY_EMOJIS[category]} ${category}`,\n                color: null\n              }))}\n            />\n            <Legend \n              title=\"Sugar Levels\" \n              items={SUGAR_CATEGORIES.filter(sugar => sugar !== '').map(sugar => ({\n                label: `${SUGAR_EMOJIS[sugar]} ${sugar}`,\n                color: null\n              }))}\n            />\n        </div>\n        <div className={`meal-chart-wrapper ${isExpanded ? 'expanded' : ''}`}>\n          <svg width=\"100%\" height=\"100%\" viewBox={`0 0 ${config.width} ${config.height}`} className=\"meal-chart\">\n            <XAxis config={config} weekDays={weekDays} />\n            <YAxis config={config} />\n            <MealGrid \n              config={config} \n              weekDays={weekDays} \n              patientData={patientData} \n            />\n          </svg>\n        </div>\n\n        {/* Show summary for physician view only */}\n        {isPhysicianView && weekSummary && (\n          <div className=\"meal-summary\">\n            <h4>Week Summary</h4>\n            <div className=\"summary-stats\">\n              <div className=\"stat-item\">\n                <span className=\"stat-label\">Meals Logged:</span>\n                <span className=\"stat-value\">\n                  {weekSummary.totalMealsLogged}/21 possible\n                </span>\n              </div>\n              <div className=\"stat-item\">\n                <span className=\"stat-label\">Days with Meals:</span>\n                <span className=\"stat-value\">\n                  {weekSummary.daysWithMeals}/7 days\n                </span>\n              </div>\n              <div className=\"stat-item\">\n                <span className=\"stat-label\">Most Common Food:</span>\n                <span className=\"stat-value\">\n                  {CATEGORY_EMOJIS[weekSummary.mostCommonFood]} {weekSummary.mostCommonFood} ({weekSummary.mostCommonFoodCount}x)\n                </span>\n              </div>\n              <div className=\"stat-item\">\n                <span className=\"stat-label\">Added Sugar:</span>\n                <span className=\"stat-value\">\n                  {weekSummary.sugarPercentage}% of meals ({weekSummary.totalSugarMeals}/{weekSummary.totalMealsLogged})\n                </span>\n              </div>\n              <div className=\"stat-item\">\n                <span className=\"stat-label\">Food Balance:</span>\n                <span className=\"stat-value\">\n                  {Object.entries(weekSummary.categoryStats)\n                    .sort(([,a], [,b]) => b - a)\n                    .slice(0, 3)\n                    .map(([cat, count]) => `${CATEGORY_EMOJIS[cat]}${count}`)\n                    .join(' ')}\n                </span>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </ChartContainer>\n  );\n};\n\nexport default MealContentsChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}