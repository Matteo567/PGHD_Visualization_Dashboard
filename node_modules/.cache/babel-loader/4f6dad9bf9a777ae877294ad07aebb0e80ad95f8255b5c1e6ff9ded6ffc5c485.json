{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matteo\\\\Working_Folder\\\\a. MCC Thesis Local Experimental\\\\PGHD_Visualization_Dashboard\\\\src\\\\components\\\\VisualizationWrapper.js\";\n/*\n - VisualizationWrapper.js - Universal Chart Container Component\n \n - This component provides a standardized wrapper for all chart visualizations by handling loading,\n  error, and no-data states, providing chart navigation controls (previous/next), managing \n  expand/collapse functionality, displaying chart titles and controls, and ensuring consistent \n  chart presentation across the application.\n \n - Serves as the foundation for all health metric chart displays.\n */\n\nimport React from 'react';\nimport Placeholder from './ui/Placeholder';\n\n/*\n - Shared component for visualization containers used in both Patient and Physician dashboards\n - Includes functionality previously in ChartContainer: navigation, loading states, error handling\n \n - @param {Object} props - Component props\n - @param {string} props.id - Unique identifier for the visualization\n - @param {string} props.className - CSS class names\n - @param {string} props.selectedViz - Selected visualization type\n - @param {Object} props.availableVisualizations - Available visualizations\n - @param {Object} props.allVisualizations - All visualization configurations\n - @param {Function} props.onExpand - Handler for expand/collapse\n - @param {boolean} props.isExpanded - Whether the visualization is expanded\n - @param {Function} props.renderVisualization - Function to render the visualization\n- @param {string} props.placeholderText - Text to show when no data is available\n- @param {string} props.title - Chart title\n- @param {Function} props.onPrev - Previous navigation handler\n - @param {Function} props.onNext - Next navigation handler\n - @param {string} props.navigationLabel - Label for navigation controls\n - @param {boolean} props.screenshotMode - Whether in screenshot mode\n - @returns {JSX.Element} The visualization wrapper component\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VisualizationWrapper = ({\n  id,\n  className,\n  selectedViz,\n  availableVisualizations,\n  allVisualizations,\n  onExpand,\n  isExpanded,\n  renderVisualization,\n  placeholderText = \"No data available for this patient.\",\n  // ChartContainer props\n  title,\n  onPrev,\n  onNext,\n  navigationLabel = 'Week',\n  // Screenshot mode\n  screenshotMode = false\n}) => {\n  const viz = allVisualizations[selectedViz];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `visualization-wrapper ${isExpanded ? 'expanded' : ''} ${className} ${screenshotMode ? 'screenshot-mode' : ''}`,\n    children: [!screenshotMode && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"visualization-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"visualization-title-group\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"visualization-title\",\n          children: title || (viz === null || viz === void 0 ? void 0 : viz.name) || 'Unknown Visualization'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"visualization-controls\",\n        children: [onPrev && onNext && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-navigation\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"nav-button prev\",\n            onClick: onPrev,\n            \"aria-label\": `Previous ${navigationLabel}`,\n            children: \"\\u2039\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"nav-button next\",\n            onClick: onNext,\n            \"aria-label\": `Next ${navigationLabel}`,\n            children: \"\\u203A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onExpand(id),\n          className: \"expand-button\",\n          children: isExpanded ? 'Collapse' : 'Expand'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"visualization-content\",\n      children: Object.keys(availableVisualizations).length === 0 ? /*#__PURE__*/_jsxDEV(Placeholder, {\n        message: placeholderText,\n        type: \"no-data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this) : renderVisualization(selectedViz, id)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_c = VisualizationWrapper;\nexport default VisualizationWrapper;\nvar _c;\n$RefreshReg$(_c, \"VisualizationWrapper\");","map":{"version":3,"names":["React","Placeholder","jsxDEV","_jsxDEV","VisualizationWrapper","id","className","selectedViz","availableVisualizations","allVisualizations","onExpand","isExpanded","renderVisualization","placeholderText","title","onPrev","onNext","navigationLabel","screenshotMode","viz","children","name","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Object","keys","length","message","type","_c","$RefreshReg$"],"sources":["C:/Users/Matteo/Working_Folder/a. MCC Thesis Local Experimental/PGHD_Visualization_Dashboard/src/components/VisualizationWrapper.js"],"sourcesContent":["/*\n - VisualizationWrapper.js - Universal Chart Container Component\n \n - This component provides a standardized wrapper for all chart visualizations by handling loading,\n  error, and no-data states, providing chart navigation controls (previous/next), managing \n  expand/collapse functionality, displaying chart titles and controls, and ensuring consistent \n  chart presentation across the application.\n \n - Serves as the foundation for all health metric chart displays.\n */\n\nimport React from 'react';\nimport Placeholder from './ui/Placeholder';\n\n/*\n - Shared component for visualization containers used in both Patient and Physician dashboards\n - Includes functionality previously in ChartContainer: navigation, loading states, error handling\n \n - @param {Object} props - Component props\n - @param {string} props.id - Unique identifier for the visualization\n - @param {string} props.className - CSS class names\n - @param {string} props.selectedViz - Selected visualization type\n - @param {Object} props.availableVisualizations - Available visualizations\n - @param {Object} props.allVisualizations - All visualization configurations\n - @param {Function} props.onExpand - Handler for expand/collapse\n - @param {boolean} props.isExpanded - Whether the visualization is expanded\n - @param {Function} props.renderVisualization - Function to render the visualization\n- @param {string} props.placeholderText - Text to show when no data is available\n- @param {string} props.title - Chart title\n- @param {Function} props.onPrev - Previous navigation handler\n - @param {Function} props.onNext - Next navigation handler\n - @param {string} props.navigationLabel - Label for navigation controls\n - @param {boolean} props.screenshotMode - Whether in screenshot mode\n - @returns {JSX.Element} The visualization wrapper component\n */\nconst VisualizationWrapper = ({ \n  id, \n  className, \n  selectedViz, \n  availableVisualizations, \n  allVisualizations,\n  onExpand, \n  isExpanded, \n  renderVisualization,\n  placeholderText = \"No data available for this patient.\",\n  // ChartContainer props\n  title,\n  onPrev,\n  onNext,\n  navigationLabel = 'Week',\n  // Screenshot mode\n  screenshotMode = false\n}) => {\n  const viz = allVisualizations[selectedViz];\n  \n  return (\n    <div className={`visualization-wrapper ${isExpanded ? 'expanded' : ''} ${className} ${screenshotMode ? 'screenshot-mode' : ''}`}>\n      {!screenshotMode && (\n        <div className=\"visualization-header\">\n          <div className=\"visualization-title-group\">\n            <h3 className=\"visualization-title\">\n              {title || viz?.name || 'Unknown Visualization'}\n            </h3>\n          </div>\n          <div className=\"visualization-controls\">\n            {onPrev && onNext && (\n              <div className=\"chart-navigation\">\n                <button \n                  className=\"nav-button prev\" \n                  onClick={onPrev}\n                  aria-label={`Previous ${navigationLabel}`}\n                >\n                  ‹\n                </button>\n                <button \n                  className=\"nav-button next\" \n                  onClick={onNext}\n                  aria-label={`Next ${navigationLabel}`}\n                >\n                  ›\n                </button>\n              </div>\n            )}\n            <button onClick={() => onExpand(id)} className=\"expand-button\">\n              {isExpanded ? 'Collapse' : 'Expand'}\n            </button>\n          </div>\n        </div>\n      )}\n      <div className=\"visualization-content\">\n        {Object.keys(availableVisualizations).length === 0 ? (\n          <Placeholder message={placeholderText} type=\"no-data\" />\n        ) : (\n          renderVisualization(selectedViz, id)\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default VisualizationWrapper;\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,kBAAkB;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBA,SAAAC,MAAA,IAAAC,OAAA;AAqBA,MAAMC,oBAAoB,GAAGA,CAAC;EAC5BC,EAAE;EACFC,SAAS;EACTC,WAAW;EACXC,uBAAuB;EACvBC,iBAAiB;EACjBC,QAAQ;EACRC,UAAU;EACVC,mBAAmB;EACnBC,eAAe,GAAG,qCAAqC;EACvD;EACAC,KAAK;EACLC,MAAM;EACNC,MAAM;EACNC,eAAe,GAAG,MAAM;EACxB;EACAC,cAAc,GAAG;AACnB,CAAC,KAAK;EACJ,MAAMC,GAAG,GAAGV,iBAAiB,CAACF,WAAW,CAAC;EAE1C,oBACEJ,OAAA;IAAKG,SAAS,EAAE,yBAAyBK,UAAU,GAAG,UAAU,GAAG,EAAE,IAAIL,SAAS,IAAIY,cAAc,GAAG,iBAAiB,GAAG,EAAE,EAAG;IAAAE,QAAA,GAC7H,CAACF,cAAc,iBACdf,OAAA;MAAKG,SAAS,EAAC,sBAAsB;MAAAc,QAAA,gBACnCjB,OAAA;QAAKG,SAAS,EAAC,2BAA2B;QAAAc,QAAA,eACxCjB,OAAA;UAAIG,SAAS,EAAC,qBAAqB;UAAAc,QAAA,EAChCN,KAAK,KAAIK,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEE,IAAI,KAAI;QAAuB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACNtB,OAAA;QAAKG,SAAS,EAAC,wBAAwB;QAAAc,QAAA,GACpCL,MAAM,IAAIC,MAAM,iBACfb,OAAA;UAAKG,SAAS,EAAC,kBAAkB;UAAAc,QAAA,gBAC/BjB,OAAA;YACEG,SAAS,EAAC,iBAAiB;YAC3BoB,OAAO,EAAEX,MAAO;YAChB,cAAY,YAAYE,eAAe,EAAG;YAAAG,QAAA,EAC3C;UAED;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTtB,OAAA;YACEG,SAAS,EAAC,iBAAiB;YAC3BoB,OAAO,EAAEV,MAAO;YAChB,cAAY,QAAQC,eAAe,EAAG;YAAAG,QAAA,EACvC;UAED;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CACN,eACDtB,OAAA;UAAQuB,OAAO,EAAEA,CAAA,KAAMhB,QAAQ,CAACL,EAAE,CAAE;UAACC,SAAS,EAAC,eAAe;UAAAc,QAAA,EAC3DT,UAAU,GAAG,UAAU,GAAG;QAAQ;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,eACDtB,OAAA;MAAKG,SAAS,EAAC,uBAAuB;MAAAc,QAAA,EACnCO,MAAM,CAACC,IAAI,CAACpB,uBAAuB,CAAC,CAACqB,MAAM,KAAK,CAAC,gBAChD1B,OAAA,CAACF,WAAW;QAAC6B,OAAO,EAAEjB,eAAgB;QAACkB,IAAI,EAAC;MAAS;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,GAExDb,mBAAmB,CAACL,WAAW,EAAEF,EAAE;IACpC;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACO,EAAA,GA/DI5B,oBAAoB;AAiE1B,eAAeA,oBAAoB;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}