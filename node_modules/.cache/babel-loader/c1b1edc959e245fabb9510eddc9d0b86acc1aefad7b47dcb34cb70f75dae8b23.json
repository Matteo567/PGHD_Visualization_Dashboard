{"ast":null,"code":"import React,{useState,useMemo,useEffect}from'react';import usePatientData from'../../hooks/usePatientData';import ChartContainer from'../ChartContainer';import Legend from'../Legend';import'./MealContentsChart.css';import'../ChartStyles.css';// --- Constants ---\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DAYS_OF_WEEK=['Sun','Mon','Tue','Wed','Thu','Fri','Sat'];const MEAL_TYPES=['Breakfast','Lunch','Dinner'];const FOOD_CATEGORIES=['Protein','Carbohydrates','Vegetables','Fruit','Alcohol'];const SUGAR_CATEGORIES=['','1-20g','20-40g','40-60g','60g+'];const DEFAULT_WEEK=new Date(2025,4,1);// Emoji mappings for food categories\nconst CATEGORY_EMOJIS={'Protein':'🥩','Carbohydrates':'🍞','Vegetables':'🥦','Fruit':'🍎','Alcohol':'🍷'};const SUGAR_EMOJIS={'':'',// No sugar\n'1-20g':'🍭',// Lollipop\n'20-40g':'🍫',// Chocolate bar\n'40-60g':'🍩',// Donut\n'60g+':'🎂'// Cake\n};const getChartConfig=function(isExpanded){let containerWidth=arguments.length>1&&arguments[1]!==undefined?arguments[1]:500;// Calculate responsive dimensions based on container width\nconst maxWidth=Math.min(containerWidth-40,isExpanded?700:500);// Account for padding\nconst maxHeight=isExpanded?400:300;// Calculate day width based on available space\nconst availableWidth=maxWidth-140;// Account for left padding (110) + right padding (30)\n// Ensure minimum viable width for the chart\nif(availableWidth<420){// 7 days * 60px minimum\n// For very small containers, reduce padding to fit content\nconst adjustedPadding=Math.max(80,availableWidth*0.2);// At least 80px padding\nconst adjustedAvailableWidth=availableWidth-(140-adjustedPadding);const dayWidth=Math.max(50,adjustedAvailableWidth/7);const totalWidth=adjustedPadding+dayWidth*7;return{width:totalWidth,height:maxHeight,padding:{top:40,right:20,bottom:80,left:adjustedPadding},dayWidth:dayWidth,mealHeight:isExpanded?80:60,fontSize:{dayLabel:isExpanded?10:8,dateLabel:isExpanded?8:6,mealLabel:isExpanded?8:6,timeLabel:isExpanded?6:5}};}const dayWidth=Math.max(60,Math.min(85,availableWidth/7));// Min 60px to accommodate emojis and circles\n// Recalculate total width based on actual day width\nconst totalWidth=140+dayWidth*7;return{width:totalWidth,height:maxHeight,padding:{top:40,right:30,bottom:80,left:110},dayWidth:dayWidth,mealHeight:isExpanded?80:60,fontSize:{dayLabel:isExpanded?10:8,dateLabel:isExpanded?8:6,mealLabel:isExpanded?8:6,timeLabel:isExpanded?6:5}};};// --- Helper Functions ---\nconst getWeekStart=date=>{const d=new Date(date);const day=d.getDay();const diff=d.getDate()-day;return new Date(d.setDate(diff));};const formatDayLabel=date=>date.toLocaleDateString('en-US',{weekday:'short'});const formatDateLabel=date=>date.toLocaleDateString('en-US',{month:'short',day:'numeric'});const getMealTime=(data,mealType)=>{const timeKey=\"\".concat(mealType,\"_Time\");return data[timeKey]||'';};const getMealData=(data,mealType)=>{const mealData={};FOOD_CATEGORIES.forEach(category=>{const key=\"\".concat(mealType,\"_\").concat(category);mealData[category]=data[key]===1||data[key]==='1';});const sugarKey=\"\".concat(mealType,\"_Added_Sugar\");mealData['Added Sugar']=data[sugarKey]||'';return mealData;};// --- Chart Sub-components ---\nconst XAxis=_ref=>{let{config,weekDays}=_ref;return/*#__PURE__*/_jsxs(\"g\",{className:\"x-axis\",children:[weekDays.map((day,dayIndex)=>{const x=config.padding.left+dayIndex*config.dayWidth+config.dayWidth/2;return/*#__PURE__*/_jsxs(\"g\",{children:[/*#__PURE__*/_jsx(\"text\",{x:x,y:config.height-config.padding.bottom+30,fontSize:config.fontSize.dayLabel,textAnchor:\"middle\",fill:\"#333\",fontWeight:\"600\",children:DAYS_OF_WEEK[day.getDay()]}),/*#__PURE__*/_jsx(\"text\",{x:x,y:config.height-config.padding.bottom+45,fontSize:config.fontSize.dateLabel,textAnchor:\"middle\",fill:\"#666\",children:day.getDate()}),/*#__PURE__*/_jsx(\"line\",{className:\"chart-grid-line-vertical\",x1:config.padding.left+dayIndex*config.dayWidth,y1:config.padding.top,x2:config.padding.left+dayIndex*config.dayWidth,y2:config.height-config.padding.bottom})]},dayIndex);}),/*#__PURE__*/_jsx(\"line\",{className:\"chart-grid-line-vertical\",x1:config.padding.left+7*config.dayWidth,y1:config.padding.top,x2:config.padding.left+7*config.dayWidth,y2:config.height-config.padding.bottom})]});};const YAxis=_ref2=>{let{config}=_ref2;const mealTimes={'Breakfast':'6-10am','Lunch':'11-2pm','Dinner':'5-9pm'};return/*#__PURE__*/_jsxs(\"g\",{className:\"y-axis\",children:[MEAL_TYPES.map((meal,mealIndex)=>{const y=config.padding.top+mealIndex*config.mealHeight+config.mealHeight/2;return/*#__PURE__*/_jsxs(\"g\",{children:[/*#__PURE__*/_jsx(\"text\",{x:config.padding.left-25,y:y-5,fontSize:config.fontSize.mealLabel,textAnchor:\"end\",fill:\"#333\",fontWeight:\"600\",children:meal}),/*#__PURE__*/_jsx(\"text\",{x:config.padding.left-25,y:y+10,fontSize:config.fontSize.timeLabel,textAnchor:\"end\",fill:\"#666\",children:mealTimes[meal]}),/*#__PURE__*/_jsx(\"line\",{className:\"chart-grid-line-horizontal\",x1:config.padding.left,y1:config.padding.top+mealIndex*config.mealHeight,x2:config.padding.left+7*config.dayWidth,y2:config.padding.top+mealIndex*config.mealHeight})]},meal);}),/*#__PURE__*/_jsx(\"line\",{className:\"chart-grid-line-horizontal\",x1:config.padding.left,y1:config.padding.top+3*config.mealHeight,x2:config.padding.left+7*config.dayWidth,y2:config.padding.top+3*config.mealHeight})]});};const MealCell=_ref3=>{let{config,dayIndex,mealIndex,mealData,mealTime}=_ref3;const x=config.padding.left+dayIndex*config.dayWidth+5;const y=config.padding.top+mealIndex*config.mealHeight+5;const cellWidth=config.dayWidth-10;const cellHeight=config.mealHeight-10;// Calculate grid layout for food categories (2x3 grid)\nconst categoriesPerRow=3;const categoryWidth=cellWidth/categoriesPerRow;const categoryHeight=(cellHeight-20)/2;// Reserve space for time and sugar\n// Calculate responsive circle radius and emoji size based on cell dimensions\nconst minDimension=Math.min(categoryWidth,categoryHeight);const circleRadius=Math.max(6,Math.min(12,minDimension*0.3));// Min 6px, max 12px, 30% of min dimension\nconst emojiFontSize=Math.max(6,Math.min(10,minDimension*0.25));// Min 6px, max 10px, 25% of min dimension\nreturn/*#__PURE__*/_jsxs(\"g\",{className:\"meal-cell\",children:[/*#__PURE__*/_jsx(\"rect\",{x:x,y:y,width:cellWidth,height:cellHeight,fill:\"#f9f9f9\",stroke:\"#ddd\",strokeWidth:\"1\"}),/*#__PURE__*/_jsx(\"text\",{x:x+cellWidth/2,y:y+12,fontSize:config.fontSize.timeLabel,textAnchor:\"middle\",fill:\"#666\",children:mealTime}),FOOD_CATEGORIES.map((category,index)=>{const row=Math.floor(index/categoriesPerRow);const col=index%categoriesPerRow;const categoryX=x+col*categoryWidth+categoryWidth/2;const categoryY=y+20+row*categoryHeight+categoryHeight/2;const hasCategory=mealData[category];return/*#__PURE__*/_jsxs(\"g\",{children:[/*#__PURE__*/_jsx(\"circle\",{cx:categoryX,cy:categoryY,r:circleRadius,fill:hasCategory?\"#f0f8ff\":\"#f5f5f5\",stroke:\"#ddd\",strokeWidth:\"1\",opacity:hasCategory?1:0.3}),hasCategory&&/*#__PURE__*/_jsx(\"text\",{x:categoryX,y:categoryY,fontSize:emojiFontSize,textAnchor:\"middle\",dominantBaseline:\"central\",style:{fontFamily:'Apple Color Emoji, Segoe UI Emoji, Noto Color Emoji, sans-serif'},children:CATEGORY_EMOJIS[category]})]},category);}),(()=>{const sugarRow=1;// Second row\nconst sugarCol=2;// Third column (next to alcohol which is at col 1 in row 1)\nconst sugarX=x+sugarCol*categoryWidth+categoryWidth/2;const sugarY=y+20+sugarRow*categoryHeight+categoryHeight/2;const hasSugar=mealData['Added Sugar']&&SUGAR_EMOJIS[mealData['Added Sugar']];return/*#__PURE__*/_jsxs(\"g\",{children:[/*#__PURE__*/_jsx(\"circle\",{cx:sugarX,cy:sugarY,r:circleRadius,fill:hasSugar?\"#fff0f5\":\"#f5f5f5\",stroke:\"#ddd\",strokeWidth:\"1\",opacity:hasSugar?1:0.3}),hasSugar&&/*#__PURE__*/_jsx(\"text\",{x:sugarX,y:sugarY,fontSize:emojiFontSize,textAnchor:\"middle\",dominantBaseline:\"central\",style:{fontFamily:'Apple Color Emoji, Segoe UI Emoji, Noto Color Emoji, sans-serif'},children:SUGAR_EMOJIS[mealData['Added Sugar']]})]},\"sugar\");})()]});};const MealGrid=_ref4=>{let{config,weekDays,patientData}=_ref4;if(!patientData||patientData.length===0){return null;}return/*#__PURE__*/_jsx(\"g\",{className:\"meal-grid\",children:weekDays.map((day,dayIndex)=>{const dayData=patientData.find(d=>{const dataDate=new Date(d.Date);return dataDate.toDateString()===day.toDateString();});if(!dayData)return null;return MEAL_TYPES.map((meal,mealIndex)=>{const mealData=getMealData(dayData,meal);const mealTime=getMealTime(dayData,meal);return/*#__PURE__*/_jsx(MealCell,{config:config,dayIndex:dayIndex,mealIndex:mealIndex,mealData:mealData,mealTime:mealTime},\"\".concat(dayIndex,\"-\").concat(mealIndex));});})});};// --- Main Component ---\nconst MealContentsChart=_ref5=>{let{patientId='Patient_001',isExpanded,onExpand,isPhysicianView=false}=_ref5;const[selectedWeek,setSelectedWeek]=useState(DEFAULT_WEEK);const[containerWidth,setContainerWidth]=useState(500);const{mealData:patientData,loading,error}=usePatientData(patientId);const containerRef=React.useRef(null);const config=getChartConfig(isExpanded,containerWidth);// Measure container width for responsive sizing\nuseEffect(()=>{const updateContainerWidth=()=>{if(containerRef.current){const width=containerRef.current.offsetWidth;setContainerWidth(width);}};updateContainerWidth();window.addEventListener('resize',updateContainerWidth);return()=>window.removeEventListener('resize',updateContainerWidth);},[isExpanded]);const weekStart=getWeekStart(selectedWeek);const weekDays=Array.from({length:7},(_,i)=>{const day=new Date(weekStart);day.setDate(weekStart.getDate()+i);return day;});const handlePrevWeek=()=>setSelectedWeek(prev=>new Date(new Date(prev).setDate(prev.getDate()-7)));const handleNextWeek=()=>setSelectedWeek(prev=>new Date(new Date(prev).setDate(prev.getDate()+7)));const startOfWeek=new Date(weekStart);const endOfWeek=new Date(startOfWeek);endOfWeek.setDate(endOfWeek.getDate()+6);const formatDateRange=(start,end)=>{const startStr=start.toLocaleDateString('en-US',{month:'short',day:'numeric'});const endStr=end.toLocaleDateString('en-US',{month:'short',day:'numeric'});return\"\".concat(startStr,\" to \").concat(endStr);};// Calculate summary statistics for physician view\nconst weekSummary=useMemo(()=>{if(!patientData||patientData.length===0)return null;const weekData=patientData.filter(d=>{const dataDate=new Date(d.Date);return dataDate>=startOfWeek&&dataDate<=endOfWeek;});if(weekData.length===0)return null;// Count food categories across all meals\nconst categoryStats={};FOOD_CATEGORIES.forEach(category=>{categoryStats[category]=0;});// Count sugar levels\nconst sugarStats={};SUGAR_CATEGORIES.filter(s=>s!=='').forEach(sugar=>{sugarStats[sugar]=0;});let totalMealsLogged=0;let daysWithMeals=new Set();weekData.forEach(dayData=>{daysWithMeals.add(dayData.Date);MEAL_TYPES.forEach(meal=>{const mealData=getMealData(dayData,meal);const hasAnyFood=FOOD_CATEGORIES.some(category=>mealData[category]);if(hasAnyFood){totalMealsLogged++;// Count each food category\nFOOD_CATEGORIES.forEach(category=>{if(mealData[category]){categoryStats[category]++;}});// Count sugar levels\nif(mealData['Added Sugar']&&mealData['Added Sugar']!==''){sugarStats[mealData['Added Sugar']]++;}}});});// Find most common food category\nconst mostCommonFood=Object.entries(categoryStats).sort((_ref6,_ref7)=>{let[,a]=_ref6;let[,b]=_ref7;return b-a;})[0];// Calculate sugar frequency\nconst totalSugarMeals=Object.values(sugarStats).reduce((sum,count)=>sum+count,0);const sugarPercentage=totalMealsLogged>0?(totalSugarMeals/totalMealsLogged*100).toFixed(0):0;return{totalMealsLogged,daysWithMeals:daysWithMeals.size,mostCommonFood:mostCommonFood[0],mostCommonFoodCount:mostCommonFood[1],categoryStats,sugarPercentage,totalSugarMeals};},[patientData,startOfWeek,endOfWeek]);return/*#__PURE__*/_jsx(ChartContainer,{title:\"Meal Contents\",icon:\"\\uD83C\\uDF7D\\uFE0F\",isLoading:loading,error:error,noData:!loading&&!error&&(!patientData||patientData.length===0),isExpanded:isExpanded,onExpand:onExpand,onPrev:handlePrevWeek,onNext:handleNextWeek,navigationLabel:formatDateRange(startOfWeek,endOfWeek),children:/*#__PURE__*/_jsxs(\"div\",{className:\"meal-contents-chart-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"meal-contents-legends-wrapper\",children:[/*#__PURE__*/_jsx(Legend,{title:\"Food Categories\",items:FOOD_CATEGORIES.map(category=>({label:\"\".concat(CATEGORY_EMOJIS[category],\" \").concat(category),color:null}))}),/*#__PURE__*/_jsx(Legend,{title:\"Sugar Levels\",items:SUGAR_CATEGORIES.filter(sugar=>sugar!=='').map(sugar=>({label:\"\".concat(SUGAR_EMOJIS[sugar],\" \").concat(sugar),color:null}))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"meal-chart-wrapper \".concat(isExpanded?'expanded':''),ref:containerRef,children:/*#__PURE__*/_jsxs(\"svg\",{width:config.width,height:config.height,viewBox:\"0 0 \".concat(config.width,\" \").concat(config.height),className:\"meal-chart\",style:{maxWidth:'100%',height:'auto'},children:[/*#__PURE__*/_jsx(XAxis,{config:config,weekDays:weekDays}),/*#__PURE__*/_jsx(YAxis,{config:config}),/*#__PURE__*/_jsx(MealGrid,{config:config,weekDays:weekDays,patientData:patientData})]})}),isPhysicianView&&weekSummary&&/*#__PURE__*/_jsxs(\"div\",{className:\"meal-summary\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Week Summary\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-stats\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Meals Logged:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"stat-value\",children:[weekSummary.totalMealsLogged,\"/21 possible\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Days with Meals:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"stat-value\",children:[weekSummary.daysWithMeals,\"/7 days\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Most Common Food:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"stat-value\",children:[CATEGORY_EMOJIS[weekSummary.mostCommonFood],\" \",weekSummary.mostCommonFood,\" (\",weekSummary.mostCommonFoodCount,\"x)\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Added Sugar:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"stat-value\",children:[weekSummary.sugarPercentage,\"% of meals (\",weekSummary.totalSugarMeals,\"/\",weekSummary.totalMealsLogged,\")\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Food Balance:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-value\",children:Object.entries(weekSummary.categoryStats).sort((_ref8,_ref9)=>{let[,a]=_ref8;let[,b]=_ref9;return b-a;}).slice(0,3).map(_ref0=>{let[cat,count]=_ref0;return\"\".concat(CATEGORY_EMOJIS[cat]).concat(count);}).join(' ')})]})]})]})]})});};export default MealContentsChart;","map":{"version":3,"names":["React","useState","useMemo","useEffect","usePatientData","ChartContainer","Legend","jsx","_jsx","jsxs","_jsxs","DAYS_OF_WEEK","MEAL_TYPES","FOOD_CATEGORIES","SUGAR_CATEGORIES","DEFAULT_WEEK","Date","CATEGORY_EMOJIS","SUGAR_EMOJIS","getChartConfig","isExpanded","containerWidth","arguments","length","undefined","maxWidth","Math","min","maxHeight","availableWidth","adjustedPadding","max","adjustedAvailableWidth","dayWidth","totalWidth","width","height","padding","top","right","bottom","left","mealHeight","fontSize","dayLabel","dateLabel","mealLabel","timeLabel","getWeekStart","date","d","day","getDay","diff","getDate","setDate","formatDayLabel","toLocaleDateString","weekday","formatDateLabel","month","getMealTime","data","mealType","timeKey","concat","getMealData","mealData","forEach","category","key","sugarKey","XAxis","_ref","config","weekDays","className","children","map","dayIndex","x","y","textAnchor","fill","fontWeight","x1","y1","x2","y2","YAxis","_ref2","mealTimes","meal","mealIndex","MealCell","_ref3","mealTime","cellWidth","cellHeight","categoriesPerRow","categoryWidth","categoryHeight","minDimension","circleRadius","emojiFontSize","stroke","strokeWidth","index","row","floor","col","categoryX","categoryY","hasCategory","cx","cy","r","opacity","dominantBaseline","style","fontFamily","sugarRow","sugarCol","sugarX","sugarY","hasSugar","MealGrid","_ref4","patientData","dayData","find","dataDate","toDateString","MealContentsChart","_ref5","patientId","onExpand","isPhysicianView","selectedWeek","setSelectedWeek","setContainerWidth","loading","error","containerRef","useRef","updateContainerWidth","current","offsetWidth","window","addEventListener","removeEventListener","weekStart","Array","from","_","i","handlePrevWeek","prev","handleNextWeek","startOfWeek","endOfWeek","formatDateRange","start","end","startStr","endStr","weekSummary","weekData","filter","categoryStats","sugarStats","s","sugar","totalMealsLogged","daysWithMeals","Set","add","hasAnyFood","some","mostCommonFood","Object","entries","sort","_ref6","_ref7","a","b","totalSugarMeals","values","reduce","sum","count","sugarPercentage","toFixed","size","mostCommonFoodCount","title","icon","isLoading","noData","onPrev","onNext","navigationLabel","items","label","color","ref","viewBox","_ref8","_ref9","slice","_ref0","cat","join"],"sources":["C:/Users/Matteo/Working_Folder/a. MCC Thesis Local/MCC_digital_health_data_visualizations/src/components/patient_charts/MealContentsChart.js"],"sourcesContent":["import React, { useState, useMemo, useEffect } from 'react';\nimport usePatientData from '../../hooks/usePatientData';\nimport ChartContainer from '../ChartContainer';\nimport Legend from '../Legend';\nimport './MealContentsChart.css';\nimport '../ChartStyles.css';\n\n// --- Constants ---\nconst DAYS_OF_WEEK = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\nconst MEAL_TYPES = ['Breakfast', 'Lunch', 'Dinner'];\nconst FOOD_CATEGORIES = ['Protein', 'Carbohydrates', 'Vegetables', 'Fruit', 'Alcohol'];\nconst SUGAR_CATEGORIES = ['', '1-20g', '20-40g', '40-60g', '60g+'];\nconst DEFAULT_WEEK = new Date(2025, 4, 1);\n\n// Emoji mappings for food categories\nconst CATEGORY_EMOJIS = {\n  'Protein': '🥩',\n  'Carbohydrates': '🍞',\n  'Vegetables': '🥦',\n  'Fruit': '🍎',\n  'Alcohol': '🍷'\n};\n\nconst SUGAR_EMOJIS = {\n  '': '',              // No sugar\n  '1-20g': '🍭',       // Lollipop\n  '20-40g': '🍫',      // Chocolate bar\n  '40-60g': '🍩',      // Donut\n  '60g+': '🎂'         // Cake\n};\n\nconst getChartConfig = (isExpanded, containerWidth = 500) => {\n  // Calculate responsive dimensions based on container width\n  const maxWidth = Math.min(containerWidth - 40, isExpanded ? 700 : 500); // Account for padding\n  const maxHeight = isExpanded ? 400 : 300;\n  \n  // Calculate day width based on available space\n  const availableWidth = maxWidth - 140; // Account for left padding (110) + right padding (30)\n  \n  // Ensure minimum viable width for the chart\n  if (availableWidth < 420) { // 7 days * 60px minimum\n    // For very small containers, reduce padding to fit content\n    const adjustedPadding = Math.max(80, availableWidth * 0.2); // At least 80px padding\n    const adjustedAvailableWidth = availableWidth - (140 - adjustedPadding);\n    const dayWidth = Math.max(50, adjustedAvailableWidth / 7);\n    const totalWidth = adjustedPadding + (dayWidth * 7);\n    \n    return {\n      width: totalWidth,\n      height: maxHeight,\n      padding: { top: 40, right: 20, bottom: 80, left: adjustedPadding },\n      dayWidth: dayWidth,\n      mealHeight: isExpanded ? 80 : 60,\n      fontSize: {\n        dayLabel: isExpanded ? 10 : 8,\n        dateLabel: isExpanded ? 8 : 6,\n        mealLabel: isExpanded ? 8 : 6,\n        timeLabel: isExpanded ? 6 : 5,\n      },\n    };\n  }\n  \n  const dayWidth = Math.max(60, Math.min(85, availableWidth / 7)); // Min 60px to accommodate emojis and circles\n  \n  // Recalculate total width based on actual day width\n  const totalWidth = 140 + (dayWidth * 7);\n  \n  return {\n    width: totalWidth,\n    height: maxHeight,\n    padding: { top: 40, right: 30, bottom: 80, left: 110 },\n    dayWidth: dayWidth,\n    mealHeight: isExpanded ? 80 : 60,\n    fontSize: {\n      dayLabel: isExpanded ? 10 : 8,\n      dateLabel: isExpanded ? 8 : 6,\n      mealLabel: isExpanded ? 8 : 6,\n      timeLabel: isExpanded ? 6 : 5,\n    },\n  };\n};\n\n// --- Helper Functions ---\nconst getWeekStart = (date) => {\n  const d = new Date(date);\n  const day = d.getDay();\n  const diff = d.getDate() - day;\n  return new Date(d.setDate(diff));\n};\n\nconst formatDayLabel = (date) => date.toLocaleDateString('en-US', { weekday: 'short' });\nconst formatDateLabel = (date) => date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\n\nconst getMealTime = (data, mealType) => {\n  const timeKey = `${mealType}_Time`;\n  return data[timeKey] || '';\n};\n\nconst getMealData = (data, mealType) => {\n  const mealData = {};\n  FOOD_CATEGORIES.forEach(category => {\n    const key = `${mealType}_${category}`;\n    mealData[category] = data[key] === 1 || data[key] === '1';\n  });\n  \n  const sugarKey = `${mealType}_Added_Sugar`;\n  mealData['Added Sugar'] = data[sugarKey] || '';\n  \n  return mealData;\n};\n\n// --- Chart Sub-components ---\n\nconst XAxis = ({ config, weekDays }) => (\n  <g className=\"x-axis\">\n    {weekDays.map((day, dayIndex) => {\n      const x = config.padding.left + dayIndex * config.dayWidth + config.dayWidth / 2;\n      return (\n        <g key={dayIndex}>\n          <text\n            x={x}\n            y={config.height - config.padding.bottom + 30}\n            fontSize={config.fontSize.dayLabel}\n            textAnchor=\"middle\"\n            fill=\"#333\"\n            fontWeight=\"600\"\n          >\n            {DAYS_OF_WEEK[day.getDay()]}\n          </text>\n          <text\n            x={x}\n            y={config.height - config.padding.bottom + 45}\n            fontSize={config.fontSize.dateLabel}\n            textAnchor=\"middle\"\n            fill=\"#666\"\n          >\n            {day.getDate()}\n          </text>\n          <line\n            className=\"chart-grid-line-vertical\"\n            x1={config.padding.left + dayIndex * config.dayWidth}\n            y1={config.padding.top}\n            x2={config.padding.left + dayIndex * config.dayWidth}\n            y2={config.height - config.padding.bottom}\n          />\n        </g>\n      );\n    })}\n    <line\n      className=\"chart-grid-line-vertical\"\n      x1={config.padding.left + 7 * config.dayWidth}\n      y1={config.padding.top}\n      x2={config.padding.left + 7 * config.dayWidth}\n      y2={config.height - config.padding.bottom}\n    />\n  </g>\n);\n\nconst YAxis = ({ config }) => {\n  const mealTimes = {\n    'Breakfast': '6-10am',\n    'Lunch': '11-2pm', \n    'Dinner': '5-9pm'\n  };\n\n  return (\n    <g className=\"y-axis\">\n      {MEAL_TYPES.map((meal, mealIndex) => {\n        const y = config.padding.top + mealIndex * config.mealHeight + config.mealHeight / 2;\n        return (\n          <g key={meal}>\n            <text\n              x={config.padding.left - 25}\n              y={y - 5}\n              fontSize={config.fontSize.mealLabel}\n              textAnchor=\"end\"\n              fill=\"#333\"\n              fontWeight=\"600\"\n            >\n              {meal}\n            </text>\n            <text\n              x={config.padding.left - 25}\n              y={y + 10}\n              fontSize={config.fontSize.timeLabel}\n              textAnchor=\"end\"\n              fill=\"#666\"\n            >\n              {mealTimes[meal]}\n            </text>\n            <line\n              className=\"chart-grid-line-horizontal\"\n              x1={config.padding.left}\n              y1={config.padding.top + mealIndex * config.mealHeight}\n              x2={config.padding.left + 7 * config.dayWidth}\n              y2={config.padding.top + mealIndex * config.mealHeight}\n            />\n          </g>\n        );\n      })}\n      <line\n        className=\"chart-grid-line-horizontal\"\n        x1={config.padding.left}\n        y1={config.padding.top + 3 * config.mealHeight}\n        x2={config.padding.left + 7 * config.dayWidth}\n        y2={config.padding.top + 3 * config.mealHeight}\n      />\n    </g>\n  );\n};\n\nconst MealCell = ({ config, dayIndex, mealIndex, mealData, mealTime }) => {\n  const x = config.padding.left + dayIndex * config.dayWidth + 5;\n  const y = config.padding.top + mealIndex * config.mealHeight + 5;\n  const cellWidth = config.dayWidth - 10;\n  const cellHeight = config.mealHeight - 10;\n  \n  // Calculate grid layout for food categories (2x3 grid)\n  const categoriesPerRow = 3;\n  const categoryWidth = cellWidth / categoriesPerRow;\n  const categoryHeight = (cellHeight - 20) / 2; // Reserve space for time and sugar\n  \n  // Calculate responsive circle radius and emoji size based on cell dimensions\n  const minDimension = Math.min(categoryWidth, categoryHeight);\n  const circleRadius = Math.max(6, Math.min(12, minDimension * 0.3)); // Min 6px, max 12px, 30% of min dimension\n  const emojiFontSize = Math.max(6, Math.min(10, minDimension * 0.25)); // Min 6px, max 10px, 25% of min dimension\n  \n  return (\n    <g className=\"meal-cell\">\n      {/* Background */}\n      <rect\n        x={x}\n        y={y}\n        width={cellWidth}\n        height={cellHeight}\n        fill=\"#f9f9f9\"\n        stroke=\"#ddd\"\n        strokeWidth=\"1\"\n      />\n      \n      {/* Meal time */}\n      <text\n        x={x + cellWidth / 2}\n        y={y + 12}\n        fontSize={config.fontSize.timeLabel}\n        textAnchor=\"middle\"\n        fill=\"#666\"\n      >\n        {mealTime}\n      </text>\n      \n      {/* Food category emojis and sugar emoji in 6-circle grid */}\n      {FOOD_CATEGORIES.map((category, index) => {\n        const row = Math.floor(index / categoriesPerRow);\n        const col = index % categoriesPerRow;\n        const categoryX = x + col * categoryWidth + categoryWidth / 2;\n        const categoryY = y + 20 + row * categoryHeight + categoryHeight / 2;\n        const hasCategory = mealData[category];\n        \n        return (\n          <g key={category}>\n            {/* Background circle for visibility */}\n            <circle\n              cx={categoryX}\n              cy={categoryY}\n              r={circleRadius}\n              fill={hasCategory ? \"#f0f8ff\" : \"#f5f5f5\"}\n              stroke=\"#ddd\"\n              strokeWidth=\"1\"\n              opacity={hasCategory ? 1 : 0.3}\n            />\n            {/* Emoji */}\n            {hasCategory && (\n              <text\n                x={categoryX}\n                y={categoryY}\n                fontSize={emojiFontSize}\n                textAnchor=\"middle\"\n                dominantBaseline=\"central\"\n                style={{ fontFamily: 'Apple Color Emoji, Segoe UI Emoji, Noto Color Emoji, sans-serif' }}\n              >\n                {CATEGORY_EMOJIS[category]}\n              </text>\n            )}\n          </g>\n        );\n      })}\n      \n      {/* Sugar emoji in 6th position (next to alcohol) */}\n      {(() => {\n        const sugarRow = 1; // Second row\n        const sugarCol = 2; // Third column (next to alcohol which is at col 1 in row 1)\n        const sugarX = x + sugarCol * categoryWidth + categoryWidth / 2;\n        const sugarY = y + 20 + sugarRow * categoryHeight + categoryHeight / 2;\n        const hasSugar = mealData['Added Sugar'] && SUGAR_EMOJIS[mealData['Added Sugar']];\n        \n        return (\n          <g key=\"sugar\">\n            {/* Background circle for sugar emoji */}\n            <circle\n              cx={sugarX}\n              cy={sugarY}\n              r={circleRadius}\n              fill={hasSugar ? \"#fff0f5\" : \"#f5f5f5\"}\n              stroke=\"#ddd\"\n              strokeWidth=\"1\"\n              opacity={hasSugar ? 1 : 0.3}\n            />\n            {/* Sugar emoji */}\n            {hasSugar && (\n              <text\n                x={sugarX}\n                y={sugarY}\n                fontSize={emojiFontSize}\n                textAnchor=\"middle\"\n                dominantBaseline=\"central\"\n                style={{ fontFamily: 'Apple Color Emoji, Segoe UI Emoji, Noto Color Emoji, sans-serif' }}\n              >\n                {SUGAR_EMOJIS[mealData['Added Sugar']]}\n              </text>\n            )}\n          </g>\n        );\n      })()}\n    </g>\n  );\n};\n\nconst MealGrid = ({ config, weekDays, patientData }) => {\n  if (!patientData || patientData.length === 0) {\n    return null;\n  }\n\n  return (\n    <g className=\"meal-grid\">\n      {weekDays.map((day, dayIndex) => {\n        const dayData = patientData.find(d => {\n          const dataDate = new Date(d.Date);\n          return dataDate.toDateString() === day.toDateString();\n        });\n\n        if (!dayData) return null;\n\n        return MEAL_TYPES.map((meal, mealIndex) => {\n          const mealData = getMealData(dayData, meal);\n          const mealTime = getMealTime(dayData, meal);\n          \n          return (\n            <MealCell\n              key={`${dayIndex}-${mealIndex}`}\n              config={config}\n              dayIndex={dayIndex}\n              mealIndex={mealIndex}\n              mealData={mealData}\n              mealTime={mealTime}\n            />\n          );\n        });\n      })}\n    </g>\n  );\n};\n\n\n// --- Main Component ---\nconst MealContentsChart = ({ patientId = 'Patient_001', isExpanded, onExpand, isPhysicianView = false }) => {\n  const [selectedWeek, setSelectedWeek] = useState(DEFAULT_WEEK);\n  const [containerWidth, setContainerWidth] = useState(500);\n  const { mealData: patientData, loading, error } = usePatientData(patientId);\n  const containerRef = React.useRef(null);\n\n  const config = getChartConfig(isExpanded, containerWidth);\n  \n  // Measure container width for responsive sizing\n  useEffect(() => {\n    const updateContainerWidth = () => {\n      if (containerRef.current) {\n        const width = containerRef.current.offsetWidth;\n        setContainerWidth(width);\n      }\n    };\n\n    updateContainerWidth();\n    window.addEventListener('resize', updateContainerWidth);\n    return () => window.removeEventListener('resize', updateContainerWidth);\n  }, [isExpanded]);\n\n  const weekStart = getWeekStart(selectedWeek);\n  const weekDays = Array.from({ length: 7 }, (_, i) => {\n    const day = new Date(weekStart);\n    day.setDate(weekStart.getDate() + i);\n    return day;\n  });\n\n  const handlePrevWeek = () => setSelectedWeek(prev => new Date(new Date(prev).setDate(prev.getDate() - 7)));\n  const handleNextWeek = () => setSelectedWeek(prev => new Date(new Date(prev).setDate(prev.getDate() + 7)));\n\n  const startOfWeek = new Date(weekStart);\n  const endOfWeek = new Date(startOfWeek);\n  endOfWeek.setDate(endOfWeek.getDate() + 6);\n\n  const formatDateRange = (start, end) => {\n    const startStr = start.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\n    const endStr = end.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\n    return `${startStr} to ${endStr}`;\n  };\n\n  // Calculate summary statistics for physician view\n  const weekSummary = useMemo(() => {\n    if (!patientData || patientData.length === 0) return null;\n\n    const weekData = patientData.filter(d => {\n      const dataDate = new Date(d.Date);\n      return dataDate >= startOfWeek && dataDate <= endOfWeek;\n    });\n\n    if (weekData.length === 0) return null;\n\n    // Count food categories across all meals\n    const categoryStats = {};\n    FOOD_CATEGORIES.forEach(category => {\n      categoryStats[category] = 0;\n    });\n\n    // Count sugar levels\n    const sugarStats = {};\n    SUGAR_CATEGORIES.filter(s => s !== '').forEach(sugar => {\n      sugarStats[sugar] = 0;\n    });\n\n    let totalMealsLogged = 0;\n    let daysWithMeals = new Set();\n\n    weekData.forEach(dayData => {\n      daysWithMeals.add(dayData.Date);\n      \n      MEAL_TYPES.forEach(meal => {\n        const mealData = getMealData(dayData, meal);\n        const hasAnyFood = FOOD_CATEGORIES.some(category => mealData[category]);\n        \n        if (hasAnyFood) {\n          totalMealsLogged++;\n          \n          // Count each food category\n          FOOD_CATEGORIES.forEach(category => {\n            if (mealData[category]) {\n              categoryStats[category]++;\n            }\n          });\n\n          // Count sugar levels\n          if (mealData['Added Sugar'] && mealData['Added Sugar'] !== '') {\n            sugarStats[mealData['Added Sugar']]++;\n          }\n        }\n      });\n    });\n\n    // Find most common food category\n    const mostCommonFood = Object.entries(categoryStats)\n      .sort(([,a], [,b]) => b - a)[0];\n\n    // Calculate sugar frequency\n    const totalSugarMeals = Object.values(sugarStats).reduce((sum, count) => sum + count, 0);\n    const sugarPercentage = totalMealsLogged > 0 ? \n      ((totalSugarMeals / totalMealsLogged) * 100).toFixed(0) : 0;\n\n    return {\n      totalMealsLogged,\n      daysWithMeals: daysWithMeals.size,\n      mostCommonFood: mostCommonFood[0],\n      mostCommonFoodCount: mostCommonFood[1],\n      categoryStats,\n      sugarPercentage,\n      totalSugarMeals\n    };\n  }, [patientData, startOfWeek, endOfWeek]);\n\n\n  \n  return (\n    <ChartContainer\n      title=\"Meal Contents\"\n      icon=\"🍽️\"\n      isLoading={loading}\n      error={error}\n      noData={!loading && !error && (!patientData || patientData.length === 0)}\n      isExpanded={isExpanded}\n      onExpand={onExpand}\n      onPrev={handlePrevWeek}\n      onNext={handleNextWeek}\n      navigationLabel={formatDateRange(startOfWeek, endOfWeek)}\n    >\n      <div className=\"meal-contents-chart-container\">\n        <div className=\"meal-contents-legends-wrapper\">\n            <Legend \n              title=\"Food Categories\" \n              items={FOOD_CATEGORIES.map(category => ({\n                label: `${CATEGORY_EMOJIS[category]} ${category}`,\n                color: null\n              }))}\n            />\n            <Legend \n              title=\"Sugar Levels\" \n              items={SUGAR_CATEGORIES.filter(sugar => sugar !== '').map(sugar => ({\n                label: `${SUGAR_EMOJIS[sugar]} ${sugar}`,\n                color: null\n              }))}\n            />\n        </div>\n        <div className={`meal-chart-wrapper ${isExpanded ? 'expanded' : ''}`} ref={containerRef}>\n          <svg \n            width={config.width} \n            height={config.height} \n            viewBox={`0 0 ${config.width} ${config.height}`} \n            className=\"meal-chart\"\n            style={{ maxWidth: '100%', height: 'auto' }}\n          >\n            <XAxis config={config} weekDays={weekDays} />\n            <YAxis config={config} />\n            <MealGrid \n              config={config} \n              weekDays={weekDays} \n              patientData={patientData} \n            />\n          </svg>\n        </div>\n\n        {/* Show summary for physician view only */}\n        {isPhysicianView && weekSummary && (\n          <div className=\"meal-summary\">\n            <h4>Week Summary</h4>\n            <div className=\"summary-stats\">\n              <div className=\"stat-item\">\n                <span className=\"stat-label\">Meals Logged:</span>\n                <span className=\"stat-value\">\n                  {weekSummary.totalMealsLogged}/21 possible\n                </span>\n              </div>\n              <div className=\"stat-item\">\n                <span className=\"stat-label\">Days with Meals:</span>\n                <span className=\"stat-value\">\n                  {weekSummary.daysWithMeals}/7 days\n                </span>\n              </div>\n              <div className=\"stat-item\">\n                <span className=\"stat-label\">Most Common Food:</span>\n                <span className=\"stat-value\">\n                  {CATEGORY_EMOJIS[weekSummary.mostCommonFood]} {weekSummary.mostCommonFood} ({weekSummary.mostCommonFoodCount}x)\n                </span>\n              </div>\n              <div className=\"stat-item\">\n                <span className=\"stat-label\">Added Sugar:</span>\n                <span className=\"stat-value\">\n                  {weekSummary.sugarPercentage}% of meals ({weekSummary.totalSugarMeals}/{weekSummary.totalMealsLogged})\n                </span>\n              </div>\n              <div className=\"stat-item\">\n                <span className=\"stat-label\">Food Balance:</span>\n                <span className=\"stat-value\">\n                  {Object.entries(weekSummary.categoryStats)\n                    .sort(([,a], [,b]) => b - a)\n                    .slice(0, 3)\n                    .map(([cat, count]) => `${CATEGORY_EMOJIS[cat]}${count}`)\n                    .join(' ')}\n                </span>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </ChartContainer>\n  );\n};\n\nexport default MealContentsChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}