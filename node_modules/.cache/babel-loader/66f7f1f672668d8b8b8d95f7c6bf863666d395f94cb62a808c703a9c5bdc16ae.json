{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matteo\\\\Working_Folder\\\\a. MCC Thesis Local Experimental\\\\PGHD_Visualization_Dashboard\\\\src\\\\HealthDashboard.js\",\n  _s = $RefreshSig$();\n/*\r\n HealthDashboard.js - Unified Health Dashboard Component\r\n \r\n This component provides a unified health dashboard designed for use by both patients and healthcare providers. It displays patient information with QR code access and shows week summaries for health tracking. It includes a toggle for 3-month summaries for long-term trend analysis. Exercise visualization includes both activity breakdown and weekly goals. The component uses custom hooks for data management, visualization handling, and navigation. It implements expandable chart views and provides educational information for patients. It handles loading and error states and includes summary statistics for health monitoring. The component displays patient demographics and medication information through PatientInfoCard. The QR code section provides access to the patient dashboard. The summary toggle controls visibility of 3-month summaries. DashboardGrid renders the chart grid with navigation and expansion controls. Individual chart components handle each health metric. State management uses custom hooks for centralized state, handles chart expansion state, manages navigation state for each chart type independently, and controls summary visibility with toggle state.\r\n */\n\nimport React from 'react';\nimport usePatientData from './hooks/usePatientData';\nimport useVisualizations from './hooks/useVisualizations';\nimport useChartNavigation from './hooks/useChartNavigation';\nimport useDashboardState from './hooks/useDashboardState';\nimport PatientInfoCard from './components/PatientInfoCard';\nimport DashboardGrid from './components/DashboardGrid';\nimport Placeholder from './components/ui/Placeholder';\nimport Switch from './components/ui/Switch';\nimport './HealthDashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HealthDashboard = ({\n  patientId,\n  accessType = 'Admin',\n  screenshotMode = false\n}) => {\n  _s();\n  const {\n    data,\n    loading,\n    error\n  } = usePatientData(patientId);\n  const {\n    allVisualizations,\n    availableVisualizations: allAvailableVisualizations\n  } = useVisualizations(data);\n\n  // Filter visualizations based on access type\n  // Physicians don't see meal contents chart\n  let availableVisualizations = {\n    ...allAvailableVisualizations\n  };\n  if (accessType === 'Physician') {\n    const {\n      mealContents,\n      ...rest\n    } = availableVisualizations;\n    availableVisualizations = rest;\n  }\n\n  // Use dashboard state for chart expansion and summary toggles\n  const {\n    expandedChart,\n    showThreeMonthSummaries,\n    toggleChart,\n    toggleThreeMonthSummaries\n  } = useDashboardState();\n\n  // Create navigation for each chart type\n  // Most charts use week navigation, but mood uses month navigation\n  const weekNavigation = useChartNavigation('glucose'); // Week-based\n  const monthNavigation = useChartNavigation('mood'); // Month-based\n\n  const chartNavigation = {\n    glucose: weekNavigation,\n    bloodPressure: weekNavigation,\n    exercise: weekNavigation,\n    sleep: weekNavigation,\n    pain: weekNavigation,\n    mood: monthNavigation,\n    // Mood uses month navigation\n    mealContents: weekNavigation\n  };\n\n  // Render visualization with unified view mode\n  const renderVisualizationWithMode = (visualizationType, boxId) => {\n    if (!patientId) {\n      return /*#__PURE__*/_jsxDEV(Placeholder, {\n        message: \"Please select a patient to view data.\",\n        type: \"select-patient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 14\n      }, this);\n    }\n    const viz = allVisualizations[visualizationType];\n    if (!viz) {\n      return /*#__PURE__*/_jsxDEV(Placeholder, {\n        message: \"Invalid visualization\",\n        type: \"error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 14\n      }, this);\n    }\n    const Component = viz.component;\n    const isExpanded = expandedChart === boxId;\n    const navigation = chartNavigation[visualizationType];\n    return /*#__PURE__*/_jsxDEV(Component, {\n      patientId: patientId,\n      isExpanded: isExpanded,\n      onExpand: () => toggleChart(boxId),\n      accessType: accessType,\n      navigation: navigation,\n      screenshotMode: screenshotMode,\n      showThreeMonthSummaries: showThreeMonthSummaries // Pass summary toggle state\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 12\n    }, this);\n  };\n  const patientInfo = data === null || data === void 0 ? void 0 : data.patientInfo;\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading-screen\",\n    children: \"Loading patient data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error-screen\",\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"health-dashboard\",\n    children: [!screenshotMode && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(PatientInfoCard, {\n        patientInfo: patientInfo,\n        loading: loading,\n        error: error,\n        variant: \"unified\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"qr-code-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Access Health Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Scan QR code for quick access\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `${process.env.PUBLIC_URL}/Public_dashboard_QR_code.png`,\n            alt: \"QR Code for PGHD Dashboard\",\n            className: \"qr-code-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-toggle-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Summary Options\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Switch, {\n            checked: showThreeMonthSummaries,\n            onChange: toggleThreeMonthSummaries,\n            leftLabel: \"Week Only\",\n            rightLabel: \"Include 3-Month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"toggle-description\",\n            children: showThreeMonthSummaries ? \"Showing both week and 3-month summaries for comprehensive health tracking\" : \"Showing week summaries only for focused current health monitoring\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DashboardGrid, {\n      viewMode: \"unified\",\n      availableVisualizations: availableVisualizations,\n      allVisualizations: allVisualizations,\n      onExpand: toggleChart,\n      expandedItem: expandedChart,\n      renderVisualization: renderVisualizationWithMode,\n      chartNavigation: chartNavigation,\n      screenshotMode: screenshotMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(HealthDashboard, \"Jsft68fsbnYxk6n6ZtYKaVRQ6Qo=\", false, function () {\n  return [usePatientData, useVisualizations, useDashboardState, useChartNavigation, useChartNavigation];\n});\n_c = HealthDashboard;\nexport default HealthDashboard;\nvar _c;\n$RefreshReg$(_c, \"HealthDashboard\");","map":{"version":3,"names":["React","usePatientData","useVisualizations","useChartNavigation","useDashboardState","PatientInfoCard","DashboardGrid","Placeholder","Switch","jsxDEV","_jsxDEV","HealthDashboard","patientId","accessType","screenshotMode","_s","data","loading","error","allVisualizations","availableVisualizations","allAvailableVisualizations","mealContents","rest","expandedChart","showThreeMonthSummaries","toggleChart","toggleThreeMonthSummaries","weekNavigation","monthNavigation","chartNavigation","glucose","bloodPressure","exercise","sleep","pain","mood","renderVisualizationWithMode","visualizationType","boxId","message","type","fileName","_jsxFileName","lineNumber","columnNumber","viz","Component","component","isExpanded","navigation","onExpand","patientInfo","className","children","variant","src","process","env","PUBLIC_URL","alt","checked","onChange","leftLabel","rightLabel","viewMode","expandedItem","renderVisualization","_c","$RefreshReg$"],"sources":["C:/Users/Matteo/Working_Folder/a. MCC Thesis Local Experimental/PGHD_Visualization_Dashboard/src/HealthDashboard.js"],"sourcesContent":["/*\r\n HealthDashboard.js - Unified Health Dashboard Component\r\n \r\n This component provides a unified health dashboard designed for use by both patients and healthcare providers. It displays patient information with QR code access and shows week summaries for health tracking. It includes a toggle for 3-month summaries for long-term trend analysis. Exercise visualization includes both activity breakdown and weekly goals. The component uses custom hooks for data management, visualization handling, and navigation. It implements expandable chart views and provides educational information for patients. It handles loading and error states and includes summary statistics for health monitoring. The component displays patient demographics and medication information through PatientInfoCard. The QR code section provides access to the patient dashboard. The summary toggle controls visibility of 3-month summaries. DashboardGrid renders the chart grid with navigation and expansion controls. Individual chart components handle each health metric. State management uses custom hooks for centralized state, handles chart expansion state, manages navigation state for each chart type independently, and controls summary visibility with toggle state.\r\n */\r\n\r\nimport React from 'react';\r\nimport usePatientData from './hooks/usePatientData';\r\nimport useVisualizations from './hooks/useVisualizations';\r\nimport useChartNavigation from './hooks/useChartNavigation';\r\nimport useDashboardState from './hooks/useDashboardState';\r\nimport PatientInfoCard from './components/PatientInfoCard';\r\nimport DashboardGrid from './components/DashboardGrid';\r\nimport Placeholder from './components/ui/Placeholder';\r\nimport Switch from './components/ui/Switch';\r\nimport './HealthDashboard.css';\r\n\r\nconst HealthDashboard = ({ patientId, accessType = 'Admin', screenshotMode = false }) => {\r\n  const { data, loading, error } = usePatientData(patientId);\r\n  const { \r\n    allVisualizations, \r\n    availableVisualizations: allAvailableVisualizations\r\n  } = useVisualizations(data);\r\n  \r\n  // Filter visualizations based on access type\r\n  // Physicians don't see meal contents chart\r\n  let availableVisualizations = { ...allAvailableVisualizations };\r\n  if (accessType === 'Physician') {\r\n    const { mealContents, ...rest } = availableVisualizations;\r\n    availableVisualizations = rest;\r\n  }\r\n  \r\n  // Use dashboard state for chart expansion and summary toggles\r\n  const {\r\n    expandedChart,\r\n    showThreeMonthSummaries,\r\n    toggleChart,\r\n    toggleThreeMonthSummaries\r\n  } = useDashboardState();\r\n\r\n  // Create navigation for each chart type\r\n  // Most charts use week navigation, but mood uses month navigation\r\n  const weekNavigation = useChartNavigation('glucose'); // Week-based\r\n  const monthNavigation = useChartNavigation('mood');   // Month-based\r\n  \r\n  const chartNavigation = {\r\n    glucose: weekNavigation,\r\n    bloodPressure: weekNavigation,\r\n    exercise: weekNavigation,\r\n    sleep: weekNavigation,\r\n    pain: weekNavigation,\r\n    mood: monthNavigation,      // Mood uses month navigation\r\n    mealContents: weekNavigation\r\n  };\r\n\r\n  // Render visualization with unified view mode\r\n  const renderVisualizationWithMode = (visualizationType, boxId) => {\r\n    if (!patientId) {\r\n      return <Placeholder message=\"Please select a patient to view data.\" type=\"select-patient\" />;\r\n    }\r\n    \r\n    const viz = allVisualizations[visualizationType];\r\n    if (!viz) {\r\n      return <Placeholder message=\"Invalid visualization\" type=\"error\" />;\r\n    }\r\n\r\n    const Component = viz.component;\r\n    const isExpanded = expandedChart === boxId;\r\n    const navigation = chartNavigation[visualizationType];\r\n    \r\n    return <Component \r\n      patientId={patientId} \r\n      isExpanded={isExpanded} \r\n      onExpand={() => toggleChart(boxId)}\r\n      accessType={accessType}\r\n      navigation={navigation}\r\n      screenshotMode={screenshotMode}\r\n      showThreeMonthSummaries={showThreeMonthSummaries} // Pass summary toggle state\r\n    />;\r\n  };\r\n\r\n  const patientInfo = data?.patientInfo;\r\n\r\n  if (loading) return <div className=\"loading-screen\">Loading patient data...</div>;\r\n  if (error) return <div className=\"error-screen\">Error: {error}</div>;\r\n\r\n  return (\r\n    <div className=\"health-dashboard\">\r\n      {!screenshotMode && (\r\n        <div className=\"dashboard-header\">\r\n          <PatientInfoCard \r\n            patientInfo={patientInfo}\r\n            loading={loading}\r\n            error={error}\r\n            variant=\"unified\"\r\n          />\r\n          \r\n          <div className=\"dashboard-controls\">\r\n            <div className=\"qr-code-section\">\r\n              <h3>Access Health Dashboard</h3>\r\n              <p>Scan QR code for quick access</p>\r\n              <img \r\n                src={`${process.env.PUBLIC_URL}/Public_dashboard_QR_code.png`}\r\n                alt=\"QR Code for PGHD Dashboard\"\r\n                className=\"qr-code-image\"\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"summary-toggle-section\">\r\n              <h3>Summary Options</h3>\r\n              <Switch\r\n                checked={showThreeMonthSummaries}\r\n                onChange={toggleThreeMonthSummaries}\r\n                leftLabel=\"Week Only\"\r\n                rightLabel=\"Include 3-Month\"\r\n              />\r\n              <p className=\"toggle-description\">\r\n                {showThreeMonthSummaries \r\n                  ? \"Showing both week and 3-month summaries for comprehensive health tracking\"\r\n                  : \"Showing week summaries only for focused current health monitoring\"\r\n                }\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n          <DashboardGrid\r\n            viewMode=\"unified\"\r\n            availableVisualizations={availableVisualizations}\r\n            allVisualizations={allVisualizations}\r\n            onExpand={toggleChart}\r\n            expandedItem={expandedChart}\r\n            renderVisualization={renderVisualizationWithMode}\r\n            chartNavigation={chartNavigation}\r\n            screenshotMode={screenshotMode}\r\n          />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HealthDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}