{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matteo\\\\Working_Folder\\\\a. MCC Thesis Local\\\\MCC_digital_health_data_visualizations\\\\src\\\\components\\\\patient_charts\\\\BodySvg.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BodySvg = ({\n  painLocation,\n  painColor,\n  view = 'front',\n  className = '',\n  width = 60,\n  height = 72\n}) => {\n  const defaultFill = '#F5F5F5';\n  const strokeColor = '#CCCCCC';\n  const strokeWidth = 1;\n\n  // More detailed body part mapping\n  const bodyPartFills = {\n    // Head and neck\n    head: defaultFill,\n    neck: defaultFill,\n    // Torso - front\n    chest: defaultFill,\n    stomach: defaultFill,\n    leftShoulder: defaultFill,\n    rightShoulder: defaultFill,\n    // Torso - back\n    upperBack: defaultFill,\n    lowerBack: defaultFill,\n    leftShoulderBlade: defaultFill,\n    rightShoulderBlade: defaultFill,\n    // Hips\n    leftHip: defaultFill,\n    rightHip: defaultFill,\n    // Arms\n    leftArm: defaultFill,\n    rightArm: defaultFill,\n    leftElbow: defaultFill,\n    rightElbow: defaultFill,\n    leftForearm: defaultFill,\n    rightForearm: defaultFill,\n    leftHand: defaultFill,\n    rightHand: defaultFill,\n    // Legs\n    leftThigh: defaultFill,\n    rightThigh: defaultFill,\n    leftKnee: defaultFill,\n    rightKnee: defaultFill,\n    leftCalf: defaultFill,\n    rightCalf: defaultFill,\n    leftFoot: defaultFill,\n    rightFoot: defaultFill\n  };\n\n  // Enhanced location mapping\n  const locationMapping = {\n    // Head and neck (visible from both sides)\n    head: 'head',\n    neck: 'neck',\n    // Torso - front view only\n    chest: view === 'front' ? 'chest' : null,\n    stomach: view === 'front' ? 'stomach' : null,\n    abdomen: view === 'front' ? 'stomach' : null,\n    belly: view === 'front' ? 'stomach' : null,\n    leftShoulder: view === 'front' ? 'leftShoulder' : null,\n    rightShoulder: view === 'front' ? 'rightShoulder' : null,\n    shoulder: view === 'front' ? 'leftShoulder' : null,\n    shoulders: view === 'front' ? 'leftShoulder' : null,\n    // Torso - back view only\n    back: view === 'back' ? 'upperBack' : null,\n    upperBack: view === 'back' ? 'upperBack' : null,\n    lowerBack: view === 'back' ? 'lowerBack' : null,\n    spine: view === 'back' ? 'upperBack' : null,\n    leftShoulderBlade: view === 'back' ? 'leftShoulderBlade' : null,\n    rightShoulderBlade: view === 'back' ? 'rightShoulderBlade' : null,\n    shoulderBlade: view === 'back' ? 'leftShoulderBlade' : null,\n    shoulderBlades: view === 'back' ? 'leftShoulderBlade' : null,\n    // Hips (visible from both sides)\n    hip: 'leftHip',\n    hips: 'leftHip',\n    leftHip: 'leftHip',\n    rightHip: 'rightHip',\n    // Arms (visible from both sides)\n    arm: 'leftArm',\n    arms: 'leftArm',\n    leftArm: 'leftArm',\n    rightArm: 'rightArm',\n    elbow: 'leftElbow',\n    elbows: 'leftElbow',\n    leftElbow: 'leftElbow',\n    rightElbow: 'rightElbow',\n    forearm: 'leftForearm',\n    forearms: 'leftForearm',\n    leftForearm: 'leftForearm',\n    rightForearm: 'rightForearm',\n    hand: 'leftHand',\n    hands: 'leftHand',\n    leftHand: 'leftHand',\n    rightHand: 'rightHand',\n    // Legs (visible from both sides)\n    leg: 'leftThigh',\n    legs: 'leftThigh',\n    leftThigh: 'leftThigh',\n    rightThigh: 'rightThigh',\n    thigh: 'leftThigh',\n    thighs: 'leftThigh',\n    knee: 'leftKnee',\n    knees: 'leftKnee',\n    leftKnee: 'leftKnee',\n    rightKnee: 'rightKnee',\n    calf: 'leftCalf',\n    calves: 'leftCalf',\n    leftCalf: 'leftCalf',\n    rightCalf: 'rightCalf',\n    foot: 'leftFoot',\n    feet: 'leftFoot',\n    leftFoot: 'leftFoot',\n    rightFoot: 'rightFoot',\n    ankle: 'leftFoot',\n    ankles: 'leftFoot'\n  };\n  const targetPart = locationMapping[painLocation];\n  if (targetPart && targetPart !== null) {\n    bodyPartFills[targetPart] = painColor;\n\n    // Handle symmetrical body parts - shade both sides for general terms\n    if (painLocation === 'elbow' || painLocation === 'elbows') {\n      bodyPartFills.leftElbow = painColor;\n      bodyPartFills.rightElbow = painColor;\n    } else if (painLocation === 'shoulder' || painLocation === 'shoulders') {\n      if (view === 'front') {\n        bodyPartFills.leftShoulder = painColor;\n        bodyPartFills.rightShoulder = painColor;\n      } else {\n        bodyPartFills.leftShoulderBlade = painColor;\n        bodyPartFills.rightShoulderBlade = painColor;\n      }\n    } else if (painLocation === 'arm' || painLocation === 'arms') {\n      bodyPartFills.leftArm = painColor;\n      bodyPartFills.rightArm = painColor;\n    } else if (painLocation === 'forearm' || painLocation === 'forearms') {\n      bodyPartFills.leftForearm = painColor;\n      bodyPartFills.rightForearm = painColor;\n    } else if (painLocation === 'hand' || painLocation === 'hands') {\n      bodyPartFills.leftHand = painColor;\n      bodyPartFills.rightHand = painColor;\n    } else if (painLocation === 'leg' || painLocation === 'legs') {\n      bodyPartFills.leftThigh = painColor;\n      bodyPartFills.rightThigh = painColor;\n    } else if (painLocation === 'thigh' || painLocation === 'thighs') {\n      bodyPartFills.leftThigh = painColor;\n      bodyPartFills.rightThigh = painColor;\n    } else if (painLocation === 'knee' || painLocation === 'knees') {\n      bodyPartFills.leftKnee = painColor;\n      bodyPartFills.rightKnee = painColor;\n    } else if (painLocation === 'calf' || painLocation === 'calves') {\n      bodyPartFills.leftCalf = painColor;\n      bodyPartFills.rightCalf = painColor;\n    } else if (painLocation === 'foot' || painLocation === 'feet') {\n      bodyPartFills.leftFoot = painColor;\n      bodyPartFills.rightFoot = painColor;\n    } else if (painLocation === 'ankle' || painLocation === 'ankles') {\n      bodyPartFills.leftFoot = painColor;\n      bodyPartFills.rightFoot = painColor;\n    } else if (painLocation === 'hip' || painLocation === 'hips') {\n      bodyPartFills.leftHip = painColor;\n      bodyPartFills.rightHip = painColor;\n    }\n  }\n  const renderFrontView = () => /*#__PURE__*/_jsxDEV(\"g\", {\n    id: \"body-front\",\n    children: [/*#__PURE__*/_jsxDEV(\"ellipse\", {\n      cx: \"75\",\n      cy: \"15\",\n      rx: \"12\",\n      ry: \"15\",\n      fill: bodyPartFills.head,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n      x: \"68\",\n      y: \"30\",\n      width: \"14\",\n      height: \"8\",\n      fill: bodyPartFills.neck,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M60,38 Q75,35 90,38 L85,85 Q75,90 65,85 Z\",\n      fill: bodyPartFills.chest,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M65,85 Q75,88 85,85 L80,110 Q75,115 70,110 Z\",\n      fill: bodyPartFills.stomach,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ellipse\", {\n      cx: \"55\",\n      cy: \"40\",\n      rx: \"8\",\n      ry: \"6\",\n      fill: bodyPartFills.leftShoulder,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ellipse\", {\n      cx: \"95\",\n      cy: \"40\",\n      rx: \"8\",\n      ry: \"6\",\n      fill: bodyPartFills.rightShoulder,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M47,40 Q45,50 43,65 L50,67 Q52,52 55,42 Z\",\n      fill: bodyPartFills.leftArm,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M103,40 Q105,50 107,65 L100,67 Q98,52 95,42 Z\",\n      fill: bodyPartFills.rightArm,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ellipse\", {\n      cx: \"46\",\n      cy: \"70\",\n      rx: \"4\",\n      ry: \"6\",\n      fill: bodyPartFills.leftElbow,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ellipse\", {\n      cx: \"104\",\n      cy: \"70\",\n      rx: \"4\",\n      ry: \"6\",\n      fill: bodyPartFills.rightElbow,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M42,70 Q44,80 46,90 L50,88 Q48,78 50,72 Z\",\n      fill: bodyPartFills.leftForearm,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M108,70 Q106,80 104,90 L100,88 Q102,78 100,72 Z\",\n      fill: bodyPartFills.rightForearm,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ellipse\", {\n      cx: \"48\",\n      cy: \"95\",\n      rx: \"5\",\n      ry: \"8\",\n      fill: bodyPartFills.leftHand,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ellipse\", {\n      cx: \"102\",\n      cy: \"95\",\n      rx: \"5\",\n      ry: \"8\",\n      fill: bodyPartFills.rightHand,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ellipse\", {\n      cx: \"65\",\n      cy: \"105\",\n      rx: \"8\",\n      ry: \"6\",\n      fill: bodyPartFills.leftHip,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ellipse\", {\n      cx: \"85\",\n      cy: \"105\",\n      rx: \"8\",\n      ry: \"6\",\n      fill: bodyPartFills.rightHip,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M65,110 Q70,115 75,120 L73,140 Q70,135 67,130 Z\",\n      fill: bodyPartFills.leftThigh,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M85,110 Q80,115 75,120 L77,140 Q80,135 83,130 Z\",\n      fill: bodyPartFills.rightThigh,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ellipse\", {\n      cx: \"70\",\n      cy: \"145\",\n      rx: \"6\",\n      ry: \"4\",\n      fill: bodyPartFills.leftKnee,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ellipse\", {\n      cx: \"80\",\n      cy: \"145\",\n      rx: \"6\",\n      ry: \"4\",\n      fill: bodyPartFills.rightKnee,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M67,149 Q70,155 73,165 L70,167 Q67,161 70,155 Z\",\n      fill: bodyPartFills.leftCalf,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M83,149 Q80,155 77,165 L80,167 Q83,161 80,155 Z\",\n      fill: bodyPartFills.rightCalf,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ellipse\", {\n      cx: \"70\",\n      cy: \"170\",\n      rx: \"8\",\n      ry: \"4\",\n      fill: bodyPartFills.leftFoot,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ellipse\", {\n      cx: \"80\",\n      cy: \"170\",\n      rx: \"8\",\n      ry: \"4\",\n      fill: bodyPartFills.rightFoot,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n  const renderBackView = () => /*#__PURE__*/_jsxDEV(\"g\", {\n    id: \"body-back\",\n    children: [/*#__PURE__*/_jsxDEV(\"ellipse\", {\n      cx: \"75\",\n      cy: \"15\",\n      rx: \"12\",\n      ry: \"15\",\n      fill: bodyPartFills.head,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n      x: \"68\",\n      y: \"30\",\n      width: \"14\",\n      height: \"8\",\n      fill: bodyPartFills.neck,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M60,38 Q75,35 90,38 L85,70 Q75,75 65,70 Z\",\n      fill: bodyPartFills.upperBack,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M65,70 Q75,75 85,70 L80,110 Q75,115 70,110 Z\",\n      fill: bodyPartFills.lowerBack,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ellipse\", {\n      cx: \"55\",\n      cy: \"45\",\n      rx: \"6\",\n      ry: \"8\",\n      fill: bodyPartFills.leftShoulderBlade,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ellipse\", {\n      cx: \"95\",\n      cy: \"45\",\n      rx: \"6\",\n      ry: \"8\",\n      fill: bodyPartFills.rightShoulderBlade,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M47,40 Q45,50 43,65 L50,67 Q52,52 55,42 Z\",\n      fill: bodyPartFills.leftArm,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M103,40 Q105,50 107,65 L100,67 Q98,52 95,42 Z\",\n      fill: bodyPartFills.rightArm,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ellipse\", {\n      cx: \"46\",\n      cy: \"70\",\n      rx: \"4\",\n      ry: \"6\",\n      fill: bodyPartFills.leftElbow,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ellipse\", {\n      cx: \"104\",\n      cy: \"70\",\n      rx: \"4\",\n      ry: \"6\",\n      fill: bodyPartFills.rightElbow,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M42,70 Q44,80 46,90 L50,88 Q48,78 50,72 Z\",\n      fill: bodyPartFills.leftForearm,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M108,70 Q106,80 104,90 L100,88 Q102,78 100,72 Z\",\n      fill: bodyPartFills.rightForearm,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ellipse\", {\n      cx: \"48\",\n      cy: \"95\",\n      rx: \"5\",\n      ry: \"8\",\n      fill: bodyPartFills.leftHand,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ellipse\", {\n      cx: \"102\",\n      cy: \"95\",\n      rx: \"5\",\n      ry: \"8\",\n      fill: bodyPartFills.rightHand,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ellipse\", {\n      cx: \"65\",\n      cy: \"105\",\n      rx: \"8\",\n      ry: \"6\",\n      fill: bodyPartFills.leftHip,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ellipse\", {\n      cx: \"85\",\n      cy: \"105\",\n      rx: \"8\",\n      ry: \"6\",\n      fill: bodyPartFills.rightHip,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M65,110 Q70,115 75,120 L73,140 Q70,135 67,130 Z\",\n      fill: bodyPartFills.leftThigh,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M85,110 Q80,115 75,120 L77,140 Q80,135 83,130 Z\",\n      fill: bodyPartFills.rightThigh,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ellipse\", {\n      cx: \"70\",\n      cy: \"145\",\n      rx: \"6\",\n      ry: \"4\",\n      fill: bodyPartFills.leftKnee,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ellipse\", {\n      cx: \"80\",\n      cy: \"145\",\n      rx: \"6\",\n      ry: \"4\",\n      fill: bodyPartFills.rightKnee,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M67,149 Q70,155 73,165 L70,167 Q67,161 70,155 Z\",\n      fill: bodyPartFills.leftCalf,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M83,149 Q80,155 77,165 L80,167 Q83,161 80,155 Z\",\n      fill: bodyPartFills.rightCalf,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ellipse\", {\n      cx: \"70\",\n      cy: \"170\",\n      rx: \"8\",\n      ry: \"4\",\n      fill: bodyPartFills.leftFoot,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ellipse\", {\n      cx: \"80\",\n      cy: \"170\",\n      rx: \"8\",\n      ry: \"4\",\n      fill: bodyPartFills.rightFoot,\n      stroke: strokeColor,\n      strokeWidth: strokeWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 377,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 150 180\",\n    className: className,\n    style: {\n      width: `${width}px`,\n      height: `${height}px`\n    },\n    children: view === 'front' ? renderFrontView() : renderBackView()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 573,\n    columnNumber: 5\n  }, this);\n};\n_c = BodySvg;\nexport default BodySvg;\nvar _c;\n$RefreshReg$(_c, \"BodySvg\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","BodySvg","painLocation","painColor","view","className","width","height","defaultFill","strokeColor","strokeWidth","bodyPartFills","head","neck","chest","stomach","leftShoulder","rightShoulder","upperBack","lowerBack","leftShoulderBlade","rightShoulderBlade","leftHip","rightHip","leftArm","rightArm","leftElbow","rightElbow","leftForearm","rightForearm","leftHand","rightHand","leftThigh","rightThigh","leftKnee","rightKnee","leftCalf","rightCalf","leftFoot","rightFoot","locationMapping","abdomen","belly","shoulder","shoulders","back","spine","shoulderBlade","shoulderBlades","hip","hips","arm","arms","elbow","elbows","forearm","forearms","hand","hands","leg","legs","thigh","thighs","knee","knees","calf","calves","foot","feet","ankle","ankles","targetPart","renderFrontView","id","children","cx","cy","rx","ry","fill","stroke","fileName","_jsxFileName","lineNumber","columnNumber","x","y","d","renderBackView","xmlns","viewBox","style","_c","$RefreshReg$"],"sources":["C:/Users/Matteo/Working_Folder/a. MCC Thesis Local/MCC_digital_health_data_visualizations/src/components/patient_charts/BodySvg.js"],"sourcesContent":["import React from 'react';\n\nconst BodySvg = ({ \n  painLocation, \n  painColor, \n  view = 'front', \n  className = '', \n  width = 60, \n  height = 72 \n}) => {\n  const defaultFill = '#F5F5F5';\n  const strokeColor = '#CCCCCC';\n  const strokeWidth = 1;\n\n  // More detailed body part mapping\n  const bodyPartFills = {\n    // Head and neck\n    head: defaultFill,\n    neck: defaultFill,\n    \n    // Torso - front\n    chest: defaultFill,\n    stomach: defaultFill,\n    leftShoulder: defaultFill,\n    rightShoulder: defaultFill,\n    \n    // Torso - back\n    upperBack: defaultFill,\n    lowerBack: defaultFill,\n    leftShoulderBlade: defaultFill,\n    rightShoulderBlade: defaultFill,\n    \n    // Hips\n    leftHip: defaultFill,\n    rightHip: defaultFill,\n    \n    // Arms\n    leftArm: defaultFill,\n    rightArm: defaultFill,\n    leftElbow: defaultFill,\n    rightElbow: defaultFill,\n    leftForearm: defaultFill,\n    rightForearm: defaultFill,\n    leftHand: defaultFill,\n    rightHand: defaultFill,\n    \n    // Legs\n    leftThigh: defaultFill,\n    rightThigh: defaultFill,\n    leftKnee: defaultFill,\n    rightKnee: defaultFill,\n    leftCalf: defaultFill,\n    rightCalf: defaultFill,\n    leftFoot: defaultFill,\n    rightFoot: defaultFill,\n  };\n\n  // Enhanced location mapping\n  const locationMapping = {\n    // Head and neck (visible from both sides)\n    head: 'head',\n    neck: 'neck',\n    \n    // Torso - front view only\n    chest: view === 'front' ? 'chest' : null,\n    stomach: view === 'front' ? 'stomach' : null,\n    abdomen: view === 'front' ? 'stomach' : null,\n    belly: view === 'front' ? 'stomach' : null,\n    leftShoulder: view === 'front' ? 'leftShoulder' : null,\n    rightShoulder: view === 'front' ? 'rightShoulder' : null,\n    shoulder: view === 'front' ? 'leftShoulder' : null,\n    shoulders: view === 'front' ? 'leftShoulder' : null,\n    \n    // Torso - back view only\n    back: view === 'back' ? 'upperBack' : null,\n    upperBack: view === 'back' ? 'upperBack' : null,\n    lowerBack: view === 'back' ? 'lowerBack' : null,\n    spine: view === 'back' ? 'upperBack' : null,\n    leftShoulderBlade: view === 'back' ? 'leftShoulderBlade' : null,\n    rightShoulderBlade: view === 'back' ? 'rightShoulderBlade' : null,\n    shoulderBlade: view === 'back' ? 'leftShoulderBlade' : null,\n    shoulderBlades: view === 'back' ? 'leftShoulderBlade' : null,\n    \n    // Hips (visible from both sides)\n    hip: 'leftHip',\n    hips: 'leftHip',\n    leftHip: 'leftHip',\n    rightHip: 'rightHip',\n    \n    // Arms (visible from both sides)\n    arm: 'leftArm',\n    arms: 'leftArm',\n    leftArm: 'leftArm',\n    rightArm: 'rightArm',\n    elbow: 'leftElbow',\n    elbows: 'leftElbow',\n    leftElbow: 'leftElbow',\n    rightElbow: 'rightElbow',\n    forearm: 'leftForearm',\n    forearms: 'leftForearm',\n    leftForearm: 'leftForearm',\n    rightForearm: 'rightForearm',\n    hand: 'leftHand',\n    hands: 'leftHand',\n    leftHand: 'leftHand',\n    rightHand: 'rightHand',\n    \n    // Legs (visible from both sides)\n    leg: 'leftThigh',\n    legs: 'leftThigh',\n    leftThigh: 'leftThigh',\n    rightThigh: 'rightThigh',\n    thigh: 'leftThigh',\n    thighs: 'leftThigh',\n    knee: 'leftKnee',\n    knees: 'leftKnee',\n    leftKnee: 'leftKnee',\n    rightKnee: 'rightKnee',\n    calf: 'leftCalf',\n    calves: 'leftCalf',\n    leftCalf: 'leftCalf',\n    rightCalf: 'rightCalf',\n    foot: 'leftFoot',\n    feet: 'leftFoot',\n    leftFoot: 'leftFoot',\n    rightFoot: 'rightFoot',\n    ankle: 'leftFoot',\n    ankles: 'leftFoot',\n  };\n\n  const targetPart = locationMapping[painLocation];\n  if (targetPart && targetPart !== null) {\n    bodyPartFills[targetPart] = painColor;\n    \n    // Handle symmetrical body parts - shade both sides for general terms\n    if (painLocation === 'elbow' || painLocation === 'elbows') {\n      bodyPartFills.leftElbow = painColor;\n      bodyPartFills.rightElbow = painColor;\n    } else if (painLocation === 'shoulder' || painLocation === 'shoulders') {\n      if (view === 'front') {\n        bodyPartFills.leftShoulder = painColor;\n        bodyPartFills.rightShoulder = painColor;\n      } else {\n        bodyPartFills.leftShoulderBlade = painColor;\n        bodyPartFills.rightShoulderBlade = painColor;\n      }\n    } else if (painLocation === 'arm' || painLocation === 'arms') {\n      bodyPartFills.leftArm = painColor;\n      bodyPartFills.rightArm = painColor;\n    } else if (painLocation === 'forearm' || painLocation === 'forearms') {\n      bodyPartFills.leftForearm = painColor;\n      bodyPartFills.rightForearm = painColor;\n    } else if (painLocation === 'hand' || painLocation === 'hands') {\n      bodyPartFills.leftHand = painColor;\n      bodyPartFills.rightHand = painColor;\n    } else if (painLocation === 'leg' || painLocation === 'legs') {\n      bodyPartFills.leftThigh = painColor;\n      bodyPartFills.rightThigh = painColor;\n    } else if (painLocation === 'thigh' || painLocation === 'thighs') {\n      bodyPartFills.leftThigh = painColor;\n      bodyPartFills.rightThigh = painColor;\n    } else if (painLocation === 'knee' || painLocation === 'knees') {\n      bodyPartFills.leftKnee = painColor;\n      bodyPartFills.rightKnee = painColor;\n    } else if (painLocation === 'calf' || painLocation === 'calves') {\n      bodyPartFills.leftCalf = painColor;\n      bodyPartFills.rightCalf = painColor;\n    } else if (painLocation === 'foot' || painLocation === 'feet') {\n      bodyPartFills.leftFoot = painColor;\n      bodyPartFills.rightFoot = painColor;\n    } else if (painLocation === 'ankle' || painLocation === 'ankles') {\n      bodyPartFills.leftFoot = painColor;\n      bodyPartFills.rightFoot = painColor;\n    } else if (painLocation === 'hip' || painLocation === 'hips') {\n      bodyPartFills.leftHip = painColor;\n      bodyPartFills.rightHip = painColor;\n    }\n  }\n\n  const renderFrontView = () => (\n    <g id=\"body-front\">\n      {/* Head */}\n      <ellipse \n        cx=\"75\" cy=\"15\" rx=\"12\" ry=\"15\" \n        fill={bodyPartFills.head} \n        stroke={strokeColor} \n        strokeWidth={strokeWidth} \n      />\n      \n      {/* Neck */}\n      <rect \n        x=\"68\" y=\"30\" width=\"14\" height=\"8\" \n        fill={bodyPartFills.neck} \n        stroke={strokeColor} \n        strokeWidth={strokeWidth} \n      />\n      \n      {/* Torso */}\n      <path \n        d=\"M60,38 Q75,35 90,38 L85,85 Q75,90 65,85 Z\" \n        fill={bodyPartFills.chest} \n        stroke={strokeColor} \n        strokeWidth={strokeWidth} \n      />\n      \n      {/* Stomach */}\n      <path \n        d=\"M65,85 Q75,88 85,85 L80,110 Q75,115 70,110 Z\" \n        fill={bodyPartFills.stomach} \n        stroke={strokeColor} \n        strokeWidth={strokeWidth} \n      />\n      \n      {/* Left Shoulder */}\n      <ellipse \n        cx=\"55\" cy=\"40\" rx=\"8\" ry=\"6\" \n        fill={bodyPartFills.leftShoulder} \n        stroke={strokeColor} \n        strokeWidth={strokeWidth} \n      />\n      \n      {/* Right Shoulder */}\n      <ellipse \n        cx=\"95\" cy=\"40\" rx=\"8\" ry=\"6\" \n        fill={bodyPartFills.rightShoulder} \n        stroke={strokeColor} \n        strokeWidth={strokeWidth} \n      />\n      \n      {/* Left Arm */}\n      <path \n        d=\"M47,40 Q45,50 43,65 L50,67 Q52,52 55,42 Z\" \n        fill={bodyPartFills.leftArm} \n        stroke={strokeColor} \n        strokeWidth={strokeWidth} \n      />\n      \n      {/* Right Arm */}\n      <path \n        d=\"M103,40 Q105,50 107,65 L100,67 Q98,52 95,42 Z\" \n        fill={bodyPartFills.rightArm} \n        stroke={strokeColor} \n        strokeWidth={strokeWidth} \n      />\n      \n      {/* Left Elbow */}\n      <ellipse \n        cx=\"46\" cy=\"70\" rx=\"4\" ry=\"6\" \n        fill={bodyPartFills.leftElbow} \n        stroke={strokeColor} \n        strokeWidth={strokeWidth} \n      />\n      \n      {/* Right Elbow */}\n      <ellipse \n        cx=\"104\" cy=\"70\" rx=\"4\" ry=\"6\" \n        fill={bodyPartFills.rightElbow} \n        stroke={strokeColor} \n        strokeWidth={strokeWidth} \n      />\n      \n      {/* Left Forearm */}\n      <path \n        d=\"M42,70 Q44,80 46,90 L50,88 Q48,78 50,72 Z\" \n        fill={bodyPartFills.leftForearm} \n        stroke={strokeColor} \n        strokeWidth={strokeWidth} \n      />\n      \n      {/* Right Forearm */}\n      <path \n        d=\"M108,70 Q106,80 104,90 L100,88 Q102,78 100,72 Z\" \n        fill={bodyPartFills.rightForearm} \n        stroke={strokeColor} \n        strokeWidth={strokeWidth} \n      />\n      \n      {/* Left Hand */}\n      <ellipse \n        cx=\"48\" cy=\"95\" rx=\"5\" ry=\"8\" \n        fill={bodyPartFills.leftHand} \n        stroke={strokeColor} \n        strokeWidth={strokeWidth} \n      />\n      \n      {/* Right Hand */}\n      <ellipse \n        cx=\"102\" cy=\"95\" rx=\"5\" ry=\"8\" \n        fill={bodyPartFills.rightHand} \n        stroke={strokeColor} \n        strokeWidth={strokeWidth} \n      />\n      \n      {/* Left Hip */}\n      <ellipse \n        cx=\"65\" cy=\"105\" rx=\"8\" ry=\"6\" \n        fill={bodyPartFills.leftHip} \n        stroke={strokeColor} \n        strokeWidth={strokeWidth} \n      />\n      \n      {/* Right Hip */}\n      <ellipse \n        cx=\"85\" cy=\"105\" rx=\"8\" ry=\"6\" \n        fill={bodyPartFills.rightHip} \n        stroke={strokeColor} \n        strokeWidth={strokeWidth} \n      />\n      \n      {/* Left Thigh */}\n      <path \n        d=\"M65,110 Q70,115 75,120 L73,140 Q70,135 67,130 Z\" \n        fill={bodyPartFills.leftThigh} \n        stroke={strokeColor} \n        strokeWidth={strokeWidth} \n      />\n      \n      {/* Right Thigh */}\n      <path \n        d=\"M85,110 Q80,115 75,120 L77,140 Q80,135 83,130 Z\" \n        fill={bodyPartFills.rightThigh} \n        stroke={strokeColor} \n        strokeWidth={strokeWidth} \n      />\n      \n      {/* Left Knee */}\n      <ellipse \n        cx=\"70\" cy=\"145\" rx=\"6\" ry=\"4\" \n        fill={bodyPartFills.leftKnee} \n        stroke={strokeColor} \n        strokeWidth={strokeWidth} \n      />\n      \n      {/* Right Knee */}\n      <ellipse \n        cx=\"80\" cy=\"145\" rx=\"6\" ry=\"4\" \n        fill={bodyPartFills.rightKnee} \n        stroke={strokeColor} \n        strokeWidth={strokeWidth} \n      />\n      \n      {/* Left Calf */}\n      <path \n        d=\"M67,149 Q70,155 73,165 L70,167 Q67,161 70,155 Z\" \n        fill={bodyPartFills.leftCalf} \n        stroke={strokeColor} \n        strokeWidth={strokeWidth} \n      />\n      \n      {/* Right Calf */}\n      <path \n        d=\"M83,149 Q80,155 77,165 L80,167 Q83,161 80,155 Z\" \n        fill={bodyPartFills.rightCalf} \n        stroke={strokeColor} \n        strokeWidth={strokeWidth} \n      />\n      \n      {/* Left Foot */}\n      <ellipse \n        cx=\"70\" cy=\"170\" rx=\"8\" ry=\"4\" \n        fill={bodyPartFills.leftFoot} \n        stroke={strokeColor} \n        strokeWidth={strokeWidth} \n      />\n      \n      {/* Right Foot */}\n      <ellipse \n        cx=\"80\" cy=\"170\" rx=\"8\" ry=\"4\" \n        fill={bodyPartFills.rightFoot} \n        stroke={strokeColor} \n        strokeWidth={strokeWidth} \n      />\n    </g>\n  );\n\n  const renderBackView = () => (\n    <g id=\"body-back\">\n      {/* Head */}\n      <ellipse \n        cx=\"75\" cy=\"15\" rx=\"12\" ry=\"15\" \n        fill={bodyPartFills.head} \n        stroke={strokeColor} \n        strokeWidth={strokeWidth} \n      />\n      \n      {/* Neck */}\n      <rect \n        x=\"68\" y=\"30\" width=\"14\" height=\"8\" \n        fill={bodyPartFills.neck} \n        stroke={strokeColor} \n        strokeWidth={strokeWidth} \n      />\n      \n      {/* Upper Back */}\n      <path \n        d=\"M60,38 Q75,35 90,38 L85,70 Q75,75 65,70 Z\" \n        fill={bodyPartFills.upperBack} \n        stroke={strokeColor} \n        strokeWidth={strokeWidth} \n      />\n      \n      {/* Lower Back */}\n      <path \n        d=\"M65,70 Q75,75 85,70 L80,110 Q75,115 70,110 Z\" \n        fill={bodyPartFills.lowerBack} \n        stroke={strokeColor} \n        strokeWidth={strokeWidth} \n      />\n      \n      {/* Left Shoulder Blade */}\n      <ellipse \n        cx=\"55\" cy=\"45\" rx=\"6\" ry=\"8\" \n        fill={bodyPartFills.leftShoulderBlade} \n        stroke={strokeColor} \n        strokeWidth={strokeWidth} \n      />\n      \n      {/* Right Shoulder Blade */}\n      <ellipse \n        cx=\"95\" cy=\"45\" rx=\"6\" ry=\"8\" \n        fill={bodyPartFills.rightShoulderBlade} \n        stroke={strokeColor} \n        strokeWidth={strokeWidth} \n      />\n      \n      {/* Left Arm */}\n      <path \n        d=\"M47,40 Q45,50 43,65 L50,67 Q52,52 55,42 Z\" \n        fill={bodyPartFills.leftArm} \n        stroke={strokeColor} \n        strokeWidth={strokeWidth} \n      />\n      \n      {/* Right Arm */}\n      <path \n        d=\"M103,40 Q105,50 107,65 L100,67 Q98,52 95,42 Z\" \n        fill={bodyPartFills.rightArm} \n        stroke={strokeColor} \n        strokeWidth={strokeWidth} \n      />\n      \n      {/* Left Elbow */}\n      <ellipse \n        cx=\"46\" cy=\"70\" rx=\"4\" ry=\"6\" \n        fill={bodyPartFills.leftElbow} \n        stroke={strokeColor} \n        strokeWidth={strokeWidth} \n      />\n      \n      {/* Right Elbow */}\n      <ellipse \n        cx=\"104\" cy=\"70\" rx=\"4\" ry=\"6\" \n        fill={bodyPartFills.rightElbow} \n        stroke={strokeColor} \n        strokeWidth={strokeWidth} \n      />\n      \n      {/* Left Forearm */}\n      <path \n        d=\"M42,70 Q44,80 46,90 L50,88 Q48,78 50,72 Z\" \n        fill={bodyPartFills.leftForearm} \n        stroke={strokeColor} \n        strokeWidth={strokeWidth} \n      />\n      \n      {/* Right Forearm */}\n      <path \n        d=\"M108,70 Q106,80 104,90 L100,88 Q102,78 100,72 Z\" \n        fill={bodyPartFills.rightForearm} \n        stroke={strokeColor} \n        strokeWidth={strokeWidth} \n      />\n      \n      {/* Left Hand */}\n      <ellipse \n        cx=\"48\" cy=\"95\" rx=\"5\" ry=\"8\" \n        fill={bodyPartFills.leftHand} \n        stroke={strokeColor} \n        strokeWidth={strokeWidth} \n      />\n      \n      {/* Right Hand */}\n      <ellipse \n        cx=\"102\" cy=\"95\" rx=\"5\" ry=\"8\" \n        fill={bodyPartFills.rightHand} \n        stroke={strokeColor} \n        strokeWidth={strokeWidth} \n      />\n      \n      {/* Left Hip */}\n      <ellipse \n        cx=\"65\" cy=\"105\" rx=\"8\" ry=\"6\" \n        fill={bodyPartFills.leftHip} \n        stroke={strokeColor} \n        strokeWidth={strokeWidth} \n      />\n      \n      {/* Right Hip */}\n      <ellipse \n        cx=\"85\" cy=\"105\" rx=\"8\" ry=\"6\" \n        fill={bodyPartFills.rightHip} \n        stroke={strokeColor} \n        strokeWidth={strokeWidth} \n      />\n      \n      {/* Left Thigh */}\n      <path \n        d=\"M65,110 Q70,115 75,120 L73,140 Q70,135 67,130 Z\" \n        fill={bodyPartFills.leftThigh} \n        stroke={strokeColor} \n        strokeWidth={strokeWidth} \n      />\n      \n      {/* Right Thigh */}\n      <path \n        d=\"M85,110 Q80,115 75,120 L77,140 Q80,135 83,130 Z\" \n        fill={bodyPartFills.rightThigh} \n        stroke={strokeColor} \n        strokeWidth={strokeWidth} \n      />\n      \n      {/* Left Knee */}\n      <ellipse \n        cx=\"70\" cy=\"145\" rx=\"6\" ry=\"4\" \n        fill={bodyPartFills.leftKnee} \n        stroke={strokeColor} \n        strokeWidth={strokeWidth} \n      />\n      \n      {/* Right Knee */}\n      <ellipse \n        cx=\"80\" cy=\"145\" rx=\"6\" ry=\"4\" \n        fill={bodyPartFills.rightKnee} \n        stroke={strokeColor} \n        strokeWidth={strokeWidth} \n      />\n      \n      {/* Left Calf */}\n      <path \n        d=\"M67,149 Q70,155 73,165 L70,167 Q67,161 70,155 Z\" \n        fill={bodyPartFills.leftCalf} \n        stroke={strokeColor} \n        strokeWidth={strokeWidth} \n      />\n      \n      {/* Right Calf */}\n      <path \n        d=\"M83,149 Q80,155 77,165 L80,167 Q83,161 80,155 Z\" \n        fill={bodyPartFills.rightCalf} \n        stroke={strokeColor} \n        strokeWidth={strokeWidth} \n      />\n      \n      {/* Left Foot */}\n      <ellipse \n        cx=\"70\" cy=\"170\" rx=\"8\" ry=\"4\" \n        fill={bodyPartFills.leftFoot} \n        stroke={strokeColor} \n        strokeWidth={strokeWidth} \n      />\n      \n      {/* Right Foot */}\n      <ellipse \n        cx=\"80\" cy=\"170\" rx=\"8\" ry=\"4\" \n        fill={bodyPartFills.rightFoot} \n        stroke={strokeColor} \n        strokeWidth={strokeWidth} \n      />\n    </g>\n  );\n\n  return (\n    <svg \n      xmlns=\"http://www.w3.org/2000/svg\" \n      viewBox=\"0 0 150 180\" \n      className={className}\n      style={{ width: `${width}px`, height: `${height}px` }}\n    >\n      {view === 'front' ? renderFrontView() : renderBackView()}\n    </svg>\n  );\n};\n\nexport default BodySvg;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAGA,CAAC;EACfC,YAAY;EACZC,SAAS;EACTC,IAAI,GAAG,OAAO;EACdC,SAAS,GAAG,EAAE;EACdC,KAAK,GAAG,EAAE;EACVC,MAAM,GAAG;AACX,CAAC,KAAK;EACJ,MAAMC,WAAW,GAAG,SAAS;EAC7B,MAAMC,WAAW,GAAG,SAAS;EAC7B,MAAMC,WAAW,GAAG,CAAC;;EAErB;EACA,MAAMC,aAAa,GAAG;IACpB;IACAC,IAAI,EAAEJ,WAAW;IACjBK,IAAI,EAAEL,WAAW;IAEjB;IACAM,KAAK,EAAEN,WAAW;IAClBO,OAAO,EAAEP,WAAW;IACpBQ,YAAY,EAAER,WAAW;IACzBS,aAAa,EAAET,WAAW;IAE1B;IACAU,SAAS,EAAEV,WAAW;IACtBW,SAAS,EAAEX,WAAW;IACtBY,iBAAiB,EAAEZ,WAAW;IAC9Ba,kBAAkB,EAAEb,WAAW;IAE/B;IACAc,OAAO,EAAEd,WAAW;IACpBe,QAAQ,EAAEf,WAAW;IAErB;IACAgB,OAAO,EAAEhB,WAAW;IACpBiB,QAAQ,EAAEjB,WAAW;IACrBkB,SAAS,EAAElB,WAAW;IACtBmB,UAAU,EAAEnB,WAAW;IACvBoB,WAAW,EAAEpB,WAAW;IACxBqB,YAAY,EAAErB,WAAW;IACzBsB,QAAQ,EAAEtB,WAAW;IACrBuB,SAAS,EAAEvB,WAAW;IAEtB;IACAwB,SAAS,EAAExB,WAAW;IACtByB,UAAU,EAAEzB,WAAW;IACvB0B,QAAQ,EAAE1B,WAAW;IACrB2B,SAAS,EAAE3B,WAAW;IACtB4B,QAAQ,EAAE5B,WAAW;IACrB6B,SAAS,EAAE7B,WAAW;IACtB8B,QAAQ,EAAE9B,WAAW;IACrB+B,SAAS,EAAE/B;EACb,CAAC;;EAED;EACA,MAAMgC,eAAe,GAAG;IACtB;IACA5B,IAAI,EAAE,MAAM;IACZC,IAAI,EAAE,MAAM;IAEZ;IACAC,KAAK,EAAEV,IAAI,KAAK,OAAO,GAAG,OAAO,GAAG,IAAI;IACxCW,OAAO,EAAEX,IAAI,KAAK,OAAO,GAAG,SAAS,GAAG,IAAI;IAC5CqC,OAAO,EAAErC,IAAI,KAAK,OAAO,GAAG,SAAS,GAAG,IAAI;IAC5CsC,KAAK,EAAEtC,IAAI,KAAK,OAAO,GAAG,SAAS,GAAG,IAAI;IAC1CY,YAAY,EAAEZ,IAAI,KAAK,OAAO,GAAG,cAAc,GAAG,IAAI;IACtDa,aAAa,EAAEb,IAAI,KAAK,OAAO,GAAG,eAAe,GAAG,IAAI;IACxDuC,QAAQ,EAAEvC,IAAI,KAAK,OAAO,GAAG,cAAc,GAAG,IAAI;IAClDwC,SAAS,EAAExC,IAAI,KAAK,OAAO,GAAG,cAAc,GAAG,IAAI;IAEnD;IACAyC,IAAI,EAAEzC,IAAI,KAAK,MAAM,GAAG,WAAW,GAAG,IAAI;IAC1Cc,SAAS,EAAEd,IAAI,KAAK,MAAM,GAAG,WAAW,GAAG,IAAI;IAC/Ce,SAAS,EAAEf,IAAI,KAAK,MAAM,GAAG,WAAW,GAAG,IAAI;IAC/C0C,KAAK,EAAE1C,IAAI,KAAK,MAAM,GAAG,WAAW,GAAG,IAAI;IAC3CgB,iBAAiB,EAAEhB,IAAI,KAAK,MAAM,GAAG,mBAAmB,GAAG,IAAI;IAC/DiB,kBAAkB,EAAEjB,IAAI,KAAK,MAAM,GAAG,oBAAoB,GAAG,IAAI;IACjE2C,aAAa,EAAE3C,IAAI,KAAK,MAAM,GAAG,mBAAmB,GAAG,IAAI;IAC3D4C,cAAc,EAAE5C,IAAI,KAAK,MAAM,GAAG,mBAAmB,GAAG,IAAI;IAE5D;IACA6C,GAAG,EAAE,SAAS;IACdC,IAAI,EAAE,SAAS;IACf5B,OAAO,EAAE,SAAS;IAClBC,QAAQ,EAAE,UAAU;IAEpB;IACA4B,GAAG,EAAE,SAAS;IACdC,IAAI,EAAE,SAAS;IACf5B,OAAO,EAAE,SAAS;IAClBC,QAAQ,EAAE,UAAU;IACpB4B,KAAK,EAAE,WAAW;IAClBC,MAAM,EAAE,WAAW;IACnB5B,SAAS,EAAE,WAAW;IACtBC,UAAU,EAAE,YAAY;IACxB4B,OAAO,EAAE,aAAa;IACtBC,QAAQ,EAAE,aAAa;IACvB5B,WAAW,EAAE,aAAa;IAC1BC,YAAY,EAAE,cAAc;IAC5B4B,IAAI,EAAE,UAAU;IAChBC,KAAK,EAAE,UAAU;IACjB5B,QAAQ,EAAE,UAAU;IACpBC,SAAS,EAAE,WAAW;IAEtB;IACA4B,GAAG,EAAE,WAAW;IAChBC,IAAI,EAAE,WAAW;IACjB5B,SAAS,EAAE,WAAW;IACtBC,UAAU,EAAE,YAAY;IACxB4B,KAAK,EAAE,WAAW;IAClBC,MAAM,EAAE,WAAW;IACnBC,IAAI,EAAE,UAAU;IAChBC,KAAK,EAAE,UAAU;IACjB9B,QAAQ,EAAE,UAAU;IACpBC,SAAS,EAAE,WAAW;IACtB8B,IAAI,EAAE,UAAU;IAChBC,MAAM,EAAE,UAAU;IAClB9B,QAAQ,EAAE,UAAU;IACpBC,SAAS,EAAE,WAAW;IACtB8B,IAAI,EAAE,UAAU;IAChBC,IAAI,EAAE,UAAU;IAChB9B,QAAQ,EAAE,UAAU;IACpBC,SAAS,EAAE,WAAW;IACtB8B,KAAK,EAAE,UAAU;IACjBC,MAAM,EAAE;EACV,CAAC;EAED,MAAMC,UAAU,GAAG/B,eAAe,CAACtC,YAAY,CAAC;EAChD,IAAIqE,UAAU,IAAIA,UAAU,KAAK,IAAI,EAAE;IACrC5D,aAAa,CAAC4D,UAAU,CAAC,GAAGpE,SAAS;;IAErC;IACA,IAAID,YAAY,KAAK,OAAO,IAAIA,YAAY,KAAK,QAAQ,EAAE;MACzDS,aAAa,CAACe,SAAS,GAAGvB,SAAS;MACnCQ,aAAa,CAACgB,UAAU,GAAGxB,SAAS;IACtC,CAAC,MAAM,IAAID,YAAY,KAAK,UAAU,IAAIA,YAAY,KAAK,WAAW,EAAE;MACtE,IAAIE,IAAI,KAAK,OAAO,EAAE;QACpBO,aAAa,CAACK,YAAY,GAAGb,SAAS;QACtCQ,aAAa,CAACM,aAAa,GAAGd,SAAS;MACzC,CAAC,MAAM;QACLQ,aAAa,CAACS,iBAAiB,GAAGjB,SAAS;QAC3CQ,aAAa,CAACU,kBAAkB,GAAGlB,SAAS;MAC9C;IACF,CAAC,MAAM,IAAID,YAAY,KAAK,KAAK,IAAIA,YAAY,KAAK,MAAM,EAAE;MAC5DS,aAAa,CAACa,OAAO,GAAGrB,SAAS;MACjCQ,aAAa,CAACc,QAAQ,GAAGtB,SAAS;IACpC,CAAC,MAAM,IAAID,YAAY,KAAK,SAAS,IAAIA,YAAY,KAAK,UAAU,EAAE;MACpES,aAAa,CAACiB,WAAW,GAAGzB,SAAS;MACrCQ,aAAa,CAACkB,YAAY,GAAG1B,SAAS;IACxC,CAAC,MAAM,IAAID,YAAY,KAAK,MAAM,IAAIA,YAAY,KAAK,OAAO,EAAE;MAC9DS,aAAa,CAACmB,QAAQ,GAAG3B,SAAS;MAClCQ,aAAa,CAACoB,SAAS,GAAG5B,SAAS;IACrC,CAAC,MAAM,IAAID,YAAY,KAAK,KAAK,IAAIA,YAAY,KAAK,MAAM,EAAE;MAC5DS,aAAa,CAACqB,SAAS,GAAG7B,SAAS;MACnCQ,aAAa,CAACsB,UAAU,GAAG9B,SAAS;IACtC,CAAC,MAAM,IAAID,YAAY,KAAK,OAAO,IAAIA,YAAY,KAAK,QAAQ,EAAE;MAChES,aAAa,CAACqB,SAAS,GAAG7B,SAAS;MACnCQ,aAAa,CAACsB,UAAU,GAAG9B,SAAS;IACtC,CAAC,MAAM,IAAID,YAAY,KAAK,MAAM,IAAIA,YAAY,KAAK,OAAO,EAAE;MAC9DS,aAAa,CAACuB,QAAQ,GAAG/B,SAAS;MAClCQ,aAAa,CAACwB,SAAS,GAAGhC,SAAS;IACrC,CAAC,MAAM,IAAID,YAAY,KAAK,MAAM,IAAIA,YAAY,KAAK,QAAQ,EAAE;MAC/DS,aAAa,CAACyB,QAAQ,GAAGjC,SAAS;MAClCQ,aAAa,CAAC0B,SAAS,GAAGlC,SAAS;IACrC,CAAC,MAAM,IAAID,YAAY,KAAK,MAAM,IAAIA,YAAY,KAAK,MAAM,EAAE;MAC7DS,aAAa,CAAC2B,QAAQ,GAAGnC,SAAS;MAClCQ,aAAa,CAAC4B,SAAS,GAAGpC,SAAS;IACrC,CAAC,MAAM,IAAID,YAAY,KAAK,OAAO,IAAIA,YAAY,KAAK,QAAQ,EAAE;MAChES,aAAa,CAAC2B,QAAQ,GAAGnC,SAAS;MAClCQ,aAAa,CAAC4B,SAAS,GAAGpC,SAAS;IACrC,CAAC,MAAM,IAAID,YAAY,KAAK,KAAK,IAAIA,YAAY,KAAK,MAAM,EAAE;MAC5DS,aAAa,CAACW,OAAO,GAAGnB,SAAS;MACjCQ,aAAa,CAACY,QAAQ,GAAGpB,SAAS;IACpC;EACF;EAEA,MAAMqE,eAAe,GAAGA,CAAA,kBACtBxE,OAAA;IAAGyE,EAAE,EAAC,YAAY;IAAAC,QAAA,gBAEhB1E,OAAA;MACE2E,EAAE,EAAC,IAAI;MAACC,EAAE,EAAC,IAAI;MAACC,EAAE,EAAC,IAAI;MAACC,EAAE,EAAC,IAAI;MAC/BC,IAAI,EAAEpE,aAAa,CAACC,IAAK;MACzBoE,MAAM,EAAEvE,WAAY;MACpBC,WAAW,EAAEA;IAAY;MAAAuE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eAGFpF,OAAA;MACEqF,CAAC,EAAC,IAAI;MAACC,CAAC,EAAC,IAAI;MAAChF,KAAK,EAAC,IAAI;MAACC,MAAM,EAAC,GAAG;MACnCwE,IAAI,EAAEpE,aAAa,CAACE,IAAK;MACzBmE,MAAM,EAAEvE,WAAY;MACpBC,WAAW,EAAEA;IAAY;MAAAuE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eAGFpF,OAAA;MACEuF,CAAC,EAAC,2CAA2C;MAC7CR,IAAI,EAAEpE,aAAa,CAACG,KAAM;MAC1BkE,MAAM,EAAEvE,WAAY;MACpBC,WAAW,EAAEA;IAAY;MAAAuE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eAGFpF,OAAA;MACEuF,CAAC,EAAC,8CAA8C;MAChDR,IAAI,EAAEpE,aAAa,CAACI,OAAQ;MAC5BiE,MAAM,EAAEvE,WAAY;MACpBC,WAAW,EAAEA;IAAY;MAAAuE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eAGFpF,OAAA;MACE2E,EAAE,EAAC,IAAI;MAACC,EAAE,EAAC,IAAI;MAACC,EAAE,EAAC,GAAG;MAACC,EAAE,EAAC,GAAG;MAC7BC,IAAI,EAAEpE,aAAa,CAACK,YAAa;MACjCgE,MAAM,EAAEvE,WAAY;MACpBC,WAAW,EAAEA;IAAY;MAAAuE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eAGFpF,OAAA;MACE2E,EAAE,EAAC,IAAI;MAACC,EAAE,EAAC,IAAI;MAACC,EAAE,EAAC,GAAG;MAACC,EAAE,EAAC,GAAG;MAC7BC,IAAI,EAAEpE,aAAa,CAACM,aAAc;MAClC+D,MAAM,EAAEvE,WAAY;MACpBC,WAAW,EAAEA;IAAY;MAAAuE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eAGFpF,OAAA;MACEuF,CAAC,EAAC,2CAA2C;MAC7CR,IAAI,EAAEpE,aAAa,CAACa,OAAQ;MAC5BwD,MAAM,EAAEvE,WAAY;MACpBC,WAAW,EAAEA;IAAY;MAAAuE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eAGFpF,OAAA;MACEuF,CAAC,EAAC,+CAA+C;MACjDR,IAAI,EAAEpE,aAAa,CAACc,QAAS;MAC7BuD,MAAM,EAAEvE,WAAY;MACpBC,WAAW,EAAEA;IAAY;MAAAuE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eAGFpF,OAAA;MACE2E,EAAE,EAAC,IAAI;MAACC,EAAE,EAAC,IAAI;MAACC,EAAE,EAAC,GAAG;MAACC,EAAE,EAAC,GAAG;MAC7BC,IAAI,EAAEpE,aAAa,CAACe,SAAU;MAC9BsD,MAAM,EAAEvE,WAAY;MACpBC,WAAW,EAAEA;IAAY;MAAAuE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eAGFpF,OAAA;MACE2E,EAAE,EAAC,KAAK;MAACC,EAAE,EAAC,IAAI;MAACC,EAAE,EAAC,GAAG;MAACC,EAAE,EAAC,GAAG;MAC9BC,IAAI,EAAEpE,aAAa,CAACgB,UAAW;MAC/BqD,MAAM,EAAEvE,WAAY;MACpBC,WAAW,EAAEA;IAAY;MAAAuE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eAGFpF,OAAA;MACEuF,CAAC,EAAC,2CAA2C;MAC7CR,IAAI,EAAEpE,aAAa,CAACiB,WAAY;MAChCoD,MAAM,EAAEvE,WAAY;MACpBC,WAAW,EAAEA;IAAY;MAAAuE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eAGFpF,OAAA;MACEuF,CAAC,EAAC,iDAAiD;MACnDR,IAAI,EAAEpE,aAAa,CAACkB,YAAa;MACjCmD,MAAM,EAAEvE,WAAY;MACpBC,WAAW,EAAEA;IAAY;MAAAuE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eAGFpF,OAAA;MACE2E,EAAE,EAAC,IAAI;MAACC,EAAE,EAAC,IAAI;MAACC,EAAE,EAAC,GAAG;MAACC,EAAE,EAAC,GAAG;MAC7BC,IAAI,EAAEpE,aAAa,CAACmB,QAAS;MAC7BkD,MAAM,EAAEvE,WAAY;MACpBC,WAAW,EAAEA;IAAY;MAAAuE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eAGFpF,OAAA;MACE2E,EAAE,EAAC,KAAK;MAACC,EAAE,EAAC,IAAI;MAACC,EAAE,EAAC,GAAG;MAACC,EAAE,EAAC,GAAG;MAC9BC,IAAI,EAAEpE,aAAa,CAACoB,SAAU;MAC9BiD,MAAM,EAAEvE,WAAY;MACpBC,WAAW,EAAEA;IAAY;MAAAuE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eAGFpF,OAAA;MACE2E,EAAE,EAAC,IAAI;MAACC,EAAE,EAAC,KAAK;MAACC,EAAE,EAAC,GAAG;MAACC,EAAE,EAAC,GAAG;MAC9BC,IAAI,EAAEpE,aAAa,CAACW,OAAQ;MAC5B0D,MAAM,EAAEvE,WAAY;MACpBC,WAAW,EAAEA;IAAY;MAAAuE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eAGFpF,OAAA;MACE2E,EAAE,EAAC,IAAI;MAACC,EAAE,EAAC,KAAK;MAACC,EAAE,EAAC,GAAG;MAACC,EAAE,EAAC,GAAG;MAC9BC,IAAI,EAAEpE,aAAa,CAACY,QAAS;MAC7ByD,MAAM,EAAEvE,WAAY;MACpBC,WAAW,EAAEA;IAAY;MAAAuE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eAGFpF,OAAA;MACEuF,CAAC,EAAC,iDAAiD;MACnDR,IAAI,EAAEpE,aAAa,CAACqB,SAAU;MAC9BgD,MAAM,EAAEvE,WAAY;MACpBC,WAAW,EAAEA;IAAY;MAAAuE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eAGFpF,OAAA;MACEuF,CAAC,EAAC,iDAAiD;MACnDR,IAAI,EAAEpE,aAAa,CAACsB,UAAW;MAC/B+C,MAAM,EAAEvE,WAAY;MACpBC,WAAW,EAAEA;IAAY;MAAAuE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eAGFpF,OAAA;MACE2E,EAAE,EAAC,IAAI;MAACC,EAAE,EAAC,KAAK;MAACC,EAAE,EAAC,GAAG;MAACC,EAAE,EAAC,GAAG;MAC9BC,IAAI,EAAEpE,aAAa,CAACuB,QAAS;MAC7B8C,MAAM,EAAEvE,WAAY;MACpBC,WAAW,EAAEA;IAAY;MAAAuE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eAGFpF,OAAA;MACE2E,EAAE,EAAC,IAAI;MAACC,EAAE,EAAC,KAAK;MAACC,EAAE,EAAC,GAAG;MAACC,EAAE,EAAC,GAAG;MAC9BC,IAAI,EAAEpE,aAAa,CAACwB,SAAU;MAC9B6C,MAAM,EAAEvE,WAAY;MACpBC,WAAW,EAAEA;IAAY;MAAAuE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eAGFpF,OAAA;MACEuF,CAAC,EAAC,iDAAiD;MACnDR,IAAI,EAAEpE,aAAa,CAACyB,QAAS;MAC7B4C,MAAM,EAAEvE,WAAY;MACpBC,WAAW,EAAEA;IAAY;MAAAuE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eAGFpF,OAAA;MACEuF,CAAC,EAAC,iDAAiD;MACnDR,IAAI,EAAEpE,aAAa,CAAC0B,SAAU;MAC9B2C,MAAM,EAAEvE,WAAY;MACpBC,WAAW,EAAEA;IAAY;MAAAuE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eAGFpF,OAAA;MACE2E,EAAE,EAAC,IAAI;MAACC,EAAE,EAAC,KAAK;MAACC,EAAE,EAAC,GAAG;MAACC,EAAE,EAAC,GAAG;MAC9BC,IAAI,EAAEpE,aAAa,CAAC2B,QAAS;MAC7B0C,MAAM,EAAEvE,WAAY;MACpBC,WAAW,EAAEA;IAAY;MAAAuE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eAGFpF,OAAA;MACE2E,EAAE,EAAC,IAAI;MAACC,EAAE,EAAC,KAAK;MAACC,EAAE,EAAC,GAAG;MAACC,EAAE,EAAC,GAAG;MAC9BC,IAAI,EAAEpE,aAAa,CAAC4B,SAAU;MAC9ByC,MAAM,EAAEvE,WAAY;MACpBC,WAAW,EAAEA;IAAY;MAAAuE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CACJ;EAED,MAAMI,cAAc,GAAGA,CAAA,kBACrBxF,OAAA;IAAGyE,EAAE,EAAC,WAAW;IAAAC,QAAA,gBAEf1E,OAAA;MACE2E,EAAE,EAAC,IAAI;MAACC,EAAE,EAAC,IAAI;MAACC,EAAE,EAAC,IAAI;MAACC,EAAE,EAAC,IAAI;MAC/BC,IAAI,EAAEpE,aAAa,CAACC,IAAK;MACzBoE,MAAM,EAAEvE,WAAY;MACpBC,WAAW,EAAEA;IAAY;MAAAuE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eAGFpF,OAAA;MACEqF,CAAC,EAAC,IAAI;MAACC,CAAC,EAAC,IAAI;MAAChF,KAAK,EAAC,IAAI;MAACC,MAAM,EAAC,GAAG;MACnCwE,IAAI,EAAEpE,aAAa,CAACE,IAAK;MACzBmE,MAAM,EAAEvE,WAAY;MACpBC,WAAW,EAAEA;IAAY;MAAAuE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eAGFpF,OAAA;MACEuF,CAAC,EAAC,2CAA2C;MAC7CR,IAAI,EAAEpE,aAAa,CAACO,SAAU;MAC9B8D,MAAM,EAAEvE,WAAY;MACpBC,WAAW,EAAEA;IAAY;MAAAuE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eAGFpF,OAAA;MACEuF,CAAC,EAAC,8CAA8C;MAChDR,IAAI,EAAEpE,aAAa,CAACQ,SAAU;MAC9B6D,MAAM,EAAEvE,WAAY;MACpBC,WAAW,EAAEA;IAAY;MAAAuE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eAGFpF,OAAA;MACE2E,EAAE,EAAC,IAAI;MAACC,EAAE,EAAC,IAAI;MAACC,EAAE,EAAC,GAAG;MAACC,EAAE,EAAC,GAAG;MAC7BC,IAAI,EAAEpE,aAAa,CAACS,iBAAkB;MACtC4D,MAAM,EAAEvE,WAAY;MACpBC,WAAW,EAAEA;IAAY;MAAAuE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eAGFpF,OAAA;MACE2E,EAAE,EAAC,IAAI;MAACC,EAAE,EAAC,IAAI;MAACC,EAAE,EAAC,GAAG;MAACC,EAAE,EAAC,GAAG;MAC7BC,IAAI,EAAEpE,aAAa,CAACU,kBAAmB;MACvC2D,MAAM,EAAEvE,WAAY;MACpBC,WAAW,EAAEA;IAAY;MAAAuE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eAGFpF,OAAA;MACEuF,CAAC,EAAC,2CAA2C;MAC7CR,IAAI,EAAEpE,aAAa,CAACa,OAAQ;MAC5BwD,MAAM,EAAEvE,WAAY;MACpBC,WAAW,EAAEA;IAAY;MAAAuE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eAGFpF,OAAA;MACEuF,CAAC,EAAC,+CAA+C;MACjDR,IAAI,EAAEpE,aAAa,CAACc,QAAS;MAC7BuD,MAAM,EAAEvE,WAAY;MACpBC,WAAW,EAAEA;IAAY;MAAAuE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eAGFpF,OAAA;MACE2E,EAAE,EAAC,IAAI;MAACC,EAAE,EAAC,IAAI;MAACC,EAAE,EAAC,GAAG;MAACC,EAAE,EAAC,GAAG;MAC7BC,IAAI,EAAEpE,aAAa,CAACe,SAAU;MAC9BsD,MAAM,EAAEvE,WAAY;MACpBC,WAAW,EAAEA;IAAY;MAAAuE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eAGFpF,OAAA;MACE2E,EAAE,EAAC,KAAK;MAACC,EAAE,EAAC,IAAI;MAACC,EAAE,EAAC,GAAG;MAACC,EAAE,EAAC,GAAG;MAC9BC,IAAI,EAAEpE,aAAa,CAACgB,UAAW;MAC/BqD,MAAM,EAAEvE,WAAY;MACpBC,WAAW,EAAEA;IAAY;MAAAuE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eAGFpF,OAAA;MACEuF,CAAC,EAAC,2CAA2C;MAC7CR,IAAI,EAAEpE,aAAa,CAACiB,WAAY;MAChCoD,MAAM,EAAEvE,WAAY;MACpBC,WAAW,EAAEA;IAAY;MAAAuE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eAGFpF,OAAA;MACEuF,CAAC,EAAC,iDAAiD;MACnDR,IAAI,EAAEpE,aAAa,CAACkB,YAAa;MACjCmD,MAAM,EAAEvE,WAAY;MACpBC,WAAW,EAAEA;IAAY;MAAAuE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eAGFpF,OAAA;MACE2E,EAAE,EAAC,IAAI;MAACC,EAAE,EAAC,IAAI;MAACC,EAAE,EAAC,GAAG;MAACC,EAAE,EAAC,GAAG;MAC7BC,IAAI,EAAEpE,aAAa,CAACmB,QAAS;MAC7BkD,MAAM,EAAEvE,WAAY;MACpBC,WAAW,EAAEA;IAAY;MAAAuE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eAGFpF,OAAA;MACE2E,EAAE,EAAC,KAAK;MAACC,EAAE,EAAC,IAAI;MAACC,EAAE,EAAC,GAAG;MAACC,EAAE,EAAC,GAAG;MAC9BC,IAAI,EAAEpE,aAAa,CAACoB,SAAU;MAC9BiD,MAAM,EAAEvE,WAAY;MACpBC,WAAW,EAAEA;IAAY;MAAAuE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eAGFpF,OAAA;MACE2E,EAAE,EAAC,IAAI;MAACC,EAAE,EAAC,KAAK;MAACC,EAAE,EAAC,GAAG;MAACC,EAAE,EAAC,GAAG;MAC9BC,IAAI,EAAEpE,aAAa,CAACW,OAAQ;MAC5B0D,MAAM,EAAEvE,WAAY;MACpBC,WAAW,EAAEA;IAAY;MAAAuE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eAGFpF,OAAA;MACE2E,EAAE,EAAC,IAAI;MAACC,EAAE,EAAC,KAAK;MAACC,EAAE,EAAC,GAAG;MAACC,EAAE,EAAC,GAAG;MAC9BC,IAAI,EAAEpE,aAAa,CAACY,QAAS;MAC7ByD,MAAM,EAAEvE,WAAY;MACpBC,WAAW,EAAEA;IAAY;MAAAuE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eAGFpF,OAAA;MACEuF,CAAC,EAAC,iDAAiD;MACnDR,IAAI,EAAEpE,aAAa,CAACqB,SAAU;MAC9BgD,MAAM,EAAEvE,WAAY;MACpBC,WAAW,EAAEA;IAAY;MAAAuE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eAGFpF,OAAA;MACEuF,CAAC,EAAC,iDAAiD;MACnDR,IAAI,EAAEpE,aAAa,CAACsB,UAAW;MAC/B+C,MAAM,EAAEvE,WAAY;MACpBC,WAAW,EAAEA;IAAY;MAAAuE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eAGFpF,OAAA;MACE2E,EAAE,EAAC,IAAI;MAACC,EAAE,EAAC,KAAK;MAACC,EAAE,EAAC,GAAG;MAACC,EAAE,EAAC,GAAG;MAC9BC,IAAI,EAAEpE,aAAa,CAACuB,QAAS;MAC7B8C,MAAM,EAAEvE,WAAY;MACpBC,WAAW,EAAEA;IAAY;MAAAuE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eAGFpF,OAAA;MACE2E,EAAE,EAAC,IAAI;MAACC,EAAE,EAAC,KAAK;MAACC,EAAE,EAAC,GAAG;MAACC,EAAE,EAAC,GAAG;MAC9BC,IAAI,EAAEpE,aAAa,CAACwB,SAAU;MAC9B6C,MAAM,EAAEvE,WAAY;MACpBC,WAAW,EAAEA;IAAY;MAAAuE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eAGFpF,OAAA;MACEuF,CAAC,EAAC,iDAAiD;MACnDR,IAAI,EAAEpE,aAAa,CAACyB,QAAS;MAC7B4C,MAAM,EAAEvE,WAAY;MACpBC,WAAW,EAAEA;IAAY;MAAAuE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eAGFpF,OAAA;MACEuF,CAAC,EAAC,iDAAiD;MACnDR,IAAI,EAAEpE,aAAa,CAAC0B,SAAU;MAC9B2C,MAAM,EAAEvE,WAAY;MACpBC,WAAW,EAAEA;IAAY;MAAAuE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eAGFpF,OAAA;MACE2E,EAAE,EAAC,IAAI;MAACC,EAAE,EAAC,KAAK;MAACC,EAAE,EAAC,GAAG;MAACC,EAAE,EAAC,GAAG;MAC9BC,IAAI,EAAEpE,aAAa,CAAC2B,QAAS;MAC7B0C,MAAM,EAAEvE,WAAY;MACpBC,WAAW,EAAEA;IAAY;MAAAuE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eAGFpF,OAAA;MACE2E,EAAE,EAAC,IAAI;MAACC,EAAE,EAAC,KAAK;MAACC,EAAE,EAAC,GAAG;MAACC,EAAE,EAAC,GAAG;MAC9BC,IAAI,EAAEpE,aAAa,CAAC4B,SAAU;MAC9ByC,MAAM,EAAEvE,WAAY;MACpBC,WAAW,EAAEA;IAAY;MAAAuE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CACJ;EAED,oBACEpF,OAAA;IACEyF,KAAK,EAAC,4BAA4B;IAClCC,OAAO,EAAC,aAAa;IACrBrF,SAAS,EAAEA,SAAU;IACrBsF,KAAK,EAAE;MAAErF,KAAK,EAAE,GAAGA,KAAK,IAAI;MAAEC,MAAM,EAAE,GAAGA,MAAM;IAAK,CAAE;IAAAmE,QAAA,EAErDtE,IAAI,KAAK,OAAO,GAAGoE,eAAe,CAAC,CAAC,GAAGgB,cAAc,CAAC;EAAC;IAAAP,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrD,CAAC;AAEV,CAAC;AAACQ,EAAA,GAnkBI3F,OAAO;AAqkBb,eAAeA,OAAO;AAAC,IAAA2F,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}