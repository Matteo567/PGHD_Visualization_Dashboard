{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matteo\\\\Working_Folder\\\\a. MCC Thesis Local Experimental\\\\PGHD_Visualization_Dashboard\\\\src\\\\components\\\\patient_charts\\\\MealContentsChart.js\",\n  _s = $RefreshSig$();\n/*\n MealContentsChart.js - Nutritional Tracking Visualization\n \n This component provides meal and nutrition monitoring with meal timing and content breakdown. It tracks nutritional components and provides daily and weekly dietary pattern analysis. It includes interactive tooltips with meal details and navigation controls for time periods. It integrates with patient data and chart navigation. This component is used for dietary monitoring and nutritional assessment.\n */\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport Legend from '../Legend';\nimport usePatientData from '../../hooks/usePatientData';\nimport useChartNavigation from '../../hooks/useChartNavigation';\nimport './MealContentsChart.css';\n\n// --- Constants ---\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DAYS_OF_WEEK = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\nconst MEAL_TYPES = ['Breakfast', 'Lunch', 'Dinner', 'Late Night Snack'];\nconst FOOD_CATEGORIES = ['Protein', 'Carbohydrates', 'Vegetables', 'Fruit', 'Alcohol'];\nconst SUGAR_CATEGORIES = ['', '1-20g', '20-40g', '40-60g', '60g+'];\n// Emoji mappings for food categories\nconst CATEGORY_EMOJIS = {\n  'Protein': '🥩',\n  'Carbohydrates': '🍞',\n  'Vegetables': '🥦',\n  'Fruit': '🍎',\n  'Alcohol': '🍷'\n};\nconst SUGAR_EMOJIS = {\n  '': '',\n  // No sugar\n  '1-20g': '🍭',\n  // Lollipop\n  '20-40g': '🍫',\n  // Chocolate bar\n  '40-60g': '🍩',\n  // Donut\n  '60g+': '🎂' // Cake\n};\n\n// --- Helper Functions ---\nconst formatDayLabel = date => {\n  const dayNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n  return dayNames[date.getDay()];\n};\nconst formatDateLabel = date => date.toLocaleDateString('en-US', {\n  month: 'short',\n  day: 'numeric'\n});\nconst getMealTime = (data, mealType) => {\n  // Convert meal type to the correct column name format (with underscores)\n  const columnPrefix = mealType.replace(/\\s+/g, '_');\n  const timeKey = `${columnPrefix}_Time`;\n  return data[timeKey] || '';\n};\nconst getMealData = (data, mealType) => {\n  const mealData = {};\n\n  // Convert meal type to the correct column name format (with underscores)\n  const columnPrefix = mealType.replace(/\\s+/g, '_');\n  FOOD_CATEGORIES.forEach(category => {\n    const key = `${columnPrefix}_${category}`;\n    // Handle both numeric (1, 0) and string ('1', '0') values\n    mealData[category] = data[key] === 1 || data[key] === '1';\n  });\n  const sugarKey = `${columnPrefix}_Added_Sugar`;\n  mealData['Added Sugar'] = data[sugarKey] || '';\n  return mealData;\n};\n\n// --- Chart Sub-components ---\n\nconst XAxis = ({\n  config,\n  weekDays\n}) => /*#__PURE__*/_jsxDEV(\"g\", {\n  className: \"x-axis\",\n  children: [weekDays.map((day, dayIndex) => {\n    const x = config.padding.left + dayIndex * config.dayWidth + config.dayWidth / 2;\n    return /*#__PURE__*/_jsxDEV(\"g\", {\n      children: [/*#__PURE__*/_jsxDEV(\"text\", {\n        x: x,\n        y: config.height - config.padding.bottom + 30,\n        fontSize: config.fontSize.dayLabel,\n        textAnchor: \"middle\",\n        className: \"x-axis-day-label\",\n        children: formatDayLabel(day)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: x,\n        y: config.height - config.padding.bottom + 45,\n        fontSize: config.fontSize.dateLabel,\n        textAnchor: \"middle\",\n        className: \"x-axis-date-label\",\n        children: day.getDate()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n        className: \"chart-grid-line-vertical\",\n        x1: config.padding.left + dayIndex * config.dayWidth,\n        y1: config.padding.top,\n        x2: config.padding.left + dayIndex * config.dayWidth,\n        y2: config.height - config.padding.bottom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, dayIndex, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this);\n  }), /*#__PURE__*/_jsxDEV(\"line\", {\n    className: \"chart-grid-line-vertical\",\n    x1: config.padding.left + 7 * config.dayWidth,\n    y1: config.padding.top,\n    x2: config.padding.left + 7 * config.dayWidth,\n    y2: config.height - config.padding.bottom\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 74,\n  columnNumber: 3\n}, this);\n_c = XAxis;\nconst YAxis = ({\n  config\n}) => {\n  // Calculate dynamic text positioning based on available space\n  const getTextX = textLength => {\n    // Base offset from the chart area\n    const baseOffset = 10;\n    // Calculate position to ensure text doesn't get cut off\n    // For longer text like \"Late Night Snack\", position it closer to the chart\n    const dynamicOffset = textLength > 10 ? 5 : 25;\n    return Math.max(baseOffset, config.padding.left - dynamicOffset);\n  };\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    className: \"y-axis\",\n    children: [MEAL_TYPES.map((meal, mealIndex) => {\n      const y = config.padding.top + mealIndex * config.mealHeight + config.mealHeight / 2;\n      const textX = getTextX(meal.length);\n      return /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"text\", {\n          x: textX,\n          y: y,\n          fontSize: config.fontSize.mealLabel,\n          textAnchor: \"end\",\n          className: \"y-axis-title\",\n          children: meal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n          className: \"chart-grid-line-horizontal\",\n          x1: config.padding.left,\n          y1: config.padding.top + mealIndex * config.mealHeight,\n          x2: config.padding.left + 7 * config.dayWidth,\n          y2: config.padding.top + mealIndex * config.mealHeight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this)]\n      }, meal, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"line\", {\n      className: \"chart-grid-line-horizontal\",\n      x1: config.padding.left,\n      y1: config.padding.top + 4 * config.mealHeight,\n      x2: config.padding.left + 7 * config.dayWidth,\n      y2: config.padding.top + 4 * config.mealHeight\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n_c2 = YAxis;\nconst MealCell = ({\n  config,\n  dayIndex,\n  mealIndex,\n  mealData,\n  mealTime,\n  isExpanded\n}) => {\n  const x = config.padding.left + dayIndex * config.dayWidth + 5;\n  const y = config.padding.top + mealIndex * config.mealHeight + 5;\n  const cellWidth = config.dayWidth - 10;\n  const cellHeight = config.mealHeight - 10;\n\n  // Calculate grid layout for 6 circles (2x3 grid)\n  const circlesPerRow = 3;\n  const circleWidth = cellWidth / circlesPerRow;\n  const circleHeight = (cellHeight - 20) / 2; // Reserve space for time\n\n  // Calculate circle radius and emoji size based on cell dimensions\n  const minDimension = Math.min(circleWidth, circleHeight);\n  const circleRadius = Math.max(8, Math.min(16, minDimension * 0.35)); // Min 8px, max 16px, 35% of min dimension\n  const emojiFontSize = Math.max(8, Math.min(16, minDimension * 0.4)); // Min 8px, max 16px, 40% of min dimension for better visibility\n\n  // Apply expanded view scaling\n  const expandedCircleRadius = isExpanded ? circleRadius * 1.3 : circleRadius;\n  const expandedEmojiFontSize = isExpanded ? emojiFontSize * 1.4 : emojiFontSize;\n\n  // Define the 6 food categories in order (5 main + 1 sugar)\n  const allCategories = [...FOOD_CATEGORIES, 'Added Sugar'];\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    className: \"meal-cell\",\n    children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n      x: x,\n      y: y,\n      width: cellWidth,\n      height: cellHeight,\n      fill: \"#f9f9f9\",\n      stroke: \"#ddd\",\n      strokeWidth: \"1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      x: x + cellWidth / 2,\n      y: y + 12,\n      fontSize: config.fontSize.timeLabel,\n      textAnchor: \"middle\",\n      className: \"time-label\",\n      children: mealTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), allCategories.map((category, index) => {\n      const row = Math.floor(index / circlesPerRow);\n      const col = index % circlesPerRow;\n      const circleX = x + col * circleWidth + circleWidth / 2;\n      const circleY = y + 20 + row * circleHeight + circleHeight / 2;\n\n      // Check if category is present\n      let hasCategory = false;\n      let emoji = '';\n      if (category === 'Added Sugar') {\n        hasCategory = mealData[category] && SUGAR_EMOJIS[mealData[category]];\n        emoji = SUGAR_EMOJIS[mealData[category]] || '';\n      } else {\n        hasCategory = mealData[category];\n        emoji = CATEGORY_EMOJIS[category] || '';\n      }\n      return /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: circleX,\n          cy: circleY,\n          r: expandedCircleRadius,\n          fill: \"#f5f5f5\",\n          stroke: \"#ddd\",\n          strokeWidth: \"1\",\n          opacity: 0.3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this), hasCategory && emoji && /*#__PURE__*/_jsxDEV(\"text\", {\n          x: circleX,\n          y: circleY,\n          fontSize: expandedEmojiFontSize,\n          textAnchor: \"middle\",\n          dominantBaseline: \"central\",\n          style: {\n            fontFamily: 'Apple Color Emoji, Segoe UI Emoji, Noto Color Emoji, sans-serif'\n          },\n          children: emoji\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 15\n        }, this)]\n      }, category, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 5\n  }, this);\n};\n_c3 = MealCell;\nconst MealGrid = ({\n  config,\n  weekDays,\n  patientData,\n  isExpanded\n}) => {\n  if (!patientData || patientData.length === 0) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    className: \"meal-grid\",\n    children: weekDays.map((day, dayIndex) => {\n      const dayData = patientData.find(d => {\n        const dataDate = new Date(d.Date);\n        return dataDate.toDateString() === day.toDateString();\n      });\n      if (!dayData) {\n        return null;\n      }\n      return MEAL_TYPES.map((meal, mealIndex) => {\n        const mealData = getMealData(dayData, meal);\n        const mealTime = getMealTime(dayData, meal);\n        return /*#__PURE__*/_jsxDEV(MealCell, {\n          config: config,\n          dayIndex: dayIndex,\n          mealIndex: mealIndex,\n          mealData: mealData,\n          mealTime: mealTime,\n          isExpanded: isExpanded\n        }, `${dayIndex}-${mealIndex}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }, this);\n      });\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 270,\n    columnNumber: 5\n  }, this);\n};\n\n// --- Main Component ---\n_c4 = MealGrid;\nconst MealContentsChart = ({\n  patientId,\n  isExpanded = false,\n  onExpand,\n  navigation,\n  screenshotMode = false,\n  showThreeMonthSummaries = false\n}) => {\n  _s();\n  const {\n    mealData: patientData,\n    loading,\n    error\n  } = usePatientData(patientId);\n\n  // Use navigation from parent or fallback to internal navigation\n  const internalNavigation = useChartNavigation('mealContents');\n  const nav = navigation || internalNavigation;\n  const containerRef = useRef(null);\n  const [containerWidth, setContainerWidth] = useState(500);\n\n  // Simple inline config - no factory pattern needed\n  const mealHeight = isExpanded ? 90 : 70;\n  const dayWidth = isExpanded ? 100 : 70;\n  const leftPadding = 140;\n  const config = {\n    width: leftPadding + dayWidth * 7,\n    height: 4 * mealHeight + 50 + 100,\n    // 4 meals + top + bottom padding\n    padding: {\n      top: 50,\n      right: 40,\n      bottom: 100,\n      left: leftPadding\n    },\n    dayWidth: dayWidth,\n    mealHeight: mealHeight,\n    fontSize: {\n      dayLabel: isExpanded ? 12 : 10,\n      dateLabel: isExpanded ? 10 : 8,\n      mealLabel: isExpanded ? 10 : 8,\n      timeLabel: isExpanded ? 8 : 6\n    }\n  };\n\n  // Measure container width for sizing\n  useEffect(() => {\n    const updateContainerWidth = () => {\n      if (containerRef.current) {\n        const width = containerRef.current.offsetWidth;\n        setContainerWidth(width);\n      }\n    };\n    updateContainerWidth();\n    window.addEventListener('resize', updateContainerWidth);\n    return () => window.removeEventListener('resize', updateContainerWidth);\n  }, [isExpanded]);\n  const {\n    start: startOfWeek,\n    end: endOfWeek\n  } = nav.getDateRange();\n  const weekDays = Array.from({\n    length: 7\n  }, (_, i) => {\n    const day = new Date(startOfWeek);\n    day.setDate(startOfWeek.getDate() + i);\n    return day;\n  });\n\n  // Get 3-month data\n  const {\n    start: startOfThreeMonths,\n    end: endOfThreeMonths\n  } = nav.getThreeMonthRange();\n  const threeMonthData = patientData.filter(d => {\n    const dataDate = new Date(d.Date);\n    return dataDate >= startOfThreeMonths && dataDate <= endOfThreeMonths;\n  });\n\n  // Calculate summary statistics for physician view\n  let weekSummary = null;\n  if (patientData && patientData.length > 0) {\n    const weekData = patientData.filter(d => {\n      const dataDate = new Date(d.Date);\n      return dataDate >= startOfWeek && dataDate <= endOfWeek;\n    });\n    if (weekData.length === 0) return null;\n\n    // Count food categories across all meals\n    const categoryStats = {};\n    FOOD_CATEGORIES.forEach(category => {\n      categoryStats[category] = 0;\n    });\n\n    // Count sugar levels\n    const sugarStats = {};\n    SUGAR_CATEGORIES.filter(s => s !== '').forEach(sugar => {\n      sugarStats[sugar] = 0;\n    });\n    let totalMealsLogged = 0;\n    let daysWithMeals = new Set();\n    weekData.forEach(dayData => {\n      daysWithMeals.add(dayData.Date);\n      MEAL_TYPES.forEach(meal => {\n        const mealData = getMealData(dayData, meal);\n        const hasAnyFood = FOOD_CATEGORIES.some(category => mealData[category]);\n        if (hasAnyFood) {\n          totalMealsLogged++;\n\n          // Count each food category\n          FOOD_CATEGORIES.forEach(category => {\n            if (mealData[category]) {\n              categoryStats[category]++;\n            }\n          });\n\n          // Count sugar levels\n          if (mealData['Added Sugar'] && mealData['Added Sugar'] !== '') {\n            sugarStats[mealData['Added Sugar']]++;\n          }\n        }\n      });\n    });\n\n    // Find most common food category\n    const mostCommonFood = Object.entries(categoryStats).sort(([, a], [, b]) => b - a)[0];\n\n    // Calculate sugar frequency\n    const totalSugarMeals = Object.values(sugarStats).reduce((sum, count) => sum + count, 0);\n    const sugarPercentage = totalMealsLogged > 0 ? (totalSugarMeals / totalMealsLogged * 100).toFixed(0) : 0;\n    weekSummary = {\n      totalMealsLogged,\n      daysWithMeals: daysWithMeals.size,\n      mostCommonFood: mostCommonFood[0],\n      mostCommonFoodCount: mostCommonFood[1],\n      categoryStats,\n      sugarPercentage,\n      totalSugarMeals\n    };\n  }\n\n  // Calculate 3-month summary statistics for physician view\n  let threeMonthSummary = null;\n  if (threeMonthData && threeMonthData.length > 0) {\n    // Count food categories across all meals\n    const categoryStats = {};\n    FOOD_CATEGORIES.forEach(category => {\n      categoryStats[category] = 0;\n    });\n\n    // Count sugar levels\n    const sugarStats = {};\n    SUGAR_CATEGORIES.filter(s => s !== '').forEach(sugar => {\n      sugarStats[sugar] = 0;\n    });\n    let totalMealsLogged = 0;\n    let daysWithMeals = new Set();\n    threeMonthData.forEach(dayData => {\n      daysWithMeals.add(dayData.Date);\n      MEAL_TYPES.forEach(meal => {\n        const mealData = getMealData(dayData, meal);\n        const hasAnyFood = FOOD_CATEGORIES.some(category => mealData[category]);\n        if (hasAnyFood) {\n          totalMealsLogged++;\n\n          // Count each food category\n          FOOD_CATEGORIES.forEach(category => {\n            if (mealData[category]) {\n              categoryStats[category]++;\n            }\n          });\n\n          // Count sugar levels\n          if (mealData['Added Sugar'] && mealData['Added Sugar'] !== '') {\n            sugarStats[mealData['Added Sugar']]++;\n          }\n        }\n      });\n    });\n\n    // Find most common food category\n    const mostCommonFood = Object.entries(categoryStats).sort(([, a], [, b]) => b - a)[0];\n\n    // Calculate sugar frequency\n    const totalSugarMeals = Object.values(sugarStats).reduce((sum, count) => sum + count, 0);\n    const sugarPercentage = totalMealsLogged > 0 ? (totalSugarMeals / totalMealsLogged * 100).toFixed(0) : 0;\n    threeMonthSummary = {\n      totalMealsLogged,\n      daysWithMeals: daysWithMeals.size,\n      mostCommonFood: mostCommonFood[0],\n      mostCommonFoodCount: mostCommonFood[1],\n      categoryStats,\n      sugarPercentage,\n      totalSugarMeals\n    };\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"meal-contents-chart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"chart-title\",\n      children: \"Meal Contents\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"chart-subtitle\",\n      children: nav.getFormattedDateRange()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `meal-chart-wrapper ${isExpanded ? 'expanded' : ''}`,\n      ref: containerRef,\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        width: config.width,\n        height: config.height,\n        viewBox: `0 0 ${config.width} ${config.height}`,\n        className: \"meal-chart\",\n        style: {\n          maxWidth: '100%',\n          height: 'auto'\n        },\n        children: [/*#__PURE__*/_jsxDEV(XAxis, {\n          config: config,\n          weekDays: weekDays\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          config: config\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MealGrid, {\n          config: config,\n          weekDays: weekDays,\n          patientData: patientData,\n          isExpanded: isExpanded\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meal-contents-legends-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(Legend, {\n        title: \"Food Categories\",\n        items: FOOD_CATEGORIES.map(category => ({\n          label: `${CATEGORY_EMOJIS[category]} ${category}`,\n          color: null\n        })),\n        hide: screenshotMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {\n        title: \"Sugar Levels\",\n        items: SUGAR_CATEGORIES.filter(sugar => sugar !== '').map(sugar => ({\n          label: `${SUGAR_EMOJIS[sugar]} ${sugar}`,\n          color: null\n        })),\n        hide: screenshotMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 9\n    }, this), weekSummary && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"summary-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Week Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Meals Logged:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [weekSummary.totalMealsLogged, \"/28 possible\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Added Sugar:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 554,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [weekSummary.sugarPercentage, \"% of meals (\", weekSummary.totalSugarMeals, \"/\", weekSummary.totalMealsLogged, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 555,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Food Balance:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 560,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: weekSummary.categoryStats && Object.entries(weekSummary.categoryStats).sort(([, a], [, b]) => b - a).slice(0, 3).map(([cat, count]) => `${CATEGORY_EMOJIS[cat]}${count}`).join(' ')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 561,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 13\n      }, this), showThreeMonthSummaries && threeMonthSummary && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"3-Month Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Meals Logged:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 577,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [threeMonthSummary.totalMealsLogged, \" meals\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 578,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Added Sugar:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 584,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [threeMonthSummary.sugarPercentage, \"% of meals (\", threeMonthSummary.totalSugarMeals, \"/\", threeMonthSummary.totalMealsLogged, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 585,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Food Balance:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 590,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: threeMonthSummary.categoryStats && Object.entries(threeMonthSummary.categoryStats).sort(([, a], [, b]) => b - a).slice(0, 3).map(([cat, count]) => `${CATEGORY_EMOJIS[cat]}${count}`).join(' ')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 591,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 498,\n    columnNumber: 7\n  }, this);\n};\n_s(MealContentsChart, \"Sy38dwYXNXrZhbJ7jKJDKxOXN80=\", false, function () {\n  return [usePatientData, useChartNavigation];\n});\n_c5 = MealContentsChart;\nexport default MealContentsChart;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"XAxis\");\n$RefreshReg$(_c2, \"YAxis\");\n$RefreshReg$(_c3, \"MealCell\");\n$RefreshReg$(_c4, \"MealGrid\");\n$RefreshReg$(_c5, \"MealContentsChart\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Legend","usePatientData","useChartNavigation","jsxDEV","_jsxDEV","DAYS_OF_WEEK","MEAL_TYPES","FOOD_CATEGORIES","SUGAR_CATEGORIES","CATEGORY_EMOJIS","SUGAR_EMOJIS","formatDayLabel","date","dayNames","getDay","formatDateLabel","toLocaleDateString","month","day","getMealTime","data","mealType","columnPrefix","replace","timeKey","getMealData","mealData","forEach","category","key","sugarKey","XAxis","config","weekDays","className","children","map","dayIndex","x","padding","left","dayWidth","y","height","bottom","fontSize","dayLabel","textAnchor","fileName","_jsxFileName","lineNumber","columnNumber","dateLabel","getDate","x1","y1","top","x2","y2","_c","YAxis","getTextX","textLength","baseOffset","dynamicOffset","Math","max","meal","mealIndex","mealHeight","textX","length","mealLabel","_c2","MealCell","mealTime","isExpanded","cellWidth","cellHeight","circlesPerRow","circleWidth","circleHeight","minDimension","min","circleRadius","emojiFontSize","expandedCircleRadius","expandedEmojiFontSize","allCategories","width","fill","stroke","strokeWidth","timeLabel","index","row","floor","col","circleX","circleY","hasCategory","emoji","cx","cy","r","opacity","dominantBaseline","style","fontFamily","_c3","MealGrid","patientData","dayData","find","d","dataDate","Date","toDateString","_c4","MealContentsChart","patientId","onExpand","navigation","screenshotMode","showThreeMonthSummaries","_s","loading","error","internalNavigation","nav","containerRef","containerWidth","setContainerWidth","leftPadding","right","updateContainerWidth","current","offsetWidth","window","addEventListener","removeEventListener","start","startOfWeek","end","endOfWeek","getDateRange","Array","from","_","i","setDate","startOfThreeMonths","endOfThreeMonths","getThreeMonthRange","threeMonthData","filter","weekSummary","weekData","categoryStats","sugarStats","s","sugar","totalMealsLogged","daysWithMeals","Set","add","hasAnyFood","some","mostCommonFood","Object","entries","sort","a","b","totalSugarMeals","values","reduce","sum","count","sugarPercentage","toFixed","size","mostCommonFoodCount","threeMonthSummary","getFormattedDateRange","ref","viewBox","maxWidth","title","items","label","color","hide","slice","cat","join","_c5","$RefreshReg$"],"sources":["C:/Users/Matteo/Working_Folder/a. MCC Thesis Local Experimental/PGHD_Visualization_Dashboard/src/components/patient_charts/MealContentsChart.js"],"sourcesContent":["/*\n MealContentsChart.js - Nutritional Tracking Visualization\n \n This component provides meal and nutrition monitoring with meal timing and content breakdown. It tracks nutritional components and provides daily and weekly dietary pattern analysis. It includes interactive tooltips with meal details and navigation controls for time periods. It integrates with patient data and chart navigation. This component is used for dietary monitoring and nutritional assessment.\n */\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport Legend from '../Legend';\nimport usePatientData from '../../hooks/usePatientData';\nimport useChartNavigation from '../../hooks/useChartNavigation';\n\nimport './MealContentsChart.css';\n\n\n// --- Constants ---\nconst DAYS_OF_WEEK = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\nconst MEAL_TYPES = ['Breakfast', 'Lunch', 'Dinner', 'Late Night Snack'];\nconst FOOD_CATEGORIES = ['Protein', 'Carbohydrates', 'Vegetables', 'Fruit', 'Alcohol'];\nconst SUGAR_CATEGORIES = ['', '1-20g', '20-40g', '40-60g', '60g+'];\n// Emoji mappings for food categories\nconst CATEGORY_EMOJIS = {\n  'Protein': '🥩',\n  'Carbohydrates': '🍞',\n  'Vegetables': '🥦',\n  'Fruit': '🍎',\n  'Alcohol': '🍷'\n};\n\nconst SUGAR_EMOJIS = {\n  '': '',              // No sugar\n  '1-20g': '🍭',       // Lollipop\n  '20-40g': '🍫',      // Chocolate bar\n  '40-60g': '🍩',      // Donut\n  '60g+': '🎂'         // Cake\n};\n\n\n\n// --- Helper Functions ---\nconst formatDayLabel = (date) => {\n  const dayNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n  return dayNames[date.getDay()];\n};\nconst formatDateLabel = (date) => date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\n\nconst getMealTime = (data, mealType) => {\n  // Convert meal type to the correct column name format (with underscores)\n  const columnPrefix = mealType.replace(/\\s+/g, '_');\n  const timeKey = `${columnPrefix}_Time`;\n  return data[timeKey] || '';\n};\n\nconst getMealData = (data, mealType) => {\n  const mealData = {};\n  \n  // Convert meal type to the correct column name format (with underscores)\n  const columnPrefix = mealType.replace(/\\s+/g, '_');\n  \n  FOOD_CATEGORIES.forEach(category => {\n    const key = `${columnPrefix}_${category}`;\n    // Handle both numeric (1, 0) and string ('1', '0') values\n    mealData[category] = data[key] === 1 || data[key] === '1';\n  });\n  \n  const sugarKey = `${columnPrefix}_Added_Sugar`;\n  mealData['Added Sugar'] = data[sugarKey] || '';\n  \n  return mealData;\n};\n\n// --- Chart Sub-components ---\n\nconst XAxis = ({ config, weekDays }) => (\n  <g className=\"x-axis\">\n    {weekDays.map((day, dayIndex) => {\n      const x = config.padding.left + dayIndex * config.dayWidth + config.dayWidth / 2;\n      return (\n        <g key={dayIndex}>\n          <text\n            x={x}\n            y={config.height - config.padding.bottom + 30}\n            fontSize={config.fontSize.dayLabel}\n            textAnchor=\"middle\"\n            className=\"x-axis-day-label\"\n          >\n            {formatDayLabel(day)}\n          </text>\n          <text\n            x={x}\n            y={config.height - config.padding.bottom + 45}\n            fontSize={config.fontSize.dateLabel}\n            textAnchor=\"middle\"\n            className=\"x-axis-date-label\"\n          >\n            {day.getDate()}\n          </text>\n          <line\n            className=\"chart-grid-line-vertical\"\n            x1={config.padding.left + dayIndex * config.dayWidth}\n            y1={config.padding.top}\n            x2={config.padding.left + dayIndex * config.dayWidth}\n            y2={config.height - config.padding.bottom}\n          />\n        </g>\n      );\n    })}\n    <line\n      className=\"chart-grid-line-vertical\"\n      x1={config.padding.left + 7 * config.dayWidth}\n      y1={config.padding.top}\n      x2={config.padding.left + 7 * config.dayWidth}\n      y2={config.height - config.padding.bottom}\n    />\n  </g>\n);\n\nconst YAxis = ({ config }) => {\n  // Calculate dynamic text positioning based on available space\n  const getTextX = (textLength) => {\n    // Base offset from the chart area\n    const baseOffset = 10;\n    // Calculate position to ensure text doesn't get cut off\n    // For longer text like \"Late Night Snack\", position it closer to the chart\n    const dynamicOffset = textLength > 10 ? 5 : 25;\n    return Math.max(baseOffset, config.padding.left - dynamicOffset);\n  };\n\n  return (\n    <g className=\"y-axis\">\n      {MEAL_TYPES.map((meal, mealIndex) => {\n        const y = config.padding.top + mealIndex * config.mealHeight + config.mealHeight / 2;\n        const textX = getTextX(meal.length);\n        \n        return (\n          <g key={meal}>\n            <text\n              x={textX}\n              y={y}\n              fontSize={config.fontSize.mealLabel}\n              textAnchor=\"end\"\n              className=\"y-axis-title\"\n            >\n              {meal}\n            </text>\n            <line\n              className=\"chart-grid-line-horizontal\"\n              x1={config.padding.left}\n              y1={config.padding.top + mealIndex * config.mealHeight}\n              x2={config.padding.left + 7 * config.dayWidth}\n              y2={config.padding.top + mealIndex * config.mealHeight}\n            />\n          </g>\n        );\n      })}\n      <line\n        className=\"chart-grid-line-horizontal\"\n        x1={config.padding.left}\n        y1={config.padding.top + 4 * config.mealHeight}\n        x2={config.padding.left + 7 * config.dayWidth}\n        y2={config.padding.top + 4 * config.mealHeight}\n      />\n    </g>\n  );\n};\n\nconst MealCell = ({ config, dayIndex, mealIndex, mealData, mealTime, isExpanded }) => {\n  const x = config.padding.left + dayIndex * config.dayWidth + 5;\n  const y = config.padding.top + mealIndex * config.mealHeight + 5;\n  const cellWidth = config.dayWidth - 10;\n  const cellHeight = config.mealHeight - 10;\n  \n  // Calculate grid layout for 6 circles (2x3 grid)\n  const circlesPerRow = 3;\n  const circleWidth = cellWidth / circlesPerRow;\n  const circleHeight = (cellHeight - 20) / 2; // Reserve space for time\n  \n  // Calculate circle radius and emoji size based on cell dimensions\n  const minDimension = Math.min(circleWidth, circleHeight);\n  const circleRadius = Math.max(8, Math.min(16, minDimension * 0.35)); // Min 8px, max 16px, 35% of min dimension\n  const emojiFontSize = Math.max(8, Math.min(16, minDimension * 0.4)); // Min 8px, max 16px, 40% of min dimension for better visibility\n  \n  // Apply expanded view scaling\n  const expandedCircleRadius = isExpanded ? circleRadius * 1.3 : circleRadius;\n  const expandedEmojiFontSize = isExpanded ? emojiFontSize * 1.4 : emojiFontSize;\n  \n  // Define the 6 food categories in order (5 main + 1 sugar)\n  const allCategories = [...FOOD_CATEGORIES, 'Added Sugar'];\n  \n  return (\n    <g className=\"meal-cell\">\n      {/* Background */}\n      <rect\n        x={x}\n        y={y}\n        width={cellWidth}\n        height={cellHeight}\n        fill=\"#f9f9f9\"\n        stroke=\"#ddd\"\n        strokeWidth=\"1\"\n      />\n      \n      {/* Meal time at the top */}\n      <text\n        x={x + cellWidth / 2}\n        y={y + 12}\n        fontSize={config.fontSize.timeLabel}\n        textAnchor=\"middle\"\n        className=\"time-label\"\n      >\n        {mealTime}\n      </text>\n      \n      {/* 6 placeholder circles with food category emojis */}\n      {allCategories.map((category, index) => {\n        const row = Math.floor(index / circlesPerRow);\n        const col = index % circlesPerRow;\n        const circleX = x + col * circleWidth + circleWidth / 2;\n        const circleY = y + 20 + row * circleHeight + circleHeight / 2;\n        \n        // Check if category is present\n        let hasCategory = false;\n        let emoji = '';\n        \n        if (category === 'Added Sugar') {\n          hasCategory = mealData[category] && SUGAR_EMOJIS[mealData[category]];\n          emoji = SUGAR_EMOJIS[mealData[category]] || '';\n        } else {\n          hasCategory = mealData[category];\n          emoji = CATEGORY_EMOJIS[category] || '';\n        }\n        \n        return (\n          <g key={category}>\n            {/* Placeholder circle - always grey */}\n            <circle\n              cx={circleX}\n              cy={circleY}\n              r={expandedCircleRadius}\n              fill=\"#f5f5f5\"\n              stroke=\"#ddd\"\n              strokeWidth=\"1\"\n              opacity={0.3}\n            />\n            {/* Emoji if category is present */}\n            {hasCategory && emoji && (\n              <text\n                x={circleX}\n                y={circleY}\n                fontSize={expandedEmojiFontSize}\n                textAnchor=\"middle\"\n                dominantBaseline=\"central\"\n                style={{ fontFamily: 'Apple Color Emoji, Segoe UI Emoji, Noto Color Emoji, sans-serif' }}\n              >\n                {emoji}\n              </text>\n            )}\n          </g>\n        );\n      })}\n    </g>\n  );\n};\n\nconst MealGrid = ({ config, weekDays, patientData, isExpanded }) => {\n  if (!patientData || patientData.length === 0) {\n    return null;\n  }\n\n  return (\n    <g className=\"meal-grid\">\n      {weekDays.map((day, dayIndex) => {\n        const dayData = patientData.find(d => {\n          const dataDate = new Date(d.Date);\n          return dataDate.toDateString() === day.toDateString();\n        });\n\n        if (!dayData) {\n          return null;\n        }\n\n        return MEAL_TYPES.map((meal, mealIndex) => {\n          const mealData = getMealData(dayData, meal);\n          const mealTime = getMealTime(dayData, meal);\n          \n          return (\n            <MealCell\n              key={`${dayIndex}-${mealIndex}`}\n              config={config}\n              dayIndex={dayIndex}\n              mealIndex={mealIndex}\n              mealData={mealData}\n              mealTime={mealTime}\n              isExpanded={isExpanded}\n            />\n          );\n        });\n      })}\n    </g>\n  );\n};\n\n\n// --- Main Component ---\nconst MealContentsChart = ({ patientId, isExpanded = false, onExpand, navigation, screenshotMode = false, showThreeMonthSummaries = false }) => {\n  const { mealData: patientData, loading, error } = usePatientData(patientId);\n  \n  // Use navigation from parent or fallback to internal navigation\n  const internalNavigation = useChartNavigation('mealContents');\n  const nav = navigation || internalNavigation;\n  const containerRef = useRef(null);\n  const [containerWidth, setContainerWidth] = useState(500);\n\n  // Simple inline config - no factory pattern needed\n  const mealHeight = isExpanded ? 90 : 70;\n  const dayWidth = isExpanded ? 100 : 70;\n  const leftPadding = 140;\n  \n  const config = {\n    width: leftPadding + (dayWidth * 7),\n    height: (4 * mealHeight) + 50 + 100, // 4 meals + top + bottom padding\n    padding: { top: 50, right: 40, bottom: 100, left: leftPadding },\n    dayWidth: dayWidth,\n    mealHeight: mealHeight,\n    fontSize: {\n      dayLabel: isExpanded ? 12 : 10,\n      dateLabel: isExpanded ? 10 : 8,\n      mealLabel: isExpanded ? 10 : 8,\n      timeLabel: isExpanded ? 8 : 6,\n    },\n  };\n  \n  // Measure container width for sizing\n  useEffect(() => {\n    const updateContainerWidth = () => {\n      if (containerRef.current) {\n        const width = containerRef.current.offsetWidth;\n        setContainerWidth(width);\n      }\n    };\n\n    updateContainerWidth();\n    window.addEventListener('resize', updateContainerWidth);\n    return () => window.removeEventListener('resize', updateContainerWidth);\n  }, [isExpanded]);\n\n  const { start: startOfWeek, end: endOfWeek } = nav.getDateRange();\n  const weekDays = Array.from({ length: 7 }, (_, i) => {\n    const day = new Date(startOfWeek);\n    day.setDate(startOfWeek.getDate() + i);\n    return day;\n  });\n\n  // Get 3-month data\n  const { start: startOfThreeMonths, end: endOfThreeMonths } = nav.getThreeMonthRange();\n  const threeMonthData = patientData.filter(d => {\n    const dataDate = new Date(d.Date);\n    return dataDate >= startOfThreeMonths && dataDate <= endOfThreeMonths;\n  });\n\n  // Calculate summary statistics for physician view\n  let weekSummary = null;\n  if (patientData && patientData.length > 0) {\n\n    const weekData = patientData.filter(d => {\n      const dataDate = new Date(d.Date);\n      return dataDate >= startOfWeek && dataDate <= endOfWeek;\n    });\n\n    if (weekData.length === 0) return null;\n\n    // Count food categories across all meals\n    const categoryStats = {};\n    FOOD_CATEGORIES.forEach(category => {\n      categoryStats[category] = 0;\n    });\n\n    // Count sugar levels\n    const sugarStats = {};\n    SUGAR_CATEGORIES.filter(s => s !== '').forEach(sugar => {\n      sugarStats[sugar] = 0;\n    });\n\n    let totalMealsLogged = 0;\n    let daysWithMeals = new Set();\n\n    weekData.forEach(dayData => {\n      daysWithMeals.add(dayData.Date);\n      \n      MEAL_TYPES.forEach(meal => {\n        const mealData = getMealData(dayData, meal);\n        const hasAnyFood = FOOD_CATEGORIES.some(category => mealData[category]);\n        \n        if (hasAnyFood) {\n          totalMealsLogged++;\n          \n          // Count each food category\n          FOOD_CATEGORIES.forEach(category => {\n            if (mealData[category]) {\n              categoryStats[category]++;\n            }\n          });\n\n          // Count sugar levels\n          if (mealData['Added Sugar'] && mealData['Added Sugar'] !== '') {\n            sugarStats[mealData['Added Sugar']]++;\n          }\n        }\n      });\n    });\n\n    // Find most common food category\n    const mostCommonFood = Object.entries(categoryStats)\n      .sort(([,a], [,b]) => b - a)[0];\n\n    // Calculate sugar frequency\n    const totalSugarMeals = Object.values(sugarStats).reduce((sum, count) => sum + count, 0);\n    const sugarPercentage = totalMealsLogged > 0 ? \n      ((totalSugarMeals / totalMealsLogged) * 100).toFixed(0) : 0;\n\n    weekSummary = {\n      totalMealsLogged,\n      daysWithMeals: daysWithMeals.size,\n      mostCommonFood: mostCommonFood[0],\n      mostCommonFoodCount: mostCommonFood[1],\n      categoryStats,\n      sugarPercentage,\n      totalSugarMeals\n    };\n  }\n\n  // Calculate 3-month summary statistics for physician view\n  let threeMonthSummary = null;\n  if (threeMonthData && threeMonthData.length > 0) {\n\n    // Count food categories across all meals\n    const categoryStats = {};\n    FOOD_CATEGORIES.forEach(category => {\n      categoryStats[category] = 0;\n    });\n\n    // Count sugar levels\n    const sugarStats = {};\n    SUGAR_CATEGORIES.filter(s => s !== '').forEach(sugar => {\n      sugarStats[sugar] = 0;\n    });\n\n    let totalMealsLogged = 0;\n    let daysWithMeals = new Set();\n\n    threeMonthData.forEach(dayData => {\n      daysWithMeals.add(dayData.Date);\n      \n      MEAL_TYPES.forEach(meal => {\n        const mealData = getMealData(dayData, meal);\n        const hasAnyFood = FOOD_CATEGORIES.some(category => mealData[category]);\n        \n        if (hasAnyFood) {\n          totalMealsLogged++;\n          \n          // Count each food category\n          FOOD_CATEGORIES.forEach(category => {\n            if (mealData[category]) {\n              categoryStats[category]++;\n            }\n          });\n\n          // Count sugar levels\n          if (mealData['Added Sugar'] && mealData['Added Sugar'] !== '') {\n            sugarStats[mealData['Added Sugar']]++;\n          }\n        }\n      });\n    });\n\n    // Find most common food category\n    const mostCommonFood = Object.entries(categoryStats)\n      .sort(([,a], [,b]) => b - a)[0];\n\n    // Calculate sugar frequency\n    const totalSugarMeals = Object.values(sugarStats).reduce((sum, count) => sum + count, 0);\n    const sugarPercentage = totalMealsLogged > 0 ? \n      ((totalSugarMeals / totalMealsLogged) * 100).toFixed(0) : 0;\n\n    threeMonthSummary = {\n      totalMealsLogged,\n      daysWithMeals: daysWithMeals.size,\n      mostCommonFood: mostCommonFood[0],\n      mostCommonFoodCount: mostCommonFood[1],\n      categoryStats,\n      sugarPercentage,\n      totalSugarMeals\n    };\n  }\n\n\n  \n  return (\n      <div className=\"meal-contents-chart-container\">\n        <h3 className=\"chart-title\">Meal Contents</h3>\n        <h4 className=\"chart-subtitle\">{nav.getFormattedDateRange()}</h4>\n        <div className={`meal-chart-wrapper ${isExpanded ? 'expanded' : ''}`} ref={containerRef}>\n          <svg \n            width={config.width} \n            height={config.height} \n            viewBox={`0 0 ${config.width} ${config.height}`} \n            className=\"meal-chart\"\n            style={{ maxWidth: '100%', height: 'auto' }}\n          >\n            <XAxis config={config} weekDays={weekDays} />\n            <YAxis config={config} />\n            <MealGrid \n              config={config} \n              weekDays={weekDays} \n              patientData={patientData} \n              isExpanded={isExpanded}\n            />\n          </svg>\n        </div>\n        \n        <div className=\"meal-contents-legends-wrapper\">\n            <Legend \n              title=\"Food Categories\" \n              items={FOOD_CATEGORIES.map(category => ({\n                label: `${CATEGORY_EMOJIS[category]} ${category}`,\n                color: null\n              }))}\n              hide={screenshotMode}\n            />\n            <Legend \n              title=\"Sugar Levels\" \n              items={SUGAR_CATEGORIES.filter(sugar => sugar !== '').map(sugar => ({\n                label: `${SUGAR_EMOJIS[sugar]} ${sugar}`,\n                color: null\n              }))}\n              hide={screenshotMode}\n            />\n        </div>\n\n        {/* Show summary for physician/unified view */}\n        {weekSummary && (\n          <div className=\"summary-container\">\n            <div className=\"chart-summary\">\n              <h4>Week Summary</h4>\n              <div className=\"summary-stats\">\n                <div className=\"stat-item\">\n                  <span className=\"stat-label\">Meals Logged:</span>\n                  <span className=\"stat-value\">\n                    {weekSummary.totalMealsLogged}/28 possible\n                  </span>\n                </div>\n\n\n                <div className=\"stat-item\">\n                  <span className=\"stat-label\">Added Sugar:</span>\n                  <span className=\"stat-value\">\n                    {weekSummary.sugarPercentage}% of meals ({weekSummary.totalSugarMeals}/{weekSummary.totalMealsLogged})\n                  </span>\n                </div>\n                <div className=\"stat-item\">\n                  <span className=\"stat-label\">Food Balance:</span>\n                  <span className=\"stat-value\">\n                    {weekSummary.categoryStats && Object.entries(weekSummary.categoryStats)\n                      .sort(([,a], [,b]) => b - a)\n                      .slice(0, 3)\n                      .map(([cat, count]) => `${CATEGORY_EMOJIS[cat]}${count}`)\n                      .join(' ')}\n                  </span>\n                </div>\n              </div>\n            </div>\n            \n            {showThreeMonthSummaries && threeMonthSummary && (\n              <div className=\"chart-summary\">\n                <h4>3-Month Summary</h4>\n                <div className=\"summary-stats\">\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">Meals Logged:</span>\n                    <span className=\"stat-value\">\n                      {threeMonthSummary.totalMealsLogged} meals\n                    </span>\n                  </div>\n\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">Added Sugar:</span>\n                    <span className=\"stat-value\">\n                      {threeMonthSummary.sugarPercentage}% of meals ({threeMonthSummary.totalSugarMeals}/{threeMonthSummary.totalMealsLogged})\n                    </span>\n                  </div>\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">Food Balance:</span>\n                    <span className=\"stat-value\">\n                      {threeMonthSummary.categoryStats && Object.entries(threeMonthSummary.categoryStats)\n                        .sort(([,a], [,b]) => b - a)\n                        .slice(0, 3)\n                        .map(([cat, count]) => `${CATEGORY_EMOJIS[cat]}${count}`)\n                        .join(' ')}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n  );\n};\n\nexport default MealContentsChart;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,MAAM,MAAM,WAAW;AAC9B,OAAOC,cAAc,MAAM,4BAA4B;AACvD,OAAOC,kBAAkB,MAAM,gCAAgC;AAE/D,OAAO,yBAAyB;;AAGhC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;AACtE,MAAMC,UAAU,GAAG,CAAC,WAAW,EAAE,OAAO,EAAE,QAAQ,EAAE,kBAAkB,CAAC;AACvE,MAAMC,eAAe,GAAG,CAAC,SAAS,EAAE,eAAe,EAAE,YAAY,EAAE,OAAO,EAAE,SAAS,CAAC;AACtF,MAAMC,gBAAgB,GAAG,CAAC,EAAE,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,CAAC;AAClE;AACA,MAAMC,eAAe,GAAG;EACtB,SAAS,EAAE,IAAI;EACf,eAAe,EAAE,IAAI;EACrB,YAAY,EAAE,IAAI;EAClB,OAAO,EAAE,IAAI;EACb,SAAS,EAAE;AACb,CAAC;AAED,MAAMC,YAAY,GAAG;EACnB,EAAE,EAAE,EAAE;EAAe;EACrB,OAAO,EAAE,IAAI;EAAQ;EACrB,QAAQ,EAAE,IAAI;EAAO;EACrB,QAAQ,EAAE,IAAI;EAAO;EACrB,MAAM,EAAE,IAAI,CAAS;AACvB,CAAC;;AAID;AACA,MAAMC,cAAc,GAAIC,IAAI,IAAK;EAC/B,MAAMC,QAAQ,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;EAClE,OAAOA,QAAQ,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,CAAC;AAChC,CAAC;AACD,MAAMC,eAAe,GAAIH,IAAI,IAAKA,IAAI,CAACI,kBAAkB,CAAC,OAAO,EAAE;EAAEC,KAAK,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAU,CAAC,CAAC;AAEtG,MAAMC,WAAW,GAAGA,CAACC,IAAI,EAAEC,QAAQ,KAAK;EACtC;EACA,MAAMC,YAAY,GAAGD,QAAQ,CAACE,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC;EAClD,MAAMC,OAAO,GAAG,GAAGF,YAAY,OAAO;EACtC,OAAOF,IAAI,CAACI,OAAO,CAAC,IAAI,EAAE;AAC5B,CAAC;AAED,MAAMC,WAAW,GAAGA,CAACL,IAAI,EAAEC,QAAQ,KAAK;EACtC,MAAMK,QAAQ,GAAG,CAAC,CAAC;;EAEnB;EACA,MAAMJ,YAAY,GAAGD,QAAQ,CAACE,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC;EAElDhB,eAAe,CAACoB,OAAO,CAACC,QAAQ,IAAI;IAClC,MAAMC,GAAG,GAAG,GAAGP,YAAY,IAAIM,QAAQ,EAAE;IACzC;IACAF,QAAQ,CAACE,QAAQ,CAAC,GAAGR,IAAI,CAACS,GAAG,CAAC,KAAK,CAAC,IAAIT,IAAI,CAACS,GAAG,CAAC,KAAK,GAAG;EAC3D,CAAC,CAAC;EAEF,MAAMC,QAAQ,GAAG,GAAGR,YAAY,cAAc;EAC9CI,QAAQ,CAAC,aAAa,CAAC,GAAGN,IAAI,CAACU,QAAQ,CAAC,IAAI,EAAE;EAE9C,OAAOJ,QAAQ;AACjB,CAAC;;AAED;;AAEA,MAAMK,KAAK,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAS,CAAC,kBACjC7B,OAAA;EAAG8B,SAAS,EAAC,QAAQ;EAAAC,QAAA,GAClBF,QAAQ,CAACG,GAAG,CAAC,CAAClB,GAAG,EAAEmB,QAAQ,KAAK;IAC/B,MAAMC,CAAC,GAAGN,MAAM,CAACO,OAAO,CAACC,IAAI,GAAGH,QAAQ,GAAGL,MAAM,CAACS,QAAQ,GAAGT,MAAM,CAACS,QAAQ,GAAG,CAAC;IAChF,oBACErC,OAAA;MAAA+B,QAAA,gBACE/B,OAAA;QACEkC,CAAC,EAAEA,CAAE;QACLI,CAAC,EAAEV,MAAM,CAACW,MAAM,GAAGX,MAAM,CAACO,OAAO,CAACK,MAAM,GAAG,EAAG;QAC9CC,QAAQ,EAAEb,MAAM,CAACa,QAAQ,CAACC,QAAS;QACnCC,UAAU,EAAC,QAAQ;QACnBb,SAAS,EAAC,kBAAkB;QAAAC,QAAA,EAE3BxB,cAAc,CAACO,GAAG;MAAC;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB,CAAC,eACP/C,OAAA;QACEkC,CAAC,EAAEA,CAAE;QACLI,CAAC,EAAEV,MAAM,CAACW,MAAM,GAAGX,MAAM,CAACO,OAAO,CAACK,MAAM,GAAG,EAAG;QAC9CC,QAAQ,EAAEb,MAAM,CAACa,QAAQ,CAACO,SAAU;QACpCL,UAAU,EAAC,QAAQ;QACnBb,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EAE5BjB,GAAG,CAACmC,OAAO,CAAC;MAAC;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC,eACP/C,OAAA;QACE8B,SAAS,EAAC,0BAA0B;QACpCoB,EAAE,EAAEtB,MAAM,CAACO,OAAO,CAACC,IAAI,GAAGH,QAAQ,GAAGL,MAAM,CAACS,QAAS;QACrDc,EAAE,EAAEvB,MAAM,CAACO,OAAO,CAACiB,GAAI;QACvBC,EAAE,EAAEzB,MAAM,CAACO,OAAO,CAACC,IAAI,GAAGH,QAAQ,GAAGL,MAAM,CAACS,QAAS;QACrDiB,EAAE,EAAE1B,MAAM,CAACW,MAAM,GAAGX,MAAM,CAACO,OAAO,CAACK;MAAO;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC;IAAA,GAzBId,QAAQ;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OA0Bb,CAAC;EAER,CAAC,CAAC,eACF/C,OAAA;IACE8B,SAAS,EAAC,0BAA0B;IACpCoB,EAAE,EAAEtB,MAAM,CAACO,OAAO,CAACC,IAAI,GAAG,CAAC,GAAGR,MAAM,CAACS,QAAS;IAC9Cc,EAAE,EAAEvB,MAAM,CAACO,OAAO,CAACiB,GAAI;IACvBC,EAAE,EAAEzB,MAAM,CAACO,OAAO,CAACC,IAAI,GAAG,CAAC,GAAGR,MAAM,CAACS,QAAS;IAC9CiB,EAAE,EAAE1B,MAAM,CAACW,MAAM,GAAGX,MAAM,CAACO,OAAO,CAACK;EAAO;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACD,CACJ;AAACQ,EAAA,GA1CI5B,KAAK;AA4CX,MAAM6B,KAAK,GAAGA,CAAC;EAAE5B;AAAO,CAAC,KAAK;EAC5B;EACA,MAAM6B,QAAQ,GAAIC,UAAU,IAAK;IAC/B;IACA,MAAMC,UAAU,GAAG,EAAE;IACrB;IACA;IACA,MAAMC,aAAa,GAAGF,UAAU,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE;IAC9C,OAAOG,IAAI,CAACC,GAAG,CAACH,UAAU,EAAE/B,MAAM,CAACO,OAAO,CAACC,IAAI,GAAGwB,aAAa,CAAC;EAClE,CAAC;EAED,oBACE5D,OAAA;IAAG8B,SAAS,EAAC,QAAQ;IAAAC,QAAA,GAClB7B,UAAU,CAAC8B,GAAG,CAAC,CAAC+B,IAAI,EAAEC,SAAS,KAAK;MACnC,MAAM1B,CAAC,GAAGV,MAAM,CAACO,OAAO,CAACiB,GAAG,GAAGY,SAAS,GAAGpC,MAAM,CAACqC,UAAU,GAAGrC,MAAM,CAACqC,UAAU,GAAG,CAAC;MACpF,MAAMC,KAAK,GAAGT,QAAQ,CAACM,IAAI,CAACI,MAAM,CAAC;MAEnC,oBACEnE,OAAA;QAAA+B,QAAA,gBACE/B,OAAA;UACEkC,CAAC,EAAEgC,KAAM;UACT5B,CAAC,EAAEA,CAAE;UACLG,QAAQ,EAAEb,MAAM,CAACa,QAAQ,CAAC2B,SAAU;UACpCzB,UAAU,EAAC,KAAK;UAChBb,SAAS,EAAC,cAAc;UAAAC,QAAA,EAEvBgC;QAAI;UAAAnB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACP/C,OAAA;UACE8B,SAAS,EAAC,4BAA4B;UACtCoB,EAAE,EAAEtB,MAAM,CAACO,OAAO,CAACC,IAAK;UACxBe,EAAE,EAAEvB,MAAM,CAACO,OAAO,CAACiB,GAAG,GAAGY,SAAS,GAAGpC,MAAM,CAACqC,UAAW;UACvDZ,EAAE,EAAEzB,MAAM,CAACO,OAAO,CAACC,IAAI,GAAG,CAAC,GAAGR,MAAM,CAACS,QAAS;UAC9CiB,EAAE,EAAE1B,MAAM,CAACO,OAAO,CAACiB,GAAG,GAAGY,SAAS,GAAGpC,MAAM,CAACqC;QAAW;UAAArB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxD,CAAC;MAAA,GAhBIgB,IAAI;QAAAnB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAiBT,CAAC;IAER,CAAC,CAAC,eACF/C,OAAA;MACE8B,SAAS,EAAC,4BAA4B;MACtCoB,EAAE,EAAEtB,MAAM,CAACO,OAAO,CAACC,IAAK;MACxBe,EAAE,EAAEvB,MAAM,CAACO,OAAO,CAACiB,GAAG,GAAG,CAAC,GAAGxB,MAAM,CAACqC,UAAW;MAC/CZ,EAAE,EAAEzB,MAAM,CAACO,OAAO,CAACC,IAAI,GAAG,CAAC,GAAGR,MAAM,CAACS,QAAS;MAC9CiB,EAAE,EAAE1B,MAAM,CAACO,OAAO,CAACiB,GAAG,GAAG,CAAC,GAAGxB,MAAM,CAACqC;IAAW;MAAArB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAER,CAAC;AAACsB,GAAA,GA/CIb,KAAK;AAiDX,MAAMc,QAAQ,GAAGA,CAAC;EAAE1C,MAAM;EAAEK,QAAQ;EAAE+B,SAAS;EAAE1C,QAAQ;EAAEiD,QAAQ;EAAEC;AAAW,CAAC,KAAK;EACpF,MAAMtC,CAAC,GAAGN,MAAM,CAACO,OAAO,CAACC,IAAI,GAAGH,QAAQ,GAAGL,MAAM,CAACS,QAAQ,GAAG,CAAC;EAC9D,MAAMC,CAAC,GAAGV,MAAM,CAACO,OAAO,CAACiB,GAAG,GAAGY,SAAS,GAAGpC,MAAM,CAACqC,UAAU,GAAG,CAAC;EAChE,MAAMQ,SAAS,GAAG7C,MAAM,CAACS,QAAQ,GAAG,EAAE;EACtC,MAAMqC,UAAU,GAAG9C,MAAM,CAACqC,UAAU,GAAG,EAAE;;EAEzC;EACA,MAAMU,aAAa,GAAG,CAAC;EACvB,MAAMC,WAAW,GAAGH,SAAS,GAAGE,aAAa;EAC7C,MAAME,YAAY,GAAG,CAACH,UAAU,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;;EAE5C;EACA,MAAMI,YAAY,GAAGjB,IAAI,CAACkB,GAAG,CAACH,WAAW,EAAEC,YAAY,CAAC;EACxD,MAAMG,YAAY,GAAGnB,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACkB,GAAG,CAAC,EAAE,EAAED,YAAY,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;EACrE,MAAMG,aAAa,GAAGpB,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACkB,GAAG,CAAC,EAAE,EAAED,YAAY,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;;EAErE;EACA,MAAMI,oBAAoB,GAAGV,UAAU,GAAGQ,YAAY,GAAG,GAAG,GAAGA,YAAY;EAC3E,MAAMG,qBAAqB,GAAGX,UAAU,GAAGS,aAAa,GAAG,GAAG,GAAGA,aAAa;;EAE9E;EACA,MAAMG,aAAa,GAAG,CAAC,GAAGjF,eAAe,EAAE,aAAa,CAAC;EAEzD,oBACEH,OAAA;IAAG8B,SAAS,EAAC,WAAW;IAAAC,QAAA,gBAEtB/B,OAAA;MACEkC,CAAC,EAAEA,CAAE;MACLI,CAAC,EAAEA,CAAE;MACL+C,KAAK,EAAEZ,SAAU;MACjBlC,MAAM,EAAEmC,UAAW;MACnBY,IAAI,EAAC,SAAS;MACdC,MAAM,EAAC,MAAM;MACbC,WAAW,EAAC;IAAG;MAAA5C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,eAGF/C,OAAA;MACEkC,CAAC,EAAEA,CAAC,GAAGuC,SAAS,GAAG,CAAE;MACrBnC,CAAC,EAAEA,CAAC,GAAG,EAAG;MACVG,QAAQ,EAAEb,MAAM,CAACa,QAAQ,CAACgD,SAAU;MACpC9C,UAAU,EAAC,QAAQ;MACnBb,SAAS,EAAC,YAAY;MAAAC,QAAA,EAErBwC;IAAQ;MAAA3B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,EAGNqC,aAAa,CAACpD,GAAG,CAAC,CAACR,QAAQ,EAAEkE,KAAK,KAAK;MACtC,MAAMC,GAAG,GAAG9B,IAAI,CAAC+B,KAAK,CAACF,KAAK,GAAGf,aAAa,CAAC;MAC7C,MAAMkB,GAAG,GAAGH,KAAK,GAAGf,aAAa;MACjC,MAAMmB,OAAO,GAAG5D,CAAC,GAAG2D,GAAG,GAAGjB,WAAW,GAAGA,WAAW,GAAG,CAAC;MACvD,MAAMmB,OAAO,GAAGzD,CAAC,GAAG,EAAE,GAAGqD,GAAG,GAAGd,YAAY,GAAGA,YAAY,GAAG,CAAC;;MAE9D;MACA,IAAImB,WAAW,GAAG,KAAK;MACvB,IAAIC,KAAK,GAAG,EAAE;MAEd,IAAIzE,QAAQ,KAAK,aAAa,EAAE;QAC9BwE,WAAW,GAAG1E,QAAQ,CAACE,QAAQ,CAAC,IAAIlB,YAAY,CAACgB,QAAQ,CAACE,QAAQ,CAAC,CAAC;QACpEyE,KAAK,GAAG3F,YAAY,CAACgB,QAAQ,CAACE,QAAQ,CAAC,CAAC,IAAI,EAAE;MAChD,CAAC,MAAM;QACLwE,WAAW,GAAG1E,QAAQ,CAACE,QAAQ,CAAC;QAChCyE,KAAK,GAAG5F,eAAe,CAACmB,QAAQ,CAAC,IAAI,EAAE;MACzC;MAEA,oBACExB,OAAA;QAAA+B,QAAA,gBAEE/B,OAAA;UACEkG,EAAE,EAAEJ,OAAQ;UACZK,EAAE,EAAEJ,OAAQ;UACZK,CAAC,EAAElB,oBAAqB;UACxBI,IAAI,EAAC,SAAS;UACdC,MAAM,EAAC,MAAM;UACbC,WAAW,EAAC,GAAG;UACfa,OAAO,EAAE;QAAI;UAAAzD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACd,CAAC,EAEDiD,WAAW,IAAIC,KAAK,iBACnBjG,OAAA;UACEkC,CAAC,EAAE4D,OAAQ;UACXxD,CAAC,EAAEyD,OAAQ;UACXtD,QAAQ,EAAE0C,qBAAsB;UAChCxC,UAAU,EAAC,QAAQ;UACnB2D,gBAAgB,EAAC,SAAS;UAC1BC,KAAK,EAAE;YAAEC,UAAU,EAAE;UAAkE,CAAE;UAAAzE,QAAA,EAExFkE;QAAK;UAAArD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CACP;MAAA,GAvBKvB,QAAQ;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAwBb,CAAC;IAER,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAER,CAAC;AAAC0D,GAAA,GAhGInC,QAAQ;AAkGd,MAAMoC,QAAQ,GAAGA,CAAC;EAAE9E,MAAM;EAAEC,QAAQ;EAAE8E,WAAW;EAAEnC;AAAW,CAAC,KAAK;EAClE,IAAI,CAACmC,WAAW,IAAIA,WAAW,CAACxC,MAAM,KAAK,CAAC,EAAE;IAC5C,OAAO,IAAI;EACb;EAEA,oBACEnE,OAAA;IAAG8B,SAAS,EAAC,WAAW;IAAAC,QAAA,EACrBF,QAAQ,CAACG,GAAG,CAAC,CAAClB,GAAG,EAAEmB,QAAQ,KAAK;MAC/B,MAAM2E,OAAO,GAAGD,WAAW,CAACE,IAAI,CAACC,CAAC,IAAI;QACpC,MAAMC,QAAQ,GAAG,IAAIC,IAAI,CAACF,CAAC,CAACE,IAAI,CAAC;QACjC,OAAOD,QAAQ,CAACE,YAAY,CAAC,CAAC,KAAKnG,GAAG,CAACmG,YAAY,CAAC,CAAC;MACvD,CAAC,CAAC;MAEF,IAAI,CAACL,OAAO,EAAE;QACZ,OAAO,IAAI;MACb;MAEA,OAAO1G,UAAU,CAAC8B,GAAG,CAAC,CAAC+B,IAAI,EAAEC,SAAS,KAAK;QACzC,MAAM1C,QAAQ,GAAGD,WAAW,CAACuF,OAAO,EAAE7C,IAAI,CAAC;QAC3C,MAAMQ,QAAQ,GAAGxD,WAAW,CAAC6F,OAAO,EAAE7C,IAAI,CAAC;QAE3C,oBACE/D,OAAA,CAACsE,QAAQ;UAEP1C,MAAM,EAAEA,MAAO;UACfK,QAAQ,EAAEA,QAAS;UACnB+B,SAAS,EAAEA,SAAU;UACrB1C,QAAQ,EAAEA,QAAS;UACnBiD,QAAQ,EAAEA,QAAS;UACnBC,UAAU,EAAEA;QAAW,GANlB,GAAGvC,QAAQ,IAAI+B,SAAS,EAAE;UAAApB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOhC,CAAC;MAEN,CAAC,CAAC;IACJ,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAER,CAAC;;AAGD;AAAAmE,GAAA,GAvCMR,QAAQ;AAwCd,MAAMS,iBAAiB,GAAGA,CAAC;EAAEC,SAAS;EAAE5C,UAAU,GAAG,KAAK;EAAE6C,QAAQ;EAAEC,UAAU;EAAEC,cAAc,GAAG,KAAK;EAAEC,uBAAuB,GAAG;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC9I,MAAM;IAAEnG,QAAQ,EAAEqF,WAAW;IAAEe,OAAO;IAAEC;EAAM,CAAC,GAAG9H,cAAc,CAACuH,SAAS,CAAC;;EAE3E;EACA,MAAMQ,kBAAkB,GAAG9H,kBAAkB,CAAC,cAAc,CAAC;EAC7D,MAAM+H,GAAG,GAAGP,UAAU,IAAIM,kBAAkB;EAC5C,MAAME,YAAY,GAAGnI,MAAM,CAAC,IAAI,CAAC;EACjC,MAAM,CAACoI,cAAc,EAAEC,iBAAiB,CAAC,GAAGvI,QAAQ,CAAC,GAAG,CAAC;;EAEzD;EACA,MAAMwE,UAAU,GAAGO,UAAU,GAAG,EAAE,GAAG,EAAE;EACvC,MAAMnC,QAAQ,GAAGmC,UAAU,GAAG,GAAG,GAAG,EAAE;EACtC,MAAMyD,WAAW,GAAG,GAAG;EAEvB,MAAMrG,MAAM,GAAG;IACbyD,KAAK,EAAE4C,WAAW,GAAI5F,QAAQ,GAAG,CAAE;IACnCE,MAAM,EAAG,CAAC,GAAG0B,UAAU,GAAI,EAAE,GAAG,GAAG;IAAE;IACrC9B,OAAO,EAAE;MAAEiB,GAAG,EAAE,EAAE;MAAE8E,KAAK,EAAE,EAAE;MAAE1F,MAAM,EAAE,GAAG;MAAEJ,IAAI,EAAE6F;IAAY,CAAC;IAC/D5F,QAAQ,EAAEA,QAAQ;IAClB4B,UAAU,EAAEA,UAAU;IACtBxB,QAAQ,EAAE;MACRC,QAAQ,EAAE8B,UAAU,GAAG,EAAE,GAAG,EAAE;MAC9BxB,SAAS,EAAEwB,UAAU,GAAG,EAAE,GAAG,CAAC;MAC9BJ,SAAS,EAAEI,UAAU,GAAG,EAAE,GAAG,CAAC;MAC9BiB,SAAS,EAAEjB,UAAU,GAAG,CAAC,GAAG;IAC9B;EACF,CAAC;;EAED;EACA9E,SAAS,CAAC,MAAM;IACd,MAAMyI,oBAAoB,GAAGA,CAAA,KAAM;MACjC,IAAIL,YAAY,CAACM,OAAO,EAAE;QACxB,MAAM/C,KAAK,GAAGyC,YAAY,CAACM,OAAO,CAACC,WAAW;QAC9CL,iBAAiB,CAAC3C,KAAK,CAAC;MAC1B;IACF,CAAC;IAED8C,oBAAoB,CAAC,CAAC;IACtBG,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAEJ,oBAAoB,CAAC;IACvD,OAAO,MAAMG,MAAM,CAACE,mBAAmB,CAAC,QAAQ,EAAEL,oBAAoB,CAAC;EACzE,CAAC,EAAE,CAAC3D,UAAU,CAAC,CAAC;EAEhB,MAAM;IAAEiE,KAAK,EAAEC,WAAW;IAAEC,GAAG,EAAEC;EAAU,CAAC,GAAGf,GAAG,CAACgB,YAAY,CAAC,CAAC;EACjE,MAAMhH,QAAQ,GAAGiH,KAAK,CAACC,IAAI,CAAC;IAAE5E,MAAM,EAAE;EAAE,CAAC,EAAE,CAAC6E,CAAC,EAAEC,CAAC,KAAK;IACnD,MAAMnI,GAAG,GAAG,IAAIkG,IAAI,CAAC0B,WAAW,CAAC;IACjC5H,GAAG,CAACoI,OAAO,CAACR,WAAW,CAACzF,OAAO,CAAC,CAAC,GAAGgG,CAAC,CAAC;IACtC,OAAOnI,GAAG;EACZ,CAAC,CAAC;;EAEF;EACA,MAAM;IAAE2H,KAAK,EAAEU,kBAAkB;IAAER,GAAG,EAAES;EAAiB,CAAC,GAAGvB,GAAG,CAACwB,kBAAkB,CAAC,CAAC;EACrF,MAAMC,cAAc,GAAG3C,WAAW,CAAC4C,MAAM,CAACzC,CAAC,IAAI;IAC7C,MAAMC,QAAQ,GAAG,IAAIC,IAAI,CAACF,CAAC,CAACE,IAAI,CAAC;IACjC,OAAOD,QAAQ,IAAIoC,kBAAkB,IAAIpC,QAAQ,IAAIqC,gBAAgB;EACvE,CAAC,CAAC;;EAEF;EACA,IAAII,WAAW,GAAG,IAAI;EACtB,IAAI7C,WAAW,IAAIA,WAAW,CAACxC,MAAM,GAAG,CAAC,EAAE;IAEzC,MAAMsF,QAAQ,GAAG9C,WAAW,CAAC4C,MAAM,CAACzC,CAAC,IAAI;MACvC,MAAMC,QAAQ,GAAG,IAAIC,IAAI,CAACF,CAAC,CAACE,IAAI,CAAC;MACjC,OAAOD,QAAQ,IAAI2B,WAAW,IAAI3B,QAAQ,IAAI6B,SAAS;IACzD,CAAC,CAAC;IAEF,IAAIa,QAAQ,CAACtF,MAAM,KAAK,CAAC,EAAE,OAAO,IAAI;;IAEtC;IACA,MAAMuF,aAAa,GAAG,CAAC,CAAC;IACxBvJ,eAAe,CAACoB,OAAO,CAACC,QAAQ,IAAI;MAClCkI,aAAa,CAAClI,QAAQ,CAAC,GAAG,CAAC;IAC7B,CAAC,CAAC;;IAEF;IACA,MAAMmI,UAAU,GAAG,CAAC,CAAC;IACrBvJ,gBAAgB,CAACmJ,MAAM,CAACK,CAAC,IAAIA,CAAC,KAAK,EAAE,CAAC,CAACrI,OAAO,CAACsI,KAAK,IAAI;MACtDF,UAAU,CAACE,KAAK,CAAC,GAAG,CAAC;IACvB,CAAC,CAAC;IAEF,IAAIC,gBAAgB,GAAG,CAAC;IACxB,IAAIC,aAAa,GAAG,IAAIC,GAAG,CAAC,CAAC;IAE7BP,QAAQ,CAAClI,OAAO,CAACqF,OAAO,IAAI;MAC1BmD,aAAa,CAACE,GAAG,CAACrD,OAAO,CAACI,IAAI,CAAC;MAE/B9G,UAAU,CAACqB,OAAO,CAACwC,IAAI,IAAI;QACzB,MAAMzC,QAAQ,GAAGD,WAAW,CAACuF,OAAO,EAAE7C,IAAI,CAAC;QAC3C,MAAMmG,UAAU,GAAG/J,eAAe,CAACgK,IAAI,CAAC3I,QAAQ,IAAIF,QAAQ,CAACE,QAAQ,CAAC,CAAC;QAEvE,IAAI0I,UAAU,EAAE;UACdJ,gBAAgB,EAAE;;UAElB;UACA3J,eAAe,CAACoB,OAAO,CAACC,QAAQ,IAAI;YAClC,IAAIF,QAAQ,CAACE,QAAQ,CAAC,EAAE;cACtBkI,aAAa,CAAClI,QAAQ,CAAC,EAAE;YAC3B;UACF,CAAC,CAAC;;UAEF;UACA,IAAIF,QAAQ,CAAC,aAAa,CAAC,IAAIA,QAAQ,CAAC,aAAa,CAAC,KAAK,EAAE,EAAE;YAC7DqI,UAAU,CAACrI,QAAQ,CAAC,aAAa,CAAC,CAAC,EAAE;UACvC;QACF;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;;IAEF;IACA,MAAM8I,cAAc,GAAGC,MAAM,CAACC,OAAO,CAACZ,aAAa,CAAC,CACjDa,IAAI,CAAC,CAAC,GAAEC,CAAC,CAAC,EAAE,GAAEC,CAAC,CAAC,KAAKA,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,CAAC;;IAEjC;IACA,MAAME,eAAe,GAAGL,MAAM,CAACM,MAAM,CAAChB,UAAU,CAAC,CAACiB,MAAM,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAKD,GAAG,GAAGC,KAAK,EAAE,CAAC,CAAC;IACxF,MAAMC,eAAe,GAAGjB,gBAAgB,GAAG,CAAC,GAC1C,CAAEY,eAAe,GAAGZ,gBAAgB,GAAI,GAAG,EAAEkB,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC;IAE7DxB,WAAW,GAAG;MACZM,gBAAgB;MAChBC,aAAa,EAAEA,aAAa,CAACkB,IAAI;MACjCb,cAAc,EAAEA,cAAc,CAAC,CAAC,CAAC;MACjCc,mBAAmB,EAAEd,cAAc,CAAC,CAAC,CAAC;MACtCV,aAAa;MACbqB,eAAe;MACfL;IACF,CAAC;EACH;;EAEA;EACA,IAAIS,iBAAiB,GAAG,IAAI;EAC5B,IAAI7B,cAAc,IAAIA,cAAc,CAACnF,MAAM,GAAG,CAAC,EAAE;IAE/C;IACA,MAAMuF,aAAa,GAAG,CAAC,CAAC;IACxBvJ,eAAe,CAACoB,OAAO,CAACC,QAAQ,IAAI;MAClCkI,aAAa,CAAClI,QAAQ,CAAC,GAAG,CAAC;IAC7B,CAAC,CAAC;;IAEF;IACA,MAAMmI,UAAU,GAAG,CAAC,CAAC;IACrBvJ,gBAAgB,CAACmJ,MAAM,CAACK,CAAC,IAAIA,CAAC,KAAK,EAAE,CAAC,CAACrI,OAAO,CAACsI,KAAK,IAAI;MACtDF,UAAU,CAACE,KAAK,CAAC,GAAG,CAAC;IACvB,CAAC,CAAC;IAEF,IAAIC,gBAAgB,GAAG,CAAC;IACxB,IAAIC,aAAa,GAAG,IAAIC,GAAG,CAAC,CAAC;IAE7BV,cAAc,CAAC/H,OAAO,CAACqF,OAAO,IAAI;MAChCmD,aAAa,CAACE,GAAG,CAACrD,OAAO,CAACI,IAAI,CAAC;MAE/B9G,UAAU,CAACqB,OAAO,CAACwC,IAAI,IAAI;QACzB,MAAMzC,QAAQ,GAAGD,WAAW,CAACuF,OAAO,EAAE7C,IAAI,CAAC;QAC3C,MAAMmG,UAAU,GAAG/J,eAAe,CAACgK,IAAI,CAAC3I,QAAQ,IAAIF,QAAQ,CAACE,QAAQ,CAAC,CAAC;QAEvE,IAAI0I,UAAU,EAAE;UACdJ,gBAAgB,EAAE;;UAElB;UACA3J,eAAe,CAACoB,OAAO,CAACC,QAAQ,IAAI;YAClC,IAAIF,QAAQ,CAACE,QAAQ,CAAC,EAAE;cACtBkI,aAAa,CAAClI,QAAQ,CAAC,EAAE;YAC3B;UACF,CAAC,CAAC;;UAEF;UACA,IAAIF,QAAQ,CAAC,aAAa,CAAC,IAAIA,QAAQ,CAAC,aAAa,CAAC,KAAK,EAAE,EAAE;YAC7DqI,UAAU,CAACrI,QAAQ,CAAC,aAAa,CAAC,CAAC,EAAE;UACvC;QACF;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;;IAEF;IACA,MAAM8I,cAAc,GAAGC,MAAM,CAACC,OAAO,CAACZ,aAAa,CAAC,CACjDa,IAAI,CAAC,CAAC,GAAEC,CAAC,CAAC,EAAE,GAAEC,CAAC,CAAC,KAAKA,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,CAAC;;IAEjC;IACA,MAAME,eAAe,GAAGL,MAAM,CAACM,MAAM,CAAChB,UAAU,CAAC,CAACiB,MAAM,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAKD,GAAG,GAAGC,KAAK,EAAE,CAAC,CAAC;IACxF,MAAMC,eAAe,GAAGjB,gBAAgB,GAAG,CAAC,GAC1C,CAAEY,eAAe,GAAGZ,gBAAgB,GAAI,GAAG,EAAEkB,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC;IAE7DG,iBAAiB,GAAG;MAClBrB,gBAAgB;MAChBC,aAAa,EAAEA,aAAa,CAACkB,IAAI;MACjCb,cAAc,EAAEA,cAAc,CAAC,CAAC,CAAC;MACjCc,mBAAmB,EAAEd,cAAc,CAAC,CAAC,CAAC;MACtCV,aAAa;MACbqB,eAAe;MACfL;IACF,CAAC;EACH;EAIA,oBACI1K,OAAA;IAAK8B,SAAS,EAAC,+BAA+B;IAAAC,QAAA,gBAC5C/B,OAAA;MAAI8B,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAC;IAAa;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9C/C,OAAA;MAAI8B,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAAE8F,GAAG,CAACuD,qBAAqB,CAAC;IAAC;MAAAxI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACjE/C,OAAA;MAAK8B,SAAS,EAAE,sBAAsB0C,UAAU,GAAG,UAAU,GAAG,EAAE,EAAG;MAAC6G,GAAG,EAAEvD,YAAa;MAAA/F,QAAA,eACtF/B,OAAA;QACEqF,KAAK,EAAEzD,MAAM,CAACyD,KAAM;QACpB9C,MAAM,EAAEX,MAAM,CAACW,MAAO;QACtB+I,OAAO,EAAE,OAAO1J,MAAM,CAACyD,KAAK,IAAIzD,MAAM,CAACW,MAAM,EAAG;QAChDT,SAAS,EAAC,YAAY;QACtByE,KAAK,EAAE;UAAEgF,QAAQ,EAAE,MAAM;UAAEhJ,MAAM,EAAE;QAAO,CAAE;QAAAR,QAAA,gBAE5C/B,OAAA,CAAC2B,KAAK;UAACC,MAAM,EAAEA,MAAO;UAACC,QAAQ,EAAEA;QAAS;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC7C/C,OAAA,CAACwD,KAAK;UAAC5B,MAAM,EAAEA;QAAO;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACzB/C,OAAA,CAAC0G,QAAQ;UACP9E,MAAM,EAAEA,MAAO;UACfC,QAAQ,EAAEA,QAAS;UACnB8E,WAAW,EAAEA,WAAY;UACzBnC,UAAU,EAAEA;QAAW;UAAA5B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEN/C,OAAA;MAAK8B,SAAS,EAAC,+BAA+B;MAAAC,QAAA,gBAC1C/B,OAAA,CAACJ,MAAM;QACL4L,KAAK,EAAC,iBAAiB;QACvBC,KAAK,EAAEtL,eAAe,CAAC6B,GAAG,CAACR,QAAQ,KAAK;UACtCkK,KAAK,EAAE,GAAGrL,eAAe,CAACmB,QAAQ,CAAC,IAAIA,QAAQ,EAAE;UACjDmK,KAAK,EAAE;QACT,CAAC,CAAC,CAAE;QACJC,IAAI,EAAErE;MAAe;QAAA3E,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC,eACF/C,OAAA,CAACJ,MAAM;QACL4L,KAAK,EAAC,cAAc;QACpBC,KAAK,EAAErL,gBAAgB,CAACmJ,MAAM,CAACM,KAAK,IAAIA,KAAK,KAAK,EAAE,CAAC,CAAC7H,GAAG,CAAC6H,KAAK,KAAK;UAClE6B,KAAK,EAAE,GAAGpL,YAAY,CAACuJ,KAAK,CAAC,IAAIA,KAAK,EAAE;UACxC8B,KAAK,EAAE;QACT,CAAC,CAAC,CAAE;QACJC,IAAI,EAAErE;MAAe;QAAA3E,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,EAGLyG,WAAW,iBACVxJ,OAAA;MAAK8B,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAChC/B,OAAA;QAAK8B,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5B/B,OAAA;UAAA+B,QAAA,EAAI;QAAY;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrB/C,OAAA;UAAK8B,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC5B/B,OAAA;YAAK8B,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACxB/B,OAAA;cAAM8B,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAC;YAAa;cAAAa,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACjD/C,OAAA;cAAM8B,SAAS,EAAC,YAAY;cAAAC,QAAA,GACzByH,WAAW,CAACM,gBAAgB,EAAC,cAChC;YAAA;cAAAlH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC,eAGN/C,OAAA;YAAK8B,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACxB/B,OAAA;cAAM8B,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAC;YAAY;cAAAa,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAChD/C,OAAA;cAAM8B,SAAS,EAAC,YAAY;cAAAC,QAAA,GACzByH,WAAW,CAACuB,eAAe,EAAC,cAAY,EAACvB,WAAW,CAACkB,eAAe,EAAC,GAAC,EAAClB,WAAW,CAACM,gBAAgB,EAAC,GACvG;YAAA;cAAAlH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC,eACN/C,OAAA;YAAK8B,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACxB/B,OAAA;cAAM8B,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAC;YAAa;cAAAa,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACjD/C,OAAA;cAAM8B,SAAS,EAAC,YAAY;cAAAC,QAAA,EACzByH,WAAW,CAACE,aAAa,IAAIW,MAAM,CAACC,OAAO,CAACd,WAAW,CAACE,aAAa,CAAC,CACpEa,IAAI,CAAC,CAAC,GAAEC,CAAC,CAAC,EAAE,GAAEC,CAAC,CAAC,KAAKA,CAAC,GAAGD,CAAC,CAAC,CAC3BqB,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CACX7J,GAAG,CAAC,CAAC,CAAC8J,GAAG,EAAEhB,KAAK,CAAC,KAAK,GAAGzK,eAAe,CAACyL,GAAG,CAAC,GAAGhB,KAAK,EAAE,CAAC,CACxDiB,IAAI,CAAC,GAAG;YAAC;cAAAnJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACR,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,EAELyE,uBAAuB,IAAI2D,iBAAiB,iBAC3CnL,OAAA;QAAK8B,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5B/B,OAAA;UAAA+B,QAAA,EAAI;QAAe;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxB/C,OAAA;UAAK8B,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC5B/B,OAAA;YAAK8B,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACxB/B,OAAA;cAAM8B,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAC;YAAa;cAAAa,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACjD/C,OAAA;cAAM8B,SAAS,EAAC,YAAY;cAAAC,QAAA,GACzBoJ,iBAAiB,CAACrB,gBAAgB,EAAC,QACtC;YAAA;cAAAlH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC,eAEN/C,OAAA;YAAK8B,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACxB/B,OAAA;cAAM8B,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAC;YAAY;cAAAa,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAChD/C,OAAA;cAAM8B,SAAS,EAAC,YAAY;cAAAC,QAAA,GACzBoJ,iBAAiB,CAACJ,eAAe,EAAC,cAAY,EAACI,iBAAiB,CAACT,eAAe,EAAC,GAAC,EAACS,iBAAiB,CAACrB,gBAAgB,EAAC,GACzH;YAAA;cAAAlH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC,eACN/C,OAAA;YAAK8B,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACxB/B,OAAA;cAAM8B,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAC;YAAa;cAAAa,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACjD/C,OAAA;cAAM8B,SAAS,EAAC,YAAY;cAAAC,QAAA,EACzBoJ,iBAAiB,CAACzB,aAAa,IAAIW,MAAM,CAACC,OAAO,CAACa,iBAAiB,CAACzB,aAAa,CAAC,CAChFa,IAAI,CAAC,CAAC,GAAEC,CAAC,CAAC,EAAE,GAAEC,CAAC,CAAC,KAAKA,CAAC,GAAGD,CAAC,CAAC,CAC3BqB,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CACX7J,GAAG,CAAC,CAAC,CAAC8J,GAAG,EAAEhB,KAAK,CAAC,KAAK,GAAGzK,eAAe,CAACyL,GAAG,CAAC,GAAGhB,KAAK,EAAE,CAAC,CACxDiB,IAAI,CAAC,GAAG;YAAC;cAAAnJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACR,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEZ,CAAC;AAAC0E,EAAA,CA9SIN,iBAAiB;EAAA,QAC6BtH,cAAc,EAGrCC,kBAAkB;AAAA;AAAAkM,GAAA,GAJzC7E,iBAAiB;AAgTvB,eAAeA,iBAAiB;AAAC,IAAA5D,EAAA,EAAAc,GAAA,EAAAoC,GAAA,EAAAS,GAAA,EAAA8E,GAAA;AAAAC,YAAA,CAAA1I,EAAA;AAAA0I,YAAA,CAAA5H,GAAA;AAAA4H,YAAA,CAAAxF,GAAA;AAAAwF,YAAA,CAAA/E,GAAA;AAAA+E,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}