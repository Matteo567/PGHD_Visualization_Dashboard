{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matteo\\\\Working_Folder\\\\a. MCC Thesis Local Experimental\\\\PGHD_Visualization_Dashboard\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n/*\n App.js - Main Health Dashboard Application Component\n \n This is the root component that provides the main application structure.\n It manages the role toggle between Patient and Physician views, patient selection,\n and provides the main routing structure for the dashboard.\n \n Features:\n - Role toggle between Patient and Physician views\n - Patient selection from 100 synthetic patients\n - Unified dashboard routing with lazy loading\n - Error boundary and loading state management\n - Header with application title and controls\n \n Component Structure:\n - Header: Contains title, role toggle, and patient selector\n - Main: Contains the dashboard with error boundary and loading states\n - Dashboard: Renders either PatientDashboard or PhysicianDashboard based on role\n \n State Management:\n - selectedPatient: Currently selected patient ID\n - currentRole: Current view mode ('patient' or 'physician')\n */\n\nimport React, { useState } from 'react';\nimport PatientSelector from './PatientSelector';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport Switch from './components/ui/Switch';\nimport HealthDashboard from './HealthDashboard';\nimport { PATIENTS } from './constants/index';\nimport './App.css';\n\n/*\n Main Health Dashboard Application\n Features unified health dashboard for both patients and healthcare providers\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedPatient, setSelectedPatient] = useState('Patient_001');\n  const [screenshotMode, setScreenshotMode] = useState(false); // Screenshot mode toggle\n\n  const toggleScreenshotMode = () => {\n    setScreenshotMode(prev => !prev);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      style: {\n        display: screenshotMode ? 'none' : 'block'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Health Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"patient-selector\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"patient-select\",\n            children: \"Select Patient:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PatientSelector, {\n            id: \"patient-select\",\n            patients: PATIENTS,\n            value: selectedPatient,\n            onChange: setSelectedPatient\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"screenshot-toggle\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"screenshot-mode-button\",\n            onClick: toggleScreenshotMode,\n            title: \"Toggle screenshot mode - hides patient info, legends, and controls\",\n            children: \"Screenshot Mode\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"app-main\",\n      children: [screenshotMode && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"floating-screenshot-toggle\",\n        onClick: toggleScreenshotMode,\n        title: \"Exit screenshot mode\",\n        children: \"\\u2715 Exit Screenshot Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n        children: /*#__PURE__*/_jsxDEV(Dashboard, {\n          patientId: selectedPatient,\n          viewMode: currentRole,\n          screenshotMode: screenshotMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"O6Y9RHNpzHh5cjAWSAwU0HH2bX4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","PatientSelector","ErrorBoundary","Switch","HealthDashboard","PATIENTS","jsxDEV","_jsxDEV","App","_s","selectedPatient","setSelectedPatient","screenshotMode","setScreenshotMode","toggleScreenshotMode","prev","className","children","style","display","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","patients","value","onChange","onClick","title","Dashboard","patientId","viewMode","currentRole","_c","$RefreshReg$"],"sources":["C:/Users/Matteo/Working_Folder/a. MCC Thesis Local Experimental/PGHD_Visualization_Dashboard/src/App.js"],"sourcesContent":["/*\n App.js - Main Health Dashboard Application Component\n \n This is the root component that provides the main application structure.\n It manages the role toggle between Patient and Physician views, patient selection,\n and provides the main routing structure for the dashboard.\n \n Features:\n - Role toggle between Patient and Physician views\n - Patient selection from 100 synthetic patients\n - Unified dashboard routing with lazy loading\n - Error boundary and loading state management\n - Header with application title and controls\n \n Component Structure:\n - Header: Contains title, role toggle, and patient selector\n - Main: Contains the dashboard with error boundary and loading states\n - Dashboard: Renders either PatientDashboard or PhysicianDashboard based on role\n \n State Management:\n - selectedPatient: Currently selected patient ID\n - currentRole: Current view mode ('patient' or 'physician')\n */\n\nimport React, { useState } from 'react';\nimport PatientSelector from './PatientSelector';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport Switch from './components/ui/Switch';\nimport HealthDashboard from './HealthDashboard';\nimport { PATIENTS } from './constants/index';\nimport './App.css';\n\n  /*\n   Main Health Dashboard Application\n   Features unified health dashboard for both patients and healthcare providers\n   */\nfunction App() {\n  const [selectedPatient, setSelectedPatient] = useState('Patient_001');\n  const [screenshotMode, setScreenshotMode] = useState(false); // Screenshot mode toggle\n\n  const toggleScreenshotMode = () => {\n    setScreenshotMode(prev => !prev);\n  };\n\n  return (\n    <div className=\"app\">\n      <header className=\"app-header\" style={{ display: screenshotMode ? 'none' : 'block' }}>\n        <div className=\"header-content\">\n          <h1>Health Dashboard</h1>\n          \n          {/* Patient Selector */}\n          <div className=\"patient-selector\">\n            <label htmlFor=\"patient-select\">Select Patient:</label>\n            <PatientSelector\n              id=\"patient-select\"\n              patients={PATIENTS}\n              value={selectedPatient}\n              onChange={setSelectedPatient}\n            />\n          </div>\n\n          {/* Screenshot Mode Toggle */}\n          <div className=\"screenshot-toggle\">\n            <button \n              className=\"screenshot-mode-button\"\n              onClick={toggleScreenshotMode}\n              title=\"Toggle screenshot mode - hides patient info, legends, and controls\"\n            >\n              Screenshot Mode\n            </button>\n          </div>\n        </div>\n      </header>\n\n      <main className=\"app-main\">\n        {/* Floating screenshot mode toggle when in screenshot mode */}\n        {screenshotMode && (\n          <button \n            className=\"floating-screenshot-toggle\"\n            onClick={toggleScreenshotMode}\n            title=\"Exit screenshot mode\"\n          >\n            âœ• Exit Screenshot Mode\n          </button>\n        )}\n        <ErrorBoundary>\n          <Dashboard \n            patientId={selectedPatient} \n            viewMode={currentRole}\n            screenshotMode={screenshotMode}\n          />\n        </ErrorBoundary>\n      </main>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}