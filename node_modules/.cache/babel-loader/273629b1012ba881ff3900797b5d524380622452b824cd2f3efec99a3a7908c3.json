{"ast":null,"code":"import React,{useState,useMemo}from'react';import usePatientData from'../../hooks/usePatientData';import ChartContainer from'../ChartContainer';import Legend from'../Legend';import{createChartConfig}from'../chart-utils/ChartConfigFactory';import'../ChartStyles.css';import'./ExerciseChart.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const exerciseTypes=[{key:'walking',label:'Walking',color:'var(--chart-color-walking)',emoji:'🚶'},{key:'swimming',label:'Swimming',color:'var(--chart-color-swimming)',emoji:'🏊‍♀️'},{key:'running',label:'Running',color:'var(--chart-color-running)',emoji:'🏃‍♂️'},{key:'resistance/weights',label:'Resistance/Weights',color:'var(--chart-color-resistance)',emoji:'🏋️'},{key:'biking',label:'Biking',color:'var(--chart-color-biking)',emoji:'🚴'},{key:'balance/stretching',label:'Balance/Stretching',color:'var(--chart-color-balance)',emoji:'🧘'},{key:'other',label:'Other',color:'var(--chart-color-other)',emoji:'➕'}];const exerciseLegendItems=exerciseTypes.map(_ref=>{let{label,color,emoji}=_ref;return{label:\"\".concat(emoji,\" \").concat(label),color};});const ExerciseChart=_ref2=>{var _exerciseTypes$find;let{patientId,isExpanded=false,onExpand,viewMode='patient'}=_ref2;const{exerciseData,loading,error}=usePatientData(patientId,'exercise');const[currentWeek,setCurrentWeek]=useState(new Date(2025,4,1));const handlePrevWeek=()=>{setCurrentWeek(prev=>new Date(new Date(prev).setDate(prev.getDate()-7)));};const handleNextWeek=()=>{setCurrentWeek(prev=>new Date(new Date(prev).setDate(prev.getDate()+7)));};const config=createChartConfig('exercise',isExpanded);const chartHeight=config.height-config.padding.top-config.padding.bottom;const startOfWeek=new Date(currentWeek);startOfWeek.setDate(startOfWeek.getDate()-startOfWeek.getDay());startOfWeek.setHours(0,0,0,0);const endOfWeek=new Date(startOfWeek);endOfWeek.setDate(endOfWeek.getDate()+6);endOfWeek.setHours(23,59,59,999);const weekData=exerciseData.filter(d=>{if(!d.date)return false;const itemDate=new Date(d.date);return itemDate>=startOfWeek&&itemDate<=endOfWeek;});const daysOfWeek=['Sun','Mon','Tue','Wed','Thu','Fri','Sat'];const groupedData=daysOfWeek.reduce((acc,day)=>{acc[day]={walking:0,swimming:0,running:0,'resistance/weights':0,biking:0,'balance/stretching':0,other:0,totalMinutes:0};return acc;},{});weekData.forEach(item=>{if(!item.date)return;const dayName=daysOfWeek[new Date(item.date).getDay()];if(groupedData[dayName]){groupedData[dayName].walking+=Number(item.walking)||0;groupedData[dayName].swimming+=Number(item.swimming)||0;groupedData[dayName].running+=Number(item.running)||0;groupedData[dayName]['resistance/weights']+=Number(item['resistance/weights'])||0;groupedData[dayName].biking+=Number(item.biking)||0;groupedData[dayName]['balance/stretching']+=Number(item['balance/stretching'])||0;groupedData[dayName].other+=Number(item.other)||0;groupedData[dayName].totalMinutes=groupedData[dayName].walking+groupedData[dayName].swimming+groupedData[dayName].running+groupedData[dayName]['resistance/weights']+groupedData[dayName].biking+groupedData[dayName]['balance/stretching']+groupedData[dayName].other;}});const maxVal=Math.max(...Object.values(groupedData).map(day=>day.totalMinutes),0);const maxDuration=Math.max(60,Math.ceil(maxVal/30)*30);const generateYAxisLabels=max=>{if(max===0)return[0];const step=Math.max(15,Math.ceil(max/6/15)*15);const labels=[];for(let i=0;i<=max;i+=step){labels.push(i);}return labels;};const yAxisLabels=generateYAxisLabels(maxDuration);// Calculate summary statistics for physician view\nconst weekSummary=useMemo(()=>{if(!weekData.length)return null;const totalMinutes=Object.values(groupedData).reduce((sum,day)=>sum+day.totalMinutes,0);const avgMinutesPerDay=(totalMinutes/7).toFixed(0);// Count days with exercise\nconst daysWithExercise=Object.values(groupedData).filter(day=>day.totalMinutes>0).length;// Find most common exercise type\nconst exerciseTypeTotals={};exerciseTypes.forEach(type=>{exerciseTypeTotals[type.key]=Object.values(groupedData).reduce((sum,day)=>sum+day[type.key],0);});const mostCommonExercise=Object.entries(exerciseTypeTotals).sort((_ref3,_ref4)=>{let[,a]=_ref3;let[,b]=_ref4;return b-a;})[0];// Calculate exercise consistency (days with 30+ minutes)\nconst daysWithAdequateExercise=Object.values(groupedData).filter(day=>day.totalMinutes>=30).length;// Calculate average session length\nconst totalSessions=weekData.filter(item=>{const dayName=daysOfWeek[new Date(item.date).getDay()];return groupedData[dayName]&&groupedData[dayName].totalMinutes>0;}).length;const avgSessionLength=totalSessions>0?(totalMinutes/totalSessions).toFixed(0):0;return{totalMinutes,avgMinutesPerDay,daysWithExercise,mostCommonExercise:mostCommonExercise[0],mostCommonExerciseMinutes:mostCommonExercise[1],daysWithAdequateExercise,totalSessions,avgSessionLength};},[weekData,groupedData]);const formatDateRange=(start,end)=>{const startStr=start.toLocaleDateString('en-US',{month:'short',day:'numeric'});const endStr=end.toLocaleDateString('en-US',{month:'short',day:'numeric'});return\"\".concat(startStr,\" to \").concat(endStr);};return/*#__PURE__*/_jsx(ChartContainer,{title:\"Exercise\",icon:\"\\uD83C\\uDFC3\",isLoading:loading,error:error,noData:!loading&&!error&&(!exerciseData||exerciseData.length===0),isExpanded:isExpanded,onExpand:onExpand,onPrev:handlePrevWeek,onNext:handleNextWeek,navigationLabel:formatDateRange(startOfWeek,endOfWeek),children:/*#__PURE__*/_jsxs(\"div\",{className:\"exercise-chart-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"exercise-chart-content \".concat(isExpanded?'expanded':''),children:[/*#__PURE__*/_jsx(\"h3\",{className:\"chart-title\",children:\"Activity Breakdown by Type\"}),/*#__PURE__*/_jsxs(\"svg\",{width:\"100%\",viewBox:\"0 0 \".concat(config.width,\" \").concat(config.height),className:\"exercise-svg\",children:[/*#__PURE__*/_jsxs(\"g\",{className:\"y-axis\",children:[yAxisLabels.map(value=>{const y=config.padding.top+chartHeight-value/maxDuration*chartHeight;return/*#__PURE__*/_jsxs(\"g\",{className:\"y-axis-grid-group\",children:[/*#__PURE__*/_jsx(\"line\",{className:\"chart-grid-line-horizontal\",x1:config.padding.left,y1:y,x2:config.width-config.padding.right,y2:y}),/*#__PURE__*/_jsx(\"text\",{x:config.padding.left-15,y:y+3,fontSize:config.fontSize.yAxis,textAnchor:\"end\",fill:\"var(--chart-color-text-secondary)\",className:\"chart-tick-label\",children:value})]},value);}),/*#__PURE__*/_jsx(\"text\",{x:-(config.padding.top+chartHeight/2),y:config.padding.left/2-5,fontSize:config.fontSize.yAxisTitle,textAnchor:\"middle\",fill:\"var(--chart-color-text-primary)\",transform:\"rotate(-90)\",className:\"y-axis-title\",children:\"Minutes\"})]}),/*#__PURE__*/_jsx(\"g\",{className:\"x-axis\",children:daysOfWeek.map((day,dayIndex)=>{const date=new Date(startOfWeek);date.setDate(date.getDate()+dayIndex);const x=config.padding.left+dayIndex*config.dayWidth+config.dayWidth/2;const dayData=groupedData[day];const performedExercises=exerciseTypes.filter(type=>(dayData[type.key]||0)>0);const emojis=performedExercises.map(type=>type.emoji).join(' ');return/*#__PURE__*/_jsxs(\"g\",{className:\"x-axis-label-group\",children:[/*#__PURE__*/_jsx(\"line\",{className:\"chart-grid-line-vertical\",x1:config.padding.left+dayIndex*config.dayWidth,y1:config.padding.top,x2:config.padding.left+dayIndex*config.dayWidth,y2:config.height-config.padding.bottom}),/*#__PURE__*/_jsx(\"text\",{x:x,y:config.height-config.padding.bottom+15,textAnchor:\"middle\",fontSize:config.fontSize.dayLabel,fill:\"var(--chart-color-text-primary)\",className:\"x-axis-day-label\",children:day}),/*#__PURE__*/_jsx(\"text\",{x:x,y:config.height-config.padding.bottom+30,textAnchor:\"middle\",fontSize:config.fontSize.dateLabel,fill:\"var(--chart-color-text-secondary)\",className:\"x-axis-date-label\",children:date.getDate()}),/*#__PURE__*/_jsx(\"text\",{x:x,y:config.height-config.padding.bottom+48,textAnchor:\"middle\",fontSize:config.fontSize.emoji,children:emojis})]},dayIndex);})}),/*#__PURE__*/_jsx(\"g\",{className:\"data-bars\",children:daysOfWeek.map((day,dayIndex)=>{const dayData=groupedData[day];const x=config.padding.left+dayIndex*config.dayWidth+config.dayWidth/2;let currentY=config.height-config.padding.bottom;return/*#__PURE__*/_jsx(\"g\",{children:exerciseTypes.map(type=>{const minutes=Number(dayData[type.key])||0;if(minutes<=0)return null;const segmentHeight=minutes/maxDuration*chartHeight;const segmentY=currentY-segmentHeight;const segment=/*#__PURE__*/_jsxs(\"g\",{children:[/*#__PURE__*/_jsx(\"rect\",{x:x-config.barWidth/2,y:segmentY,width:config.barWidth,height:segmentHeight,fill:type.color,className:\"data-bar\",children:/*#__PURE__*/_jsx(\"title\",{children:\"\".concat(type.label,\": \").concat(Math.round(minutes),\" min\")})}),segmentHeight>=12&&/*#__PURE__*/_jsx(\"text\",{x:x,y:segmentY+segmentHeight/2,textAnchor:\"middle\",fontSize:isExpanded?8:6,fill:\"white\",className:\"duration-label\",style:{textShadow:'0.5px 0.5px 1px rgba(0,0,0,0.5)',fontWeight:'normal'},children:Math.round(minutes)})]},type.key);currentY=segmentY;return segment;})},day);})})]})]}),/*#__PURE__*/_jsx(Legend,{title:\"Exercise Type\",items:exerciseLegendItems,orientation:\"horizontal\",size:\"medium\"}),viewMode==='physician'&&weekSummary&&/*#__PURE__*/_jsxs(\"div\",{className:\"chart-summary\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Week Summary\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-stats\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Total Exercise:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"stat-value\",children:[weekSummary.totalMinutes,\" minutes\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Daily Average:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"stat-value\",children:[weekSummary.avgMinutesPerDay,\" minutes/day\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Exercise Days:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"stat-value\",children:[weekSummary.daysWithExercise,\"/7 days\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Adequate Exercise:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"stat-value\",children:[weekSummary.daysWithAdequateExercise,\"/7 days (30+ min)\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Most Common:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"stat-value\",children:[(_exerciseTypes$find=exerciseTypes.find(t=>t.key===weekSummary.mostCommonExercise))===null||_exerciseTypes$find===void 0?void 0:_exerciseTypes$find.emoji,\" \",weekSummary.mostCommonExercise,\" (\",weekSummary.mostCommonExerciseMinutes,\" min)\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Avg Session:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"stat-value\",children:[weekSummary.avgSessionLength,\" minutes\"]})]})]})]})]})});};export default ExerciseChart;","map":{"version":3,"names":["React","useState","useMemo","usePatientData","ChartContainer","Legend","createChartConfig","jsx","_jsx","jsxs","_jsxs","exerciseTypes","key","label","color","emoji","exerciseLegendItems","map","_ref","concat","ExerciseChart","_ref2","_exerciseTypes$find","patientId","isExpanded","onExpand","viewMode","exerciseData","loading","error","currentWeek","setCurrentWeek","Date","handlePrevWeek","prev","setDate","getDate","handleNextWeek","config","chartHeight","height","padding","top","bottom","startOfWeek","getDay","setHours","endOfWeek","weekData","filter","d","date","itemDate","daysOfWeek","groupedData","reduce","acc","day","walking","swimming","running","biking","other","totalMinutes","forEach","item","dayName","Number","maxVal","Math","max","Object","values","maxDuration","ceil","generateYAxisLabels","step","labels","i","push","yAxisLabels","weekSummary","length","sum","avgMinutesPerDay","toFixed","daysWithExercise","exerciseTypeTotals","type","mostCommonExercise","entries","sort","_ref3","_ref4","a","b","daysWithAdequateExercise","totalSessions","avgSessionLength","mostCommonExerciseMinutes","formatDateRange","start","end","startStr","toLocaleDateString","month","endStr","title","icon","isLoading","noData","onPrev","onNext","navigationLabel","children","className","width","viewBox","value","y","x1","left","y1","x2","right","y2","x","fontSize","yAxis","textAnchor","fill","yAxisTitle","transform","dayIndex","dayWidth","dayData","performedExercises","emojis","join","dayLabel","dateLabel","currentY","minutes","segmentHeight","segmentY","segment","barWidth","round","style","textShadow","fontWeight","items","orientation","size","find","t"],"sources":["C:/Users/Matteo/Working_Folder/a. MCC Thesis Local/MCC_digital_health_data_visualizations/src/components/patient_charts/ExerciseChart.js"],"sourcesContent":["import React, { useState, useMemo } from 'react';\r\nimport usePatientData from '../../hooks/usePatientData';\r\nimport ChartContainer from '../ChartContainer';\r\nimport Legend from '../Legend';\r\nimport { createChartConfig } from '../chart-utils/ChartConfigFactory';\r\nimport '../ChartStyles.css';\r\nimport './ExerciseChart.css';\r\n\r\nconst exerciseTypes = [\r\n  { key: 'walking', label: 'Walking', color: 'var(--chart-color-walking)', emoji: '🚶' },\r\n  { key: 'swimming', label: 'Swimming', color: 'var(--chart-color-swimming)', emoji: '🏊‍♀️' },\r\n  { key: 'running', label: 'Running', color: 'var(--chart-color-running)', emoji: '🏃‍♂️' },\r\n  { key: 'resistance/weights', label: 'Resistance/Weights', color: 'var(--chart-color-resistance)', emoji: '🏋️' },\r\n  { key: 'biking', label: 'Biking', color: 'var(--chart-color-biking)', emoji: '🚴' },\r\n  { key: 'balance/stretching', label: 'Balance/Stretching', color: 'var(--chart-color-balance)', emoji: '🧘' },\r\n  { key: 'other', label: 'Other', color: 'var(--chart-color-other)', emoji: '➕' },\r\n];\r\n\r\nconst exerciseLegendItems = exerciseTypes.map(({ label, color, emoji }) => ({\r\n  label: `${emoji} ${label}`,\r\n  color,\r\n}));\r\n\r\n\r\n\r\nconst ExerciseChart = ({ patientId, isExpanded = false, onExpand, viewMode = 'patient' }) => {\r\n  const { exerciseData, loading, error } = usePatientData(patientId, 'exercise');\r\n  const [currentWeek, setCurrentWeek] = useState(new Date(2025, 4, 1));\r\n\r\n  const handlePrevWeek = () => {\r\n    setCurrentWeek(prev => new Date(new Date(prev).setDate(prev.getDate() - 7)));\r\n  };\r\n\r\n  const handleNextWeek = () => {\r\n    setCurrentWeek(prev => new Date(new Date(prev).setDate(prev.getDate() + 7)));\r\n  };\r\n\r\n  const config = createChartConfig('exercise', isExpanded);\r\n  const chartHeight = config.height - config.padding.top - config.padding.bottom;\r\n\r\n  const startOfWeek = new Date(currentWeek);\r\n  startOfWeek.setDate(startOfWeek.getDate() - startOfWeek.getDay());\r\n  startOfWeek.setHours(0, 0, 0, 0);\r\n\r\n  const endOfWeek = new Date(startOfWeek);\r\n  endOfWeek.setDate(endOfWeek.getDate() + 6);\r\n  endOfWeek.setHours(23, 59, 59, 999);\r\n\r\n  const weekData = exerciseData.filter(d => {\r\n    if (!d.date) return false;\r\n    const itemDate = new Date(d.date);\r\n    return itemDate >= startOfWeek && itemDate <= endOfWeek;\r\n  });\r\n\r\n  const daysOfWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n  const groupedData = daysOfWeek.reduce((acc, day) => {\r\n    acc[day] = { walking: 0, swimming: 0, running: 0, 'resistance/weights': 0, biking: 0, 'balance/stretching': 0, other: 0, totalMinutes: 0 };\r\n    return acc;\r\n  }, {});\r\n\r\n  weekData.forEach(item => {\r\n    if (!item.date) return;\r\n    const dayName = daysOfWeek[new Date(item.date).getDay()];\r\n    if (groupedData[dayName]) {\r\n      groupedData[dayName].walking += Number(item.walking) || 0;\r\n      groupedData[dayName].swimming += Number(item.swimming) || 0;\r\n      groupedData[dayName].running += Number(item.running) || 0;\r\n      groupedData[dayName]['resistance/weights'] += Number(item['resistance/weights']) || 0;\r\n      groupedData[dayName].biking += Number(item.biking) || 0;\r\n      groupedData[dayName]['balance/stretching'] += Number(item['balance/stretching']) || 0;\r\n      groupedData[dayName].other += Number(item.other) || 0;\r\n      groupedData[dayName].totalMinutes = groupedData[dayName].walking + groupedData[dayName].swimming + groupedData[dayName].running + groupedData[dayName]['resistance/weights'] + groupedData[dayName].biking + groupedData[dayName]['balance/stretching'] + groupedData[dayName].other;\r\n    }\r\n  });\r\n\r\n  const maxVal = Math.max(...Object.values(groupedData).map(day => day.totalMinutes), 0);\r\n  const maxDuration = Math.max(60, Math.ceil(maxVal / 30) * 30);\r\n\r\n  const generateYAxisLabels = (max) => {\r\n    if (max === 0) return [0];\r\n    const step = Math.max(15, Math.ceil(max / 6 / 15) * 15);\r\n    const labels = [];\r\n    for (let i = 0; i <= max; i += step) {\r\n      labels.push(i);\r\n    }\r\n    return labels;\r\n  };\r\n\r\n  const yAxisLabels = generateYAxisLabels(maxDuration);\r\n\r\n  // Calculate summary statistics for physician view\r\n  const weekSummary = useMemo(() => {\r\n    if (!weekData.length) return null;\r\n\r\n    const totalMinutes = Object.values(groupedData).reduce((sum, day) => sum + day.totalMinutes, 0);\r\n    const avgMinutesPerDay = (totalMinutes / 7).toFixed(0);\r\n    \r\n    // Count days with exercise\r\n    const daysWithExercise = Object.values(groupedData).filter(day => day.totalMinutes > 0).length;\r\n    \r\n    // Find most common exercise type\r\n    const exerciseTypeTotals = {};\r\n    exerciseTypes.forEach(type => {\r\n      exerciseTypeTotals[type.key] = Object.values(groupedData).reduce((sum, day) => sum + day[type.key], 0);\r\n    });\r\n    \r\n    const mostCommonExercise = Object.entries(exerciseTypeTotals)\r\n      .sort(([,a], [,b]) => b - a)[0];\r\n    \r\n    // Calculate exercise consistency (days with 30+ minutes)\r\n    const daysWithAdequateExercise = Object.values(groupedData).filter(day => day.totalMinutes >= 30).length;\r\n    \r\n    // Calculate average session length\r\n    const totalSessions = weekData.filter(item => {\r\n      const dayName = daysOfWeek[new Date(item.date).getDay()];\r\n      return groupedData[dayName] && groupedData[dayName].totalMinutes > 0;\r\n    }).length;\r\n    \r\n    const avgSessionLength = totalSessions > 0 ? (totalMinutes / totalSessions).toFixed(0) : 0;\r\n\r\n    return {\r\n      totalMinutes,\r\n      avgMinutesPerDay,\r\n      daysWithExercise,\r\n      mostCommonExercise: mostCommonExercise[0],\r\n      mostCommonExerciseMinutes: mostCommonExercise[1],\r\n      daysWithAdequateExercise,\r\n      totalSessions,\r\n      avgSessionLength\r\n    };\r\n  }, [weekData, groupedData]);\r\n\r\n  const formatDateRange = (start, end) => {\r\n    const startStr = start.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\r\n    const endStr = end.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\r\n    return `${startStr} to ${endStr}`;\r\n  };\r\n\r\n  return (\r\n    <ChartContainer\r\n      title=\"Exercise\"\r\n      icon=\"🏃\"\r\n      isLoading={loading}\r\n      error={error}\r\n      noData={!loading && !error && (!exerciseData || exerciseData.length === 0)}\r\n      isExpanded={isExpanded}\r\n      onExpand={onExpand}\r\n      onPrev={handlePrevWeek}\r\n      onNext={handleNextWeek}\r\n      navigationLabel={formatDateRange(startOfWeek, endOfWeek)}\r\n    >\r\n      <div className=\"exercise-chart-container\">\r\n        <div className={`exercise-chart-content ${isExpanded ? 'expanded' : ''}`}>\r\n          <h3 className=\"chart-title\">Activity Breakdown by Type</h3>\r\n          <svg \r\n            width=\"100%\" \r\n            viewBox={`0 0 ${config.width} ${config.height}`}\r\n            className=\"exercise-svg\"\r\n          >\r\n            <g className=\"y-axis\">\r\n              {yAxisLabels.map(value => {\r\n                const y = config.padding.top + chartHeight - (value / maxDuration) * chartHeight;\r\n                return (\r\n                  <g key={value} className=\"y-axis-grid-group\">\r\n                    <line className=\"chart-grid-line-horizontal\" x1={config.padding.left} y1={y} x2={config.width - config.padding.right} y2={y} />\r\n                    <text x={config.padding.left - 15} y={y + 3} fontSize={config.fontSize.yAxis} textAnchor=\"end\" fill=\"var(--chart-color-text-secondary)\" className=\"chart-tick-label\">{value}</text>\r\n                  </g>\r\n                );\r\n              })}\r\n              <text x={-(config.padding.top + chartHeight / 2)} y={config.padding.left / 2 - 5} fontSize={config.fontSize.yAxisTitle} textAnchor=\"middle\" fill=\"var(--chart-color-text-primary)\" transform=\"rotate(-90)\" className=\"y-axis-title\">Minutes</text>\r\n            </g>\r\n\r\n            <g className=\"x-axis\">\r\n              {daysOfWeek.map((day, dayIndex) => {\r\n                const date = new Date(startOfWeek);\r\n                date.setDate(date.getDate() + dayIndex);\r\n                const x = config.padding.left + dayIndex * config.dayWidth + config.dayWidth / 2;\r\n\r\n                const dayData = groupedData[day];\r\n                const performedExercises = exerciseTypes.filter(type => (dayData[type.key] || 0) > 0);\r\n                const emojis = performedExercises.map(type => type.emoji).join(' ');\r\n\r\n                return (\r\n                  <g key={dayIndex} className=\"x-axis-label-group\">\r\n                    <line className=\"chart-grid-line-vertical\" x1={config.padding.left + dayIndex * config.dayWidth} y1={config.padding.top} x2={config.padding.left + dayIndex * config.dayWidth} y2={config.height - config.padding.bottom} />\r\n                    <text x={x} y={config.height - config.padding.bottom + 15} textAnchor=\"middle\" fontSize={config.fontSize.dayLabel} fill=\"var(--chart-color-text-primary)\" className=\"x-axis-day-label\">{day}</text>\r\n                    <text x={x} y={config.height - config.padding.bottom + 30} textAnchor=\"middle\" fontSize={config.fontSize.dateLabel} fill=\"var(--chart-color-text-secondary)\" className=\"x-axis-date-label\">{date.getDate()}</text>\r\n                    <text x={x} y={config.height - config.padding.bottom + 48} textAnchor=\"middle\" fontSize={config.fontSize.emoji}>{emojis}</text>\r\n                  </g>\r\n                );\r\n              })}\r\n            </g>\r\n\r\n            <g className=\"data-bars\">\r\n              {daysOfWeek.map((day, dayIndex) => {\r\n                const dayData = groupedData[day];\r\n                const x = config.padding.left + dayIndex * config.dayWidth + config.dayWidth / 2;\r\n                let currentY = config.height - config.padding.bottom;\r\n\r\n                return (\r\n                  <g key={day}>\r\n                    {exerciseTypes.map(type => {\r\n                      const minutes = Number(dayData[type.key]) || 0;\r\n                      if (minutes <= 0) return null;\r\n\r\n                      const segmentHeight = (minutes / maxDuration) * chartHeight;\r\n                      const segmentY = currentY - segmentHeight;\r\n\r\n                      const segment = (\r\n                        <g key={type.key}>\r\n                          <rect\r\n                            x={x - config.barWidth / 2}\r\n                            y={segmentY}\r\n                            width={config.barWidth}\r\n                            height={segmentHeight}\r\n                            fill={type.color}\r\n                            className=\"data-bar\"\r\n                          >\r\n                            <title>{`${type.label}: ${Math.round(minutes)} min`}</title>\r\n                          </rect>\r\n                          {/* Duration label inside the segment */}\r\n                          {segmentHeight >= 12 && (\r\n                            <text\r\n                              x={x}\r\n                              y={segmentY + segmentHeight / 2}\r\n                              textAnchor=\"middle\"\r\n                              fontSize={isExpanded ? 8 : 6}\r\n                              fill=\"white\"\r\n                              className=\"duration-label\"\r\n                              style={{ \r\n                                textShadow: '0.5px 0.5px 1px rgba(0,0,0,0.5)',\r\n                                fontWeight: 'normal'\r\n                              }}\r\n                            >\r\n                              {Math.round(minutes)}\r\n                            </text>\r\n                          )}\r\n                        </g>\r\n                      );\r\n\r\n                      currentY = segmentY;\r\n                      return segment;\r\n                    })}\r\n                  </g>\r\n                );\r\n              })}\r\n            </g>\r\n          </svg>\r\n        </div>\r\n        \r\n        <Legend title=\"Exercise Type\" items={exerciseLegendItems} orientation=\"horizontal\" size=\"medium\" />\r\n\r\n        {/* Show summary for physician view only */}\r\n        {viewMode === 'physician' && weekSummary && (\r\n          <div className=\"chart-summary\">\r\n            <h4>Week Summary</h4>\r\n            <div className=\"summary-stats\">\r\n              <div className=\"stat-item\">\r\n                <span className=\"stat-label\">Total Exercise:</span>\r\n                <span className=\"stat-value\">\r\n                  {weekSummary.totalMinutes} minutes\r\n                </span>\r\n              </div>\r\n              <div className=\"stat-item\">\r\n                <span className=\"stat-label\">Daily Average:</span>\r\n                <span className=\"stat-value\">\r\n                  {weekSummary.avgMinutesPerDay} minutes/day\r\n                </span>\r\n              </div>\r\n              <div className=\"stat-item\">\r\n                <span className=\"stat-label\">Exercise Days:</span>\r\n                <span className=\"stat-value\">\r\n                  {weekSummary.daysWithExercise}/7 days\r\n                </span>\r\n              </div>\r\n              <div className=\"stat-item\">\r\n                <span className=\"stat-label\">Adequate Exercise:</span>\r\n                <span className=\"stat-value\">\r\n                  {weekSummary.daysWithAdequateExercise}/7 days (30+ min)\r\n                </span>\r\n              </div>\r\n              <div className=\"stat-item\">\r\n                <span className=\"stat-label\">Most Common:</span>\r\n                <span className=\"stat-value\">\r\n                  {exerciseTypes.find(t => t.key === weekSummary.mostCommonExercise)?.emoji} {weekSummary.mostCommonExercise} ({weekSummary.mostCommonExerciseMinutes} min)\r\n                </span>\r\n              </div>\r\n              <div className=\"stat-item\">\r\n                <span className=\"stat-label\">Avg Session:</span>\r\n                <span className=\"stat-value\">\r\n                  {weekSummary.avgSessionLength} minutes\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </ChartContainer>\r\n  );\r\n};\r\n\r\nexport default ExerciseChart;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,OAAO,KAAQ,OAAO,CAChD,MAAO,CAAAC,cAAc,KAAM,4BAA4B,CACvD,MAAO,CAAAC,cAAc,KAAM,mBAAmB,CAC9C,MAAO,CAAAC,MAAM,KAAM,WAAW,CAC9B,OAASC,iBAAiB,KAAQ,mCAAmC,CACrE,MAAO,oBAAoB,CAC3B,MAAO,qBAAqB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE7B,KAAM,CAAAC,aAAa,CAAG,CACpB,CAAEC,GAAG,CAAE,SAAS,CAAEC,KAAK,CAAE,SAAS,CAAEC,KAAK,CAAE,4BAA4B,CAAEC,KAAK,CAAE,IAAK,CAAC,CACtF,CAAEH,GAAG,CAAE,UAAU,CAAEC,KAAK,CAAE,UAAU,CAAEC,KAAK,CAAE,6BAA6B,CAAEC,KAAK,CAAE,OAAQ,CAAC,CAC5F,CAAEH,GAAG,CAAE,SAAS,CAAEC,KAAK,CAAE,SAAS,CAAEC,KAAK,CAAE,4BAA4B,CAAEC,KAAK,CAAE,OAAQ,CAAC,CACzF,CAAEH,GAAG,CAAE,oBAAoB,CAAEC,KAAK,CAAE,oBAAoB,CAAEC,KAAK,CAAE,+BAA+B,CAAEC,KAAK,CAAE,KAAM,CAAC,CAChH,CAAEH,GAAG,CAAE,QAAQ,CAAEC,KAAK,CAAE,QAAQ,CAAEC,KAAK,CAAE,2BAA2B,CAAEC,KAAK,CAAE,IAAK,CAAC,CACnF,CAAEH,GAAG,CAAE,oBAAoB,CAAEC,KAAK,CAAE,oBAAoB,CAAEC,KAAK,CAAE,4BAA4B,CAAEC,KAAK,CAAE,IAAK,CAAC,CAC5G,CAAEH,GAAG,CAAE,OAAO,CAAEC,KAAK,CAAE,OAAO,CAAEC,KAAK,CAAE,0BAA0B,CAAEC,KAAK,CAAE,GAAI,CAAC,CAChF,CAED,KAAM,CAAAC,mBAAmB,CAAGL,aAAa,CAACM,GAAG,CAACC,IAAA,MAAC,CAAEL,KAAK,CAAEC,KAAK,CAAEC,KAAM,CAAC,CAAAG,IAAA,OAAM,CAC1EL,KAAK,IAAAM,MAAA,CAAKJ,KAAK,MAAAI,MAAA,CAAIN,KAAK,CAAE,CAC1BC,KACF,CAAC,EAAC,CAAC,CAIH,KAAM,CAAAM,aAAa,CAAGC,KAAA,EAAuE,KAAAC,mBAAA,IAAtE,CAAEC,SAAS,CAAEC,UAAU,CAAG,KAAK,CAAEC,QAAQ,CAAEC,QAAQ,CAAG,SAAU,CAAC,CAAAL,KAAA,CACtF,KAAM,CAAEM,YAAY,CAAEC,OAAO,CAAEC,KAAM,CAAC,CAAG1B,cAAc,CAACoB,SAAS,CAAE,UAAU,CAAC,CAC9E,KAAM,CAACO,WAAW,CAAEC,cAAc,CAAC,CAAG9B,QAAQ,CAAC,GAAI,CAAA+B,IAAI,CAAC,IAAI,CAAE,CAAC,CAAE,CAAC,CAAC,CAAC,CAEpE,KAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CAC3BF,cAAc,CAACG,IAAI,EAAI,GAAI,CAAAF,IAAI,CAAC,GAAI,CAAAA,IAAI,CAACE,IAAI,CAAC,CAACC,OAAO,CAACD,IAAI,CAACE,OAAO,CAAC,CAAC,CAAG,CAAC,CAAC,CAAC,CAAC,CAC9E,CAAC,CAED,KAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CAC3BN,cAAc,CAACG,IAAI,EAAI,GAAI,CAAAF,IAAI,CAAC,GAAI,CAAAA,IAAI,CAACE,IAAI,CAAC,CAACC,OAAO,CAACD,IAAI,CAACE,OAAO,CAAC,CAAC,CAAG,CAAC,CAAC,CAAC,CAAC,CAC9E,CAAC,CAED,KAAM,CAAAE,MAAM,CAAGhC,iBAAiB,CAAC,UAAU,CAAEkB,UAAU,CAAC,CACxD,KAAM,CAAAe,WAAW,CAAGD,MAAM,CAACE,MAAM,CAAGF,MAAM,CAACG,OAAO,CAACC,GAAG,CAAGJ,MAAM,CAACG,OAAO,CAACE,MAAM,CAE9E,KAAM,CAAAC,WAAW,CAAG,GAAI,CAAAZ,IAAI,CAACF,WAAW,CAAC,CACzCc,WAAW,CAACT,OAAO,CAACS,WAAW,CAACR,OAAO,CAAC,CAAC,CAAGQ,WAAW,CAACC,MAAM,CAAC,CAAC,CAAC,CACjED,WAAW,CAACE,QAAQ,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAEhC,KAAM,CAAAC,SAAS,CAAG,GAAI,CAAAf,IAAI,CAACY,WAAW,CAAC,CACvCG,SAAS,CAACZ,OAAO,CAACY,SAAS,CAACX,OAAO,CAAC,CAAC,CAAG,CAAC,CAAC,CAC1CW,SAAS,CAACD,QAAQ,CAAC,EAAE,CAAE,EAAE,CAAE,EAAE,CAAE,GAAG,CAAC,CAEnC,KAAM,CAAAE,QAAQ,CAAGrB,YAAY,CAACsB,MAAM,CAACC,CAAC,EAAI,CACxC,GAAI,CAACA,CAAC,CAACC,IAAI,CAAE,MAAO,MAAK,CACzB,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAApB,IAAI,CAACkB,CAAC,CAACC,IAAI,CAAC,CACjC,MAAO,CAAAC,QAAQ,EAAIR,WAAW,EAAIQ,QAAQ,EAAIL,SAAS,CACzD,CAAC,CAAC,CAEF,KAAM,CAAAM,UAAU,CAAG,CAAC,KAAK,CAAE,KAAK,CAAE,KAAK,CAAE,KAAK,CAAE,KAAK,CAAE,KAAK,CAAE,KAAK,CAAC,CACpE,KAAM,CAAAC,WAAW,CAAGD,UAAU,CAACE,MAAM,CAAC,CAACC,GAAG,CAAEC,GAAG,GAAK,CAClDD,GAAG,CAACC,GAAG,CAAC,CAAG,CAAEC,OAAO,CAAE,CAAC,CAAEC,QAAQ,CAAE,CAAC,CAAEC,OAAO,CAAE,CAAC,CAAE,oBAAoB,CAAE,CAAC,CAAEC,MAAM,CAAE,CAAC,CAAE,oBAAoB,CAAE,CAAC,CAAEC,KAAK,CAAE,CAAC,CAAEC,YAAY,CAAE,CAAE,CAAC,CAC1I,MAAO,CAAAP,GAAG,CACZ,CAAC,CAAE,CAAC,CAAC,CAAC,CAENR,QAAQ,CAACgB,OAAO,CAACC,IAAI,EAAI,CACvB,GAAI,CAACA,IAAI,CAACd,IAAI,CAAE,OAChB,KAAM,CAAAe,OAAO,CAAGb,UAAU,CAAC,GAAI,CAAArB,IAAI,CAACiC,IAAI,CAACd,IAAI,CAAC,CAACN,MAAM,CAAC,CAAC,CAAC,CACxD,GAAIS,WAAW,CAACY,OAAO,CAAC,CAAE,CACxBZ,WAAW,CAACY,OAAO,CAAC,CAACR,OAAO,EAAIS,MAAM,CAACF,IAAI,CAACP,OAAO,CAAC,EAAI,CAAC,CACzDJ,WAAW,CAACY,OAAO,CAAC,CAACP,QAAQ,EAAIQ,MAAM,CAACF,IAAI,CAACN,QAAQ,CAAC,EAAI,CAAC,CAC3DL,WAAW,CAACY,OAAO,CAAC,CAACN,OAAO,EAAIO,MAAM,CAACF,IAAI,CAACL,OAAO,CAAC,EAAI,CAAC,CACzDN,WAAW,CAACY,OAAO,CAAC,CAAC,oBAAoB,CAAC,EAAIC,MAAM,CAACF,IAAI,CAAC,oBAAoB,CAAC,CAAC,EAAI,CAAC,CACrFX,WAAW,CAACY,OAAO,CAAC,CAACL,MAAM,EAAIM,MAAM,CAACF,IAAI,CAACJ,MAAM,CAAC,EAAI,CAAC,CACvDP,WAAW,CAACY,OAAO,CAAC,CAAC,oBAAoB,CAAC,EAAIC,MAAM,CAACF,IAAI,CAAC,oBAAoB,CAAC,CAAC,EAAI,CAAC,CACrFX,WAAW,CAACY,OAAO,CAAC,CAACJ,KAAK,EAAIK,MAAM,CAACF,IAAI,CAACH,KAAK,CAAC,EAAI,CAAC,CACrDR,WAAW,CAACY,OAAO,CAAC,CAACH,YAAY,CAAGT,WAAW,CAACY,OAAO,CAAC,CAACR,OAAO,CAAGJ,WAAW,CAACY,OAAO,CAAC,CAACP,QAAQ,CAAGL,WAAW,CAACY,OAAO,CAAC,CAACN,OAAO,CAAGN,WAAW,CAACY,OAAO,CAAC,CAAC,oBAAoB,CAAC,CAAGZ,WAAW,CAACY,OAAO,CAAC,CAACL,MAAM,CAAGP,WAAW,CAACY,OAAO,CAAC,CAAC,oBAAoB,CAAC,CAAGZ,WAAW,CAACY,OAAO,CAAC,CAACJ,KAAK,CACtR,CACF,CAAC,CAAC,CAEF,KAAM,CAAAM,MAAM,CAAGC,IAAI,CAACC,GAAG,CAAC,GAAGC,MAAM,CAACC,MAAM,CAAClB,WAAW,CAAC,CAACrC,GAAG,CAACwC,GAAG,EAAIA,GAAG,CAACM,YAAY,CAAC,CAAE,CAAC,CAAC,CACtF,KAAM,CAAAU,WAAW,CAAGJ,IAAI,CAACC,GAAG,CAAC,EAAE,CAAED,IAAI,CAACK,IAAI,CAACN,MAAM,CAAG,EAAE,CAAC,CAAG,EAAE,CAAC,CAE7D,KAAM,CAAAO,mBAAmB,CAAIL,GAAG,EAAK,CACnC,GAAIA,GAAG,GAAK,CAAC,CAAE,MAAO,CAAC,CAAC,CAAC,CACzB,KAAM,CAAAM,IAAI,CAAGP,IAAI,CAACC,GAAG,CAAC,EAAE,CAAED,IAAI,CAACK,IAAI,CAACJ,GAAG,CAAG,CAAC,CAAG,EAAE,CAAC,CAAG,EAAE,CAAC,CACvD,KAAM,CAAAO,MAAM,CAAG,EAAE,CACjB,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,EAAIR,GAAG,CAAEQ,CAAC,EAAIF,IAAI,CAAE,CACnCC,MAAM,CAACE,IAAI,CAACD,CAAC,CAAC,CAChB,CACA,MAAO,CAAAD,MAAM,CACf,CAAC,CAED,KAAM,CAAAG,WAAW,CAAGL,mBAAmB,CAACF,WAAW,CAAC,CAEpD;AACA,KAAM,CAAAQ,WAAW,CAAG/E,OAAO,CAAC,IAAM,CAChC,GAAI,CAAC8C,QAAQ,CAACkC,MAAM,CAAE,MAAO,KAAI,CAEjC,KAAM,CAAAnB,YAAY,CAAGQ,MAAM,CAACC,MAAM,CAAClB,WAAW,CAAC,CAACC,MAAM,CAAC,CAAC4B,GAAG,CAAE1B,GAAG,GAAK0B,GAAG,CAAG1B,GAAG,CAACM,YAAY,CAAE,CAAC,CAAC,CAC/F,KAAM,CAAAqB,gBAAgB,CAAG,CAACrB,YAAY,CAAG,CAAC,EAAEsB,OAAO,CAAC,CAAC,CAAC,CAEtD;AACA,KAAM,CAAAC,gBAAgB,CAAGf,MAAM,CAACC,MAAM,CAAClB,WAAW,CAAC,CAACL,MAAM,CAACQ,GAAG,EAAIA,GAAG,CAACM,YAAY,CAAG,CAAC,CAAC,CAACmB,MAAM,CAE9F;AACA,KAAM,CAAAK,kBAAkB,CAAG,CAAC,CAAC,CAC7B5E,aAAa,CAACqD,OAAO,CAACwB,IAAI,EAAI,CAC5BD,kBAAkB,CAACC,IAAI,CAAC5E,GAAG,CAAC,CAAG2D,MAAM,CAACC,MAAM,CAAClB,WAAW,CAAC,CAACC,MAAM,CAAC,CAAC4B,GAAG,CAAE1B,GAAG,GAAK0B,GAAG,CAAG1B,GAAG,CAAC+B,IAAI,CAAC5E,GAAG,CAAC,CAAE,CAAC,CAAC,CACxG,CAAC,CAAC,CAEF,KAAM,CAAA6E,kBAAkB,CAAGlB,MAAM,CAACmB,OAAO,CAACH,kBAAkB,CAAC,CAC1DI,IAAI,CAAC,CAAAC,KAAA,CAAAC,KAAA,OAAC,EAAEC,CAAC,CAAC,CAAAF,KAAA,IAAE,EAAEG,CAAC,CAAC,CAAAF,KAAA,OAAK,CAAAE,CAAC,CAAGD,CAAC,GAAC,CAAC,CAAC,CAAC,CAEjC;AACA,KAAM,CAAAE,wBAAwB,CAAGzB,MAAM,CAACC,MAAM,CAAClB,WAAW,CAAC,CAACL,MAAM,CAACQ,GAAG,EAAIA,GAAG,CAACM,YAAY,EAAI,EAAE,CAAC,CAACmB,MAAM,CAExG;AACA,KAAM,CAAAe,aAAa,CAAGjD,QAAQ,CAACC,MAAM,CAACgB,IAAI,EAAI,CAC5C,KAAM,CAAAC,OAAO,CAAGb,UAAU,CAAC,GAAI,CAAArB,IAAI,CAACiC,IAAI,CAACd,IAAI,CAAC,CAACN,MAAM,CAAC,CAAC,CAAC,CACxD,MAAO,CAAAS,WAAW,CAACY,OAAO,CAAC,EAAIZ,WAAW,CAACY,OAAO,CAAC,CAACH,YAAY,CAAG,CAAC,CACtE,CAAC,CAAC,CAACmB,MAAM,CAET,KAAM,CAAAgB,gBAAgB,CAAGD,aAAa,CAAG,CAAC,CAAG,CAAClC,YAAY,CAAGkC,aAAa,EAAEZ,OAAO,CAAC,CAAC,CAAC,CAAG,CAAC,CAE1F,MAAO,CACLtB,YAAY,CACZqB,gBAAgB,CAChBE,gBAAgB,CAChBG,kBAAkB,CAAEA,kBAAkB,CAAC,CAAC,CAAC,CACzCU,yBAAyB,CAAEV,kBAAkB,CAAC,CAAC,CAAC,CAChDO,wBAAwB,CACxBC,aAAa,CACbC,gBACF,CAAC,CACH,CAAC,CAAE,CAAClD,QAAQ,CAAEM,WAAW,CAAC,CAAC,CAE3B,KAAM,CAAA8C,eAAe,CAAGA,CAACC,KAAK,CAAEC,GAAG,GAAK,CACtC,KAAM,CAAAC,QAAQ,CAAGF,KAAK,CAACG,kBAAkB,CAAC,OAAO,CAAE,CAAEC,KAAK,CAAE,OAAO,CAAEhD,GAAG,CAAE,SAAU,CAAC,CAAC,CACtF,KAAM,CAAAiD,MAAM,CAAGJ,GAAG,CAACE,kBAAkB,CAAC,OAAO,CAAE,CAAEC,KAAK,CAAE,OAAO,CAAEhD,GAAG,CAAE,SAAU,CAAC,CAAC,CAClF,SAAAtC,MAAA,CAAUoF,QAAQ,SAAApF,MAAA,CAAOuF,MAAM,EACjC,CAAC,CAED,mBACElG,IAAA,CAACJ,cAAc,EACbuG,KAAK,CAAC,UAAU,CAChBC,IAAI,CAAC,cAAI,CACTC,SAAS,CAAEjF,OAAQ,CACnBC,KAAK,CAAEA,KAAM,CACbiF,MAAM,CAAE,CAAClF,OAAO,EAAI,CAACC,KAAK,GAAK,CAACF,YAAY,EAAIA,YAAY,CAACuD,MAAM,GAAK,CAAC,CAAE,CAC3E1D,UAAU,CAAEA,UAAW,CACvBC,QAAQ,CAAEA,QAAS,CACnBsF,MAAM,CAAE9E,cAAe,CACvB+E,MAAM,CAAE3E,cAAe,CACvB4E,eAAe,CAAEb,eAAe,CAACxD,WAAW,CAAEG,SAAS,CAAE,CAAAmE,QAAA,cAEzDxG,KAAA,QAAKyG,SAAS,CAAC,0BAA0B,CAAAD,QAAA,eACvCxG,KAAA,QAAKyG,SAAS,2BAAAhG,MAAA,CAA4BK,UAAU,CAAG,UAAU,CAAG,EAAE,CAAG,CAAA0F,QAAA,eACvE1G,IAAA,OAAI2G,SAAS,CAAC,aAAa,CAAAD,QAAA,CAAC,4BAA0B,CAAI,CAAC,cAC3DxG,KAAA,QACE0G,KAAK,CAAC,MAAM,CACZC,OAAO,QAAAlG,MAAA,CAASmB,MAAM,CAAC8E,KAAK,MAAAjG,MAAA,CAAImB,MAAM,CAACE,MAAM,CAAG,CAChD2E,SAAS,CAAC,cAAc,CAAAD,QAAA,eAExBxG,KAAA,MAAGyG,SAAS,CAAC,QAAQ,CAAAD,QAAA,EAClBlC,WAAW,CAAC/D,GAAG,CAACqG,KAAK,EAAI,CACxB,KAAM,CAAAC,CAAC,CAAGjF,MAAM,CAACG,OAAO,CAACC,GAAG,CAAGH,WAAW,CAAI+E,KAAK,CAAG7C,WAAW,CAAIlC,WAAW,CAChF,mBACE7B,KAAA,MAAeyG,SAAS,CAAC,mBAAmB,CAAAD,QAAA,eAC1C1G,IAAA,SAAM2G,SAAS,CAAC,4BAA4B,CAACK,EAAE,CAAElF,MAAM,CAACG,OAAO,CAACgF,IAAK,CAACC,EAAE,CAAEH,CAAE,CAACI,EAAE,CAAErF,MAAM,CAAC8E,KAAK,CAAG9E,MAAM,CAACG,OAAO,CAACmF,KAAM,CAACC,EAAE,CAAEN,CAAE,CAAE,CAAC,cAC/H/G,IAAA,SAAMsH,CAAC,CAAExF,MAAM,CAACG,OAAO,CAACgF,IAAI,CAAG,EAAG,CAACF,CAAC,CAAEA,CAAC,CAAG,CAAE,CAACQ,QAAQ,CAAEzF,MAAM,CAACyF,QAAQ,CAACC,KAAM,CAACC,UAAU,CAAC,KAAK,CAACC,IAAI,CAAC,mCAAmC,CAACf,SAAS,CAAC,kBAAkB,CAAAD,QAAA,CAAEI,KAAK,CAAO,CAAC,GAF7KA,KAGL,CAAC,CAER,CAAC,CAAC,cACF9G,IAAA,SAAMsH,CAAC,CAAE,EAAExF,MAAM,CAACG,OAAO,CAACC,GAAG,CAAGH,WAAW,CAAG,CAAC,CAAE,CAACgF,CAAC,CAAEjF,MAAM,CAACG,OAAO,CAACgF,IAAI,CAAG,CAAC,CAAG,CAAE,CAACM,QAAQ,CAAEzF,MAAM,CAACyF,QAAQ,CAACI,UAAW,CAACF,UAAU,CAAC,QAAQ,CAACC,IAAI,CAAC,iCAAiC,CAACE,SAAS,CAAC,aAAa,CAACjB,SAAS,CAAC,cAAc,CAAAD,QAAA,CAAC,SAAO,CAAM,CAAC,EACjP,CAAC,cAEJ1G,IAAA,MAAG2G,SAAS,CAAC,QAAQ,CAAAD,QAAA,CAClB7D,UAAU,CAACpC,GAAG,CAAC,CAACwC,GAAG,CAAE4E,QAAQ,GAAK,CACjC,KAAM,CAAAlF,IAAI,CAAG,GAAI,CAAAnB,IAAI,CAACY,WAAW,CAAC,CAClCO,IAAI,CAAChB,OAAO,CAACgB,IAAI,CAACf,OAAO,CAAC,CAAC,CAAGiG,QAAQ,CAAC,CACvC,KAAM,CAAAP,CAAC,CAAGxF,MAAM,CAACG,OAAO,CAACgF,IAAI,CAAGY,QAAQ,CAAG/F,MAAM,CAACgG,QAAQ,CAAGhG,MAAM,CAACgG,QAAQ,CAAG,CAAC,CAEhF,KAAM,CAAAC,OAAO,CAAGjF,WAAW,CAACG,GAAG,CAAC,CAChC,KAAM,CAAA+E,kBAAkB,CAAG7H,aAAa,CAACsC,MAAM,CAACuC,IAAI,EAAI,CAAC+C,OAAO,CAAC/C,IAAI,CAAC5E,GAAG,CAAC,EAAI,CAAC,EAAI,CAAC,CAAC,CACrF,KAAM,CAAA6H,MAAM,CAAGD,kBAAkB,CAACvH,GAAG,CAACuE,IAAI,EAAIA,IAAI,CAACzE,KAAK,CAAC,CAAC2H,IAAI,CAAC,GAAG,CAAC,CAEnE,mBACEhI,KAAA,MAAkByG,SAAS,CAAC,oBAAoB,CAAAD,QAAA,eAC9C1G,IAAA,SAAM2G,SAAS,CAAC,0BAA0B,CAACK,EAAE,CAAElF,MAAM,CAACG,OAAO,CAACgF,IAAI,CAAGY,QAAQ,CAAG/F,MAAM,CAACgG,QAAS,CAACZ,EAAE,CAAEpF,MAAM,CAACG,OAAO,CAACC,GAAI,CAACiF,EAAE,CAAErF,MAAM,CAACG,OAAO,CAACgF,IAAI,CAAGY,QAAQ,CAAG/F,MAAM,CAACgG,QAAS,CAACT,EAAE,CAAEvF,MAAM,CAACE,MAAM,CAAGF,MAAM,CAACG,OAAO,CAACE,MAAO,CAAE,CAAC,cAC5NnC,IAAA,SAAMsH,CAAC,CAAEA,CAAE,CAACP,CAAC,CAAEjF,MAAM,CAACE,MAAM,CAAGF,MAAM,CAACG,OAAO,CAACE,MAAM,CAAG,EAAG,CAACsF,UAAU,CAAC,QAAQ,CAACF,QAAQ,CAAEzF,MAAM,CAACyF,QAAQ,CAACY,QAAS,CAACT,IAAI,CAAC,iCAAiC,CAACf,SAAS,CAAC,kBAAkB,CAAAD,QAAA,CAAEzD,GAAG,CAAO,CAAC,cACnMjD,IAAA,SAAMsH,CAAC,CAAEA,CAAE,CAACP,CAAC,CAAEjF,MAAM,CAACE,MAAM,CAAGF,MAAM,CAACG,OAAO,CAACE,MAAM,CAAG,EAAG,CAACsF,UAAU,CAAC,QAAQ,CAACF,QAAQ,CAAEzF,MAAM,CAACyF,QAAQ,CAACa,SAAU,CAACV,IAAI,CAAC,mCAAmC,CAACf,SAAS,CAAC,mBAAmB,CAAAD,QAAA,CAAE/D,IAAI,CAACf,OAAO,CAAC,CAAC,CAAO,CAAC,cAClN5B,IAAA,SAAMsH,CAAC,CAAEA,CAAE,CAACP,CAAC,CAAEjF,MAAM,CAACE,MAAM,CAAGF,MAAM,CAACG,OAAO,CAACE,MAAM,CAAG,EAAG,CAACsF,UAAU,CAAC,QAAQ,CAACF,QAAQ,CAAEzF,MAAM,CAACyF,QAAQ,CAAChH,KAAM,CAAAmG,QAAA,CAAEuB,MAAM,CAAO,CAAC,GAJzHJ,QAKL,CAAC,CAER,CAAC,CAAC,CACD,CAAC,cAEJ7H,IAAA,MAAG2G,SAAS,CAAC,WAAW,CAAAD,QAAA,CACrB7D,UAAU,CAACpC,GAAG,CAAC,CAACwC,GAAG,CAAE4E,QAAQ,GAAK,CACjC,KAAM,CAAAE,OAAO,CAAGjF,WAAW,CAACG,GAAG,CAAC,CAChC,KAAM,CAAAqE,CAAC,CAAGxF,MAAM,CAACG,OAAO,CAACgF,IAAI,CAAGY,QAAQ,CAAG/F,MAAM,CAACgG,QAAQ,CAAGhG,MAAM,CAACgG,QAAQ,CAAG,CAAC,CAChF,GAAI,CAAAO,QAAQ,CAAGvG,MAAM,CAACE,MAAM,CAAGF,MAAM,CAACG,OAAO,CAACE,MAAM,CAEpD,mBACEnC,IAAA,MAAA0G,QAAA,CACGvG,aAAa,CAACM,GAAG,CAACuE,IAAI,EAAI,CACzB,KAAM,CAAAsD,OAAO,CAAG3E,MAAM,CAACoE,OAAO,CAAC/C,IAAI,CAAC5E,GAAG,CAAC,CAAC,EAAI,CAAC,CAC9C,GAAIkI,OAAO,EAAI,CAAC,CAAE,MAAO,KAAI,CAE7B,KAAM,CAAAC,aAAa,CAAID,OAAO,CAAGrE,WAAW,CAAIlC,WAAW,CAC3D,KAAM,CAAAyG,QAAQ,CAAGH,QAAQ,CAAGE,aAAa,CAEzC,KAAM,CAAAE,OAAO,cACXvI,KAAA,MAAAwG,QAAA,eACE1G,IAAA,SACEsH,CAAC,CAAEA,CAAC,CAAGxF,MAAM,CAAC4G,QAAQ,CAAG,CAAE,CAC3B3B,CAAC,CAAEyB,QAAS,CACZ5B,KAAK,CAAE9E,MAAM,CAAC4G,QAAS,CACvB1G,MAAM,CAAEuG,aAAc,CACtBb,IAAI,CAAE1C,IAAI,CAAC1E,KAAM,CACjBqG,SAAS,CAAC,UAAU,CAAAD,QAAA,cAEpB1G,IAAA,UAAA0G,QAAA,IAAA/F,MAAA,CAAWqE,IAAI,CAAC3E,KAAK,OAAAM,MAAA,CAAKkD,IAAI,CAAC8E,KAAK,CAACL,OAAO,CAAC,SAAc,CAAC,CACxD,CAAC,CAENC,aAAa,EAAI,EAAE,eAClBvI,IAAA,SACEsH,CAAC,CAAEA,CAAE,CACLP,CAAC,CAAEyB,QAAQ,CAAGD,aAAa,CAAG,CAAE,CAChCd,UAAU,CAAC,QAAQ,CACnBF,QAAQ,CAAEvG,UAAU,CAAG,CAAC,CAAG,CAAE,CAC7B0G,IAAI,CAAC,OAAO,CACZf,SAAS,CAAC,gBAAgB,CAC1BiC,KAAK,CAAE,CACLC,UAAU,CAAE,iCAAiC,CAC7CC,UAAU,CAAE,QACd,CAAE,CAAApC,QAAA,CAED7C,IAAI,CAAC8E,KAAK,CAACL,OAAO,CAAC,CAChB,CACP,GA3BKtD,IAAI,CAAC5E,GA4BV,CACJ,CAEDiI,QAAQ,CAAGG,QAAQ,CACnB,MAAO,CAAAC,OAAO,CAChB,CAAC,CAAC,EA1CIxF,GA2CL,CAAC,CAER,CAAC,CAAC,CACD,CAAC,EACD,CAAC,EACH,CAAC,cAENjD,IAAA,CAACH,MAAM,EAACsG,KAAK,CAAC,eAAe,CAAC4C,KAAK,CAAEvI,mBAAoB,CAACwI,WAAW,CAAC,YAAY,CAACC,IAAI,CAAC,QAAQ,CAAE,CAAC,CAGlG/H,QAAQ,GAAK,WAAW,EAAIuD,WAAW,eACtCvE,KAAA,QAAKyG,SAAS,CAAC,eAAe,CAAAD,QAAA,eAC5B1G,IAAA,OAAA0G,QAAA,CAAI,cAAY,CAAI,CAAC,cACrBxG,KAAA,QAAKyG,SAAS,CAAC,eAAe,CAAAD,QAAA,eAC5BxG,KAAA,QAAKyG,SAAS,CAAC,WAAW,CAAAD,QAAA,eACxB1G,IAAA,SAAM2G,SAAS,CAAC,YAAY,CAAAD,QAAA,CAAC,iBAAe,CAAM,CAAC,cACnDxG,KAAA,SAAMyG,SAAS,CAAC,YAAY,CAAAD,QAAA,EACzBjC,WAAW,CAAClB,YAAY,CAAC,UAC5B,EAAM,CAAC,EACJ,CAAC,cACNrD,KAAA,QAAKyG,SAAS,CAAC,WAAW,CAAAD,QAAA,eACxB1G,IAAA,SAAM2G,SAAS,CAAC,YAAY,CAAAD,QAAA,CAAC,gBAAc,CAAM,CAAC,cAClDxG,KAAA,SAAMyG,SAAS,CAAC,YAAY,CAAAD,QAAA,EACzBjC,WAAW,CAACG,gBAAgB,CAAC,cAChC,EAAM,CAAC,EACJ,CAAC,cACN1E,KAAA,QAAKyG,SAAS,CAAC,WAAW,CAAAD,QAAA,eACxB1G,IAAA,SAAM2G,SAAS,CAAC,YAAY,CAAAD,QAAA,CAAC,gBAAc,CAAM,CAAC,cAClDxG,KAAA,SAAMyG,SAAS,CAAC,YAAY,CAAAD,QAAA,EACzBjC,WAAW,CAACK,gBAAgB,CAAC,SAChC,EAAM,CAAC,EACJ,CAAC,cACN5E,KAAA,QAAKyG,SAAS,CAAC,WAAW,CAAAD,QAAA,eACxB1G,IAAA,SAAM2G,SAAS,CAAC,YAAY,CAAAD,QAAA,CAAC,oBAAkB,CAAM,CAAC,cACtDxG,KAAA,SAAMyG,SAAS,CAAC,YAAY,CAAAD,QAAA,EACzBjC,WAAW,CAACe,wBAAwB,CAAC,mBACxC,EAAM,CAAC,EACJ,CAAC,cACNtF,KAAA,QAAKyG,SAAS,CAAC,WAAW,CAAAD,QAAA,eACxB1G,IAAA,SAAM2G,SAAS,CAAC,YAAY,CAAAD,QAAA,CAAC,cAAY,CAAM,CAAC,cAChDxG,KAAA,SAAMyG,SAAS,CAAC,YAAY,CAAAD,QAAA,GAAA5F,mBAAA,CACzBX,aAAa,CAAC+I,IAAI,CAACC,CAAC,EAAIA,CAAC,CAAC/I,GAAG,GAAKqE,WAAW,CAACQ,kBAAkB,CAAC,UAAAnE,mBAAA,iBAAjEA,mBAAA,CAAmEP,KAAK,CAAC,GAAC,CAACkE,WAAW,CAACQ,kBAAkB,CAAC,IAAE,CAACR,WAAW,CAACkB,yBAAyB,CAAC,OACtJ,EAAM,CAAC,EACJ,CAAC,cACNzF,KAAA,QAAKyG,SAAS,CAAC,WAAW,CAAAD,QAAA,eACxB1G,IAAA,SAAM2G,SAAS,CAAC,YAAY,CAAAD,QAAA,CAAC,cAAY,CAAM,CAAC,cAChDxG,KAAA,SAAMyG,SAAS,CAAC,YAAY,CAAAD,QAAA,EACzBjC,WAAW,CAACiB,gBAAgB,CAAC,UAChC,EAAM,CAAC,EACJ,CAAC,EACH,CAAC,EACH,CACN,EACE,CAAC,CACQ,CAAC,CAErB,CAAC,CAED,cAAe,CAAA9E,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}