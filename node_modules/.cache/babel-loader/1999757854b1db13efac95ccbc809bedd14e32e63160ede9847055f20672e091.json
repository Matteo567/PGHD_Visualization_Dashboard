{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matteo\\\\Working_Folder\\\\a. MCC Thesis Local\\\\MCC_digital_health_data_visualizations\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route, useNavigate, useParams } from 'react-router-dom';\nimport WelcomeScreen from './WelcomeScreen';\nimport PatientDashboard from './PatientDashboard';\nimport PhysicianDashboard from './PhysicianDashboard';\nimport PatientSelector from './PatientSelector';\nimport './App.css';\n\n// Constants for patient selection\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PATIENT_COUNT = 100;\nconst PATIENTS = Array.from({\n  length: PATIENT_COUNT\n}, (_, i) => `Patient_${(i + 1).toString().padStart(3, '0')}`);\n\n/**\n * Simplified main application component.\n * - Removes ErrorBoundary for simplicity.\n * - Removes cache-clearing logic.\n * - Simplifies routing by removing wrapper components.\n */\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(WelcomeScreen, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/patient\",\n        element: /*#__PURE__*/_jsxDEV(PatientEntry, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/patient/:patientId\",\n        element: /*#__PURE__*/_jsxDEV(PatientDashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 52\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/physician\",\n        element: /*#__PURE__*/_jsxDEV(PhysicianDashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n/**\n * Component for selecting a patient, leading to their dashboard.\n */\n_c = App;\nfunction PatientEntry() {\n  _s();\n  const [selectedPatient, setSelectedPatient] = useState('');\n  const navigate = useNavigate();\n  const handleGoToDashboard = () => {\n    if (selectedPatient) {\n      navigate(`/patient/${selectedPatient}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      marginTop: 80\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Please select your patient ID #.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PatientSelector, {\n      patients: PATIENTS,\n      value: selectedPatient,\n      onChange: setSelectedPatient\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        fontSize: 20,\n        marginTop: 24,\n        padding: '10px 30px'\n      },\n      onClick: handleGoToDashboard,\n      disabled: !selectedPatient,\n      children: \"Go to Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(PatientEntry, \"i8BaJ1PBThKvqhVbquXKzyLfxio=\", false, function () {\n  return [useNavigate];\n});\n_c2 = PatientEntry;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"PatientEntry\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Routes","Route","useNavigate","useParams","WelcomeScreen","PatientDashboard","PhysicianDashboard","PatientSelector","jsxDEV","_jsxDEV","PATIENT_COUNT","PATIENTS","Array","from","length","_","i","toString","padStart","App","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","PatientEntry","_c","_s","selectedPatient","setSelectedPatient","navigate","handleGoToDashboard","style","display","flexDirection","alignItems","marginTop","patients","value","onChange","fontSize","padding","onClick","disabled","_c2","$RefreshReg$"],"sources":["C:/Users/Matteo/Working_Folder/a. MCC Thesis Local/MCC_digital_health_data_visualizations/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route, useNavigate, useParams } from 'react-router-dom';\nimport WelcomeScreen from './WelcomeScreen';\nimport PatientDashboard from './PatientDashboard';\nimport PhysicianDashboard from './PhysicianDashboard';\nimport PatientSelector from './PatientSelector';\nimport './App.css';\n\n// Constants for patient selection\nconst PATIENT_COUNT = 100;\nconst PATIENTS = Array.from({ length: PATIENT_COUNT }, (_, i) => `Patient_${(i + 1).toString().padStart(3, '0')}`);\n\n/**\n * Simplified main application component.\n * - Removes ErrorBoundary for simplicity.\n * - Removes cache-clearing logic.\n * - Simplifies routing by removing wrapper components.\n */\nfunction App() {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<WelcomeScreen />} />\n        <Route path=\"/patient\" element={<PatientEntry />} />\n        {/* Route now directly renders PatientDashboard, which will fetch its own data */}\n        <Route path=\"/patient/:patientId\" element={<PatientDashboard />} /> \n        <Route path=\"/physician\" element={<PhysicianDashboard />} />\n      </Routes>\n    </Router>\n  );\n}\n\n/**\n * Component for selecting a patient, leading to their dashboard.\n */\nfunction PatientEntry() {\n  const [selectedPatient, setSelectedPatient] = useState('');\n  const navigate = useNavigate();\n\n  const handleGoToDashboard = () => {\n    if (selectedPatient) {\n      navigate(`/patient/${selectedPatient}`);\n    }\n  };\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', marginTop: 80 }}>\n      <h2>Please select your patient ID #.</h2>\n      <PatientSelector\n        patients={PATIENTS}\n        value={selectedPatient}\n        onChange={setSelectedPatient}\n      />\n      <button\n        style={{ fontSize: 20, marginTop: 24, padding: '10px 30px' }}\n        onClick={handleGoToDashboard}\n        disabled={!selectedPatient}\n      >\n        Go to Dashboard\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}