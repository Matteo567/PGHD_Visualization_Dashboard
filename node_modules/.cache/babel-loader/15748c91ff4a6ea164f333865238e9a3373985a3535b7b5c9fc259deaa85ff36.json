{"ast":null,"code":"/**\n * Legend.js - Dynamic Chart Legend Component\n * \n * This component provides interactive legends for chart visualizations:\n * - Auto-sizes to fit chart container dimensions\n * - Supports horizontal and vertical orientations\n * - Dynamically positions based on chart type and container\n * - Handles responsive sizing for different screen sizes\n * - Provides consistent legend formatting across all chart types\n * \n * Essential for interpreting chart data and color coding in health visualizations.\n */import React,{useRef,useEffect,useState}from'react';import'./ChartStyles.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Legend=_ref=>{let{title,items,orientation='horizontal',// horizontal | vertical\nsize='medium',// small | medium | large\ncontainerWidth=null// Keep for backward compatibility, but will be overridden by auto-sizing\n}=_ref;const legendRef=useRef(null);const[parentWidth,setParentWidth]=useState(null);useEffect(()=>{const updateWidth=()=>{if(legendRef.current){// Find the most specific chart content container (not the wrapper)\nconst specificContainers=['.glucose-chart-wrapper',// Glucose chart wrapper (contains the actual chart)\n'.chart-section',// Blood pressure chart sections\n'.bp-svg-container',// Blood pressure SVG container\n'.exercise-chart-content',// Exercise chart content\n'.sleep-chart',// Sleep chart container\n'.pain-chart-wrapper',// Pain chart wrapper\n'.meal-chart-wrapper',// Meal chart wrapper\n'.mood-calendar-wrapper',// Mood calendar wrapper\n'.pain-line-chart-container'// Pain line chart container\n];let parentContainer=null;let containerWidth=0;// Try to find the most specific container first\nfor(const selector of specificContainers){const container=legendRef.current.closest(selector);if(container){parentContainer=container;// Get the content width excluding padding\nconst computedStyle=window.getComputedStyle(container);const paddingLeft=parseFloat(computedStyle.paddingLeft)||0;const paddingRight=parseFloat(computedStyle.paddingRight)||0;containerWidth=container.offsetWidth-paddingLeft-paddingRight;break;}}// Special handling for pain legends - prioritize pain-chart-wrapper\nif(!parentContainer&&legendRef.current.closest('.pain-legend-wrapper')){var _legendRef$current$cl;const painChartWrapper=(_legendRef$current$cl=legendRef.current.closest('.pain-chart-container'))===null||_legendRef$current$cl===void 0?void 0:_legendRef$current$cl.querySelector('.pain-chart-wrapper');if(painChartWrapper){parentContainer=painChartWrapper;const computedStyle=window.getComputedStyle(painChartWrapper);const paddingLeft=parseFloat(computedStyle.paddingLeft)||0;const paddingRight=parseFloat(computedStyle.paddingRight)||0;containerWidth=painChartWrapper.offsetWidth-paddingLeft-paddingRight;}}// Fallback to chart-specific containers if no specific one found\nif(!parentContainer){const chartContainers=['.glucose-chart-container','.bp-chart-container',// Changed from .bp-chart-content to .bp-chart-container\n'.exercise-chart-container','.sleep-chart-content','.pain-chart-container','.meal-contents-chart-container','.mood-calendar-container'];for(const selector of chartContainers){const container=legendRef.current.closest(selector);if(container){parentContainer=container;// For chart containers, find the inner chart content\nconst innerChart=container.querySelector('.glucose-chart-wrapper, .chart-section, .bp-svg-container, .exercise-chart-content, .sleep-chart, .pain-chart-wrapper, .meal-chart-wrapper, .mood-calendar-wrapper');if(innerChart){// Use the inner chart width\nconst computedStyle=window.getComputedStyle(innerChart);const paddingLeft=parseFloat(computedStyle.paddingLeft)||0;const paddingRight=parseFloat(computedStyle.paddingRight)||0;containerWidth=innerChart.offsetWidth-paddingLeft-paddingRight;}else{// Fallback to container width with padding subtraction\nconst computedStyle=window.getComputedStyle(container);const paddingLeft=parseFloat(computedStyle.paddingLeft)||0;const paddingRight=parseFloat(computedStyle.paddingRight)||0;containerWidth=container.offsetWidth-paddingLeft-paddingRight;}break;}}}// Final fallback to visualization content\nif(!parentContainer){const vizContent=legendRef.current.closest('.visualization-content');if(vizContent){parentContainer=vizContent;const computedStyle=window.getComputedStyle(vizContent);const paddingLeft=parseFloat(computedStyle.paddingLeft)||0;const paddingRight=parseFloat(computedStyle.paddingRight)||0;containerWidth=vizContent.offsetWidth-paddingLeft-paddingRight;}}if(parentContainer&&containerWidth>0){// Add additional margin to prevent touching borders\nconst adjustedWidth=Math.max(containerWidth-32,200);// Ensure minimum width of 200px\nsetParentWidth(adjustedWidth);}}};updateWidth();// Update on resize\nconst resizeObserver=new ResizeObserver(updateWidth);if(legendRef.current){resizeObserver.observe(legendRef.current);}// Also listen for window resize as fallback\nwindow.addEventListener('resize',updateWidth);return()=>{resizeObserver.disconnect();window.removeEventListener('resize',updateWidth);};},[]);if(!items||items.length===0){return null;}// Use parent width if available, otherwise fall back to containerWidth prop or default\nconst finalWidth=parentWidth||containerWidth;const containerStyle=finalWidth?{width:finalWidth,maxWidth:finalWidth}:{};return/*#__PURE__*/_jsxs(\"div\",{ref:legendRef,className:\"legend-container legend-\".concat(orientation,\" legend-\").concat(size),style:containerStyle,children:[title&&/*#__PURE__*/_jsx(\"h4\",{className:\"legend-title\",children:title}),/*#__PURE__*/_jsx(\"div\",{className:\"legend-items\",children:items.map((item,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"legend-item\",style:item.style,title:item.description||item.label,children:[item.color&&/*#__PURE__*/_jsx(\"span\",{className:\"legend-color-indicator\",style:{backgroundColor:item.color},\"aria-label\":\"Color indicator for \".concat(item.label)}),item.icon&&/*#__PURE__*/_jsx(\"span\",{className:\"legend-icon\",\"aria-label\":\"Icon for \".concat(item.label),children:item.icon}),item.shape&&/*#__PURE__*/_jsx(\"span\",{className:\"legend-shape legend-shape-\".concat(item.shape),style:item.shapeStyle,\"aria-label\":\"\".concat(item.shape,\" indicator for \").concat(item.label)}),/*#__PURE__*/_jsx(\"span\",{className:\"legend-label\",children:item.label})]},index))})]});};export default Legend;","map":{"version":3,"names":["React","useRef","useEffect","useState","jsx","_jsx","jsxs","_jsxs","Legend","_ref","title","items","orientation","size","containerWidth","legendRef","parentWidth","setParentWidth","updateWidth","current","specificContainers","parentContainer","selector","container","closest","computedStyle","window","getComputedStyle","paddingLeft","parseFloat","paddingRight","offsetWidth","_legendRef$current$cl","painChartWrapper","querySelector","chartContainers","innerChart","vizContent","adjustedWidth","Math","max","resizeObserver","ResizeObserver","observe","addEventListener","disconnect","removeEventListener","length","finalWidth","containerStyle","width","maxWidth","ref","className","concat","style","children","map","item","index","description","label","color","backgroundColor","icon","shape","shapeStyle"],"sources":["C:/Users/Matteo/Working_Folder/a. MCC Thesis Local/MCC_digital_health_data_visualizations/src/components/Legend.js"],"sourcesContent":["/**\n * Legend.js - Dynamic Chart Legend Component\n * \n * This component provides interactive legends for chart visualizations:\n * - Auto-sizes to fit chart container dimensions\n * - Supports horizontal and vertical orientations\n * - Dynamically positions based on chart type and container\n * - Handles responsive sizing for different screen sizes\n * - Provides consistent legend formatting across all chart types\n * \n * Essential for interpreting chart data and color coding in health visualizations.\n */\n\nimport React, { useRef, useEffect, useState } from 'react';\nimport './ChartStyles.css';\n\nconst Legend = ({ \n  title, \n  items, \n  orientation = 'horizontal', // horizontal | vertical\n  size = 'medium', // small | medium | large\n  containerWidth = null // Keep for backward compatibility, but will be overridden by auto-sizing\n}) => {\n  const legendRef = useRef(null);\n  const [parentWidth, setParentWidth] = useState(null);\n\n  useEffect(() => {\n    const updateWidth = () => {\n      if (legendRef.current) {\n        // Find the most specific chart content container (not the wrapper)\n        const specificContainers = [\n          '.glucose-chart-wrapper', // Glucose chart wrapper (contains the actual chart)\n          '.chart-section', // Blood pressure chart sections\n          '.bp-svg-container', // Blood pressure SVG container\n          '.exercise-chart-content', // Exercise chart content\n          '.sleep-chart', // Sleep chart container\n          '.pain-chart-wrapper', // Pain chart wrapper\n          '.meal-chart-wrapper', // Meal chart wrapper\n          '.mood-calendar-wrapper', // Mood calendar wrapper\n          '.pain-line-chart-container', // Pain line chart container\n        ];\n        \n        let parentContainer = null;\n        let containerWidth = 0;\n        \n        // Try to find the most specific container first\n        for (const selector of specificContainers) {\n          const container = legendRef.current.closest(selector);\n          if (container) {\n            parentContainer = container;\n            // Get the content width excluding padding\n            const computedStyle = window.getComputedStyle(container);\n            const paddingLeft = parseFloat(computedStyle.paddingLeft) || 0;\n            const paddingRight = parseFloat(computedStyle.paddingRight) || 0;\n            containerWidth = container.offsetWidth - paddingLeft - paddingRight;\n            break;\n          }\n        }\n        \n        // Special handling for pain legends - prioritize pain-chart-wrapper\n        if (!parentContainer && legendRef.current.closest('.pain-legend-wrapper')) {\n          const painChartWrapper = legendRef.current.closest('.pain-chart-container')?.querySelector('.pain-chart-wrapper');\n          if (painChartWrapper) {\n            parentContainer = painChartWrapper;\n            const computedStyle = window.getComputedStyle(painChartWrapper);\n            const paddingLeft = parseFloat(computedStyle.paddingLeft) || 0;\n            const paddingRight = parseFloat(computedStyle.paddingRight) || 0;\n            containerWidth = painChartWrapper.offsetWidth - paddingLeft - paddingRight;\n          }\n        }\n        \n        // Fallback to chart-specific containers if no specific one found\n        if (!parentContainer) {\n          const chartContainers = [\n            '.glucose-chart-container',\n            '.bp-chart-container', // Changed from .bp-chart-content to .bp-chart-container\n            '.exercise-chart-container',\n            '.sleep-chart-content',\n            '.pain-chart-container',\n            '.meal-contents-chart-container',\n            '.mood-calendar-container'\n          ];\n          \n          for (const selector of chartContainers) {\n            const container = legendRef.current.closest(selector);\n            if (container) {\n              parentContainer = container;\n              // For chart containers, find the inner chart content\n              const innerChart = container.querySelector('.glucose-chart-wrapper, .chart-section, .bp-svg-container, .exercise-chart-content, .sleep-chart, .pain-chart-wrapper, .meal-chart-wrapper, .mood-calendar-wrapper');\n              \n              if (innerChart) {\n                // Use the inner chart width\n                const computedStyle = window.getComputedStyle(innerChart);\n                const paddingLeft = parseFloat(computedStyle.paddingLeft) || 0;\n                const paddingRight = parseFloat(computedStyle.paddingRight) || 0;\n                containerWidth = innerChart.offsetWidth - paddingLeft - paddingRight;\n              } else {\n                // Fallback to container width with padding subtraction\n                const computedStyle = window.getComputedStyle(container);\n                const paddingLeft = parseFloat(computedStyle.paddingLeft) || 0;\n                const paddingRight = parseFloat(computedStyle.paddingRight) || 0;\n                containerWidth = container.offsetWidth - paddingLeft - paddingRight;\n              }\n              break;\n            }\n          }\n        }\n        \n        // Final fallback to visualization content\n        if (!parentContainer) {\n          const vizContent = legendRef.current.closest('.visualization-content');\n          if (vizContent) {\n            parentContainer = vizContent;\n            const computedStyle = window.getComputedStyle(vizContent);\n            const paddingLeft = parseFloat(computedStyle.paddingLeft) || 0;\n            const paddingRight = parseFloat(computedStyle.paddingRight) || 0;\n            containerWidth = vizContent.offsetWidth - paddingLeft - paddingRight;\n          }\n        }\n        \n        if (parentContainer && containerWidth > 0) {\n          // Add additional margin to prevent touching borders\n          const adjustedWidth = Math.max(containerWidth - 32, 200); // Ensure minimum width of 200px\n          setParentWidth(adjustedWidth);\n        }\n      }\n    };\n\n    updateWidth();\n    \n    // Update on resize\n    const resizeObserver = new ResizeObserver(updateWidth);\n    if (legendRef.current) {\n      resizeObserver.observe(legendRef.current);\n    }\n\n    // Also listen for window resize as fallback\n    window.addEventListener('resize', updateWidth);\n    \n    return () => {\n      resizeObserver.disconnect();\n      window.removeEventListener('resize', updateWidth);\n    };\n  }, []);\n\n  if (!items || items.length === 0) {\n    return null;\n  }\n\n  // Use parent width if available, otherwise fall back to containerWidth prop or default\n  const finalWidth = parentWidth || containerWidth;\n  const containerStyle = finalWidth ? { width: finalWidth, maxWidth: finalWidth } : {};\n\n  return (\n    <div \n      ref={legendRef}\n      className={`legend-container legend-${orientation} legend-${size}`}\n      style={containerStyle}\n    >\n      {title && <h4 className=\"legend-title\">{title}</h4>}\n      <div className=\"legend-items\">\n        {items.map((item, index) => (\n          <div \n            key={index} \n            className=\"legend-item\" \n            style={item.style}\n            title={item.description || item.label}\n          >\n            {/* Color indicator */}\n            {item.color && (\n              <span \n                className=\"legend-color-indicator\" \n                style={{ backgroundColor: item.color }}\n                aria-label={`Color indicator for ${item.label}`}\n              />\n            )}\n            \n            {/* Icon/emoji indicator */}\n            {item.icon && (\n              <span \n                className=\"legend-icon\"\n                aria-label={`Icon for ${item.label}`}\n              >\n                {item.icon}\n              </span>\n            )}\n            \n            {/* Shape indicator for special cases */}\n            {item.shape && (\n              <span \n                className={`legend-shape legend-shape-${item.shape}`}\n                style={item.shapeStyle}\n                aria-label={`${item.shape} indicator for ${item.label}`}\n              />\n            )}\n            \n            {/* Label */}\n            <span className=\"legend-label\">{item.label}</span>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Legend;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}