{"ast":null,"code":"import React,{useState}from'react';import usePatientData from'./hooks/usePatientData';import useVisualizations from'./hooks/useVisualizations';import useVisualizationHelpers from'./hooks/useVisualizationHelpers';import PatientInfoCard from'./components/PatientInfoCard';import DashboardGrid from'./components/DashboardGrid';import'./PhysicianDashboard.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PhysicianDashboard=_ref=>{let{patientId:initialPatientId}=_ref;const[selectedPatientId,setSelectedPatientId]=useState(initialPatientId||'');const{data,loading,error}=usePatientData(selectedPatientId);// Update selected patient if prop changes\nReact.useEffect(()=>{if(initialPatientId&&initialPatientId!==selectedPatientId){setSelectedPatientId(initialPatientId);}},[initialPatientId,selectedPatientId]);const{allVisualizations,availableVisualizations,selectedVisualizations,handleVisualizationChange}=useVisualizations('physician',data);const{expandedItem,handleExpand,renderVisualization}=useVisualizationHelpers(selectedPatientId,allVisualizations,selectedVisualizations);// Override renderVisualization to set correct viewMode and handle no patient case\nconst renderVisualizationWithMode=(visualizationType,windowId)=>{if(!selectedPatientId){return/*#__PURE__*/_jsx(\"div\",{className:\"chart-placeholder\",children:\"Please select a patient to view data.\"});}const viz=allVisualizations[visualizationType];if(!viz)return/*#__PURE__*/_jsx(\"div\",{className:\"chart-placeholder\",children:\"Invalid visualization\"});const Component=viz.component;const isExpanded=expandedItem===windowId;return/*#__PURE__*/_jsx(Component,{patientId:selectedPatientId,viewMode:\"physician\",isExpanded:isExpanded,onExpand:()=>handleExpand(windowId)});};const patientInfo=data===null||data===void 0?void 0:data.patientInfo;return/*#__PURE__*/_jsxs(\"div\",{className:\"physician-dashboard\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"physician-header\",children:/*#__PURE__*/_jsx(\"h1\",{children:\"Physician Dashboard\"})}),selectedPatientId&&/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-content\",children:[/*#__PURE__*/_jsx(PatientInfoCard,{patientInfo:patientInfo,loading:loading,error:error,variant:\"physician\",className:\"patient-info-card-physician\"}),/*#__PURE__*/_jsx(DashboardGrid,{viewMode:\"physician\",selectedVisualizations:selectedVisualizations,availableVisualizations:availableVisualizations,allVisualizations:allVisualizations,onVisualizationChange:handleVisualizationChange,onExpand:handleExpand,expandedItem:expandedItem,renderVisualization:renderVisualizationWithMode,disabled:Object.keys(availableVisualizations).length===0,placeholderText:\"No data available for this patient.\"})]})]});};export default PhysicianDashboard;","map":{"version":3,"names":["React","useState","usePatientData","useVisualizations","useVisualizationHelpers","PatientInfoCard","DashboardGrid","jsx","_jsx","jsxs","_jsxs","PhysicianDashboard","_ref","patientId","initialPatientId","selectedPatientId","setSelectedPatientId","data","loading","error","useEffect","allVisualizations","availableVisualizations","selectedVisualizations","handleVisualizationChange","expandedItem","handleExpand","renderVisualization","renderVisualizationWithMode","visualizationType","windowId","className","children","viz","Component","component","isExpanded","viewMode","onExpand","patientInfo","variant","onVisualizationChange","disabled","Object","keys","length","placeholderText"],"sources":["C:/Users/Matteo/Working_Folder/a. MCC Thesis Local/MCC_digital_health_data_visualizations/src/PhysicianDashboard.js"],"sourcesContent":["import React, { useState } from 'react';\nimport usePatientData from './hooks/usePatientData';\nimport useVisualizations from './hooks/useVisualizations';\nimport useVisualizationHelpers from './hooks/useVisualizationHelpers';\nimport PatientInfoCard from './components/PatientInfoCard';\nimport DashboardGrid from './components/DashboardGrid';\nimport './PhysicianDashboard.css';\n\nconst PhysicianDashboard = ({ patientId: initialPatientId }) => {\n  const [selectedPatientId, setSelectedPatientId] = useState(initialPatientId || '');\n  const { data, loading, error } = usePatientData(selectedPatientId);\n  \n  // Update selected patient if prop changes\n  React.useEffect(() => {\n    if (initialPatientId && initialPatientId !== selectedPatientId) {\n      setSelectedPatientId(initialPatientId);\n    }\n  }, [initialPatientId, selectedPatientId]);\n\n  const { \n    allVisualizations, \n    availableVisualizations, \n    selectedVisualizations, \n    handleVisualizationChange \n  } = useVisualizations('physician', data);\n\n  const { expandedItem, handleExpand, renderVisualization } = useVisualizationHelpers(\n    selectedPatientId, \n    allVisualizations, \n    selectedVisualizations\n  );\n\n\n\n  // Override renderVisualization to set correct viewMode and handle no patient case\n  const renderVisualizationWithMode = (visualizationType, windowId) => {\n    if (!selectedPatientId) {\n      return <div className=\"chart-placeholder\">Please select a patient to view data.</div>;\n    }\n    \n    const viz = allVisualizations[visualizationType];\n    if (!viz) return <div className=\"chart-placeholder\">Invalid visualization</div>;\n\n    const Component = viz.component;\n    const isExpanded = expandedItem === windowId;\n    return <Component \n      patientId={selectedPatientId} \n      viewMode=\"physician\"\n      isExpanded={isExpanded}\n      onExpand={() => handleExpand(windowId)}\n    />;\n  };\n\n  const patientInfo = data?.patientInfo;\n\n  return (\n    <div className=\"physician-dashboard\">\n      <div className=\"physician-header\">\n        <h1>Physician Dashboard</h1>\n      </div>\n\n      {selectedPatientId && (\n        <div className=\"dashboard-content\">\n          <PatientInfoCard \n            patientInfo={patientInfo}\n            loading={loading}\n            error={error}\n            variant=\"physician\"\n            className=\"patient-info-card-physician\"\n          />\n\n          <DashboardGrid\n            viewMode=\"physician\"\n            selectedVisualizations={selectedVisualizations}\n            availableVisualizations={availableVisualizations}\n            allVisualizations={allVisualizations}\n            onVisualizationChange={handleVisualizationChange}\n            onExpand={handleExpand}\n            expandedItem={expandedItem}\n            renderVisualization={renderVisualizationWithMode}\n            disabled={Object.keys(availableVisualizations).length === 0}\n            placeholderText=\"No data available for this patient.\"\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PhysicianDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}