{"ast":null,"code":"import _objectSpread from\"C:/Users/Matteo/Working_Folder/a. MCC Thesis Local/MCC_digital_health_data_visualizations/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React from'react';import VisualizationWrapper from'./VisualizationWrapper';import'./DashboardGrid.css';/**\r\n * Shared component for rendering dashboard grids with visualization wrappers\r\n * Now shows all available visualizations instead of using dropdown selectors\r\n */import{jsx as _jsx}from\"react/jsx-runtime\";const DashboardGrid=_ref=>{let{viewMode,// 'patient' or 'physician'\nselectedVisualizations,availableVisualizations,allVisualizations,onVisualizationChange,onExpand,expandedItem,renderVisualization,disabled=false,placeholderText=\"No data available for this patient.\",// New props for physician summary functionality\nshowSummaries=false,summaryTexts={},onSummaryChange=null}=_ref;// Configuration for different view modes\nconst gridConfig={patient:{className:'dashboard-grid',chartClassNames:['visualization-box']},physician:{className:'physician-charts-grid',chartClassNames:['physician-chart-container']}};const config=gridConfig[viewMode];// Get all available visualization types\nconst availableVizTypes=Object.keys(availableVisualizations);// If there's an expanded item, show only that\nif(expandedItem){const selectedViz=selectedVisualizations[expandedItem];const wrapperProps={id:expandedItem,className:\"\".concat(config.chartClassNames[0],\" expanded-view\"),selectedViz:selectedViz,availableVisualizations:availableVisualizations,allVisualizations:allVisualizations,onVisualizationChange:onVisualizationChange,onExpand:onExpand,isExpanded:true,renderVisualization:renderVisualization,disabled:disabled,placeholderText:placeholderText};return/*#__PURE__*/_jsx(VisualizationWrapper,_objectSpread({},wrapperProps));}// If no visualizations available, show placeholder\nif(availableVizTypes.length===0){return/*#__PURE__*/_jsx(\"div\",{className:config.className,children:/*#__PURE__*/_jsx(\"div\",{className:\"no-data-placeholder\",children:placeholderText})});}// Render all available visualizations\nreturn/*#__PURE__*/_jsx(\"div\",{className:config.className,children:availableVizTypes.map((vizType,index)=>{const chartId=\"\".concat(viewMode,\"-chart-\").concat(index);const wrapperProps={key:chartId,id:chartId,className:\"\".concat(config.chartClassNames[0],\" \").concat(config.chartClassNames[0],\"-\").concat(index+1),selectedViz:vizType,availableVisualizations:availableVisualizations,allVisualizations:allVisualizations,onVisualizationChange:onVisualizationChange,onExpand:onExpand,isExpanded:expandedItem===chartId,renderVisualization:renderVisualization,disabled:disabled,placeholderText:placeholderText};return/*#__PURE__*/_jsx(VisualizationWrapper,_objectSpread({},wrapperProps));})});};export default DashboardGrid;","map":{"version":3,"names":["React","VisualizationWrapper","jsx","_jsx","DashboardGrid","_ref","viewMode","selectedVisualizations","availableVisualizations","allVisualizations","onVisualizationChange","onExpand","expandedItem","renderVisualization","disabled","placeholderText","showSummaries","summaryTexts","onSummaryChange","gridConfig","patient","className","chartClassNames","physician","config","availableVizTypes","Object","keys","selectedViz","wrapperProps","id","concat","isExpanded","_objectSpread","length","children","map","vizType","index","chartId","key"],"sources":["C:/Users/Matteo/Working_Folder/a. MCC Thesis Local/MCC_digital_health_data_visualizations/src/components/DashboardGrid.js"],"sourcesContent":["import React from 'react';\r\nimport VisualizationWrapper from './VisualizationWrapper';\r\nimport './DashboardGrid.css';\r\n\r\n/**\r\n * Shared component for rendering dashboard grids with visualization wrappers\r\n * Now shows all available visualizations instead of using dropdown selectors\r\n */\r\nconst DashboardGrid = ({\r\n  viewMode, // 'patient' or 'physician'\r\n  selectedVisualizations,\r\n  availableVisualizations,\r\n  allVisualizations,\r\n  onVisualizationChange,\r\n  onExpand,\r\n  expandedItem,\r\n  renderVisualization,\r\n  disabled = false,\r\n  placeholderText = \"No data available for this patient.\",\r\n  // New props for physician summary functionality\r\n  showSummaries = false,\r\n  summaryTexts = {},\r\n  onSummaryChange = null\r\n}) => {\r\n  // Configuration for different view modes\r\n  const gridConfig = {\r\n    patient: {\r\n      className: 'dashboard-grid',\r\n      chartClassNames: ['visualization-box']\r\n    },\r\n    physician: {\r\n      className: 'physician-charts-grid',\r\n      chartClassNames: ['physician-chart-container']\r\n    }\r\n  };\r\n\r\n  const config = gridConfig[viewMode];\r\n\r\n  // Get all available visualization types\r\n  const availableVizTypes = Object.keys(availableVisualizations);\r\n\r\n  // If there's an expanded item, show only that\r\n  if (expandedItem) {\r\n    const selectedViz = selectedVisualizations[expandedItem];\r\n    \r\n    const wrapperProps = {\r\n      id: expandedItem,\r\n      className: `${config.chartClassNames[0]} expanded-view`,\r\n      selectedViz: selectedViz,\r\n      availableVisualizations: availableVisualizations,\r\n      allVisualizations: allVisualizations,\r\n      onVisualizationChange: onVisualizationChange,\r\n      onExpand: onExpand,\r\n      isExpanded: true,\r\n      renderVisualization: renderVisualization,\r\n      disabled: disabled,\r\n      placeholderText: placeholderText\r\n    };\r\n\r\n    return <VisualizationWrapper {...wrapperProps} />;\r\n  }\r\n\r\n  // If no visualizations available, show placeholder\r\n  if (availableVizTypes.length === 0) {\r\n    return (\r\n      <div className={config.className}>\r\n        <div className=\"no-data-placeholder\">\r\n          {placeholderText}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Render all available visualizations\r\n  return (\r\n    <div className={config.className}>\r\n      {availableVizTypes.map((vizType, index) => {\r\n        const chartId = `${viewMode}-chart-${index}`;\r\n        \r\n        const wrapperProps = {\r\n          key: chartId,\r\n          id: chartId,\r\n          className: `${config.chartClassNames[0]} ${config.chartClassNames[0]}-${index + 1}`,\r\n          selectedViz: vizType,\r\n          availableVisualizations: availableVisualizations,\r\n          allVisualizations: allVisualizations,\r\n          onVisualizationChange: onVisualizationChange,\r\n          onExpand: onExpand,\r\n          isExpanded: expandedItem === chartId,\r\n          renderVisualization: renderVisualization,\r\n          disabled: disabled,\r\n          placeholderText: placeholderText\r\n        };\r\n\r\n        return <VisualizationWrapper {...wrapperProps} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardGrid;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}